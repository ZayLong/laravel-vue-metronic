var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
import require$$0$1 from "@vue/compiler-dom";
import require$$1 from "@vue/runtime-dom";
import require$$2 from "@vue/shared";
import objectPath from "object-path";
import { ssrRenderAttrs, ssrRenderStyle, ssrIncludeBooleanAttr, ssrLooseContain, ssrRenderList, ssrRenderClass, ssrInterpolate, ssrRenderAttr, ssrRenderSlot, ssrRenderComponent, ssrLooseEqual, ssrGetDirectiveProps, renderToString } from "@vue/server-renderer";
import Swal from "sweetalert2/dist/sweetalert2.js";
import arraySort from "array-sort";
import { createInertiaApp } from "@inertiajs/vue3";
import FullCalendar from "@fullcalendar/vue3";
import dayGridPlugin from "@fullcalendar/daygrid";
import timeGridPlugin from "@fullcalendar/timegrid";
import listPlugin from "@fullcalendar/list";
import interactionPlugin from "@fullcalendar/interaction";
import moment from "moment";
import ClipboardJS from "clipboard";
import Prism from "prismjs";
import { setupDevtoolsPlugin } from "@vue/devtools-api";
import * as Yup from "yup";
import { useI18n } from "vue-i18n";
import axios from "axios";
import { useRouter, useRoute, RouterView } from "vue-router";
import "prismjs/prism.js";
import "prismjs/components/prism-bash.js";
import "prismjs/components/prism-javascript.js";
import "prismjs/components/prism-scss.js";
import "prismjs/components/prism-css.js";
import "prismjs/components/prism-json.js";
import "prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js";
import createServer from "@inertiajs/vue3/server";
var require_ssr = __commonJS({
  "ssr.js"(exports, module) {
    var _a;
    function _mergeNamespaces(n, m) {
      for (var i = 0; i < m.length; i++) {
        const e = m[i];
        if (typeof e !== "string" && !Array.isArray(e)) {
          for (const k in e) {
            if (k !== "default" && !(k in n)) {
              const d = Object.getOwnPropertyDescriptor(e, k);
              if (d) {
                Object.defineProperty(n, k, d.get ? d : {
                  enumerable: true,
                  get: () => e[k]
                });
              }
            }
          }
        }
      }
      return Object.freeze(Object.defineProperty(n, Symbol.toStringTag, { value: "Module" }));
    }
    var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
    function getDefaultExportFromCjs(x) {
      return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
    }
    function getAugmentedNamespace(n) {
      if (n.__esModule)
        return n;
      var f = n.default;
      if (typeof f == "function") {
        var a = function a2() {
          if (this instanceof a2) {
            return Reflect.construct(f, arguments, this.constructor);
          }
          return f.apply(this, arguments);
        };
        a.prototype = f.prototype;
      } else
        a = {};
      Object.defineProperty(a, "__esModule", { value: true });
      Object.keys(n).forEach(function(k) {
        var d = Object.getOwnPropertyDescriptor(n, k);
        Object.defineProperty(a, k, d.get ? d : {
          enumerable: true,
          get: function() {
            return n[k];
          }
        });
      });
      return a;
    }
    var vue$3 = { exports: {} };
    var vue_cjs_prod$1 = {};
    /**
    * vue v3.4.36
    * (c) 2018-present Yuxi (Evan) You and Vue contributors
    * @license MIT
    **/
    var hasRequiredVue_cjs_prod$1;
    function requireVue_cjs_prod$1() {
      if (hasRequiredVue_cjs_prod$1)
        return vue_cjs_prod$1;
      hasRequiredVue_cjs_prod$1 = 1;
      (function(exports2) {
        Object.defineProperty(exports2, "__esModule", { value: true });
        var compilerDom = require$$0$1;
        var runtimeDom = require$$1;
        var shared = require$$2;
        function _interopNamespaceDefault(e) {
          var n = /* @__PURE__ */ Object.create(null);
          if (e) {
            for (var k in e) {
              n[k] = e[k];
            }
          }
          n.default = e;
          return Object.freeze(n);
        }
        var runtimeDom__namespace = /* @__PURE__ */ _interopNamespaceDefault(runtimeDom);
        const compileCache = /* @__PURE__ */ new WeakMap();
        function getCache(options) {
          let c = compileCache.get(options != null ? options : shared.EMPTY_OBJ);
          if (!c) {
            c = /* @__PURE__ */ Object.create(null);
            compileCache.set(options != null ? options : shared.EMPTY_OBJ, c);
          }
          return c;
        }
        function compileToFunction(template, options) {
          if (!shared.isString(template)) {
            if (template.nodeType) {
              template = template.innerHTML;
            } else {
              return shared.NOOP;
            }
          }
          const key2 = template;
          const cache = getCache(options);
          const cached = cache[key2];
          if (cached) {
            return cached;
          }
          if (template[0] === "#") {
            const el = document.querySelector(template);
            template = el ? el.innerHTML : ``;
          }
          const opts = shared.extend(
            {
              hoistStatic: true,
              onError: void 0,
              onWarn: shared.NOOP
            },
            options
          );
          if (!opts.isCustomElement && typeof customElements !== "undefined") {
            opts.isCustomElement = (tag2) => !!customElements.get(tag2);
          }
          const { code: code2 } = compilerDom.compile(template, opts);
          const render = new Function("Vue", code2)(runtimeDom__namespace);
          render._rc = true;
          return cache[key2] = render;
        }
        runtimeDom.registerRuntimeCompiler(compileToFunction);
        exports2.compile = compileToFunction;
        Object.keys(runtimeDom).forEach(function(k) {
          if (k !== "default" && !Object.prototype.hasOwnProperty.call(exports2, k))
            exports2[k] = runtimeDom[k];
        });
      })(vue_cjs_prod$1);
      return vue_cjs_prod$1;
    }
    var vue_cjs$1 = {};
    /**
    * vue v3.4.36
    * (c) 2018-present Yuxi (Evan) You and Vue contributors
    * @license MIT
    **/
    var hasRequiredVue_cjs$1;
    function requireVue_cjs$1() {
      if (hasRequiredVue_cjs$1)
        return vue_cjs$1;
      hasRequiredVue_cjs$1 = 1;
      (function(exports2) {
        Object.defineProperty(exports2, "__esModule", { value: true });
        var compilerDom = require$$0$1;
        var runtimeDom = require$$1;
        var shared = require$$2;
        function _interopNamespaceDefault(e) {
          var n = /* @__PURE__ */ Object.create(null);
          if (e) {
            for (var k in e) {
              n[k] = e[k];
            }
          }
          n.default = e;
          return Object.freeze(n);
        }
        var runtimeDom__namespace = /* @__PURE__ */ _interopNamespaceDefault(runtimeDom);
        const compileCache = /* @__PURE__ */ new WeakMap();
        function getCache(options) {
          let c = compileCache.get(options != null ? options : shared.EMPTY_OBJ);
          if (!c) {
            c = /* @__PURE__ */ Object.create(null);
            compileCache.set(options != null ? options : shared.EMPTY_OBJ, c);
          }
          return c;
        }
        function compileToFunction(template, options) {
          if (!shared.isString(template)) {
            if (template.nodeType) {
              template = template.innerHTML;
            } else {
              runtimeDom.warn(`invalid template option: `, template);
              return shared.NOOP;
            }
          }
          const key2 = template;
          const cache = getCache(options);
          const cached = cache[key2];
          if (cached) {
            return cached;
          }
          if (template[0] === "#") {
            const el = document.querySelector(template);
            if (!el) {
              runtimeDom.warn(`Template element not found or is empty: ${template}`);
            }
            template = el ? el.innerHTML : ``;
          }
          const opts = shared.extend(
            {
              hoistStatic: true,
              onError,
              onWarn: (e) => onError(e, true)
            },
            options
          );
          if (!opts.isCustomElement && typeof customElements !== "undefined") {
            opts.isCustomElement = (tag2) => !!customElements.get(tag2);
          }
          const { code: code2 } = compilerDom.compile(template, opts);
          function onError(err, asWarning = false) {
            const message = asWarning ? err.message : `Template compilation error: ${err.message}`;
            const codeFrame = err.loc && shared.generateCodeFrame(
              template,
              err.loc.start.offset,
              err.loc.end.offset
            );
            runtimeDom.warn(codeFrame ? `${message}
${codeFrame}` : message);
          }
          const render = new Function("Vue", code2)(runtimeDom__namespace);
          render._rc = true;
          return cache[key2] = render;
        }
        runtimeDom.registerRuntimeCompiler(compileToFunction);
        exports2.compile = compileToFunction;
        Object.keys(runtimeDom).forEach(function(k) {
          if (k !== "default" && !Object.prototype.hasOwnProperty.call(exports2, k))
            exports2[k] = runtimeDom[k];
        });
      })(vue_cjs$1);
      return vue_cjs$1;
    }
    if (process.env.NODE_ENV === "production") {
      vue$3.exports = requireVue_cjs_prod$1();
    } else {
      vue$3.exports = requireVue_cjs$1();
    }
    var vueExports$1 = vue$3.exports;
    const vue$2 = /* @__PURE__ */ _mergeNamespaces({
      __proto__: null
    }, [vueExports$1]);
    var pinia_prod = {};
    var lib = {};
    const require$$0 = /* @__PURE__ */ getAugmentedNamespace(vue$2);
    (function(exports2) {
      var Vue2 = require$$0;
      Object.keys(Vue2).forEach(function(key2) {
        exports2[key2] = Vue2[key2];
      });
      exports2.set = function(target, key2, val) {
        if (Array.isArray(target)) {
          target.length = Math.max(target.length, key2);
          target.splice(key2, 1, val);
          return val;
        }
        target[key2] = val;
        return val;
      };
      exports2.del = function(target, key2) {
        if (Array.isArray(target)) {
          target.splice(key2, 1);
          return;
        }
        delete target[key2];
      };
      exports2.Vue = Vue2;
      exports2.Vue2 = void 0;
      exports2.isVue2 = false;
      exports2.isVue3 = true;
      exports2.install = function() {
      };
    })(lib);
    /*!
     * pinia v2.2.1
     * (c) 2024 Eduardo San Martin Morote
     * @license MIT
     */
    (function(exports2) {
      var vueDemi = lib;
      let activePinia;
      const setActivePinia = (pinia) => activePinia = pinia;
      const getActivePinia = () => vueDemi.hasInjectionContext() && vueDemi.inject(piniaSymbol) || activePinia;
      const piniaSymbol = (
        /* istanbul ignore next */
        Symbol()
      );
      function isPlainObject2(o) {
        return o && typeof o === "object" && Object.prototype.toString.call(o) === "[object Object]" && typeof o.toJSON !== "function";
      }
      exports2.MutationType = void 0;
      (function(MutationType) {
        MutationType["direct"] = "direct";
        MutationType["patchObject"] = "patch object";
        MutationType["patchFunction"] = "patch function";
      })(exports2.MutationType || (exports2.MutationType = {}));
      const IS_CLIENT = typeof window !== "undefined";
      function createPinia() {
        const scope = vueDemi.effectScope(true);
        const state = scope.run(() => vueDemi.ref({}));
        let _p = [];
        let toBeInstalled = [];
        const pinia = vueDemi.markRaw({
          install(app) {
            setActivePinia(pinia);
            if (!vueDemi.isVue2) {
              pinia._a = app;
              app.provide(piniaSymbol, pinia);
              app.config.globalProperties.$pinia = pinia;
              toBeInstalled.forEach((plugin2) => _p.push(plugin2));
              toBeInstalled = [];
            }
          },
          use(plugin2) {
            if (!this._a && !vueDemi.isVue2) {
              toBeInstalled.push(plugin2);
            } else {
              _p.push(plugin2);
            }
            return this;
          },
          _p,
          // it's actually undefined here
          // @ts-expect-error
          _a: null,
          _e: scope,
          _s: /* @__PURE__ */ new Map(),
          state
        });
        return pinia;
      }
      function disposePinia(pinia) {
        pinia._e.stop();
        pinia._s.clear();
        pinia._p.splice(0);
        pinia.state.value = {};
        pinia._a = null;
      }
      function acceptHMRUpdate(initialUseStore, hot) {
        {
          return () => {
          };
        }
      }
      const noop2 = () => {
      };
      function addSubscription(subscriptions, callback, detached, onCleanup = noop2) {
        subscriptions.push(callback);
        const removeSubscription = () => {
          const idx = subscriptions.indexOf(callback);
          if (idx > -1) {
            subscriptions.splice(idx, 1);
            onCleanup();
          }
        };
        if (!detached && vueDemi.getCurrentScope()) {
          vueDemi.onScopeDispose(removeSubscription);
        }
        return removeSubscription;
      }
      function triggerSubscriptions(subscriptions, ...args) {
        subscriptions.slice().forEach((callback) => {
          callback(...args);
        });
      }
      const fallbackRunWithContext = (fn) => fn();
      const ACTION_MARKER = Symbol();
      const ACTION_NAME = Symbol();
      function mergeReactiveObjects(target, patchToApply) {
        if (target instanceof Map && patchToApply instanceof Map) {
          patchToApply.forEach((value, key2) => target.set(key2, value));
        } else if (target instanceof Set && patchToApply instanceof Set) {
          patchToApply.forEach(target.add, target);
        }
        for (const key2 in patchToApply) {
          if (!patchToApply.hasOwnProperty(key2))
            continue;
          const subPatch = patchToApply[key2];
          const targetValue = target[key2];
          if (isPlainObject2(targetValue) && isPlainObject2(subPatch) && target.hasOwnProperty(key2) && !vueDemi.isRef(subPatch) && !vueDemi.isReactive(subPatch)) {
            target[key2] = mergeReactiveObjects(targetValue, subPatch);
          } else {
            target[key2] = subPatch;
          }
        }
        return target;
      }
      const skipHydrateSymbol = (
        /* istanbul ignore next */
        Symbol()
      );
      const skipHydrateMap = /* @__PURE__ */ new WeakMap();
      function skipHydrate(obj) {
        return vueDemi.isVue2 ? (
          // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...
          /* istanbul ignore next */
          skipHydrateMap.set(obj, 1) && obj
        ) : Object.defineProperty(obj, skipHydrateSymbol, {});
      }
      function shouldHydrate(obj) {
        return vueDemi.isVue2 ? (
          /* istanbul ignore next */
          !skipHydrateMap.has(obj)
        ) : !isPlainObject2(obj) || !obj.hasOwnProperty(skipHydrateSymbol);
      }
      const { assign } = Object;
      function isComputed(o) {
        return !!(vueDemi.isRef(o) && o.effect);
      }
      function createOptionsStore(id, options, pinia, hot) {
        const { state, actions, getters } = options;
        const initialState = pinia.state.value[id];
        let store;
        function setup() {
          if (!initialState && true) {
            if (vueDemi.isVue2) {
              vueDemi.set(pinia.state.value, id, state ? state() : {});
            } else {
              pinia.state.value[id] = state ? state() : {};
            }
          }
          const localState = vueDemi.toRefs(pinia.state.value[id]);
          return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {
            computedGetters[name] = vueDemi.markRaw(vueDemi.computed(() => {
              setActivePinia(pinia);
              const store2 = pinia._s.get(id);
              if (vueDemi.isVue2 && !store2._r)
                return;
              return getters[name].call(store2, store2);
            }));
            return computedGetters;
          }, {}));
        }
        store = createSetupStore(id, setup, options, pinia, hot, true);
        return store;
      }
      function createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {
        let scope;
        const optionsForPlugin = assign({ actions: {} }, options);
        const $subscribeOptions = { deep: true };
        let isListening;
        let isSyncListening;
        let subscriptions = [];
        let actionSubscriptions = [];
        let debuggerEvents;
        const initialState = pinia.state.value[$id];
        if (!isOptionsStore && !initialState && true) {
          if (vueDemi.isVue2) {
            vueDemi.set(pinia.state.value, $id, {});
          } else {
            pinia.state.value[$id] = {};
          }
        }
        vueDemi.ref({});
        let activeListener;
        function $patch(partialStateOrMutator) {
          let subscriptionMutation;
          isListening = isSyncListening = false;
          if (typeof partialStateOrMutator === "function") {
            partialStateOrMutator(pinia.state.value[$id]);
            subscriptionMutation = {
              type: exports2.MutationType.patchFunction,
              storeId: $id,
              events: debuggerEvents
            };
          } else {
            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);
            subscriptionMutation = {
              type: exports2.MutationType.patchObject,
              payload: partialStateOrMutator,
              storeId: $id,
              events: debuggerEvents
            };
          }
          const myListenerId = activeListener = Symbol();
          vueDemi.nextTick().then(() => {
            if (activeListener === myListenerId) {
              isListening = true;
            }
          });
          isSyncListening = true;
          triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);
        }
        const $reset = isOptionsStore ? function $reset2() {
          const { state } = options;
          const newState = state ? state() : {};
          this.$patch(($state) => {
            assign($state, newState);
          });
        } : (
          /* istanbul ignore next */
          noop2
        );
        function $dispose() {
          scope.stop();
          subscriptions = [];
          actionSubscriptions = [];
          pinia._s.delete($id);
        }
        const action = (fn, name = "") => {
          if (ACTION_MARKER in fn) {
            fn[ACTION_NAME] = name;
            return fn;
          }
          const wrappedAction = function() {
            setActivePinia(pinia);
            const args = Array.from(arguments);
            const afterCallbackList = [];
            const onErrorCallbackList = [];
            function after(callback) {
              afterCallbackList.push(callback);
            }
            function onError(callback) {
              onErrorCallbackList.push(callback);
            }
            triggerSubscriptions(actionSubscriptions, {
              args,
              name: wrappedAction[ACTION_NAME],
              store,
              after,
              onError
            });
            let ret;
            try {
              ret = fn.apply(this && this.$id === $id ? this : store, args);
            } catch (error) {
              triggerSubscriptions(onErrorCallbackList, error);
              throw error;
            }
            if (ret instanceof Promise) {
              return ret.then((value) => {
                triggerSubscriptions(afterCallbackList, value);
                return value;
              }).catch((error) => {
                triggerSubscriptions(onErrorCallbackList, error);
                return Promise.reject(error);
              });
            }
            triggerSubscriptions(afterCallbackList, ret);
            return ret;
          };
          wrappedAction[ACTION_MARKER] = true;
          wrappedAction[ACTION_NAME] = name;
          return wrappedAction;
        };
        const partialStore = {
          _p: pinia,
          // _s: scope,
          $id,
          $onAction: addSubscription.bind(null, actionSubscriptions),
          $patch,
          $reset,
          $subscribe(callback, options2 = {}) {
            const removeSubscription = addSubscription(subscriptions, callback, options2.detached, () => stopWatcher());
            const stopWatcher = scope.run(() => vueDemi.watch(() => pinia.state.value[$id], (state) => {
              if (options2.flush === "sync" ? isSyncListening : isListening) {
                callback({
                  storeId: $id,
                  type: exports2.MutationType.direct,
                  events: debuggerEvents
                }, state);
              }
            }, assign({}, $subscribeOptions, options2)));
            return removeSubscription;
          },
          $dispose
        };
        if (vueDemi.isVue2) {
          partialStore._r = false;
        }
        const store = vueDemi.reactive(partialStore);
        pinia._s.set($id, store);
        const runWithContext = pinia._a && pinia._a.runWithContext || fallbackRunWithContext;
        const setupStore = runWithContext(() => pinia._e.run(() => (scope = vueDemi.effectScope()).run(() => setup({ action }))));
        for (const key2 in setupStore) {
          const prop = setupStore[key2];
          if (vueDemi.isRef(prop) && !isComputed(prop) || vueDemi.isReactive(prop)) {
            if (!isOptionsStore) {
              if (initialState && shouldHydrate(prop)) {
                if (vueDemi.isRef(prop)) {
                  prop.value = initialState[key2];
                } else {
                  mergeReactiveObjects(prop, initialState[key2]);
                }
              }
              if (vueDemi.isVue2) {
                vueDemi.set(pinia.state.value[$id], key2, prop);
              } else {
                pinia.state.value[$id][key2] = prop;
              }
            }
          } else if (typeof prop === "function") {
            const actionValue = action(prop, key2);
            if (vueDemi.isVue2) {
              vueDemi.set(setupStore, key2, actionValue);
            } else {
              setupStore[key2] = actionValue;
            }
            optionsForPlugin.actions[key2] = prop;
          } else
            ;
        }
        if (vueDemi.isVue2) {
          Object.keys(setupStore).forEach((key2) => {
            vueDemi.set(store, key2, setupStore[key2]);
          });
        } else {
          assign(store, setupStore);
          assign(vueDemi.toRaw(store), setupStore);
        }
        Object.defineProperty(store, "$state", {
          get: () => pinia.state.value[$id],
          set: (state) => {
            $patch(($state) => {
              assign($state, state);
            });
          }
        });
        if (vueDemi.isVue2) {
          store._r = true;
        }
        pinia._p.forEach((extender) => {
          {
            assign(store, scope.run(() => extender({
              store,
              app: pinia._a,
              pinia,
              options: optionsForPlugin
            })));
          }
        });
        if (initialState && isOptionsStore && options.hydrate) {
          options.hydrate(store.$state, initialState);
        }
        isListening = true;
        isSyncListening = true;
        return store;
      }
      function defineStore(idOrOptions, setup, setupOptions) {
        let id;
        let options;
        const isSetupStore = typeof setup === "function";
        if (typeof idOrOptions === "string") {
          id = idOrOptions;
          options = isSetupStore ? setupOptions : setup;
        } else {
          options = idOrOptions;
          id = idOrOptions.id;
        }
        function useStore(pinia, hot) {
          const hasContext = vueDemi.hasInjectionContext();
          pinia = // in test mode, ignore the argument provided as we can always retrieve a
          // pinia instance with getActivePinia()
          (process.env.NODE_ENV === "test" && activePinia && activePinia._testing ? null : pinia) || (hasContext ? vueDemi.inject(piniaSymbol, null) : null);
          if (pinia)
            setActivePinia(pinia);
          pinia = activePinia;
          if (!pinia._s.has(id)) {
            if (isSetupStore) {
              createSetupStore(id, setup, options, pinia);
            } else {
              createOptionsStore(id, options, pinia);
            }
          }
          const store = pinia._s.get(id);
          return store;
        }
        useStore.$id = id;
        return useStore;
      }
      let mapStoreSuffix = "Store";
      function setMapStoreSuffix(suffix) {
        mapStoreSuffix = suffix;
      }
      function mapStores(...stores) {
        return stores.reduce((reduced, useStore) => {
          reduced[useStore.$id + mapStoreSuffix] = function() {
            return useStore(this.$pinia);
          };
          return reduced;
        }, {});
      }
      function mapState(useStore, keysOrMapper) {
        return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key2) => {
          reduced[key2] = function() {
            return useStore(this.$pinia)[key2];
          };
          return reduced;
        }, {}) : Object.keys(keysOrMapper).reduce((reduced, key2) => {
          reduced[key2] = function() {
            const store = useStore(this.$pinia);
            const storeKey = keysOrMapper[key2];
            return typeof storeKey === "function" ? storeKey.call(this, store) : store[storeKey];
          };
          return reduced;
        }, {});
      }
      const mapGetters = mapState;
      function mapActions(useStore, keysOrMapper) {
        return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key2) => {
          reduced[key2] = function(...args) {
            return useStore(this.$pinia)[key2](...args);
          };
          return reduced;
        }, {}) : Object.keys(keysOrMapper).reduce((reduced, key2) => {
          reduced[key2] = function(...args) {
            return useStore(this.$pinia)[keysOrMapper[key2]](...args);
          };
          return reduced;
        }, {});
      }
      function mapWritableState(useStore, keysOrMapper) {
        return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key2) => {
          reduced[key2] = {
            get() {
              return useStore(this.$pinia)[key2];
            },
            set(value) {
              return useStore(this.$pinia)[key2] = value;
            }
          };
          return reduced;
        }, {}) : Object.keys(keysOrMapper).reduce((reduced, key2) => {
          reduced[key2] = {
            get() {
              return useStore(this.$pinia)[keysOrMapper[key2]];
            },
            set(value) {
              return useStore(this.$pinia)[keysOrMapper[key2]] = value;
            }
          };
          return reduced;
        }, {});
      }
      function storeToRefs(store) {
        if (vueDemi.isVue2) {
          return vueDemi.toRefs(store);
        } else {
          store = vueDemi.toRaw(store);
          const refs = {};
          for (const key2 in store) {
            const value = store[key2];
            if (vueDemi.isRef(value) || vueDemi.isReactive(value)) {
              refs[key2] = // ---
              vueDemi.toRef(store, key2);
            }
          }
          return refs;
        }
      }
      const PiniaVuePlugin = function(_Vue) {
        _Vue.mixin({
          beforeCreate() {
            const options = this.$options;
            if (options.pinia) {
              const pinia = options.pinia;
              if (!this._provided) {
                const provideCache = {};
                Object.defineProperty(this, "_provided", {
                  get: () => provideCache,
                  set: (v) => Object.assign(provideCache, v)
                });
              }
              this._provided[piniaSymbol] = pinia;
              if (!this.$pinia) {
                this.$pinia = pinia;
              }
              pinia._a = this;
              if (IS_CLIENT) {
                setActivePinia(pinia);
              }
            } else if (!this.$pinia && options.parent && options.parent.$pinia) {
              this.$pinia = options.parent.$pinia;
            }
          },
          destroyed() {
            delete this._pStores;
          }
        });
      };
      exports2.PiniaVuePlugin = PiniaVuePlugin;
      exports2.acceptHMRUpdate = acceptHMRUpdate;
      exports2.createPinia = createPinia;
      exports2.defineStore = defineStore;
      exports2.disposePinia = disposePinia;
      exports2.getActivePinia = getActivePinia;
      exports2.mapActions = mapActions;
      exports2.mapGetters = mapGetters;
      exports2.mapState = mapState;
      exports2.mapStores = mapStores;
      exports2.mapWritableState = mapWritableState;
      exports2.setActivePinia = setActivePinia;
      exports2.setMapStoreSuffix = setMapStoreSuffix;
      exports2.skipHydrate = skipHydrate;
      exports2.storeToRefs = storeToRefs;
    })(pinia_prod);
    const config$1 = {
      general: {
        mode: "system",
        primaryColor: "#50CD89",
        pageWidth: "default",
        layout: "dark-sidebar",
        iconsType: "duotone"
      },
      header: {
        display: true,
        default: {
          container: "fluid",
          fixed: {
            desktop: true,
            mobile: true
          },
          menu: {
            display: true,
            iconType: "keenthemes"
          }
        }
      },
      sidebar: {
        display: true,
        default: {
          minimize: {
            desktop: {
              enabled: true,
              default: false,
              hoverable: true
            }
          },
          menu: {
            iconType: "keenthemes"
          }
        }
      },
      toolbar: {
        display: true,
        container: "fluid",
        fixed: {
          desktop: false,
          mobile: false
        }
      },
      pageTitle: {
        display: true,
        breadcrumb: true,
        direction: "column"
      },
      content: {
        container: "fluid"
      },
      footer: {
        display: true,
        container: "fluid",
        fixed: {
          desktop: false,
          mobile: false
        }
      },
      illustrations: {
        set: "sketchy-1"
      },
      scrolltop: {
        display: true
      }
    };
    const LS_CONFIG_NAME_KEY = "config_" + {}.VITE_APP_DEMO;
    const useConfigStore = pinia_prod.defineStore("config", () => {
      const config2 = vueExports$1.ref(config$1);
      const initial = vueExports$1.ref(config$1);
      function getLayoutConfig(path, defaultValue) {
        return objectPath.get(config2.value, path, defaultValue);
      }
      function setLayoutConfigProperty(property, value) {
        objectPath.set(config2.value, property, value);
        localStorage.setItem(LS_CONFIG_NAME_KEY, JSON.stringify(config2.value));
      }
      function resetLayoutConfig() {
        config2.value = Object.assign({}, initial.value);
      }
      function overrideLayoutConfig() {
        config2.value = initial.value = Object.assign(
          {},
          initial.value,
          JSON.parse(window.localStorage.getItem(LS_CONFIG_NAME_KEY) || "{}")
        );
      }
      return {
        config: config2,
        getLayoutConfig,
        setLayoutConfigProperty,
        resetLayoutConfig,
        overrideLayoutConfig
      };
    });
    class ElementStyleUtil {
      static set(element, property, value, important) {
        if (important) {
          element.style.setProperty(property, value, "important");
        } else {
          element.style.setProperty(property, value);
        }
      }
      static get(element, attributeName) {
        return element.style.getPropertyValue(attributeName);
      }
      static remove(element, attibuteName) {
        element.style.removeProperty(attibuteName);
      }
    }
    const _DataUtil = class _DataUtil {
      static set(instance, key2, data2) {
        if (!instance) {
          return;
        }
        const instanceData = _DataUtil.store.get(instance);
        if (!instanceData) {
          const newMap = (/* @__PURE__ */ new Map()).set(key2, data2);
          _DataUtil.store.set(instance, newMap);
          return;
        }
        instanceData.set(key2, data2);
      }
      static get(instance, key2) {
        const instanceData = _DataUtil.store.get(instance);
        if (!instanceData) {
          return;
        }
        return instanceData.get(key2);
      }
      static remove(instance, key2) {
        const instanceData = _DataUtil.store.get(instance);
        if (!instanceData) {
          return;
        }
        instanceData.delete(key2);
      }
      static removeOne(instance, key2, eventId) {
        const instanceData = _DataUtil.store.get(instance);
        if (!instanceData) {
          return;
        }
        const eventsIds = instanceData.get(key2);
        if (!eventsIds) {
          return;
        }
        const updateEventsIds = eventsIds.filter(
          (f) => f !== eventId
        );
        _DataUtil.set(instance, key2, updateEventsIds);
      }
      static has(instance, key2) {
        const instanceData = _DataUtil.store.get(instance);
        if (instanceData) {
          return instanceData.has(key2);
        }
        return false;
      }
      static getAllInstancesByKey(key2) {
        const result = [];
        _DataUtil.store.forEach((val) => {
          val.forEach((v, k) => {
            if (k === key2) {
              result.push(v);
            }
          });
        });
        return result;
      }
    };
    __publicField(_DataUtil, "store", /* @__PURE__ */ new Map());
    let DataUtil = _DataUtil;
    function getObjectPropertyValueByKey(obj, key2) {
      const map2 = new Map(Object.entries(obj));
      if (obj.hasOwnProperty(key2) && map2) {
        return map2.get(key2);
      }
    }
    function getUniqueIdWithPrefix(prefix) {
      const result = Math.floor(Math.random() * (/* @__PURE__ */ new Date()).getTime()).toString();
      if (!prefix) {
        return result;
      }
      return `${prefix}${result}`;
    }
    function stringSnakeToCamel(str) {
      return str.replace(/(\-\w)/g, function(m) {
        return m[1].toUpperCase();
      });
    }
    function toJSON(value) {
      if (typeof value !== "string") {
        return value;
      }
      if (!value) {
        return void 0;
      }
      const result = value.toString().split("").map((el) => el !== "'" ? el : '"').join("");
      const jsonStr = result.replace(/(\w+:)|(\w+ :)/g, function(matched) {
        return '"' + matched.substring(0, matched.length - 1) + '":';
      });
      try {
        return JSON.parse(jsonStr);
      } catch {
        return void 0;
      }
    }
    const _DOMEventHandlerUtil = class _DOMEventHandlerUtil {
      static on(element, selector, eventName, callBack) {
        const eventId = getUniqueIdWithPrefix("DOMEvent");
        _DOMEventHandlerUtil.store.set(eventId, (e) => {
          const targets = element.querySelectorAll(selector);
          let target = e.target;
          while (target && target !== element) {
            for (let i = 0; i < targets.length; i++) {
              if (target === targets[i]) {
                callBack.call(target, e);
              }
            }
            if (target.parentElement) {
              target = target.parentElement;
            } else {
              target = null;
            }
          }
        });
        element.addEventListener(eventName, _DOMEventHandlerUtil.store.get(eventId));
        return eventId;
      }
      static off(element, eventName, eventId) {
        const funcFromStore = _DOMEventHandlerUtil.store.get(eventId);
        if (!funcFromStore) {
          return;
        }
        element.removeEventListener(eventName, funcFromStore);
        _DOMEventHandlerUtil.store.delete(eventId);
      }
      static one(element, eventName, callBack) {
        element.addEventListener(eventName, function calee(e) {
          if (e.target && e.target.removeEventListener) {
            e.target.removeEventListener(e.type, calee);
          }
          if (element && e && e.currentTarget) {
            e.currentTarget.removeEventListener(e.type, calee);
          }
          return callBack(e);
        });
      }
    };
    __publicField(_DOMEventHandlerUtil, "store", /* @__PURE__ */ new Map());
    let DOMEventHandlerUtil = _DOMEventHandlerUtil;
    class ElementAnimateUtil {
      static animate(from, to, duration, update, complete) {
        const easings = {
          linear: function(t, b, c, d) {
            return c * t / d + b;
          }
        };
        if (!complete) {
          complete = function() {
          };
        }
        const change = to - from;
        function loop(timestamp) {
          const time2 = (timestamp || +/* @__PURE__ */ new Date()) - start2;
          if (time2 >= 0) {
            update(easings.linear(time2, from, change, duration));
          }
          if (time2 >= 0 && time2 >= duration) {
            update(to);
            if (complete) {
              complete();
            }
          } else {
            window.requestAnimationFrame(loop);
          }
        }
        update(from);
        const start2 = window.performance && window.performance.now ? window.performance.now() : +/* @__PURE__ */ new Date();
        window.requestAnimationFrame(loop);
      }
      static animateClass(element, animationName, callBack) {
        const animateClasses = animationName.split(" ");
        animateClasses.forEach((cssClass) => element.classList.add(cssClass));
        DOMEventHandlerUtil.one(element, "animationend", function() {
          animateClasses.forEach((cssClass) => element.classList.remove(cssClass));
        });
        if (callBack) {
          DOMEventHandlerUtil.one(element, "animationend", callBack);
        }
      }
      static transitionEnd(element, callBack) {
        DOMEventHandlerUtil.one(element, "transitionend", callBack);
      }
      static animationEnd(element, callBack) {
        DOMEventHandlerUtil.one(element, "animationend", callBack);
      }
      static animationDelay(element, value) {
        ElementStyleUtil.set(element, "animation-delay", value);
      }
      static animationDuration(element, value) {
        ElementStyleUtil.set(element, "animation-duration", value);
      }
      static scrollTo(element, offset2, duration = 500) {
        let targetPos = element ? getElementOffset(element).top : 0;
        let scrollPos = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
        if (offset2) {
          scrollPos += offset2;
          targetPos = targetPos - offset2;
        }
        const from = scrollPos;
        const to = targetPos;
        ElementAnimateUtil.animate(from, to, duration, function(value) {
          document.documentElement.scrollTop = value;
          document.body.scrollTop = value;
        });
      }
      static scrollTop(offset2, duration) {
        ElementAnimateUtil.scrollTo(null, offset2, duration);
      }
    }
    function getCSS(el, styleProp) {
      const defaultView = (el.ownerDocument || document).defaultView;
      if (!defaultView) {
        return "";
      }
      styleProp = styleProp.replace(/([A-Z])/g, "-$1").toLowerCase();
      return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);
    }
    function getCSSVariableValue(variableName) {
      let hex = getComputedStyle(document.documentElement).getPropertyValue(
        variableName
      );
      if (hex && hex.length > 0) {
        hex = hex.trim();
      }
      return hex;
    }
    function getElementActualCss(el, prop, cache) {
      let css2 = "";
      if (!el.getAttribute("kt-hidden-" + prop) || cache === false) {
        let value;
        css2 = el.style.cssText;
        el.style.cssText = "position: absolute; visibility: hidden; display: block;";
        if (prop === "width") {
          value = el.offsetWidth;
        } else if (prop === "height") {
          value = el.offsetHeight;
        }
        el.style.cssText = css2;
        if (value !== void 0) {
          el.setAttribute("kt-hidden-" + prop, value.toString());
          return parseFloat(value.toString());
        }
        return 0;
      } else {
        const attributeValue = el.getAttribute("kt-hidden-" + prop);
        if (attributeValue || attributeValue === "0") {
          return parseFloat(attributeValue);
        }
      }
    }
    function getElementActualHeight(el) {
      return getElementActualCss(el, "height", false);
    }
    function getElementIndex(element) {
      if (element.parentNode) {
        const c = element.parentNode.children;
        for (let i = 0; i < c.length; i++) {
          if (c[i] === element)
            return i;
        }
      }
      return -1;
    }
    function getElementMatches(element, selector) {
      const p = Element.prototype;
      const f = p.matches || p.webkitMatchesSelector;
      if (element && element.tagName) {
        return f.call(element, selector);
      } else {
        return false;
      }
    }
    function getElementOffset(el) {
      if (!el.getClientRects().length) {
        return { top: 0, left: 0 };
      }
      const rect = el.getBoundingClientRect();
      const win = el.ownerDocument.defaultView;
      if (win) {
        return {
          top: rect.top + win.pageYOffset,
          left: rect.left + win.pageXOffset
        };
      }
      return rect;
    }
    function getElementParents(element, selector) {
      if (!Element.prototype.matches) {
        Element.prototype.matches = function(s) {
          const matches = (document || this.ownerDocument).querySelectorAll(s);
          let i = matches.length;
          while (--i >= 0 && matches.item(i) !== this) {
          }
          return i > -1;
        };
      }
      const parents = [];
      let el = element;
      for (; el && el !== document.body; el = el.parentElement) {
        if (selector) {
          if (el.matches(selector)) {
            parents.push(el);
          }
          continue;
        }
        parents.push(el);
      }
      return parents;
    }
    function getHighestZindex(el) {
      let bufferNode = el;
      let buffer = el;
      while (bufferNode && bufferNode !== document) {
        const position = buffer.style.getPropertyValue("position");
        if (position === "absolute" || position === "relative" || position === "fixed") {
          const value = parseInt(buffer.style.getPropertyValue("z-index"));
          if (!isNaN(value) && value !== 0) {
            return value;
          }
        }
        bufferNode = bufferNode.parentNode;
        buffer = bufferNode;
      }
      return null;
    }
    function getScrollTop() {
      return (document.scrollingElement || document.documentElement).scrollTop;
    }
    function getViewPort() {
      return {
        width: window.innerWidth,
        height: window.innerHeight
      };
    }
    function insertAfterElement(el, referenceNode) {
      var _a2;
      return (_a2 = referenceNode.parentNode) == null ? void 0 : _a2.insertBefore(el, referenceNode.nextSibling);
    }
    function isVisibleElement(element) {
      return !(element.offsetWidth === 0 && element.offsetHeight === 0);
    }
    function throttle$1(timer2, func, delay) {
      if (timer2) {
        return;
      }
      timer2 = window.setTimeout(function() {
        func();
        timer2 = void 0;
      }, delay);
    }
    function getElementChildren(element, selector) {
      if (!element || !element.childNodes) {
        return null;
      }
      const result = [];
      for (let i = 0; i < element.childNodes.length; i++) {
        const child = element.childNodes[i];
        if (child.nodeType === 1 && getElementMatches(child, selector)) {
          result.push(child);
        }
      }
      return result;
    }
    function getElementChild(element, selector) {
      const children = getElementChildren(element, selector);
      return children ? children[0] : null;
    }
    function slide(el, dir, speed, callback) {
      if (!el || dir === "up" && isVisibleElement(el) === false || dir === "down" && isVisibleElement(el) === true) {
        return;
      }
      speed = speed ? speed : 600;
      const calcHeight = getElementActualHeight(el);
      let calcPaddingTop = 0;
      let calcPaddingBottom = 0;
      if (ElementStyleUtil.get(el, "padding-top") && DataUtil.get(el, "slide-padding-top") !== true) {
        DataUtil.set(
          el,
          "slide-padding-top",
          ElementStyleUtil.get(el, "padding-top")
        );
      }
      if (ElementStyleUtil.get(el, "padding-bottom") && DataUtil.has(el, "slide-padding-bottom") !== true) {
        DataUtil.set(
          el,
          "slide-padding-bottom",
          ElementStyleUtil.get(el, "padding-bottom")
        );
      }
      if (DataUtil.has(el, "slide-padding-top")) {
        const data2 = DataUtil.get(el, "slide-padding-top");
        calcPaddingTop = parseInt(data2);
      }
      if (DataUtil.has(el, "slide-padding-bottom")) {
        const data2 = DataUtil.get(el, "slide-padding-bottom");
        calcPaddingBottom = parseInt(data2);
      }
      if (dir === "up") {
        el.style.cssText = "display: block; overflow: hidden;";
        if (calcPaddingTop) {
          ElementAnimateUtil.animate(
            0,
            calcPaddingTop,
            speed,
            function(value) {
              el.style.paddingTop = calcPaddingTop - value + "px";
            }
          );
        }
        if (calcPaddingBottom) {
          ElementAnimateUtil.animate(
            0,
            calcPaddingBottom,
            speed,
            function(value) {
              el.style.paddingBottom = calcPaddingBottom - value + "px";
            }
          );
        }
        ElementAnimateUtil.animate(
          0,
          calcHeight || 0,
          speed,
          function(value) {
            el.style.height = (calcHeight || 0) - value + "px";
          },
          function() {
            el.style.height = "";
            el.style.display = "none";
            if (typeof callback === "function") {
              callback();
            }
          }
        );
      } else if (dir === "down") {
        el.style.cssText = "display: block; overflow: hidden;";
        if (calcPaddingTop) {
          ElementAnimateUtil.animate(
            0,
            calcPaddingTop,
            speed,
            function(value) {
              el.style.paddingTop = value + "px";
            },
            function() {
              el.style.paddingTop = "";
            }
          );
        }
        if (calcPaddingBottom) {
          ElementAnimateUtil.animate(
            0,
            calcPaddingBottom,
            speed,
            function(value) {
              el.style.paddingBottom = value + "px";
            },
            function() {
              el.style.paddingBottom = "";
            }
          );
        }
        ElementAnimateUtil.animate(
          0,
          calcHeight || 0,
          speed,
          function(value) {
            el.style.height = value + "px";
          },
          function() {
            el.style.height = "";
            el.style.display = "";
            el.style.overflow = "";
            if (typeof callback === "function") {
              callback();
            }
          }
        );
      }
    }
    function slideUp(el, speed, callback) {
      slide(el, "up", speed, callback);
    }
    function slideDown(el, speed, callback) {
      slide(el, "down", speed, callback);
    }
    function getBreakpoint(breakpoint) {
      let value = getCSSVariableValue("--bs-" + breakpoint);
      if (value) {
        value = parseInt(value.trim());
      }
      return value;
    }
    function getAttributeValueByBreakpoint(incomingAttr) {
      const value = toJSON(incomingAttr);
      if (typeof value !== "object") {
        return incomingAttr;
      }
      const width = getViewPort().width;
      let resultKey;
      let resultBreakpoint = -1;
      let breakpoint;
      for (const key2 in value) {
        if (key2 === "default") {
          breakpoint = 0;
        } else {
          breakpoint = getBreakpoint(key2) ? +getBreakpoint(key2) : parseInt(key2);
        }
        if (breakpoint <= width && breakpoint > resultBreakpoint) {
          resultKey = key2;
          resultBreakpoint = breakpoint;
        }
      }
      return resultKey ? getObjectPropertyValueByKey(value, resultKey) : value;
    }
    const _EventHandlerUtil = class _EventHandlerUtil {
      static setEventMetasByName(name, handlers) {
        _EventHandlerUtil.store[name] = handlers;
      }
      static getEventMetaByName(name) {
        return _EventHandlerUtil.store[name];
      }
      static setEventMetaByNameAndHandlerId(name, handlerId, meta) {
        if (_EventHandlerUtil.store[name]) {
          _EventHandlerUtil.store[name][handlerId] = meta;
          return;
        }
        _EventHandlerUtil.store[name] = {};
        _EventHandlerUtil.store[name][handlerId] = meta;
      }
      static getEventMetaByHandlerId(name, handlerId) {
        const handlersIds = _EventHandlerUtil.store[name];
        if (!handlersIds) {
          return;
        }
        return handlersIds[handlerId];
      }
      static setFiredByNameAndHandlerId(name, handerId, fired) {
        const meta = _EventHandlerUtil.getEventMetaByHandlerId(name, handerId);
        if (!meta) {
          return;
        }
        meta.fired = fired;
        _EventHandlerUtil.setEventMetaByNameAndHandlerId(name, handerId, meta);
      }
      static addEvent(element, name, callback, one = false) {
        const handlerId = getUniqueIdWithPrefix("event");
        const data2 = DataUtil.get(element, name);
        const handlersIds = data2 ? data2 : [];
        handlersIds.push(handlerId);
        DataUtil.set(element, name, handlersIds);
        const meta = {
          name,
          callback,
          one,
          fired: false
        };
        _EventHandlerUtil.setEventMetaByNameAndHandlerId(name, handlerId, meta);
        return handlerId;
      }
      static removeEvent(element, name, handerId) {
        DataUtil.removeOne(element, name, handerId);
        const handlersIds = _EventHandlerUtil.store[name];
        if (handlersIds) {
          return;
        }
        delete _EventHandlerUtil.store[name][handerId];
      }
      static trigger(element, name, target, e) {
        let returnValue = true;
        if (!DataUtil.has(element, name)) {
          return returnValue;
        }
        let eventValue;
        let handlerId;
        const data2 = DataUtil.get(element, name);
        const handlersIds = data2 ? data2 : [];
        for (let i = 0; i < handlersIds.length; i++) {
          handlerId = handlersIds[i];
          if (_EventHandlerUtil.store[name] && _EventHandlerUtil.store[name][handlerId]) {
            const handler = _EventHandlerUtil.store[name][handlerId];
            if (handler.name === name) {
              if (handler.one) {
                if (handler.fired) {
                  _EventHandlerUtil.store[name][handlerId].fired = true;
                  eventValue = handler.callback.call(this, target);
                }
              } else {
                eventValue = handler.callback.call(this, target);
              }
              if (eventValue === false) {
                returnValue = false;
              }
            }
          }
        }
        return returnValue;
      }
      static one(element, name, callBack) {
        _EventHandlerUtil.addEvent(element, name, callBack, true);
      }
      static off(element, name, handerId) {
        _EventHandlerUtil.removeEvent(element, name, handerId);
      }
    };
    __publicField(_EventHandlerUtil, "store", {});
    __publicField(_EventHandlerUtil, "on", function(element, name, callBack) {
      _EventHandlerUtil.addEvent(element, name, callBack, false);
    });
    let EventHandlerUtil = _EventHandlerUtil;
    class ThemeMode {
      constructor() {
        __publicField(this, "menu", null);
        __publicField(this, "element", null);
        __publicField(this, "getParamName", (postfix) => {
          const ktName = document.body.hasAttribute("data-kt-name");
          const name = ktName ? ktName + "_" : "";
          return "kt_" + name + "theme_mode_" + postfix;
        });
        __publicField(this, "getMode", () => {
          var _a2;
          const modeParam = this.getParamName("value");
          const themeMode2 = this.getMenuMode();
          const defaultMode = "light";
          if (!localStorage.getItem(modeParam)) {
            return defaultMode;
          }
          const ls = localStorage.getItem(modeParam);
          if (ls) {
            return ls;
          }
          const dataTheme = (_a2 = this.element) == null ? void 0 : _a2.getAttribute("data-bs-theme");
          if (dataTheme) {
            return dataTheme;
          }
          if (!themeMode2) {
            return defaultMode;
          }
          if (themeMode2 === "system") {
            return this.getSystemMode();
          }
          return themeMode2;
        });
        __publicField(this, "setMode", (mode, menuMode) => {
          var _a2, _b, _c;
          if (mode !== "light" && mode !== "dark") {
            return;
          }
          const modeParam = this.getParamName("value");
          const menuModeParam = this.getParamName("menu");
          if (menuMode === "system") {
            if (this.getSystemMode() !== mode) {
              mode = this.getSystemMode();
            }
          }
          if (!menuMode) {
            menuMode = mode;
          }
          const activeMenuItem = ((_a2 = this.menu) == null ? void 0 : _a2.querySelector(
            '[data-kt-element="mode"][data-kt-value="' + menuMode + '"]'
          )) || null;
          (_b = this.element) == null ? void 0 : _b.setAttribute("data-kt-theme-mode-switching", "true");
          (_c = this.element) == null ? void 0 : _c.setAttribute("data-bs-theme", mode);
          const self2 = this;
          setTimeout(function() {
            var _a3;
            (_a3 = self2.element) == null ? void 0 : _a3.removeAttribute("data-kt-theme-mode-switching");
          }, 300);
          if (localStorage) {
            localStorage.setItem(modeParam, mode);
          }
          if (activeMenuItem && localStorage) {
            localStorage.setItem(menuModeParam, menuMode);
            this.setActiveMenuItem(activeMenuItem);
          }
          this.flipImages();
        });
        __publicField(this, "getMenuMode", () => {
          var _a2;
          const menuModeParam = this.getParamName("menu");
          const menuItem = (_a2 = this.menu) == null ? void 0 : _a2.querySelector(
            '.active[data-kt-element="mode"]'
          );
          const dataKTValue = menuItem == null ? void 0 : menuItem.getAttribute("data-kt-value");
          if (dataKTValue) {
            return dataKTValue;
          }
          if (!menuModeParam) {
            return "";
          }
          const ls = localStorage ? localStorage.getItem(menuModeParam) : null;
          return ls || "";
        });
        __publicField(this, "getSystemMode", () => {
          return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
        });
        __publicField(this, "initMode", () => {
          this.setMode(this.getMode(), this.getMenuMode());
          if (this.element) {
            EventHandlerUtil.trigger(this.element, "kt.thememode.init");
          }
        });
        __publicField(this, "getActiveMenuItem", () => {
          var _a2;
          return ((_a2 = this.menu) == null ? void 0 : _a2.querySelector(
            '[data-kt-element="mode"][data-kt-value="' + this.getMenuMode() + '"]'
          )) || null;
        });
        __publicField(this, "setActiveMenuItem", (item) => {
          var _a2;
          const menuModeParam = this.getParamName("menu");
          const menuMode = item.getAttribute("data-kt-value");
          const activeItem = (_a2 = this.menu) == null ? void 0 : _a2.querySelector(
            '.active[data-kt-element="mode"]'
          );
          if (activeItem) {
            activeItem.classList.remove("active");
          }
          item.classList.add("active");
          if (localStorage && menuMode && menuModeParam) {
            localStorage.setItem(menuModeParam, menuMode);
          }
        });
        __publicField(this, "handleMenu", () => {
          var _a2, _b;
          (_b = (_a2 = this.menu) == null ? void 0 : _a2.querySelectorAll('[data-kt-element="mode"]')) == null ? void 0 : _b.forEach((item) => {
            item.addEventListener("click", (e) => {
              e.preventDefault();
              const menuMode = item.getAttribute("data-kt-value");
              const mode = menuMode === "system" ? this.getSystemMode() : menuMode;
              if (mode) {
                this.setMode(mode, menuMode);
              }
            });
          });
        });
        __publicField(this, "flipImages", () => {
          var _a2;
          (_a2 = document.querySelectorAll("[data-kt-img-dark]")) == null ? void 0 : _a2.forEach((item) => {
            if (item.tagName === "IMG") {
              if (this.getMode() === "dark" && item.hasAttribute("data-kt-img-dark")) {
                item.setAttribute(
                  "data-kt-img-light",
                  item.getAttribute("src") || ""
                );
                item.setAttribute(
                  "src",
                  item.getAttribute("data-kt-img-dark") || ""
                );
              } else if (this.getMode() === "light" && item.hasAttribute("data-kt-img-light")) {
                item.setAttribute(
                  "data-kt-img-dark",
                  item.getAttribute("src") || ""
                );
                item.setAttribute(
                  "src",
                  item.getAttribute("data-kt-img-light") || ""
                );
              }
            } else {
              if (this.getMode() === "dark" && item.hasAttribute("data-kt-img-dark")) {
                item.setAttribute(
                  "data-kt-img-light",
                  item.getAttribute("src") || ""
                );
                item.style.backgroundImage = "url('" + item.getAttribute("data-kt-img-dark") + "')";
              } else if (this.getMode() === "light" && item.hasAttribute("data-kt-img-light")) {
                item.setAttribute(
                  "data-kt-img-dark",
                  item.getAttribute("src") || ""
                );
                item.style.backgroundImage = "url('" + item.getAttribute("data-kt-img-light") + "')";
              }
            }
          });
        });
        __publicField(this, "on", (name, hander) => {
          if (this.element) {
            return EventHandlerUtil.on(this.element, name, hander);
          }
        });
        __publicField(this, "off", (name, handlerId) => {
          if (this.element) {
            return EventHandlerUtil.off(this.element, name, handlerId);
          }
        });
        __publicField(this, "init", () => {
          this.menu = document.querySelector(
            '[data-kt-element="theme-mode-menu"]'
          );
          this.element = document.getElementById("vite-app");
          this.initMode();
          if (this.menu) {
            this.handleMenu();
          }
        });
      }
    }
    const ThemeModeComponent = new ThemeMode();
    const config = vueExports$1.computed(() => {
      return useConfigStore().config;
    });
    const themeMode = vueExports$1.computed(() => {
      if (useConfigStore().getLayoutConfig("general.mode") === "system") {
        return ThemeModeComponent.getSystemMode();
      }
      return useConfigStore().getLayoutConfig("general.mode");
    });
    vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("general.mode") ? useConfigStore().getLayoutConfig("general.mode") : "system";
    });
    const displaySidebar = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("sidebar.display");
    });
    const sidebarToggleDisplay = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig(
        "sidebar.default.minimize.desktop.enabled"
      );
    });
    const footerWidthFluid = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("footer.container") === "fluid";
    });
    const footerDisplay = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("footer.display");
    });
    const headerWidthFluid = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("header.default.container") === "fluid";
    });
    const headerDisplay = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("header.display");
    });
    vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("header.left");
    });
    const headerDesktopFixed = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("header.default.fixed.desktop");
    });
    const headerMobileFixed = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("header.default.fixed.mobile");
    });
    vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("sidebar.display");
    });
    const layout = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("general.layout");
    });
    const toolbarWidthFluid = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("toolbar.container") === "fluid";
    });
    vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("toolbar.display");
    });
    const contentWidthFluid = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("content.container") === "fluid";
    });
    vueExports$1.computed(() => {
      return !!useConfigStore().getLayoutConfig("aside.display");
    });
    vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("aside.theme");
    });
    vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("toolbar.display");
    });
    const sidebarMenuIcons = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("sidebar.default.menu.iconType");
    });
    vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("main.logo.light");
    });
    vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("main.logo.dark");
    });
    const headerMenuIcons = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("header.default.menu.iconType");
    });
    const headerMenuDisplay = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("header.default.menu.display");
    });
    const pageTitleDisplay = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("pageTitle.display");
    });
    const pageTitleBreadcrumbDisplay = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("pageTitle.breadcrumb");
    });
    const pageTitleDirection = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("pageTitle.direction");
    });
    const scrolltopDispaly = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("scrolltop.display");
    });
    const illustrationsSet = vueExports$1.computed(() => {
      return useConfigStore().getLayoutConfig("illustrations.set");
    });
    const THEME_MODE_LS_KEY = "kt_theme_mode_value";
    const THEME_MENU_MODE_LS_KEY = "kt_theme_mode_menu";
    const useThemeStore = pinia_prod.defineStore("theme", () => {
      const mode = vueExports$1.ref(
        localStorage.getItem(THEME_MODE_LS_KEY)
      );
      function setThemeMode(payload) {
        let currentMode = payload;
        localStorage.setItem(THEME_MODE_LS_KEY, currentMode);
        localStorage.setItem(THEME_MENU_MODE_LS_KEY, currentMode);
        mode.value = currentMode;
        if (currentMode === "system") {
          currentMode = ThemeModeComponent.getSystemMode();
        }
        ThemeModeComponent.init();
      }
      return {
        mode,
        setThemeMode
      };
    });
    const getIllustrationsPath = (illustrationName) => {
      const extension = illustrationName.substring(
        illustrationName.lastIndexOf("."),
        illustrationName.length
      );
      const illustration = useThemeStore().mode == "dark" ? `${illustrationName.substring(
        0,
        illustrationName.lastIndexOf(".")
      )}-dark` : illustrationName.substring(0, illustrationName.lastIndexOf("."));
      return `/build/media/illustrations/${illustrationsSet.value}/${illustration}${extension}`;
    };
    const getAssetPath = (path) => {
      return "/build/" + path;
    };
    const _sfc_main$3A = vueExports$1.defineComponent({
      name: "table-head-row",
      props: {
        checkboxEnabledValue: { type: Boolean, required: false, default: false },
        checkboxEnabled: { type: Boolean, required: false, default: false },
        sortLabel: { type: String, required: false, default: null },
        sortOrder: {
          type: String,
          required: false,
          default: "asc"
        },
        header: { type: Array, required: true }
      },
      emits: ["on-select", "on-sort"],
      components: {},
      setup(props, { emit }) {
        const checked = vueExports$1.ref(false);
        const columnLabelAndOrder = vueExports$1.ref({
          label: props.sortLabel,
          order: props.sortOrder
        });
        vueExports$1.onMounted(() => {
          emit("on-sort", columnLabelAndOrder.value);
        });
        vueExports$1.watch(
          () => props.checkboxEnabledValue,
          (currentValue) => {
            checked.value = currentValue;
          }
        );
        const selectAll = () => {
          emit("on-select", checked.value);
        };
        const onSort = (label, sortEnabled) => {
          if (sortEnabled) {
            if (columnLabelAndOrder.value.label === label) {
              if (columnLabelAndOrder.value.order === "asc") {
                columnLabelAndOrder.value.order = "desc";
              } else {
                if (columnLabelAndOrder.value.order === "desc") {
                  columnLabelAndOrder.value.order = "asc";
                }
              }
            } else {
              columnLabelAndOrder.value.order = "asc";
              columnLabelAndOrder.value.label = label;
            }
            emit("on-sort", columnLabelAndOrder.value);
          }
        };
        const sortArrow = vueExports$1.computed(() => {
          return columnLabelAndOrder.value.order === "asc" ? "&#x2191;" : "&#x2193;";
        });
        return {
          onSort,
          selectAll,
          checked,
          sortArrow,
          columnLabelAndOrder
        };
      }
    });
    const _export_sfc = (sfc, props) => {
      const target = sfc.__vccOpts || sfc;
      for (const [key2, val] of props) {
        target[key2] = val;
      }
      return target;
    };
    function _sfc_ssrRender$3g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<thead${ssrRenderAttrs(_attrs)}><tr class="text-start text-gray-500 fw-bold fs-7 text-uppercase gs-0">`);
      if (_ctx.checkboxEnabled) {
        _push(`<th style="${ssrRenderStyle({ width: "30px" })}"><div class="form-check form-check-sm form-check-custom form-check-solid me-3"><input class="form-check-input" type="checkbox"${ssrIncludeBooleanAttr(Array.isArray(_ctx.checked) ? ssrLooseContain(_ctx.checked, null) : _ctx.checked) ? " checked" : ""}></div></th>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<!--[-->`);
      ssrRenderList(_ctx.header, (column, i) => {
        _push(`<th class="${ssrRenderClass({
          "text-end": i === _ctx.header.length - 1
        })}" style="${ssrRenderStyle({
          minWidth: column.columnWidth ? `${column.columnWidth}px` : "0",
          width: "auto",
          cursor: column.sortEnabled ? "pointer" : "auto"
        })}">${ssrInterpolate(column.columnName)} `);
        if (_ctx.columnLabelAndOrder.label === column.columnLabel && column.sortEnabled) {
          _push(`<span>${_ctx.sortArrow ?? ""}</span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</th>`);
      });
      _push(`<!--]--></tr></thead>`);
    }
    const _sfc_setup$3A = _sfc_main$3A.setup;
    _sfc_main$3A.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/kt-datatable/table-partials/table-content/table-head/TableHeadRow.vue");
      return _sfc_setup$3A ? _sfc_setup$3A(props, ctx) : void 0;
    };
    const TableHeadRow = /* @__PURE__ */ _export_sfc(_sfc_main$3A, [["ssrRender", _sfc_ssrRender$3g]]);
    const __vite_glob_0_53 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TableHeadRow
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3z = vueExports$1.defineComponent({
      name: "table-body-row",
      components: {},
      props: {
        header: { type: Array, required: true },
        data: { type: Array, required: true },
        currentlySelectedItems: { type: Array, required: false, default: () => [] },
        checkboxEnabled: { type: Boolean, required: false, default: false },
        checkboxLabel: {
          type: String,
          required: false,
          default: "id"
        }
      },
      emits: ["on-select"],
      setup(props, { emit }) {
        const selectedItems = vueExports$1.ref([]);
        vueExports$1.watch(
          () => [...props.currentlySelectedItems],
          (currentValue) => {
            if (props.currentlySelectedItems.length !== 0) {
              selectedItems.value = [
                .../* @__PURE__ */ new Set([...selectedItems.value, ...currentValue])
              ];
            } else {
              selectedItems.value = [];
            }
          }
        );
        const onChange = () => {
          emit("on-select", selectedItems.value);
        };
        return {
          selectedItems,
          onChange
        };
      }
    });
    function _sfc_ssrRender$3f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<tbody${ssrRenderAttrs(vueExports$1.mergeProps({ class: "fw-semibold text-gray-600" }, _attrs))}><!--[-->`);
      ssrRenderList(_ctx.data, (row, i) => {
        _push(`<tr>`);
        if (_ctx.checkboxEnabled) {
          _push(`<td><div class="form-check form-check-sm form-check-custom form-check-solid"><input class="form-check-input" type="checkbox"${ssrRenderAttr("value", row[_ctx.checkboxLabel])}${ssrIncludeBooleanAttr(Array.isArray(_ctx.selectedItems) ? ssrLooseContain(_ctx.selectedItems, row[_ctx.checkboxLabel]) : _ctx.selectedItems) ? " checked" : ""}></div></td>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<!--[-->`);
        ssrRenderList(_ctx.header, (properties, j) => {
          _push(`<td class="${ssrRenderClass({ "text-end": j === _ctx.header.length - 1 })}">`);
          ssrRenderSlot(_ctx.$slots, `${properties.columnLabel}`, { row }, () => {
            _push(`${ssrInterpolate(row)}`);
          }, _push, _parent);
          _push(`</td>`);
        });
        _push(`<!--]--></tr>`);
      });
      _push(`<!--]--></tbody>`);
    }
    const _sfc_setup$3z = _sfc_main$3z.setup;
    _sfc_main$3z.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/kt-datatable/table-partials/table-content/table-body/TableBodyRow.vue");
      return _sfc_setup$3z ? _sfc_setup$3z(props, ctx) : void 0;
    };
    const TableBodyRow = /* @__PURE__ */ _export_sfc(_sfc_main$3z, [["ssrRender", _sfc_ssrRender$3f]]);
    const __vite_glob_0_50 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TableBodyRow
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3y = vueExports$1.defineComponent({
      name: "kt-loading",
      components: {}
    });
    function _sfc_ssrRender$3e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "overlay-layer card-rounded bg-dark bg-opacity-5" }, _attrs))}><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>`);
    }
    const _sfc_setup$3y = _sfc_main$3y.setup;
    _sfc_main$3y.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/kt-datatable/table-partials/Loading.vue");
      return _sfc_setup$3y ? _sfc_setup$3y(props, ctx) : void 0;
    };
    const Loading = /* @__PURE__ */ _export_sfc(_sfc_main$3y, [["ssrRender", _sfc_ssrRender$3e]]);
    const __vite_glob_0_47 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Loading
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3x = vueExports$1.defineComponent({
      name: "table-body",
      props: {
        header: { type: Array, required: true },
        data: { type: Array, required: true },
        emptyTableText: { type: String, default: "No data found" },
        sortLabel: { type: String, required: false, default: null },
        sortOrder: {
          type: String,
          required: false,
          default: "asc"
        },
        checkboxEnabled: { type: Boolean, required: false, default: false },
        checkboxLabel: { type: String, required: false, default: "id" },
        loading: { type: Boolean, required: false, default: false }
      },
      emits: ["on-sort", "on-items-select"],
      components: {
        TableHeadRow,
        TableBodyRow,
        Loading
      },
      setup(props, { emit }) {
        const selectedItems = vueExports$1.ref([]);
        const allSelectedItems = vueExports$1.ref([]);
        const check2 = vueExports$1.ref(false);
        vueExports$1.watch(
          () => props.data,
          () => {
            selectedItems.value = [];
            allSelectedItems.value = [];
            check2.value = false;
            props.data.forEach((item) => {
              if (item[props.checkboxLabel]) {
                allSelectedItems.value.push(item[props.checkboxLabel]);
              }
            });
          }
        );
        const selectAll = (checked) => {
          check2.value = checked;
          if (checked) {
            selectedItems.value = [
              .../* @__PURE__ */ new Set([...selectedItems.value, ...allSelectedItems.value])
            ];
          } else {
            selectedItems.value = [];
          }
        };
        const itemsSelect = (value) => {
          selectedItems.value = [];
          value.forEach((item) => {
            if (!selectedItems.value.includes(item))
              selectedItems.value.push(item);
          });
        };
        const onSort = (sort2) => {
          emit("on-sort", sort2);
        };
        vueExports$1.watch(
          () => [...selectedItems.value],
          (currentValue) => {
            if (currentValue) {
              emit("on-items-select", currentValue);
            }
          }
        );
        vueExports$1.onMounted(() => {
          selectedItems.value = [];
          allSelectedItems.value = [];
          check2.value = false;
          props.data.forEach((item) => {
            if (item[props.checkboxLabel]) {
              allSelectedItems.value.push(item[props.checkboxLabel]);
            }
          });
        });
        return {
          onSort,
          selectedItems,
          selectAll,
          itemsSelect,
          check: check2
        };
      }
    });
    function _sfc_ssrRender$3d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_TableHeadRow = vueExports$1.resolveComponent("TableHeadRow");
      const _component_TableBodyRow = vueExports$1.resolveComponent("TableBodyRow");
      const _component_Loading = vueExports$1.resolveComponent("Loading");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "table-responsive" }, _attrs))}><table class="${ssrRenderClass([[_ctx.loading && "overlay overlay-block"], "table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer"])}">`);
      _push(ssrRenderComponent(_component_TableHeadRow, {
        onOnSort: _ctx.onSort,
        onOnSelect: _ctx.selectAll,
        checkboxEnabledValue: _ctx.check,
        checkboxEnabled: _ctx.checkboxEnabled,
        "sort-label": _ctx.sortLabel,
        "sort-order": _ctx.sortOrder,
        header: _ctx.header
      }, null, _parent));
      if (_ctx.data.length !== 0) {
        _push(ssrRenderComponent(_component_TableBodyRow, {
          onOnSelect: _ctx.itemsSelect,
          currentlySelectedItems: _ctx.selectedItems,
          data: _ctx.data,
          header: _ctx.header,
          "checkbox-enabled": _ctx.checkboxEnabled,
          "checkbox-label": _ctx.checkboxLabel
        }, vueExports$1.createSlots({ _: 2 }, [
          vueExports$1.renderList(_ctx.$slots, (_, name) => {
            return {
              name,
              fn: vueExports$1.withCtx(({ row: item }, _push2, _parent2, _scopeId) => {
                if (_push2) {
                  ssrRenderSlot(_ctx.$slots, name, { row: item }, null, _push2, _parent2, _scopeId);
                } else {
                  return [
                    vueExports$1.renderSlot(_ctx.$slots, name, { row: item })
                  ];
                }
              })
            };
          })
        ]), _parent));
      } else {
        _push(`<tr class="odd"><td colspan="7" class="dataTables_empty">${ssrInterpolate(_ctx.emptyTableText)}</td></tr>`);
      }
      if (_ctx.loading) {
        _push(ssrRenderComponent(_component_Loading, null, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</table></div>`);
    }
    const _sfc_setup$3x = _sfc_main$3x.setup;
    _sfc_main$3x.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/kt-datatable/table-partials/table-content/TableContent.vue");
      return _sfc_setup$3x ? _sfc_setup$3x(props, ctx) : void 0;
    };
    const TableContent = /* @__PURE__ */ _export_sfc(_sfc_main$3x, [["ssrRender", _sfc_ssrRender$3d]]);
    const __vite_glob_0_49 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TableContent
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3w = vueExports$1.defineComponent({
      name: "table-items-per-page-select",
      components: {},
      props: {
        itemsPerPage: { type: Number, default: 10 },
        itemsPerPageDropdownEnabled: {
          type: Boolean,
          required: false,
          default: true
        }
      },
      emits: ["update:itemsPerPage"],
      setup(props, { emit }) {
        const inputItemsPerPage = vueExports$1.ref(10);
        vueExports$1.onMounted(() => {
          inputItemsPerPage.value = props.itemsPerPage;
        });
        const itemsCountInTable = vueExports$1.computed({
          get() {
            return props.itemsPerPage;
          },
          set(value) {
            emit("update:itemsPerPage", value);
          }
        });
        return {
          itemsCountInTable
        };
      }
    });
    function _sfc_ssrRender$3c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start" }, _attrs))}><label for="items-per-page">`);
      if (_ctx.itemsPerPageDropdownEnabled) {
        _push(`<select class="form-select form-select-sm form-select-solid" name="items-per-page" id="items-per-page"><option${ssrRenderAttr("value", 10)}${ssrIncludeBooleanAttr(Array.isArray(_ctx.itemsCountInTable) ? ssrLooseContain(_ctx.itemsCountInTable, 10) : ssrLooseEqual(_ctx.itemsCountInTable, 10)) ? " selected" : ""}>10</option><option${ssrRenderAttr("value", 25)}${ssrIncludeBooleanAttr(Array.isArray(_ctx.itemsCountInTable) ? ssrLooseContain(_ctx.itemsCountInTable, 25) : ssrLooseEqual(_ctx.itemsCountInTable, 25)) ? " selected" : ""}>25</option><option${ssrRenderAttr("value", 50)}${ssrIncludeBooleanAttr(Array.isArray(_ctx.itemsCountInTable) ? ssrLooseContain(_ctx.itemsCountInTable, 50) : ssrLooseEqual(_ctx.itemsCountInTable, 50)) ? " selected" : ""}>50</option></select>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</label></div>`);
    }
    const _sfc_setup$3w = _sfc_main$3w.setup;
    _sfc_main$3w.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/kt-datatable/table-partials/table-content/table-footer/TableItemsPerPageSelect.vue");
      return _sfc_setup$3w ? _sfc_setup$3w(props, ctx) : void 0;
    };
    const TableItemsPerPageSelect = /* @__PURE__ */ _export_sfc(_sfc_main$3w, [["ssrRender", _sfc_ssrRender$3c]]);
    const __vite_glob_0_51 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TableItemsPerPageSelect
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3v = vueExports$1.defineComponent({
      name: "table-pagination",
      components: {},
      props: {
        maxVisibleButtons: {
          type: Number,
          required: false,
          default: 5
        },
        totalPages: {
          type: Number,
          required: true
        },
        total: {
          type: Number,
          required: true
        },
        perPage: {
          type: Number,
          required: true
        },
        currentPage: {
          type: Number,
          required: true
        }
      },
      emits: ["page-change"],
      setup(props, { emit }) {
        const startPage = vueExports$1.computed(() => {
          const floorVal = Math.floor(props.maxVisibleButtons / 2);
          if (props.totalPages < props.maxVisibleButtons || props.currentPage === 1 || props.currentPage <= Math.floor(props.maxVisibleButtons / 2) || props.currentPage + floorVal > props.totalPages && props.totalPages === props.maxVisibleButtons) {
            return 1;
          }
          if (props.currentPage + floorVal > props.totalPages) {
            return props.totalPages - props.maxVisibleButtons + 1;
          }
          return props.currentPage - floorVal;
        });
        const endPage = vueExports$1.computed(() => {
          return Math.min(
            startPage.value + props.maxVisibleButtons - 1,
            props.totalPages
          );
        });
        const pages = vueExports$1.computed(() => {
          const range = [];
          for (let i = startPage.value; i <= endPage.value; i += 1) {
            range.push({
              name: i,
              isDisabled: i === props.currentPage
            });
          }
          return range;
        });
        const isInFirstPage = vueExports$1.computed(() => {
          return props.currentPage === 1;
        });
        const isInLastPage = vueExports$1.computed(() => {
          return props.currentPage === props.totalPages;
        });
        const onClickFirstPage = () => {
          emit("page-change", 1);
        };
        const onClickPreviousPage = () => {
          emit("page-change", props.currentPage - 1);
        };
        const onClickPage = (page) => {
          emit("page-change", page);
        };
        const onClickNextPage = () => {
          emit("page-change", props.currentPage + 1);
        };
        const onClickLastPage = () => {
          emit("page-change", props.totalPages);
        };
        const isPageActive = (page) => {
          return props.currentPage === page;
        };
        return {
          startPage,
          endPage,
          pages,
          isInFirstPage,
          isInLastPage,
          onClickFirstPage,
          onClickPreviousPage,
          onClickPage,
          onClickNextPage,
          onClickLastPage,
          isPageActive,
          getAssetPath
        };
      }
    });
    const TablePagination_vue_vue_type_style_index_0_lang = "";
    function _sfc_ssrRender$3b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end" }, _attrs))}><div class="dataTables_paginate paging_simple_numbers"><ul class="pagination"><li class="${ssrRenderClass([{ disabled: _ctx.isInFirstPage }, "paginate_button page-item"])}" style="${ssrRenderStyle({ cursor: !_ctx.isInFirstPage ? "pointer" : "auto" })}"><a class="page-link">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "double-left",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></li><li class="${ssrRenderClass([{ disabled: _ctx.isInFirstPage }, "paginate_button page-item"])}" style="${ssrRenderStyle({ cursor: !_ctx.isInFirstPage ? "pointer" : "auto" })}"><a class="page-link">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "left",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></li><!--[-->`);
      ssrRenderList(_ctx.pages, (page, i) => {
        _push(`<li class="${ssrRenderClass([{
          active: _ctx.isPageActive(page.name)
        }, "paginate_button page-item"])}" style="${ssrRenderStyle({ cursor: !page.isDisabled ? "pointer" : "auto" })}"><a class="page-link">${ssrInterpolate(page.name)}</a></li>`);
      });
      _push(`<!--]--><li class="${ssrRenderClass([{ disabled: _ctx.isInLastPage }, "paginate_button page-item"])}" style="${ssrRenderStyle({ cursor: !_ctx.isInLastPage ? "pointer" : "auto" })}"><a class="paginate_button page-link">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></li><li class="${ssrRenderClass([{ disabled: _ctx.isInLastPage }, "paginate_button page-item"])}" style="${ssrRenderStyle({ cursor: !_ctx.isInLastPage ? "pointer" : "auto" })}"><a class="paginate_button page-link">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "double-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></li></ul></div></div>`);
    }
    const _sfc_setup$3v = _sfc_main$3v.setup;
    _sfc_main$3v.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/kt-datatable/table-partials/table-content/table-footer/TablePagination.vue");
      return _sfc_setup$3v ? _sfc_setup$3v(props, ctx) : void 0;
    };
    const TablePagination = /* @__PURE__ */ _export_sfc(_sfc_main$3v, [["ssrRender", _sfc_ssrRender$3b]]);
    const __vite_glob_0_52 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablePagination
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3u = vueExports$1.defineComponent({
      name: "table-footer",
      components: {
        TableItemsPerPageSelect,
        TablePagination
      },
      props: {
        count: { type: Number, required: false, default: 5 },
        itemsPerPage: { type: Number, default: 5 },
        itemsPerPageDropdownEnabled: {
          type: Boolean,
          required: false,
          default: true
        },
        currentPage: { type: Number, required: false, default: 1 }
      },
      emits: ["update:itemsPerPage", "page-change"],
      setup(props, { emit }) {
        const page = vueExports$1.ref(props.currentPage);
        const inputItemsPerPage = vueExports$1.ref(props.itemsPerPage);
        vueExports$1.watch(
          () => props.count,
          () => {
            page.value = 1;
          }
        );
        vueExports$1.watch(
          () => inputItemsPerPage.value,
          () => {
            page.value = 1;
          }
        );
        vueExports$1.onMounted(() => {
          inputItemsPerPage.value = props.itemsPerPage;
        });
        const pageChange = (newPage) => {
          page.value = newPage;
          emit("page-change", page.value);
        };
        const itemsCountInTable = vueExports$1.computed({
          get() {
            return props.itemsPerPage;
          },
          set(value) {
            inputItemsPerPage.value = value;
            emit("update:itemsPerPage", value);
          }
        });
        const pageCount = vueExports$1.computed(() => {
          return Math.ceil(props.count / itemsCountInTable.value);
        });
        return {
          pageChange,
          pageCount,
          page,
          itemsCountInTable,
          inputItemsPerPage
        };
      }
    });
    function _sfc_ssrRender$3a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_TableItemsPerPageSelect = vueExports$1.resolveComponent("TableItemsPerPageSelect");
      const _component_TablePagination = vueExports$1.resolveComponent("TablePagination");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "row" }, _attrs))}>`);
      _push(ssrRenderComponent(_component_TableItemsPerPageSelect, {
        itemsPerPage: _ctx.itemsCountInTable,
        "onUpdate:itemsPerPage": ($event) => _ctx.itemsCountInTable = $event,
        "items-per-page-dropdown-enabled": _ctx.itemsPerPageDropdownEnabled
      }, null, _parent));
      if (_ctx.pageCount > 1) {
        _push(ssrRenderComponent(_component_TablePagination, {
          "total-pages": _ctx.pageCount,
          total: _ctx.count,
          "per-page": _ctx.itemsPerPage,
          "current-page": _ctx.page,
          onPageChange: _ctx.pageChange
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    }
    const _sfc_setup$3u = _sfc_main$3u.setup;
    _sfc_main$3u.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/kt-datatable/table-partials/TableFooter.vue");
      return _sfc_setup$3u ? _sfc_setup$3u(props, ctx) : void 0;
    };
    const TableFooter = /* @__PURE__ */ _export_sfc(_sfc_main$3u, [["ssrRender", _sfc_ssrRender$3a]]);
    const __vite_glob_0_48 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TableFooter
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3t = vueExports$1.defineComponent({
      name: "kt-datatable",
      props: {
        header: { type: Array, required: true },
        data: { type: Array, required: true },
        itemsPerPage: { type: Number, default: 10 },
        itemsPerPageDropdownEnabled: {
          type: Boolean,
          required: false,
          default: true
        },
        checkboxEnabled: { type: Boolean, required: false, default: false },
        checkboxLabel: { type: String, required: false, default: "id" },
        total: { type: Number, required: false },
        loading: { type: Boolean, required: false, default: false },
        sortLabel: { type: String, required: false, default: null },
        sortOrder: {
          type: String,
          required: false,
          default: "asc"
        },
        emptyTableText: { type: String, required: false, default: "No data found" },
        currentPage: { type: Number, required: false, default: 1 }
      },
      emits: [
        "page-change",
        "on-sort",
        "on-items-select",
        "on-items-per-page-change"
      ],
      components: {
        TableContent,
        TableFooter
      },
      setup(props, { emit }) {
        const currentPage = vueExports$1.ref(props.currentPage);
        const itemsInTable = vueExports$1.ref(props.itemsPerPage);
        vueExports$1.watch(
          () => itemsInTable.value,
          (val) => {
            currentPage.value = 1;
            emit("on-items-per-page-change", val);
          }
        );
        const pageChange = (page) => {
          currentPage.value = page;
          emit("page-change", page);
        };
        const dataToDisplay = vueExports$1.computed(() => {
          if (props.data) {
            if (props.data.length <= itemsInTable.value) {
              return props.data;
            } else {
              let sliceFrom = (currentPage.value - 1) * itemsInTable.value;
              return props.data.slice(sliceFrom, sliceFrom + itemsInTable.value);
            }
          }
          return [];
        });
        const totalItems = vueExports$1.computed(() => {
          if (props.data) {
            if (props.data.length <= itemsInTable.value) {
              return props.total;
            } else {
              return props.data.length;
            }
          }
          return 0;
        });
        const onSort = (sort2) => {
          emit("on-sort", sort2);
        };
        const onItemSelect = (selectedItems) => {
          emit("on-items-select", selectedItems);
        };
        return {
          pageChange,
          dataToDisplay,
          onSort,
          onItemSelect,
          itemsInTable,
          totalItems
        };
      }
    });
    function _sfc_ssrRender$39(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_TableContent = vueExports$1.resolveComponent("TableContent");
      const _component_TableFooter = vueExports$1.resolveComponent("TableFooter");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "dataTables_wrapper dt-bootstrap4 no-footer" }, _attrs))}>`);
      _push(ssrRenderComponent(_component_TableContent, {
        onOnItemsSelect: _ctx.onItemSelect,
        onOnSort: _ctx.onSort,
        header: _ctx.header,
        data: _ctx.dataToDisplay,
        checkboxEnabled: _ctx.checkboxEnabled,
        checkboxLabel: _ctx.checkboxLabel,
        "empty-table-text": _ctx.emptyTableText,
        "sort-label": _ctx.sortLabel,
        "sort-order": _ctx.sortOrder,
        loading: _ctx.loading
      }, vueExports$1.createSlots({ _: 2 }, [
        vueExports$1.renderList(_ctx.$slots, (_, name) => {
          return {
            name,
            fn: vueExports$1.withCtx(({ row: item }, _push2, _parent2, _scopeId) => {
              if (_push2) {
                ssrRenderSlot(_ctx.$slots, name, { row: item }, null, _push2, _parent2, _scopeId);
              } else {
                return [
                  vueExports$1.renderSlot(_ctx.$slots, name, { row: item })
                ];
              }
            })
          };
        })
      ]), _parent));
      _push(ssrRenderComponent(_component_TableFooter, {
        onPageChange: _ctx.pageChange,
        "current-page": _ctx.currentPage,
        itemsPerPage: _ctx.itemsInTable,
        "onUpdate:itemsPerPage": ($event) => _ctx.itemsInTable = $event,
        count: _ctx.totalItems,
        "items-per-page-dropdown-enabled": _ctx.itemsPerPageDropdownEnabled
      }, null, _parent));
      _push(`</div>`);
    }
    const _sfc_setup$3t = _sfc_main$3t.setup;
    _sfc_main$3t.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/kt-datatable/KTDataTable.vue");
      return _sfc_setup$3t ? _sfc_setup$3t(props, ctx) : void 0;
    };
    const KTDatatable = /* @__PURE__ */ _export_sfc(_sfc_main$3t, [["ssrRender", _sfc_ssrRender$39]]);
    const __vite_glob_0_46 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTDatatable
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3s = vueExports$1.defineComponent({
      name: "export-customers-modal",
      components: {},
      setup() {
        const formRef = vueExports$1.ref(null);
        const loading2 = vueExports$1.ref(false);
        const state = vueExports$1.reactive({
          shortcuts: [
            {
              text: "Last week",
              value: () => {
                const end2 = /* @__PURE__ */ new Date();
                const start2 = /* @__PURE__ */ new Date();
                start2.setTime(start2.getTime() - 3600 * 1e3 * 24 * 7);
                return [start2, end2];
              }
            },
            {
              text: "Last month",
              value: () => {
                const end2 = /* @__PURE__ */ new Date();
                const start2 = /* @__PURE__ */ new Date();
                start2.setTime(start2.getTime() - 3600 * 1e3 * 24 * 30);
                return [start2, end2];
              }
            },
            {
              text: "Last 3 months",
              value: () => {
                const end2 = /* @__PURE__ */ new Date();
                const start2 = /* @__PURE__ */ new Date();
                start2.setTime(start2.getTime() - 3600 * 1e3 * 24 * 90);
                return [start2, end2];
              }
            }
          ]
        });
        const formData = vueExports$1.ref({
          dateRange: [],
          exportFormat: "",
          paymentType: ""
        });
        const rules = vueExports$1.ref({
          dateRange: [
            {
              required: true,
              message: "Date range is required",
              trigger: "change"
            }
          ]
        });
        const submit = () => {
          if (!formRef.value) {
            return;
          }
          formRef.value.validate((valid) => {
            if (valid) {
              loading2.value = true;
              setTimeout(() => {
                loading2.value = false;
                Swal.fire({
                  text: "Form has been successfully submitted!",
                  icon: "success",
                  buttonsStyling: false,
                  confirmButtonText: "Ok, got it!",
                  heightAuto: false,
                  customClass: {
                    confirmButton: "btn btn-primary"
                  }
                }).then(() => {
                  window.location.reload();
                });
              }, 2e3);
            } else {
              Swal.fire({
                text: "Sorry, looks like there are some errors detected, please try again.",
                icon: "error",
                buttonsStyling: false,
                confirmButtonText: "Ok, got it!",
                heightAuto: false,
                customClass: {
                  confirmButton: "btn btn-primary"
                }
              });
              return false;
            }
          });
        };
        return {
          ...vueExports$1.toRefs(state),
          formData,
          rules,
          submit,
          formRef,
          loading: loading2,
          getAssetPath
        };
      }
    });
    const ExportCustomerModal_vue_vue_type_style_index_0_lang = "";
    function _sfc_ssrRender$38(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_el_form = vueExports$1.resolveComponent("el-form");
      const _component_el_form_item = vueExports$1.resolveComponent("el-form-item");
      const _component_el_date_picker = vueExports$1.resolveComponent("el-date-picker");
      const _component_el_select = vueExports$1.resolveComponent("el-select");
      const _component_el_option = vueExports$1.resolveComponent("el-option");
      const _component_el_radio = vueExports$1.resolveComponent("el-radio");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        id: "kt_customers_export_modal",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-650px"><div class="modal-content"><div class="modal-header"><h2 class="fw-bold">Export Customers</h2><div id="kt_customers_export_close" data-bs-dismiss="modal" class="btn btn-icon btn-sm btn-active-icon-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div><div class="modal-body scroll-y mx-5 mx-xl-15 my-7">`);
      _push(ssrRenderComponent(_component_el_form, {
        onSubmit: ($event) => _ctx.submit(),
        model: _ctx.formData,
        rules: _ctx.rules,
        ref: "formRef"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="fv-row mb-10"${_scopeId}><label class="fs-5 fw-semibold form-label mb-5"${_scopeId}>Select Date Range:</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "name" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_date_picker, {
                    type: "daterange",
                    modelValue: _ctx.formData.dateRange,
                    "onUpdate:modelValue": ($event) => _ctx.formData.dateRange = $event
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_date_picker, {
                      type: "daterange",
                      modelValue: _ctx.formData.dateRange,
                      "onUpdate:modelValue": ($event) => _ctx.formData.dateRange = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="fv-row mb-10"${_scopeId}><label class="fs-5 fw-semibold form-label mb-5"${_scopeId}>Select Export Format:</label>`);
            _push2(ssrRenderComponent(_component_el_select, {
              modelValue: _ctx.formData.exportFormat,
              "onUpdate:modelValue": ($event) => _ctx.formData.exportFormat = $event,
              class: "d-block"
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_option, {
                    value: "excel",
                    key: "excel",
                    label: "Excel"
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_el_option, {
                    value: "pdf",
                    key: "pdf",
                    label: "PDF"
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_el_option, {
                    value: "cvs",
                    key: "cvs",
                    label: "CVS"
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_el_option, {
                    value: "zip",
                    key: "zip",
                    label: "ZIP"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_option, {
                      value: "excel",
                      key: "excel",
                      label: "Excel"
                    }),
                    vueExports$1.createVNode(_component_el_option, {
                      value: "pdf",
                      key: "pdf",
                      label: "PDF"
                    }),
                    vueExports$1.createVNode(_component_el_option, {
                      value: "cvs",
                      key: "cvs",
                      label: "CVS"
                    }),
                    vueExports$1.createVNode(_component_el_option, {
                      value: "zip",
                      key: "zip",
                      label: "ZIP"
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="row fv-row mb-15"${_scopeId}><label class="fs-5 fw-semibold form-label mb-5"${_scopeId}>Payment Type:</label><div class="d-flex flex-column"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_el_radio, {
              class: "mb-5",
              modelValue: _ctx.formData.paymentType,
              "onUpdate:modelValue": ($event) => _ctx.formData.paymentType = $event,
              label: "All"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_el_radio, {
              class: "mb-5",
              modelValue: _ctx.formData.paymentType,
              "onUpdate:modelValue": ($event) => _ctx.formData.paymentType = $event,
              label: "Visa"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_el_radio, {
              class: "mb-5",
              modelValue: _ctx.formData.paymentType,
              "onUpdate:modelValue": ($event) => _ctx.formData.paymentType = $event,
              label: "Mastercard"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_el_radio, {
              modelValue: _ctx.formData.paymentType,
              "onUpdate:modelValue": ($event) => _ctx.formData.paymentType = $event,
              label: "American Express"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="text-center"${_scopeId}><button type="reset" id="kt_customers_export_cancel" class="btn btn-light me-3"${_scopeId}> Discard </button><button${ssrRenderAttr("data-kt-indicator", _ctx.loading ? "on" : null)} type="submit" class="btn btn-lg btn-primary"${_scopeId}>`);
            if (!_ctx.loading) {
              _push2(`<span class="indicator-label"${_scopeId}> Submit `);
              _push2(ssrRenderComponent(_component_KTIcon, {
                "icon-name": "arrow-right",
                "icon-class": "fs-3 ms-2 me-0"
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.loading) {
              _push2(`<span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "fv-row mb-10" }, [
                vueExports$1.createVNode("label", { class: "fs-5 fw-semibold form-label mb-5" }, "Select Date Range:"),
                vueExports$1.createVNode(_component_el_form_item, { prop: "name" }, {
                  default: vueExports$1.withCtx(() => [
                    vueExports$1.createVNode(_component_el_date_picker, {
                      type: "daterange",
                      modelValue: _ctx.formData.dateRange,
                      "onUpdate:modelValue": ($event) => _ctx.formData.dateRange = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ]),
                  _: 1
                })
              ]),
              vueExports$1.createVNode("div", { class: "fv-row mb-10" }, [
                vueExports$1.createVNode("label", { class: "fs-5 fw-semibold form-label mb-5" }, "Select Export Format:"),
                vueExports$1.createVNode(_component_el_select, {
                  modelValue: _ctx.formData.exportFormat,
                  "onUpdate:modelValue": ($event) => _ctx.formData.exportFormat = $event,
                  class: "d-block"
                }, {
                  default: vueExports$1.withCtx(() => [
                    vueExports$1.createVNode(_component_el_option, {
                      value: "excel",
                      key: "excel",
                      label: "Excel"
                    }),
                    vueExports$1.createVNode(_component_el_option, {
                      value: "pdf",
                      key: "pdf",
                      label: "PDF"
                    }),
                    vueExports$1.createVNode(_component_el_option, {
                      value: "cvs",
                      key: "cvs",
                      label: "CVS"
                    }),
                    vueExports$1.createVNode(_component_el_option, {
                      value: "zip",
                      key: "zip",
                      label: "ZIP"
                    })
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue"])
              ]),
              vueExports$1.createVNode("div", { class: "row fv-row mb-15" }, [
                vueExports$1.createVNode("label", { class: "fs-5 fw-semibold form-label mb-5" }, "Payment Type:"),
                vueExports$1.createVNode("div", { class: "d-flex flex-column" }, [
                  vueExports$1.createVNode(_component_el_radio, {
                    class: "mb-5",
                    modelValue: _ctx.formData.paymentType,
                    "onUpdate:modelValue": ($event) => _ctx.formData.paymentType = $event,
                    label: "All"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vueExports$1.createVNode(_component_el_radio, {
                    class: "mb-5",
                    modelValue: _ctx.formData.paymentType,
                    "onUpdate:modelValue": ($event) => _ctx.formData.paymentType = $event,
                    label: "Visa"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vueExports$1.createVNode(_component_el_radio, {
                    class: "mb-5",
                    modelValue: _ctx.formData.paymentType,
                    "onUpdate:modelValue": ($event) => _ctx.formData.paymentType = $event,
                    label: "Mastercard"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vueExports$1.createVNode(_component_el_radio, {
                    modelValue: _ctx.formData.paymentType,
                    "onUpdate:modelValue": ($event) => _ctx.formData.paymentType = $event,
                    label: "American Express"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "text-center" }, [
                vueExports$1.createVNode("button", {
                  type: "reset",
                  id: "kt_customers_export_cancel",
                  class: "btn btn-light me-3"
                }, " Discard "),
                vueExports$1.createVNode("button", {
                  "data-kt-indicator": _ctx.loading ? "on" : null,
                  type: "submit",
                  class: "btn btn-lg btn-primary"
                }, [
                  !_ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                    key: 0,
                    class: "indicator-label"
                  }, [
                    vueExports$1.createTextVNode(" Submit "),
                    vueExports$1.createVNode(_component_KTIcon, {
                      "icon-name": "arrow-right",
                      "icon-class": "fs-3 ms-2 me-0"
                    })
                  ])) : vueExports$1.createCommentVNode("", true),
                  _ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                    key: 1,
                    class: "indicator-progress"
                  }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])) : vueExports$1.createCommentVNode("", true)
                ], 8, ["data-kt-indicator"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div>`);
    }
    const _sfc_setup$3s = _sfc_main$3s.setup;
    _sfc_main$3s.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/forms/ExportCustomerModal.vue");
      return _sfc_setup$3s ? _sfc_setup$3s(props, ctx) : void 0;
    };
    const ExportCustomerModal = /* @__PURE__ */ _export_sfc(_sfc_main$3s, [["ssrRender", _sfc_ssrRender$38]]);
    const __vite_glob_0_59 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ExportCustomerModal
    }, Symbol.toStringTag, { value: "Module" }));
    var top = "top";
    var bottom = "bottom";
    var right$1 = "right";
    var left$1 = "left";
    var auto = "auto";
    var basePlacements = [top, bottom, right$1, left$1];
    var start = "start";
    var end = "end";
    var clippingParents = "clippingParents";
    var viewport = "viewport";
    var popper = "popper";
    var reference = "reference";
    var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
      return acc.concat([placement + "-" + start, placement + "-" + end]);
    }, []);
    var placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
      return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
    }, []);
    var beforeRead = "beforeRead";
    var read = "read";
    var afterRead = "afterRead";
    var beforeMain = "beforeMain";
    var main = "main";
    var afterMain = "afterMain";
    var beforeWrite = "beforeWrite";
    var write = "write";
    var afterWrite = "afterWrite";
    var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];
    function getNodeName(element) {
      return element ? (element.nodeName || "").toLowerCase() : null;
    }
    function getWindow(node) {
      if (node == null) {
        return window;
      }
      if (node.toString() !== "[object Window]") {
        var ownerDocument = node.ownerDocument;
        return ownerDocument ? ownerDocument.defaultView || window : window;
      }
      return node;
    }
    function isElement$1(node) {
      var OwnElement = getWindow(node).Element;
      return node instanceof OwnElement || node instanceof Element;
    }
    function isHTMLElement(node) {
      var OwnElement = getWindow(node).HTMLElement;
      return node instanceof OwnElement || node instanceof HTMLElement;
    }
    function isShadowRoot(node) {
      if (typeof ShadowRoot === "undefined") {
        return false;
      }
      var OwnElement = getWindow(node).ShadowRoot;
      return node instanceof OwnElement || node instanceof ShadowRoot;
    }
    function applyStyles(_ref) {
      var state = _ref.state;
      Object.keys(state.elements).forEach(function(name) {
        var style = state.styles[name] || {};
        var attributes = state.attributes[name] || {};
        var element = state.elements[name];
        if (!isHTMLElement(element) || !getNodeName(element)) {
          return;
        }
        Object.assign(element.style, style);
        Object.keys(attributes).forEach(function(name2) {
          var value = attributes[name2];
          if (value === false) {
            element.removeAttribute(name2);
          } else {
            element.setAttribute(name2, value === true ? "" : value);
          }
        });
      });
    }
    function effect$2(_ref2) {
      var state = _ref2.state;
      var initialStyles = {
        popper: {
          position: state.options.strategy,
          left: "0",
          top: "0",
          margin: "0"
        },
        arrow: {
          position: "absolute"
        },
        reference: {}
      };
      Object.assign(state.elements.popper.style, initialStyles.popper);
      state.styles = initialStyles;
      if (state.elements.arrow) {
        Object.assign(state.elements.arrow.style, initialStyles.arrow);
      }
      return function() {
        Object.keys(state.elements).forEach(function(name) {
          var element = state.elements[name];
          var attributes = state.attributes[name] || {};
          var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
          var style = styleProperties.reduce(function(style2, property) {
            style2[property] = "";
            return style2;
          }, {});
          if (!isHTMLElement(element) || !getNodeName(element)) {
            return;
          }
          Object.assign(element.style, style);
          Object.keys(attributes).forEach(function(attribute) {
            element.removeAttribute(attribute);
          });
        });
      };
    }
    const applyStyles$1 = {
      name: "applyStyles",
      enabled: true,
      phase: "write",
      fn: applyStyles,
      effect: effect$2,
      requires: ["computeStyles"]
    };
    function getBasePlacement(placement) {
      return placement.split("-")[0];
    }
    var max = Math.max;
    var min = Math.min;
    var round = Math.round;
    function getUAString() {
      var uaData = navigator.userAgentData;
      if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
        return uaData.brands.map(function(item) {
          return item.brand + "/" + item.version;
        }).join(" ");
      }
      return navigator.userAgent;
    }
    function isLayoutViewport() {
      return !/^((?!chrome|android).)*safari/i.test(getUAString());
    }
    function getBoundingClientRect(element, includeScale, isFixedStrategy) {
      if (includeScale === void 0) {
        includeScale = false;
      }
      if (isFixedStrategy === void 0) {
        isFixedStrategy = false;
      }
      var clientRect = element.getBoundingClientRect();
      var scaleX = 1;
      var scaleY = 1;
      if (includeScale && isHTMLElement(element)) {
        scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
        scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
      }
      var _ref = isElement$1(element) ? getWindow(element) : window, visualViewport = _ref.visualViewport;
      var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
      var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
      var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
      var width = clientRect.width / scaleX;
      var height = clientRect.height / scaleY;
      return {
        width,
        height,
        top: y,
        right: x + width,
        bottom: y + height,
        left: x,
        x,
        y
      };
    }
    function getLayoutRect(element) {
      var clientRect = getBoundingClientRect(element);
      var width = element.offsetWidth;
      var height = element.offsetHeight;
      if (Math.abs(clientRect.width - width) <= 1) {
        width = clientRect.width;
      }
      if (Math.abs(clientRect.height - height) <= 1) {
        height = clientRect.height;
      }
      return {
        x: element.offsetLeft,
        y: element.offsetTop,
        width,
        height
      };
    }
    function contains(parent, child) {
      var rootNode = child.getRootNode && child.getRootNode();
      if (parent.contains(child)) {
        return true;
      } else if (rootNode && isShadowRoot(rootNode)) {
        var next = child;
        do {
          if (next && parent.isSameNode(next)) {
            return true;
          }
          next = next.parentNode || next.host;
        } while (next);
      }
      return false;
    }
    function getComputedStyle$1(element) {
      return getWindow(element).getComputedStyle(element);
    }
    function isTableElement(element) {
      return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
    }
    function getDocumentElement(element) {
      return ((isElement$1(element) ? element.ownerDocument : (
        // $FlowFixMe[prop-missing]
        element.document
      )) || window.document).documentElement;
    }
    function getParentNode(element) {
      if (getNodeName(element) === "html") {
        return element;
      }
      return (
        // this is a quicker (but less type safe) way to save quite some bytes from the bundle
        // $FlowFixMe[incompatible-return]
        // $FlowFixMe[prop-missing]
        element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
        element.parentNode || // DOM Element detected
        (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
        // $FlowFixMe[incompatible-call]: HTMLElement is a Node
        getDocumentElement(element)
      );
    }
    function getTrueOffsetParent(element) {
      if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
      getComputedStyle$1(element).position === "fixed") {
        return null;
      }
      return element.offsetParent;
    }
    function getContainingBlock(element) {
      var isFirefox = /firefox/i.test(getUAString());
      var isIE = /Trident/i.test(getUAString());
      if (isIE && isHTMLElement(element)) {
        var elementCss = getComputedStyle$1(element);
        if (elementCss.position === "fixed") {
          return null;
        }
      }
      var currentNode = getParentNode(element);
      if (isShadowRoot(currentNode)) {
        currentNode = currentNode.host;
      }
      while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
        var css2 = getComputedStyle$1(currentNode);
        if (css2.transform !== "none" || css2.perspective !== "none" || css2.contain === "paint" || ["transform", "perspective"].indexOf(css2.willChange) !== -1 || isFirefox && css2.willChange === "filter" || isFirefox && css2.filter && css2.filter !== "none") {
          return currentNode;
        } else {
          currentNode = currentNode.parentNode;
        }
      }
      return null;
    }
    function getOffsetParent(element) {
      var window2 = getWindow(element);
      var offsetParent = getTrueOffsetParent(element);
      while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === "static") {
        offsetParent = getTrueOffsetParent(offsetParent);
      }
      if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle$1(offsetParent).position === "static")) {
        return window2;
      }
      return offsetParent || getContainingBlock(element) || window2;
    }
    function getMainAxisFromPlacement(placement) {
      return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
    }
    function within(min$1, value, max$1) {
      return max(min$1, min(value, max$1));
    }
    function withinMaxClamp(min2, value, max2) {
      var v = within(min2, value, max2);
      return v > max2 ? max2 : v;
    }
    function getFreshSideObject() {
      return {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
      };
    }
    function mergePaddingObject(paddingObject) {
      return Object.assign({}, getFreshSideObject(), paddingObject);
    }
    function expandToHashMap(value, keys) {
      return keys.reduce(function(hashMap, key2) {
        hashMap[key2] = value;
        return hashMap;
      }, {});
    }
    var toPaddingObject = function toPaddingObject2(padding, state) {
      padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
        placement: state.placement
      })) : padding;
      return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
    };
    function arrow(_ref) {
      var _state$modifiersData$;
      var state = _ref.state, name = _ref.name, options = _ref.options;
      var arrowElement = state.elements.arrow;
      var popperOffsets2 = state.modifiersData.popperOffsets;
      var basePlacement = getBasePlacement(state.placement);
      var axis = getMainAxisFromPlacement(basePlacement);
      var isVertical = [left$1, right$1].indexOf(basePlacement) >= 0;
      var len = isVertical ? "height" : "width";
      if (!arrowElement || !popperOffsets2) {
        return;
      }
      var paddingObject = toPaddingObject(options.padding, state);
      var arrowRect = getLayoutRect(arrowElement);
      var minProp = axis === "y" ? top : left$1;
      var maxProp = axis === "y" ? bottom : right$1;
      var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
      var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
      var arrowOffsetParent = getOffsetParent(arrowElement);
      var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
      var centerToReference = endDiff / 2 - startDiff / 2;
      var min2 = paddingObject[minProp];
      var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
      var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
      var offset2 = within(min2, center, max2);
      var axisProp = axis;
      state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
    }
    function effect$1(_ref2) {
      var state = _ref2.state, options = _ref2.options;
      var _options$element = options.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
      if (arrowElement == null) {
        return;
      }
      if (typeof arrowElement === "string") {
        arrowElement = state.elements.popper.querySelector(arrowElement);
        if (!arrowElement) {
          return;
        }
      }
      if (!contains(state.elements.popper, arrowElement)) {
        return;
      }
      state.elements.arrow = arrowElement;
    }
    const arrow$1 = {
      name: "arrow",
      enabled: true,
      phase: "main",
      fn: arrow,
      effect: effect$1,
      requires: ["popperOffsets"],
      requiresIfExists: ["preventOverflow"]
    };
    function getVariation(placement) {
      return placement.split("-")[1];
    }
    var unsetSides = {
      top: "auto",
      right: "auto",
      bottom: "auto",
      left: "auto"
    };
    function roundOffsetsByDPR(_ref, win) {
      var x = _ref.x, y = _ref.y;
      var dpr = win.devicePixelRatio || 1;
      return {
        x: round(x * dpr) / dpr || 0,
        y: round(y * dpr) / dpr || 0
      };
    }
    function mapToStyles(_ref2) {
      var _Object$assign2;
      var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
      var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;
      var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
        x,
        y
      }) : {
        x,
        y
      };
      x = _ref3.x;
      y = _ref3.y;
      var hasX = offsets.hasOwnProperty("x");
      var hasY = offsets.hasOwnProperty("y");
      var sideX = left$1;
      var sideY = top;
      var win = window;
      if (adaptive) {
        var offsetParent = getOffsetParent(popper2);
        var heightProp = "clientHeight";
        var widthProp = "clientWidth";
        if (offsetParent === getWindow(popper2)) {
          offsetParent = getDocumentElement(popper2);
          if (getComputedStyle$1(offsetParent).position !== "static" && position === "absolute") {
            heightProp = "scrollHeight";
            widthProp = "scrollWidth";
          }
        }
        offsetParent = offsetParent;
        if (placement === top || (placement === left$1 || placement === right$1) && variation === end) {
          sideY = bottom;
          var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : (
            // $FlowFixMe[prop-missing]
            offsetParent[heightProp]
          );
          y -= offsetY - popperRect.height;
          y *= gpuAcceleration ? 1 : -1;
        }
        if (placement === left$1 || (placement === top || placement === bottom) && variation === end) {
          sideX = right$1;
          var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : (
            // $FlowFixMe[prop-missing]
            offsetParent[widthProp]
          );
          x -= offsetX - popperRect.width;
          x *= gpuAcceleration ? 1 : -1;
        }
      }
      var commonStyles = Object.assign({
        position
      }, adaptive && unsetSides);
      var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
        x,
        y
      }, getWindow(popper2)) : {
        x,
        y
      };
      x = _ref4.x;
      y = _ref4.y;
      if (gpuAcceleration) {
        var _Object$assign;
        return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
      }
      return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : "", _Object$assign2[sideX] = hasX ? x + "px" : "", _Object$assign2.transform = "", _Object$assign2));
    }
    function computeStyles(_ref5) {
      var state = _ref5.state, options = _ref5.options;
      var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
      var commonStyles = {
        placement: getBasePlacement(state.placement),
        variation: getVariation(state.placement),
        popper: state.elements.popper,
        popperRect: state.rects.popper,
        gpuAcceleration,
        isFixed: state.options.strategy === "fixed"
      };
      if (state.modifiersData.popperOffsets != null) {
        state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
          offsets: state.modifiersData.popperOffsets,
          position: state.options.strategy,
          adaptive,
          roundOffsets
        })));
      }
      if (state.modifiersData.arrow != null) {
        state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
          offsets: state.modifiersData.arrow,
          position: "absolute",
          adaptive: false,
          roundOffsets
        })));
      }
      state.attributes.popper = Object.assign({}, state.attributes.popper, {
        "data-popper-placement": state.placement
      });
    }
    const computeStyles$1 = {
      name: "computeStyles",
      enabled: true,
      phase: "beforeWrite",
      fn: computeStyles,
      data: {}
    };
    var passive = {
      passive: true
    };
    function effect(_ref) {
      var state = _ref.state, instance = _ref.instance, options = _ref.options;
      var _options$scroll = options.scroll, scroll2 = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;
      var window2 = getWindow(state.elements.popper);
      var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
      if (scroll2) {
        scrollParents.forEach(function(scrollParent) {
          scrollParent.addEventListener("scroll", instance.update, passive);
        });
      }
      if (resize) {
        window2.addEventListener("resize", instance.update, passive);
      }
      return function() {
        if (scroll2) {
          scrollParents.forEach(function(scrollParent) {
            scrollParent.removeEventListener("scroll", instance.update, passive);
          });
        }
        if (resize) {
          window2.removeEventListener("resize", instance.update, passive);
        }
      };
    }
    const eventListeners = {
      name: "eventListeners",
      enabled: true,
      phase: "write",
      fn: function fn() {
      },
      effect,
      data: {}
    };
    var hash$1 = {
      left: "right",
      right: "left",
      bottom: "top",
      top: "bottom"
    };
    function getOppositePlacement(placement) {
      return placement.replace(/left|right|bottom|top/g, function(matched) {
        return hash$1[matched];
      });
    }
    var hash = {
      start: "end",
      end: "start"
    };
    function getOppositeVariationPlacement(placement) {
      return placement.replace(/start|end/g, function(matched) {
        return hash[matched];
      });
    }
    function getWindowScroll(node) {
      var win = getWindow(node);
      var scrollLeft = win.pageXOffset;
      var scrollTop = win.pageYOffset;
      return {
        scrollLeft,
        scrollTop
      };
    }
    function getWindowScrollBarX(element) {
      return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
    }
    function getViewportRect(element, strategy) {
      var win = getWindow(element);
      var html2 = getDocumentElement(element);
      var visualViewport = win.visualViewport;
      var width = html2.clientWidth;
      var height = html2.clientHeight;
      var x = 0;
      var y = 0;
      if (visualViewport) {
        width = visualViewport.width;
        height = visualViewport.height;
        var layoutViewport = isLayoutViewport();
        if (layoutViewport || !layoutViewport && strategy === "fixed") {
          x = visualViewport.offsetLeft;
          y = visualViewport.offsetTop;
        }
      }
      return {
        width,
        height,
        x: x + getWindowScrollBarX(element),
        y
      };
    }
    function getDocumentRect(element) {
      var _element$ownerDocumen;
      var html2 = getDocumentElement(element);
      var winScroll = getWindowScroll(element);
      var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
      var width = max(html2.scrollWidth, html2.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
      var height = max(html2.scrollHeight, html2.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
      var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
      var y = -winScroll.scrollTop;
      if (getComputedStyle$1(body || html2).direction === "rtl") {
        x += max(html2.clientWidth, body ? body.clientWidth : 0) - width;
      }
      return {
        width,
        height,
        x,
        y
      };
    }
    function isScrollParent(element) {
      var _getComputedStyle = getComputedStyle$1(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
      return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
    }
    function getScrollParent(node) {
      if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
        return node.ownerDocument.body;
      }
      if (isHTMLElement(node) && isScrollParent(node)) {
        return node;
      }
      return getScrollParent(getParentNode(node));
    }
    function listScrollParents(element, list) {
      var _element$ownerDocumen;
      if (list === void 0) {
        list = [];
      }
      var scrollParent = getScrollParent(element);
      var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
      var win = getWindow(scrollParent);
      var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
      var updatedList = list.concat(target);
      return isBody ? updatedList : (
        // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
        updatedList.concat(listScrollParents(getParentNode(target)))
      );
    }
    function rectToClientRect(rect) {
      return Object.assign({}, rect, {
        left: rect.x,
        top: rect.y,
        right: rect.x + rect.width,
        bottom: rect.y + rect.height
      });
    }
    function getInnerBoundingClientRect(element, strategy) {
      var rect = getBoundingClientRect(element, false, strategy === "fixed");
      rect.top = rect.top + element.clientTop;
      rect.left = rect.left + element.clientLeft;
      rect.bottom = rect.top + element.clientHeight;
      rect.right = rect.left + element.clientWidth;
      rect.width = element.clientWidth;
      rect.height = element.clientHeight;
      rect.x = rect.left;
      rect.y = rect.top;
      return rect;
    }
    function getClientRectFromMixedType(element, clippingParent, strategy) {
      return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement$1(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
    }
    function getClippingParents(element) {
      var clippingParents2 = listScrollParents(getParentNode(element));
      var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle$1(element).position) >= 0;
      var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
      if (!isElement$1(clipperElement)) {
        return [];
      }
      return clippingParents2.filter(function(clippingParent) {
        return isElement$1(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
      });
    }
    function getClippingRect(element, boundary, rootBoundary, strategy) {
      var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
      var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
      var firstClippingParent = clippingParents2[0];
      var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
        var rect = getClientRectFromMixedType(element, clippingParent, strategy);
        accRect.top = max(rect.top, accRect.top);
        accRect.right = min(rect.right, accRect.right);
        accRect.bottom = min(rect.bottom, accRect.bottom);
        accRect.left = max(rect.left, accRect.left);
        return accRect;
      }, getClientRectFromMixedType(element, firstClippingParent, strategy));
      clippingRect.width = clippingRect.right - clippingRect.left;
      clippingRect.height = clippingRect.bottom - clippingRect.top;
      clippingRect.x = clippingRect.left;
      clippingRect.y = clippingRect.top;
      return clippingRect;
    }
    function computeOffsets(_ref) {
      var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
      var basePlacement = placement ? getBasePlacement(placement) : null;
      var variation = placement ? getVariation(placement) : null;
      var commonX = reference2.x + reference2.width / 2 - element.width / 2;
      var commonY = reference2.y + reference2.height / 2 - element.height / 2;
      var offsets;
      switch (basePlacement) {
        case top:
          offsets = {
            x: commonX,
            y: reference2.y - element.height
          };
          break;
        case bottom:
          offsets = {
            x: commonX,
            y: reference2.y + reference2.height
          };
          break;
        case right$1:
          offsets = {
            x: reference2.x + reference2.width,
            y: commonY
          };
          break;
        case left$1:
          offsets = {
            x: reference2.x - element.width,
            y: commonY
          };
          break;
        default:
          offsets = {
            x: reference2.x,
            y: reference2.y
          };
      }
      var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
      if (mainAxis != null) {
        var len = mainAxis === "y" ? "height" : "width";
        switch (variation) {
          case start:
            offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
            break;
          case end:
            offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
            break;
        }
      }
      return offsets;
    }
    function detectOverflow(state, options) {
      if (options === void 0) {
        options = {};
      }
      var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
      var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
      var altContext = elementContext === popper ? reference : popper;
      var popperRect = state.rects.popper;
      var element = state.elements[altBoundary ? altContext : elementContext];
      var clippingClientRect = getClippingRect(isElement$1(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
      var referenceClientRect = getBoundingClientRect(state.elements.reference);
      var popperOffsets2 = computeOffsets({
        reference: referenceClientRect,
        element: popperRect,
        strategy: "absolute",
        placement
      });
      var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
      var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
      var overflowOffsets = {
        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
        right: elementClientRect.right - clippingClientRect.right + paddingObject.right
      };
      var offsetData = state.modifiersData.offset;
      if (elementContext === popper && offsetData) {
        var offset2 = offsetData[placement];
        Object.keys(overflowOffsets).forEach(function(key2) {
          var multiply = [right$1, bottom].indexOf(key2) >= 0 ? 1 : -1;
          var axis = [top, bottom].indexOf(key2) >= 0 ? "y" : "x";
          overflowOffsets[key2] += offset2[axis] * multiply;
        });
      }
      return overflowOffsets;
    }
    function computeAutoPlacement(state, options) {
      if (options === void 0) {
        options = {};
      }
      var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
      var variation = getVariation(placement);
      var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
        return getVariation(placement2) === variation;
      }) : basePlacements;
      var allowedPlacements = placements$1.filter(function(placement2) {
        return allowedAutoPlacements.indexOf(placement2) >= 0;
      });
      if (allowedPlacements.length === 0) {
        allowedPlacements = placements$1;
      }
      var overflows = allowedPlacements.reduce(function(acc, placement2) {
        acc[placement2] = detectOverflow(state, {
          placement: placement2,
          boundary,
          rootBoundary,
          padding
        })[getBasePlacement(placement2)];
        return acc;
      }, {});
      return Object.keys(overflows).sort(function(a, b) {
        return overflows[a] - overflows[b];
      });
    }
    function getExpandedFallbackPlacements(placement) {
      if (getBasePlacement(placement) === auto) {
        return [];
      }
      var oppositePlacement = getOppositePlacement(placement);
      return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
    }
    function flip(_ref) {
      var state = _ref.state, options = _ref.options, name = _ref.name;
      if (state.modifiersData[name]._skip) {
        return;
      }
      var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;
      var preferredPlacement = state.options.placement;
      var basePlacement = getBasePlacement(preferredPlacement);
      var isBasePlacement = basePlacement === preferredPlacement;
      var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
      var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
        return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
          placement: placement2,
          boundary,
          rootBoundary,
          padding,
          flipVariations,
          allowedAutoPlacements
        }) : placement2);
      }, []);
      var referenceRect = state.rects.reference;
      var popperRect = state.rects.popper;
      var checksMap = /* @__PURE__ */ new Map();
      var makeFallbackChecks = true;
      var firstFittingPlacement = placements2[0];
      for (var i = 0; i < placements2.length; i++) {
        var placement = placements2[i];
        var _basePlacement = getBasePlacement(placement);
        var isStartVariation = getVariation(placement) === start;
        var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
        var len = isVertical ? "width" : "height";
        var overflow = detectOverflow(state, {
          placement,
          boundary,
          rootBoundary,
          altBoundary,
          padding
        });
        var mainVariationSide = isVertical ? isStartVariation ? right$1 : left$1 : isStartVariation ? bottom : top;
        if (referenceRect[len] > popperRect[len]) {
          mainVariationSide = getOppositePlacement(mainVariationSide);
        }
        var altVariationSide = getOppositePlacement(mainVariationSide);
        var checks = [];
        if (checkMainAxis) {
          checks.push(overflow[_basePlacement] <= 0);
        }
        if (checkAltAxis) {
          checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
        }
        if (checks.every(function(check2) {
          return check2;
        })) {
          firstFittingPlacement = placement;
          makeFallbackChecks = false;
          break;
        }
        checksMap.set(placement, checks);
      }
      if (makeFallbackChecks) {
        var numberOfChecks = flipVariations ? 3 : 1;
        var _loop = function _loop2(_i2) {
          var fittingPlacement = placements2.find(function(placement2) {
            var checks2 = checksMap.get(placement2);
            if (checks2) {
              return checks2.slice(0, _i2).every(function(check2) {
                return check2;
              });
            }
          });
          if (fittingPlacement) {
            firstFittingPlacement = fittingPlacement;
            return "break";
          }
        };
        for (var _i = numberOfChecks; _i > 0; _i--) {
          var _ret = _loop(_i);
          if (_ret === "break")
            break;
        }
      }
      if (state.placement !== firstFittingPlacement) {
        state.modifiersData[name]._skip = true;
        state.placement = firstFittingPlacement;
        state.reset = true;
      }
    }
    const flip$1 = {
      name: "flip",
      enabled: true,
      phase: "main",
      fn: flip,
      requiresIfExists: ["offset"],
      data: {
        _skip: false
      }
    };
    function getSideOffsets(overflow, rect, preventedOffsets) {
      if (preventedOffsets === void 0) {
        preventedOffsets = {
          x: 0,
          y: 0
        };
      }
      return {
        top: overflow.top - rect.height - preventedOffsets.y,
        right: overflow.right - rect.width + preventedOffsets.x,
        bottom: overflow.bottom - rect.height + preventedOffsets.y,
        left: overflow.left - rect.width - preventedOffsets.x
      };
    }
    function isAnySideFullyClipped(overflow) {
      return [top, right$1, bottom, left$1].some(function(side) {
        return overflow[side] >= 0;
      });
    }
    function hide(_ref) {
      var state = _ref.state, name = _ref.name;
      var referenceRect = state.rects.reference;
      var popperRect = state.rects.popper;
      var preventedOffsets = state.modifiersData.preventOverflow;
      var referenceOverflow = detectOverflow(state, {
        elementContext: "reference"
      });
      var popperAltOverflow = detectOverflow(state, {
        altBoundary: true
      });
      var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
      var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
      var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
      var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
      state.modifiersData[name] = {
        referenceClippingOffsets,
        popperEscapeOffsets,
        isReferenceHidden,
        hasPopperEscaped
      };
      state.attributes.popper = Object.assign({}, state.attributes.popper, {
        "data-popper-reference-hidden": isReferenceHidden,
        "data-popper-escaped": hasPopperEscaped
      });
    }
    const hide$1 = {
      name: "hide",
      enabled: true,
      phase: "main",
      requiresIfExists: ["preventOverflow"],
      fn: hide
    };
    function distanceAndSkiddingToXY(placement, rects, offset2) {
      var basePlacement = getBasePlacement(placement);
      var invertDistance = [left$1, top].indexOf(basePlacement) >= 0 ? -1 : 1;
      var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
        placement
      })) : offset2, skidding = _ref[0], distance = _ref[1];
      skidding = skidding || 0;
      distance = (distance || 0) * invertDistance;
      return [left$1, right$1].indexOf(basePlacement) >= 0 ? {
        x: distance,
        y: skidding
      } : {
        x: skidding,
        y: distance
      };
    }
    function offset(_ref2) {
      var state = _ref2.state, options = _ref2.options, name = _ref2.name;
      var _options$offset = options.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
      var data2 = placements.reduce(function(acc, placement) {
        acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
        return acc;
      }, {});
      var _data$state$placement = data2[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;
      if (state.modifiersData.popperOffsets != null) {
        state.modifiersData.popperOffsets.x += x;
        state.modifiersData.popperOffsets.y += y;
      }
      state.modifiersData[name] = data2;
    }
    const offset$1 = {
      name: "offset",
      enabled: true,
      phase: "main",
      requires: ["popperOffsets"],
      fn: offset
    };
    function popperOffsets(_ref) {
      var state = _ref.state, name = _ref.name;
      state.modifiersData[name] = computeOffsets({
        reference: state.rects.reference,
        element: state.rects.popper,
        strategy: "absolute",
        placement: state.placement
      });
    }
    const popperOffsets$1 = {
      name: "popperOffsets",
      enabled: true,
      phase: "read",
      fn: popperOffsets,
      data: {}
    };
    function getAltAxis(axis) {
      return axis === "x" ? "y" : "x";
    }
    function preventOverflow(_ref) {
      var state = _ref.state, options = _ref.options, name = _ref.name;
      var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
      var overflow = detectOverflow(state, {
        boundary,
        rootBoundary,
        padding,
        altBoundary
      });
      var basePlacement = getBasePlacement(state.placement);
      var variation = getVariation(state.placement);
      var isBasePlacement = !variation;
      var mainAxis = getMainAxisFromPlacement(basePlacement);
      var altAxis = getAltAxis(mainAxis);
      var popperOffsets2 = state.modifiersData.popperOffsets;
      var referenceRect = state.rects.reference;
      var popperRect = state.rects.popper;
      var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
        placement: state.placement
      })) : tetherOffset;
      var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
        mainAxis: tetherOffsetValue,
        altAxis: tetherOffsetValue
      } : Object.assign({
        mainAxis: 0,
        altAxis: 0
      }, tetherOffsetValue);
      var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
      var data2 = {
        x: 0,
        y: 0
      };
      if (!popperOffsets2) {
        return;
      }
      if (checkMainAxis) {
        var _offsetModifierState$;
        var mainSide = mainAxis === "y" ? top : left$1;
        var altSide = mainAxis === "y" ? bottom : right$1;
        var len = mainAxis === "y" ? "height" : "width";
        var offset2 = popperOffsets2[mainAxis];
        var min$1 = offset2 + overflow[mainSide];
        var max$1 = offset2 - overflow[altSide];
        var additive = tether ? -popperRect[len] / 2 : 0;
        var minLen = variation === start ? referenceRect[len] : popperRect[len];
        var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
        var arrowElement = state.elements.arrow;
        var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
          width: 0,
          height: 0
        };
        var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
        var arrowPaddingMin = arrowPaddingObject[mainSide];
        var arrowPaddingMax = arrowPaddingObject[altSide];
        var arrowLen = within(0, referenceRect[len], arrowRect[len]);
        var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
        var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
        var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
        var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
        var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
        var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
        var tetherMax = offset2 + maxOffset - offsetModifierValue;
        var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset2, tether ? max(max$1, tetherMax) : max$1);
        popperOffsets2[mainAxis] = preventedOffset;
        data2[mainAxis] = preventedOffset - offset2;
      }
      if (checkAltAxis) {
        var _offsetModifierState$2;
        var _mainSide = mainAxis === "x" ? top : left$1;
        var _altSide = mainAxis === "x" ? bottom : right$1;
        var _offset = popperOffsets2[altAxis];
        var _len = altAxis === "y" ? "height" : "width";
        var _min = _offset + overflow[_mainSide];
        var _max = _offset - overflow[_altSide];
        var isOriginSide = [top, left$1].indexOf(basePlacement) !== -1;
        var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
        var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
        var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
        var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
        popperOffsets2[altAxis] = _preventedOffset;
        data2[altAxis] = _preventedOffset - _offset;
      }
      state.modifiersData[name] = data2;
    }
    const preventOverflow$1 = {
      name: "preventOverflow",
      enabled: true,
      phase: "main",
      fn: preventOverflow,
      requiresIfExists: ["offset"]
    };
    function getHTMLElementScroll(element) {
      return {
        scrollLeft: element.scrollLeft,
        scrollTop: element.scrollTop
      };
    }
    function getNodeScroll(node) {
      if (node === getWindow(node) || !isHTMLElement(node)) {
        return getWindowScroll(node);
      } else {
        return getHTMLElementScroll(node);
      }
    }
    function isElementScaled(element) {
      var rect = element.getBoundingClientRect();
      var scaleX = round(rect.width) / element.offsetWidth || 1;
      var scaleY = round(rect.height) / element.offsetHeight || 1;
      return scaleX !== 1 || scaleY !== 1;
    }
    function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
      if (isFixed === void 0) {
        isFixed = false;
      }
      var isOffsetParentAnElement = isHTMLElement(offsetParent);
      var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
      var documentElement = getDocumentElement(offsetParent);
      var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
      var scroll2 = {
        scrollLeft: 0,
        scrollTop: 0
      };
      var offsets = {
        x: 0,
        y: 0
      };
      if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
        if (getNodeName(offsetParent) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
        isScrollParent(documentElement)) {
          scroll2 = getNodeScroll(offsetParent);
        }
        if (isHTMLElement(offsetParent)) {
          offsets = getBoundingClientRect(offsetParent, true);
          offsets.x += offsetParent.clientLeft;
          offsets.y += offsetParent.clientTop;
        } else if (documentElement) {
          offsets.x = getWindowScrollBarX(documentElement);
        }
      }
      return {
        x: rect.left + scroll2.scrollLeft - offsets.x,
        y: rect.top + scroll2.scrollTop - offsets.y,
        width: rect.width,
        height: rect.height
      };
    }
    function order(modifiers) {
      var map2 = /* @__PURE__ */ new Map();
      var visited = /* @__PURE__ */ new Set();
      var result = [];
      modifiers.forEach(function(modifier) {
        map2.set(modifier.name, modifier);
      });
      function sort2(modifier) {
        visited.add(modifier.name);
        var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
        requires.forEach(function(dep) {
          if (!visited.has(dep)) {
            var depModifier = map2.get(dep);
            if (depModifier) {
              sort2(depModifier);
            }
          }
        });
        result.push(modifier);
      }
      modifiers.forEach(function(modifier) {
        if (!visited.has(modifier.name)) {
          sort2(modifier);
        }
      });
      return result;
    }
    function orderModifiers(modifiers) {
      var orderedModifiers = order(modifiers);
      return modifierPhases.reduce(function(acc, phase) {
        return acc.concat(orderedModifiers.filter(function(modifier) {
          return modifier.phase === phase;
        }));
      }, []);
    }
    function debounce(fn) {
      var pending;
      return function() {
        if (!pending) {
          pending = new Promise(function(resolve) {
            Promise.resolve().then(function() {
              pending = void 0;
              resolve(fn());
            });
          });
        }
        return pending;
      };
    }
    function mergeByName(modifiers) {
      var merged = modifiers.reduce(function(merged2, current) {
        var existing = merged2[current.name];
        merged2[current.name] = existing ? Object.assign({}, existing, current, {
          options: Object.assign({}, existing.options, current.options),
          data: Object.assign({}, existing.data, current.data)
        }) : current;
        return merged2;
      }, {});
      return Object.keys(merged).map(function(key2) {
        return merged[key2];
      });
    }
    var DEFAULT_OPTIONS = {
      placement: "bottom",
      modifiers: [],
      strategy: "absolute"
    };
    function areValidElements() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return !args.some(function(element) {
        return !(element && typeof element.getBoundingClientRect === "function");
      });
    }
    function popperGenerator(generatorOptions) {
      if (generatorOptions === void 0) {
        generatorOptions = {};
      }
      var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers2 = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
      return function createPopper2(reference2, popper2, options) {
        if (options === void 0) {
          options = defaultOptions;
        }
        var state = {
          placement: "bottom",
          orderedModifiers: [],
          options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
          modifiersData: {},
          elements: {
            reference: reference2,
            popper: popper2
          },
          attributes: {},
          styles: {}
        };
        var effectCleanupFns = [];
        var isDestroyed = false;
        var instance = {
          state,
          setOptions: function setOptions(setOptionsAction) {
            var options2 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
            cleanupModifierEffects();
            state.options = Object.assign({}, defaultOptions, state.options, options2);
            state.scrollParents = {
              reference: isElement$1(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
              popper: listScrollParents(popper2)
            };
            var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers2, state.options.modifiers)));
            state.orderedModifiers = orderedModifiers.filter(function(m) {
              return m.enabled;
            });
            runModifierEffects();
            return instance.update();
          },
          // Sync update – it will always be executed, even if not necessary. This
          // is useful for low frequency updates where sync behavior simplifies the
          // logic.
          // For high frequency updates (e.g. `resize` and `scroll` events), always
          // prefer the async Popper#update method
          forceUpdate: function forceUpdate() {
            if (isDestroyed) {
              return;
            }
            var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
            if (!areValidElements(reference3, popper3)) {
              return;
            }
            state.rects = {
              reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
              popper: getLayoutRect(popper3)
            };
            state.reset = false;
            state.placement = state.options.placement;
            state.orderedModifiers.forEach(function(modifier) {
              return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
            });
            for (var index = 0; index < state.orderedModifiers.length; index++) {
              if (state.reset === true) {
                state.reset = false;
                index = -1;
                continue;
              }
              var _state$orderedModifie = state.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
              if (typeof fn === "function") {
                state = fn({
                  state,
                  options: _options,
                  name,
                  instance
                }) || state;
              }
            }
          },
          // Async and optimistically optimized update – it will not be executed if
          // not necessary (debounced to run at most once-per-tick)
          update: debounce(function() {
            return new Promise(function(resolve) {
              instance.forceUpdate();
              resolve(state);
            });
          }),
          destroy: function destroy() {
            cleanupModifierEffects();
            isDestroyed = true;
          }
        };
        if (!areValidElements(reference2, popper2)) {
          return instance;
        }
        instance.setOptions(options).then(function(state2) {
          if (!isDestroyed && options.onFirstUpdate) {
            options.onFirstUpdate(state2);
          }
        });
        function runModifierEffects() {
          state.orderedModifiers.forEach(function(_ref) {
            var name = _ref.name, _ref$options = _ref.options, options2 = _ref$options === void 0 ? {} : _ref$options, effect2 = _ref.effect;
            if (typeof effect2 === "function") {
              var cleanupFn = effect2({
                state,
                name,
                instance,
                options: options2
              });
              var noopFn = function noopFn2() {
              };
              effectCleanupFns.push(cleanupFn || noopFn);
            }
          });
        }
        function cleanupModifierEffects() {
          effectCleanupFns.forEach(function(fn) {
            return fn();
          });
          effectCleanupFns = [];
        }
        return instance;
      };
    }
    var createPopper$2 = /* @__PURE__ */ popperGenerator();
    var defaultModifiers$1 = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1];
    var createPopper$1 = /* @__PURE__ */ popperGenerator({
      defaultModifiers: defaultModifiers$1
    });
    var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
    var createPopper = /* @__PURE__ */ popperGenerator({
      defaultModifiers
    });
    const Popper = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      afterMain,
      afterRead,
      afterWrite,
      applyStyles: applyStyles$1,
      arrow: arrow$1,
      auto,
      basePlacements,
      beforeMain,
      beforeRead,
      beforeWrite,
      bottom,
      clippingParents,
      computeStyles: computeStyles$1,
      createPopper,
      createPopperBase: createPopper$2,
      createPopperLite: createPopper$1,
      detectOverflow,
      end,
      eventListeners,
      flip: flip$1,
      hide: hide$1,
      left: left$1,
      main,
      modifierPhases,
      offset: offset$1,
      placements,
      popper,
      popperGenerator,
      popperOffsets: popperOffsets$1,
      preventOverflow: preventOverflow$1,
      read,
      reference,
      right: right$1,
      start,
      top,
      variationPlacements,
      viewport,
      write
    }, Symbol.toStringTag, { value: "Module" }));
    /*!
      * Bootstrap v5.3.3 (https://getbootstrap.com/)
      * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
      */
    const elementMap = /* @__PURE__ */ new Map();
    const Data = {
      set(element, key2, instance) {
        if (!elementMap.has(element)) {
          elementMap.set(element, /* @__PURE__ */ new Map());
        }
        const instanceMap = elementMap.get(element);
        if (!instanceMap.has(key2) && instanceMap.size !== 0) {
          console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);
          return;
        }
        instanceMap.set(key2, instance);
      },
      get(element, key2) {
        if (elementMap.has(element)) {
          return elementMap.get(element).get(key2) || null;
        }
        return null;
      },
      remove(element, key2) {
        if (!elementMap.has(element)) {
          return;
        }
        const instanceMap = elementMap.get(element);
        instanceMap.delete(key2);
        if (instanceMap.size === 0) {
          elementMap.delete(element);
        }
      }
    };
    const MAX_UID = 1e6;
    const MILLISECONDS_MULTIPLIER = 1e3;
    const TRANSITION_END = "transitionend";
    const parseSelector = (selector) => {
      if (selector && window.CSS && window.CSS.escape) {
        selector = selector.replace(/#([^\s"#']+)/g, (match, id) => `#${CSS.escape(id)}`);
      }
      return selector;
    };
    const toType = (object) => {
      if (object === null || object === void 0) {
        return `${object}`;
      }
      return Object.prototype.toString.call(object).match(/\s([a-z]+)/i)[1].toLowerCase();
    };
    const getUID = (prefix) => {
      do {
        prefix += Math.floor(Math.random() * MAX_UID);
      } while (document.getElementById(prefix));
      return prefix;
    };
    const getTransitionDurationFromElement = (element) => {
      if (!element) {
        return 0;
      }
      let {
        transitionDuration,
        transitionDelay
      } = window.getComputedStyle(element);
      const floatTransitionDuration = Number.parseFloat(transitionDuration);
      const floatTransitionDelay = Number.parseFloat(transitionDelay);
      if (!floatTransitionDuration && !floatTransitionDelay) {
        return 0;
      }
      transitionDuration = transitionDuration.split(",")[0];
      transitionDelay = transitionDelay.split(",")[0];
      return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
    };
    const triggerTransitionEnd = (element) => {
      element.dispatchEvent(new Event(TRANSITION_END));
    };
    const isElement = (object) => {
      if (!object || typeof object !== "object") {
        return false;
      }
      if (typeof object.jquery !== "undefined") {
        object = object[0];
      }
      return typeof object.nodeType !== "undefined";
    };
    const getElement = (object) => {
      if (isElement(object)) {
        return object.jquery ? object[0] : object;
      }
      if (typeof object === "string" && object.length > 0) {
        return document.querySelector(parseSelector(object));
      }
      return null;
    };
    const isVisible = (element) => {
      if (!isElement(element) || element.getClientRects().length === 0) {
        return false;
      }
      const elementIsVisible = getComputedStyle(element).getPropertyValue("visibility") === "visible";
      const closedDetails = element.closest("details:not([open])");
      if (!closedDetails) {
        return elementIsVisible;
      }
      if (closedDetails !== element) {
        const summary = element.closest("summary");
        if (summary && summary.parentNode !== closedDetails) {
          return false;
        }
        if (summary === null) {
          return false;
        }
      }
      return elementIsVisible;
    };
    const isDisabled = (element) => {
      if (!element || element.nodeType !== Node.ELEMENT_NODE) {
        return true;
      }
      if (element.classList.contains("disabled")) {
        return true;
      }
      if (typeof element.disabled !== "undefined") {
        return element.disabled;
      }
      return element.hasAttribute("disabled") && element.getAttribute("disabled") !== "false";
    };
    const findShadowRoot = (element) => {
      if (!document.documentElement.attachShadow) {
        return null;
      }
      if (typeof element.getRootNode === "function") {
        const root = element.getRootNode();
        return root instanceof ShadowRoot ? root : null;
      }
      if (element instanceof ShadowRoot) {
        return element;
      }
      if (!element.parentNode) {
        return null;
      }
      return findShadowRoot(element.parentNode);
    };
    const noop = () => {
    };
    const reflow = (element) => {
      element.offsetHeight;
    };
    const getjQuery = () => {
      if (window.jQuery && !document.body.hasAttribute("data-bs-no-jquery")) {
        return window.jQuery;
      }
      return null;
    };
    const DOMContentLoadedCallbacks = [];
    const onDOMContentLoaded = (callback) => {
      if (document.readyState === "loading") {
        if (!DOMContentLoadedCallbacks.length) {
          document.addEventListener("DOMContentLoaded", () => {
            for (const callback2 of DOMContentLoadedCallbacks) {
              callback2();
            }
          });
        }
        DOMContentLoadedCallbacks.push(callback);
      } else {
        callback();
      }
    };
    const isRTL = () => document.documentElement.dir === "rtl";
    const defineJQueryPlugin = (plugin2) => {
      onDOMContentLoaded(() => {
        const $ = getjQuery();
        if ($) {
          const name = plugin2.NAME;
          const JQUERY_NO_CONFLICT = $.fn[name];
          $.fn[name] = plugin2.jQueryInterface;
          $.fn[name].Constructor = plugin2;
          $.fn[name].noConflict = () => {
            $.fn[name] = JQUERY_NO_CONFLICT;
            return plugin2.jQueryInterface;
          };
        }
      });
    };
    const execute = (possibleCallback, args = [], defaultValue = possibleCallback) => {
      return typeof possibleCallback === "function" ? possibleCallback(...args) : defaultValue;
    };
    const executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {
      if (!waitForTransition) {
        execute(callback);
        return;
      }
      const durationPadding = 5;
      const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;
      let called = false;
      const handler = ({
        target
      }) => {
        if (target !== transitionElement) {
          return;
        }
        called = true;
        transitionElement.removeEventListener(TRANSITION_END, handler);
        execute(callback);
      };
      transitionElement.addEventListener(TRANSITION_END, handler);
      setTimeout(() => {
        if (!called) {
          triggerTransitionEnd(transitionElement);
        }
      }, emulatedDuration);
    };
    const getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {
      const listLength = list.length;
      let index = list.indexOf(activeElement);
      if (index === -1) {
        return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];
      }
      index += shouldGetNext ? 1 : -1;
      if (isCycleAllowed) {
        index = (index + listLength) % listLength;
      }
      return list[Math.max(0, Math.min(index, listLength - 1))];
    };
    const namespaceRegex = /[^.]*(?=\..*)\.|.*/;
    const stripNameRegex = /\..*/;
    const stripUidRegex = /::\d+$/;
    const eventRegistry = {};
    let uidEvent = 1;
    const customEvents = {
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    };
    const nativeEvents = /* @__PURE__ */ new Set(["click", "dblclick", "mouseup", "mousedown", "contextmenu", "mousewheel", "DOMMouseScroll", "mouseover", "mouseout", "mousemove", "selectstart", "selectend", "keydown", "keypress", "keyup", "orientationchange", "touchstart", "touchmove", "touchend", "touchcancel", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointercancel", "gesturestart", "gesturechange", "gestureend", "focus", "blur", "change", "reset", "select", "submit", "focusin", "focusout", "load", "unload", "beforeunload", "resize", "move", "DOMContentLoaded", "readystatechange", "error", "abort", "scroll"]);
    function makeEventUid(element, uid) {
      return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;
    }
    function getElementEvents(element) {
      const uid = makeEventUid(element);
      element.uidEvent = uid;
      eventRegistry[uid] = eventRegistry[uid] || {};
      return eventRegistry[uid];
    }
    function bootstrapHandler(element, fn) {
      return function handler(event) {
        hydrateObj(event, {
          delegateTarget: element
        });
        if (handler.oneOff) {
          EventHandler.off(element, event.type, fn);
        }
        return fn.apply(element, [event]);
      };
    }
    function bootstrapDelegationHandler(element, selector, fn) {
      return function handler(event) {
        const domElements = element.querySelectorAll(selector);
        for (let {
          target
        } = event; target && target !== this; target = target.parentNode) {
          for (const domElement of domElements) {
            if (domElement !== target) {
              continue;
            }
            hydrateObj(event, {
              delegateTarget: target
            });
            if (handler.oneOff) {
              EventHandler.off(element, event.type, selector, fn);
            }
            return fn.apply(target, [event]);
          }
        }
      };
    }
    function findHandler(events2, callable, delegationSelector = null) {
      return Object.values(events2).find((event) => event.callable === callable && event.delegationSelector === delegationSelector);
    }
    function normalizeParameters(originalTypeEvent, handler, delegationFunction) {
      const isDelegated = typeof handler === "string";
      const callable = isDelegated ? delegationFunction : handler || delegationFunction;
      let typeEvent = getTypeEvent(originalTypeEvent);
      if (!nativeEvents.has(typeEvent)) {
        typeEvent = originalTypeEvent;
      }
      return [isDelegated, callable, typeEvent];
    }
    function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {
      if (typeof originalTypeEvent !== "string" || !element) {
        return;
      }
      let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);
      if (originalTypeEvent in customEvents) {
        const wrapFunction = (fn2) => {
          return function(event) {
            if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {
              return fn2.call(this, event);
            }
          };
        };
        callable = wrapFunction(callable);
      }
      const events2 = getElementEvents(element);
      const handlers = events2[typeEvent] || (events2[typeEvent] = {});
      const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);
      if (previousFunction) {
        previousFunction.oneOff = previousFunction.oneOff && oneOff;
        return;
      }
      const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ""));
      const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);
      fn.delegationSelector = isDelegated ? handler : null;
      fn.callable = callable;
      fn.oneOff = oneOff;
      fn.uidEvent = uid;
      handlers[uid] = fn;
      element.addEventListener(typeEvent, fn, isDelegated);
    }
    function removeHandler(element, events2, typeEvent, handler, delegationSelector) {
      const fn = findHandler(events2[typeEvent], handler, delegationSelector);
      if (!fn) {
        return;
      }
      element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));
      delete events2[typeEvent][fn.uidEvent];
    }
    function removeNamespacedHandlers(element, events2, typeEvent, namespace) {
      const storeElementEvent = events2[typeEvent] || {};
      for (const [handlerKey, event] of Object.entries(storeElementEvent)) {
        if (handlerKey.includes(namespace)) {
          removeHandler(element, events2, typeEvent, event.callable, event.delegationSelector);
        }
      }
    }
    function getTypeEvent(event) {
      event = event.replace(stripNameRegex, "");
      return customEvents[event] || event;
    }
    const EventHandler = {
      on(element, event, handler, delegationFunction) {
        addHandler(element, event, handler, delegationFunction, false);
      },
      one(element, event, handler, delegationFunction) {
        addHandler(element, event, handler, delegationFunction, true);
      },
      off(element, originalTypeEvent, handler, delegationFunction) {
        if (typeof originalTypeEvent !== "string" || !element) {
          return;
        }
        const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);
        const inNamespace = typeEvent !== originalTypeEvent;
        const events2 = getElementEvents(element);
        const storeElementEvent = events2[typeEvent] || {};
        const isNamespace = originalTypeEvent.startsWith(".");
        if (typeof callable !== "undefined") {
          if (!Object.keys(storeElementEvent).length) {
            return;
          }
          removeHandler(element, events2, typeEvent, callable, isDelegated ? handler : null);
          return;
        }
        if (isNamespace) {
          for (const elementEvent of Object.keys(events2)) {
            removeNamespacedHandlers(element, events2, elementEvent, originalTypeEvent.slice(1));
          }
        }
        for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {
          const handlerKey = keyHandlers.replace(stripUidRegex, "");
          if (!inNamespace || originalTypeEvent.includes(handlerKey)) {
            removeHandler(element, events2, typeEvent, event.callable, event.delegationSelector);
          }
        }
      },
      trigger(element, event, args) {
        if (typeof event !== "string" || !element) {
          return null;
        }
        const $ = getjQuery();
        const typeEvent = getTypeEvent(event);
        const inNamespace = event !== typeEvent;
        let jQueryEvent = null;
        let bubbles = true;
        let nativeDispatch = true;
        let defaultPrevented = false;
        if (inNamespace && $) {
          jQueryEvent = $.Event(event, args);
          $(element).trigger(jQueryEvent);
          bubbles = !jQueryEvent.isPropagationStopped();
          nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();
          defaultPrevented = jQueryEvent.isDefaultPrevented();
        }
        const evt = hydrateObj(new Event(event, {
          bubbles,
          cancelable: true
        }), args);
        if (defaultPrevented) {
          evt.preventDefault();
        }
        if (nativeDispatch) {
          element.dispatchEvent(evt);
        }
        if (evt.defaultPrevented && jQueryEvent) {
          jQueryEvent.preventDefault();
        }
        return evt;
      }
    };
    function hydrateObj(obj, meta = {}) {
      for (const [key2, value] of Object.entries(meta)) {
        try {
          obj[key2] = value;
        } catch (_unused) {
          Object.defineProperty(obj, key2, {
            configurable: true,
            get() {
              return value;
            }
          });
        }
      }
      return obj;
    }
    function normalizeData(value) {
      if (value === "true") {
        return true;
      }
      if (value === "false") {
        return false;
      }
      if (value === Number(value).toString()) {
        return Number(value);
      }
      if (value === "" || value === "null") {
        return null;
      }
      if (typeof value !== "string") {
        return value;
      }
      try {
        return JSON.parse(decodeURIComponent(value));
      } catch (_unused) {
        return value;
      }
    }
    function normalizeDataKey(key2) {
      return key2.replace(/[A-Z]/g, (chr) => `-${chr.toLowerCase()}`);
    }
    const Manipulator = {
      setDataAttribute(element, key2, value) {
        element.setAttribute(`data-bs-${normalizeDataKey(key2)}`, value);
      },
      removeDataAttribute(element, key2) {
        element.removeAttribute(`data-bs-${normalizeDataKey(key2)}`);
      },
      getDataAttributes(element) {
        if (!element) {
          return {};
        }
        const attributes = {};
        const bsKeys = Object.keys(element.dataset).filter((key2) => key2.startsWith("bs") && !key2.startsWith("bsConfig"));
        for (const key2 of bsKeys) {
          let pureKey = key2.replace(/^bs/, "");
          pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length);
          attributes[pureKey] = normalizeData(element.dataset[key2]);
        }
        return attributes;
      },
      getDataAttribute(element, key2) {
        return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key2)}`));
      }
    };
    class Config {
      // Getters
      static get Default() {
        return {};
      }
      static get DefaultType() {
        return {};
      }
      static get NAME() {
        throw new Error('You have to implement the static method "NAME", for each component!');
      }
      _getConfig(config2) {
        config2 = this._mergeConfigObj(config2);
        config2 = this._configAfterMerge(config2);
        this._typeCheckConfig(config2);
        return config2;
      }
      _configAfterMerge(config2) {
        return config2;
      }
      _mergeConfigObj(config2, element) {
        const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, "config") : {};
        return {
          ...this.constructor.Default,
          ...typeof jsonConfig === "object" ? jsonConfig : {},
          ...isElement(element) ? Manipulator.getDataAttributes(element) : {},
          ...typeof config2 === "object" ? config2 : {}
        };
      }
      _typeCheckConfig(config2, configTypes = this.constructor.DefaultType) {
        for (const [property, expectedTypes] of Object.entries(configTypes)) {
          const value = config2[property];
          const valueType = isElement(value) ? "element" : toType(value);
          if (!new RegExp(expectedTypes).test(valueType)) {
            throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);
          }
        }
      }
    }
    const VERSION = "5.3.3";
    class BaseComponent extends Config {
      constructor(element, config2) {
        super();
        element = getElement(element);
        if (!element) {
          return;
        }
        this._element = element;
        this._config = this._getConfig(config2);
        Data.set(this._element, this.constructor.DATA_KEY, this);
      }
      // Public
      dispose() {
        Data.remove(this._element, this.constructor.DATA_KEY);
        EventHandler.off(this._element, this.constructor.EVENT_KEY);
        for (const propertyName of Object.getOwnPropertyNames(this)) {
          this[propertyName] = null;
        }
      }
      _queueCallback(callback, element, isAnimated = true) {
        executeAfterTransition(callback, element, isAnimated);
      }
      _getConfig(config2) {
        config2 = this._mergeConfigObj(config2, this._element);
        config2 = this._configAfterMerge(config2);
        this._typeCheckConfig(config2);
        return config2;
      }
      // Static
      static getInstance(element) {
        return Data.get(getElement(element), this.DATA_KEY);
      }
      static getOrCreateInstance(element, config2 = {}) {
        return this.getInstance(element) || new this(element, typeof config2 === "object" ? config2 : null);
      }
      static get VERSION() {
        return VERSION;
      }
      static get DATA_KEY() {
        return `bs.${this.NAME}`;
      }
      static get EVENT_KEY() {
        return `.${this.DATA_KEY}`;
      }
      static eventName(name) {
        return `${name}${this.EVENT_KEY}`;
      }
    }
    const getSelector = (element) => {
      let selector = element.getAttribute("data-bs-target");
      if (!selector || selector === "#") {
        let hrefAttribute = element.getAttribute("href");
        if (!hrefAttribute || !hrefAttribute.includes("#") && !hrefAttribute.startsWith(".")) {
          return null;
        }
        if (hrefAttribute.includes("#") && !hrefAttribute.startsWith("#")) {
          hrefAttribute = `#${hrefAttribute.split("#")[1]}`;
        }
        selector = hrefAttribute && hrefAttribute !== "#" ? hrefAttribute.trim() : null;
      }
      return selector ? selector.split(",").map((sel) => parseSelector(sel)).join(",") : null;
    };
    const SelectorEngine = {
      find(selector, element = document.documentElement) {
        return [].concat(...Element.prototype.querySelectorAll.call(element, selector));
      },
      findOne(selector, element = document.documentElement) {
        return Element.prototype.querySelector.call(element, selector);
      },
      children(element, selector) {
        return [].concat(...element.children).filter((child) => child.matches(selector));
      },
      parents(element, selector) {
        const parents = [];
        let ancestor = element.parentNode.closest(selector);
        while (ancestor) {
          parents.push(ancestor);
          ancestor = ancestor.parentNode.closest(selector);
        }
        return parents;
      },
      prev(element, selector) {
        let previous = element.previousElementSibling;
        while (previous) {
          if (previous.matches(selector)) {
            return [previous];
          }
          previous = previous.previousElementSibling;
        }
        return [];
      },
      // TODO: this is now unused; remove later along with prev()
      next(element, selector) {
        let next = element.nextElementSibling;
        while (next) {
          if (next.matches(selector)) {
            return [next];
          }
          next = next.nextElementSibling;
        }
        return [];
      },
      focusableChildren(element) {
        const focusables = ["a", "button", "input", "textarea", "select", "details", "[tabindex]", '[contenteditable="true"]'].map((selector) => `${selector}:not([tabindex^="-"])`).join(",");
        return this.find(focusables, element).filter((el) => !isDisabled(el) && isVisible(el));
      },
      getSelectorFromElement(element) {
        const selector = getSelector(element);
        if (selector) {
          return SelectorEngine.findOne(selector) ? selector : null;
        }
        return null;
      },
      getElementFromSelector(element) {
        const selector = getSelector(element);
        return selector ? SelectorEngine.findOne(selector) : null;
      },
      getMultipleElementsFromSelector(element) {
        const selector = getSelector(element);
        return selector ? SelectorEngine.find(selector) : [];
      }
    };
    const enableDismissTrigger = (component, method = "hide") => {
      const clickEvent = `click.dismiss${component.EVENT_KEY}`;
      const name = component.NAME;
    };
    const NAME$f = "alert";
    const DATA_KEY$a = "bs.alert";
    const EVENT_KEY$b = `.${DATA_KEY$a}`;
    const EVENT_CLOSE = `close${EVENT_KEY$b}`;
    const EVENT_CLOSED = `closed${EVENT_KEY$b}`;
    const CLASS_NAME_FADE$5 = "fade";
    const CLASS_NAME_SHOW$8 = "show";
    class Alert extends BaseComponent {
      // Getters
      static get NAME() {
        return NAME$f;
      }
      // Public
      close() {
        const closeEvent = EventHandler.trigger(this._element, EVENT_CLOSE);
        if (closeEvent.defaultPrevented) {
          return;
        }
        this._element.classList.remove(CLASS_NAME_SHOW$8);
        const isAnimated = this._element.classList.contains(CLASS_NAME_FADE$5);
        this._queueCallback(() => this._destroyElement(), this._element, isAnimated);
      }
      // Private
      _destroyElement() {
        this._element.remove();
        EventHandler.trigger(this._element, EVENT_CLOSED);
        this.dispose();
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = Alert.getOrCreateInstance(this);
          if (typeof config2 !== "string") {
            return;
          }
          if (data2[config2] === void 0 || config2.startsWith("_") || config2 === "constructor") {
            throw new TypeError(`No method named "${config2}"`);
          }
          data2[config2](this);
        });
      }
    }
    enableDismissTrigger(Alert, "close");
    defineJQueryPlugin(Alert);
    const NAME$e = "button";
    const DATA_KEY$9 = "bs.button";
    const EVENT_KEY$a = `.${DATA_KEY$9}`;
    const DATA_API_KEY$6 = ".data-api";
    const CLASS_NAME_ACTIVE$3 = "active";
    const SELECTOR_DATA_TOGGLE$5 = '[data-bs-toggle="button"]';
    const EVENT_CLICK_DATA_API$6 = `click${EVENT_KEY$a}${DATA_API_KEY$6}`;
    class Button extends BaseComponent {
      // Getters
      static get NAME() {
        return NAME$e;
      }
      // Public
      toggle() {
        this._element.setAttribute("aria-pressed", this._element.classList.toggle(CLASS_NAME_ACTIVE$3));
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = Button.getOrCreateInstance(this);
          if (config2 === "toggle") {
            data2[config2]();
          }
        });
      }
    }
    EventHandler.on(document, EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$5, (event) => {
      event.preventDefault();
      const button = event.target.closest(SELECTOR_DATA_TOGGLE$5);
      const data2 = Button.getOrCreateInstance(button);
      data2.toggle();
    });
    defineJQueryPlugin(Button);
    const NAME$d = "swipe";
    const EVENT_KEY$9 = ".bs.swipe";
    const EVENT_TOUCHSTART = `touchstart${EVENT_KEY$9}`;
    const EVENT_TOUCHMOVE = `touchmove${EVENT_KEY$9}`;
    const EVENT_TOUCHEND = `touchend${EVENT_KEY$9}`;
    const EVENT_POINTERDOWN = `pointerdown${EVENT_KEY$9}`;
    const EVENT_POINTERUP = `pointerup${EVENT_KEY$9}`;
    const POINTER_TYPE_TOUCH = "touch";
    const POINTER_TYPE_PEN = "pen";
    const CLASS_NAME_POINTER_EVENT = "pointer-event";
    const SWIPE_THRESHOLD = 40;
    const Default$c = {
      endCallback: null,
      leftCallback: null,
      rightCallback: null
    };
    const DefaultType$c = {
      endCallback: "(function|null)",
      leftCallback: "(function|null)",
      rightCallback: "(function|null)"
    };
    class Swipe extends Config {
      constructor(element, config2) {
        super();
        this._element = element;
        if (!element || !Swipe.isSupported()) {
          return;
        }
        this._config = this._getConfig(config2);
        this._deltaX = 0;
        this._supportPointerEvents = Boolean(window.PointerEvent);
        this._initEvents();
      }
      // Getters
      static get Default() {
        return Default$c;
      }
      static get DefaultType() {
        return DefaultType$c;
      }
      static get NAME() {
        return NAME$d;
      }
      // Public
      dispose() {
        EventHandler.off(this._element, EVENT_KEY$9);
      }
      // Private
      _start(event) {
        if (!this._supportPointerEvents) {
          this._deltaX = event.touches[0].clientX;
          return;
        }
        if (this._eventIsPointerPenTouch(event)) {
          this._deltaX = event.clientX;
        }
      }
      _end(event) {
        if (this._eventIsPointerPenTouch(event)) {
          this._deltaX = event.clientX - this._deltaX;
        }
        this._handleSwipe();
        execute(this._config.endCallback);
      }
      _move(event) {
        this._deltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this._deltaX;
      }
      _handleSwipe() {
        const absDeltaX = Math.abs(this._deltaX);
        if (absDeltaX <= SWIPE_THRESHOLD) {
          return;
        }
        const direction = absDeltaX / this._deltaX;
        this._deltaX = 0;
        if (!direction) {
          return;
        }
        execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback);
      }
      _initEvents() {
        if (this._supportPointerEvents) {
          EventHandler.on(this._element, EVENT_POINTERDOWN, (event) => this._start(event));
          EventHandler.on(this._element, EVENT_POINTERUP, (event) => this._end(event));
          this._element.classList.add(CLASS_NAME_POINTER_EVENT);
        } else {
          EventHandler.on(this._element, EVENT_TOUCHSTART, (event) => this._start(event));
          EventHandler.on(this._element, EVENT_TOUCHMOVE, (event) => this._move(event));
          EventHandler.on(this._element, EVENT_TOUCHEND, (event) => this._end(event));
        }
      }
      _eventIsPointerPenTouch(event) {
        return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH);
      }
      // Static
      static isSupported() {
        return "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0;
      }
    }
    const NAME$c = "carousel";
    const DATA_KEY$8 = "bs.carousel";
    const EVENT_KEY$8 = `.${DATA_KEY$8}`;
    const DATA_API_KEY$5 = ".data-api";
    const ARROW_LEFT_KEY$1 = "ArrowLeft";
    const ARROW_RIGHT_KEY$1 = "ArrowRight";
    const TOUCHEVENT_COMPAT_WAIT = 500;
    const ORDER_NEXT = "next";
    const ORDER_PREV = "prev";
    const DIRECTION_LEFT = "left";
    const DIRECTION_RIGHT = "right";
    const EVENT_SLIDE = `slide${EVENT_KEY$8}`;
    const EVENT_SLID = `slid${EVENT_KEY$8}`;
    const EVENT_KEYDOWN$1 = `keydown${EVENT_KEY$8}`;
    const EVENT_MOUSEENTER$1 = `mouseenter${EVENT_KEY$8}`;
    const EVENT_MOUSELEAVE$1 = `mouseleave${EVENT_KEY$8}`;
    const EVENT_DRAG_START = `dragstart${EVENT_KEY$8}`;
    const EVENT_LOAD_DATA_API$3 = `load${EVENT_KEY$8}${DATA_API_KEY$5}`;
    const EVENT_CLICK_DATA_API$5 = `click${EVENT_KEY$8}${DATA_API_KEY$5}`;
    const CLASS_NAME_CAROUSEL = "carousel";
    const CLASS_NAME_ACTIVE$2 = "active";
    const CLASS_NAME_SLIDE = "slide";
    const CLASS_NAME_END = "carousel-item-end";
    const CLASS_NAME_START = "carousel-item-start";
    const CLASS_NAME_NEXT = "carousel-item-next";
    const CLASS_NAME_PREV = "carousel-item-prev";
    const SELECTOR_ACTIVE = ".active";
    const SELECTOR_ITEM = ".carousel-item";
    const SELECTOR_ACTIVE_ITEM = SELECTOR_ACTIVE + SELECTOR_ITEM;
    const SELECTOR_ITEM_IMG = ".carousel-item img";
    const SELECTOR_INDICATORS = ".carousel-indicators";
    const SELECTOR_DATA_SLIDE = "[data-bs-slide], [data-bs-slide-to]";
    const SELECTOR_DATA_RIDE = '[data-bs-ride="carousel"]';
    const KEY_TO_DIRECTION = {
      [ARROW_LEFT_KEY$1]: DIRECTION_RIGHT,
      [ARROW_RIGHT_KEY$1]: DIRECTION_LEFT
    };
    const Default$b = {
      interval: 5e3,
      keyboard: true,
      pause: "hover",
      ride: false,
      touch: true,
      wrap: true
    };
    const DefaultType$b = {
      interval: "(number|boolean)",
      // TODO:v6 remove boolean support
      keyboard: "boolean",
      pause: "(string|boolean)",
      ride: "(boolean|string)",
      touch: "boolean",
      wrap: "boolean"
    };
    class Carousel extends BaseComponent {
      constructor(element, config2) {
        super(element, config2);
        this._interval = null;
        this._activeElement = null;
        this._isSliding = false;
        this.touchTimeout = null;
        this._swipeHelper = null;
        this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element);
        this._addEventListeners();
        if (this._config.ride === CLASS_NAME_CAROUSEL) {
          this.cycle();
        }
      }
      // Getters
      static get Default() {
        return Default$b;
      }
      static get DefaultType() {
        return DefaultType$b;
      }
      static get NAME() {
        return NAME$c;
      }
      // Public
      next() {
        this._slide(ORDER_NEXT);
      }
      nextWhenVisible() {
        if (!document.hidden && isVisible(this._element)) {
          this.next();
        }
      }
      prev() {
        this._slide(ORDER_PREV);
      }
      pause() {
        if (this._isSliding) {
          triggerTransitionEnd(this._element);
        }
        this._clearInterval();
      }
      cycle() {
        this._clearInterval();
        this._updateInterval();
        this._interval = setInterval(() => this.nextWhenVisible(), this._config.interval);
      }
      _maybeEnableCycle() {
        if (!this._config.ride) {
          return;
        }
        if (this._isSliding) {
          EventHandler.one(this._element, EVENT_SLID, () => this.cycle());
          return;
        }
        this.cycle();
      }
      to(index) {
        const items = this._getItems();
        if (index > items.length - 1 || index < 0) {
          return;
        }
        if (this._isSliding) {
          EventHandler.one(this._element, EVENT_SLID, () => this.to(index));
          return;
        }
        const activeIndex = this._getItemIndex(this._getActive());
        if (activeIndex === index) {
          return;
        }
        const order2 = index > activeIndex ? ORDER_NEXT : ORDER_PREV;
        this._slide(order2, items[index]);
      }
      dispose() {
        if (this._swipeHelper) {
          this._swipeHelper.dispose();
        }
        super.dispose();
      }
      // Private
      _configAfterMerge(config2) {
        config2.defaultInterval = config2.interval;
        return config2;
      }
      _addEventListeners() {
        if (this._config.keyboard) {
          EventHandler.on(this._element, EVENT_KEYDOWN$1, (event) => this._keydown(event));
        }
        if (this._config.pause === "hover") {
          EventHandler.on(this._element, EVENT_MOUSEENTER$1, () => this.pause());
          EventHandler.on(this._element, EVENT_MOUSELEAVE$1, () => this._maybeEnableCycle());
        }
        if (this._config.touch && Swipe.isSupported()) {
          this._addTouchEventListeners();
        }
      }
      _addTouchEventListeners() {
        for (const img of SelectorEngine.find(SELECTOR_ITEM_IMG, this._element)) {
          EventHandler.on(img, EVENT_DRAG_START, (event) => event.preventDefault());
        }
        const endCallBack = () => {
          if (this._config.pause !== "hover") {
            return;
          }
          this.pause();
          if (this.touchTimeout) {
            clearTimeout(this.touchTimeout);
          }
          this.touchTimeout = setTimeout(() => this._maybeEnableCycle(), TOUCHEVENT_COMPAT_WAIT + this._config.interval);
        };
        const swipeConfig = {
          leftCallback: () => this._slide(this._directionToOrder(DIRECTION_LEFT)),
          rightCallback: () => this._slide(this._directionToOrder(DIRECTION_RIGHT)),
          endCallback: endCallBack
        };
        this._swipeHelper = new Swipe(this._element, swipeConfig);
      }
      _keydown(event) {
        if (/input|textarea/i.test(event.target.tagName)) {
          return;
        }
        const direction = KEY_TO_DIRECTION[event.key];
        if (direction) {
          event.preventDefault();
          this._slide(this._directionToOrder(direction));
        }
      }
      _getItemIndex(element) {
        return this._getItems().indexOf(element);
      }
      _setActiveIndicatorElement(index) {
        if (!this._indicatorsElement) {
          return;
        }
        const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement);
        activeIndicator.classList.remove(CLASS_NAME_ACTIVE$2);
        activeIndicator.removeAttribute("aria-current");
        const newActiveIndicator = SelectorEngine.findOne(`[data-bs-slide-to="${index}"]`, this._indicatorsElement);
        if (newActiveIndicator) {
          newActiveIndicator.classList.add(CLASS_NAME_ACTIVE$2);
          newActiveIndicator.setAttribute("aria-current", "true");
        }
      }
      _updateInterval() {
        const element = this._activeElement || this._getActive();
        if (!element) {
          return;
        }
        const elementInterval = Number.parseInt(element.getAttribute("data-bs-interval"), 10);
        this._config.interval = elementInterval || this._config.defaultInterval;
      }
      _slide(order2, element = null) {
        if (this._isSliding) {
          return;
        }
        const activeElement = this._getActive();
        const isNext = order2 === ORDER_NEXT;
        const nextElement = element || getNextActiveElement(this._getItems(), activeElement, isNext, this._config.wrap);
        if (nextElement === activeElement) {
          return;
        }
        const nextElementIndex = this._getItemIndex(nextElement);
        const triggerEvent = (eventName) => {
          return EventHandler.trigger(this._element, eventName, {
            relatedTarget: nextElement,
            direction: this._orderToDirection(order2),
            from: this._getItemIndex(activeElement),
            to: nextElementIndex
          });
        };
        const slideEvent = triggerEvent(EVENT_SLIDE);
        if (slideEvent.defaultPrevented) {
          return;
        }
        if (!activeElement || !nextElement) {
          return;
        }
        const isCycling = Boolean(this._interval);
        this.pause();
        this._isSliding = true;
        this._setActiveIndicatorElement(nextElementIndex);
        this._activeElement = nextElement;
        const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END;
        const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV;
        nextElement.classList.add(orderClassName);
        reflow(nextElement);
        activeElement.classList.add(directionalClassName);
        nextElement.classList.add(directionalClassName);
        const completeCallBack = () => {
          nextElement.classList.remove(directionalClassName, orderClassName);
          nextElement.classList.add(CLASS_NAME_ACTIVE$2);
          activeElement.classList.remove(CLASS_NAME_ACTIVE$2, orderClassName, directionalClassName);
          this._isSliding = false;
          triggerEvent(EVENT_SLID);
        };
        this._queueCallback(completeCallBack, activeElement, this._isAnimated());
        if (isCycling) {
          this.cycle();
        }
      }
      _isAnimated() {
        return this._element.classList.contains(CLASS_NAME_SLIDE);
      }
      _getActive() {
        return SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);
      }
      _getItems() {
        return SelectorEngine.find(SELECTOR_ITEM, this._element);
      }
      _clearInterval() {
        if (this._interval) {
          clearInterval(this._interval);
          this._interval = null;
        }
      }
      _directionToOrder(direction) {
        if (isRTL()) {
          return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT;
        }
        return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV;
      }
      _orderToDirection(order2) {
        if (isRTL()) {
          return order2 === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT;
        }
        return order2 === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT;
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = Carousel.getOrCreateInstance(this, config2);
          if (typeof config2 === "number") {
            data2.to(config2);
            return;
          }
          if (typeof config2 === "string") {
            if (data2[config2] === void 0 || config2.startsWith("_") || config2 === "constructor") {
              throw new TypeError(`No method named "${config2}"`);
            }
            data2[config2]();
          }
        });
      }
    }
    EventHandler.on(document, EVENT_CLICK_DATA_API$5, SELECTOR_DATA_SLIDE, function(event) {
      const target = SelectorEngine.getElementFromSelector(this);
      if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {
        return;
      }
      event.preventDefault();
      const carousel = Carousel.getOrCreateInstance(target);
      const slideIndex = this.getAttribute("data-bs-slide-to");
      if (slideIndex) {
        carousel.to(slideIndex);
        carousel._maybeEnableCycle();
        return;
      }
      if (Manipulator.getDataAttribute(this, "slide") === "next") {
        carousel.next();
        carousel._maybeEnableCycle();
        return;
      }
      carousel.prev();
      carousel._maybeEnableCycle();
    });
    EventHandler.on(window, EVENT_LOAD_DATA_API$3, () => {
      const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE);
      for (const carousel of carousels) {
        Carousel.getOrCreateInstance(carousel);
      }
    });
    defineJQueryPlugin(Carousel);
    const NAME$b = "collapse";
    const DATA_KEY$7 = "bs.collapse";
    const EVENT_KEY$7 = `.${DATA_KEY$7}`;
    const DATA_API_KEY$4 = ".data-api";
    const EVENT_SHOW$6 = `show${EVENT_KEY$7}`;
    const EVENT_SHOWN$6 = `shown${EVENT_KEY$7}`;
    const EVENT_HIDE$6 = `hide${EVENT_KEY$7}`;
    const EVENT_HIDDEN$6 = `hidden${EVENT_KEY$7}`;
    const EVENT_CLICK_DATA_API$4 = `click${EVENT_KEY$7}${DATA_API_KEY$4}`;
    const CLASS_NAME_SHOW$7 = "show";
    const CLASS_NAME_COLLAPSE = "collapse";
    const CLASS_NAME_COLLAPSING = "collapsing";
    const CLASS_NAME_COLLAPSED = "collapsed";
    const CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`;
    const CLASS_NAME_HORIZONTAL = "collapse-horizontal";
    const WIDTH = "width";
    const HEIGHT = "height";
    const SELECTOR_ACTIVES = ".collapse.show, .collapse.collapsing";
    const SELECTOR_DATA_TOGGLE$4 = '[data-bs-toggle="collapse"]';
    const Default$a = {
      parent: null,
      toggle: true
    };
    const DefaultType$a = {
      parent: "(null|element)",
      toggle: "boolean"
    };
    class Collapse extends BaseComponent {
      constructor(element, config2) {
        super(element, config2);
        this._isTransitioning = false;
        this._triggerArray = [];
        const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE$4);
        for (const elem of toggleList) {
          const selector = SelectorEngine.getSelectorFromElement(elem);
          const filterElement = SelectorEngine.find(selector).filter((foundElement) => foundElement === this._element);
          if (selector !== null && filterElement.length) {
            this._triggerArray.push(elem);
          }
        }
        this._initializeChildren();
        if (!this._config.parent) {
          this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());
        }
        if (this._config.toggle) {
          this.toggle();
        }
      }
      // Getters
      static get Default() {
        return Default$a;
      }
      static get DefaultType() {
        return DefaultType$a;
      }
      static get NAME() {
        return NAME$b;
      }
      // Public
      toggle() {
        if (this._isShown()) {
          this.hide();
        } else {
          this.show();
        }
      }
      show() {
        if (this._isTransitioning || this._isShown()) {
          return;
        }
        let activeChildren = [];
        if (this._config.parent) {
          activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES).filter((element) => element !== this._element).map((element) => Collapse.getOrCreateInstance(element, {
            toggle: false
          }));
        }
        if (activeChildren.length && activeChildren[0]._isTransitioning) {
          return;
        }
        const startEvent = EventHandler.trigger(this._element, EVENT_SHOW$6);
        if (startEvent.defaultPrevented) {
          return;
        }
        for (const activeInstance of activeChildren) {
          activeInstance.hide();
        }
        const dimension = this._getDimension();
        this._element.classList.remove(CLASS_NAME_COLLAPSE);
        this._element.classList.add(CLASS_NAME_COLLAPSING);
        this._element.style[dimension] = 0;
        this._addAriaAndCollapsedClass(this._triggerArray, true);
        this._isTransitioning = true;
        const complete = () => {
          this._isTransitioning = false;
          this._element.classList.remove(CLASS_NAME_COLLAPSING);
          this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);
          this._element.style[dimension] = "";
          EventHandler.trigger(this._element, EVENT_SHOWN$6);
        };
        const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
        const scrollSize = `scroll${capitalizedDimension}`;
        this._queueCallback(complete, this._element, true);
        this._element.style[dimension] = `${this._element[scrollSize]}px`;
      }
      hide() {
        if (this._isTransitioning || !this._isShown()) {
          return;
        }
        const startEvent = EventHandler.trigger(this._element, EVENT_HIDE$6);
        if (startEvent.defaultPrevented) {
          return;
        }
        const dimension = this._getDimension();
        this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;
        reflow(this._element);
        this._element.classList.add(CLASS_NAME_COLLAPSING);
        this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);
        for (const trigger of this._triggerArray) {
          const element = SelectorEngine.getElementFromSelector(trigger);
          if (element && !this._isShown(element)) {
            this._addAriaAndCollapsedClass([trigger], false);
          }
        }
        this._isTransitioning = true;
        const complete = () => {
          this._isTransitioning = false;
          this._element.classList.remove(CLASS_NAME_COLLAPSING);
          this._element.classList.add(CLASS_NAME_COLLAPSE);
          EventHandler.trigger(this._element, EVENT_HIDDEN$6);
        };
        this._element.style[dimension] = "";
        this._queueCallback(complete, this._element, true);
      }
      _isShown(element = this._element) {
        return element.classList.contains(CLASS_NAME_SHOW$7);
      }
      // Private
      _configAfterMerge(config2) {
        config2.toggle = Boolean(config2.toggle);
        config2.parent = getElement(config2.parent);
        return config2;
      }
      _getDimension() {
        return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT;
      }
      _initializeChildren() {
        if (!this._config.parent) {
          return;
        }
        const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE$4);
        for (const element of children) {
          const selected = SelectorEngine.getElementFromSelector(element);
          if (selected) {
            this._addAriaAndCollapsedClass([element], this._isShown(selected));
          }
        }
      }
      _getFirstLevelChildren(selector) {
        const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);
        return SelectorEngine.find(selector, this._config.parent).filter((element) => !children.includes(element));
      }
      _addAriaAndCollapsedClass(triggerArray, isOpen) {
        if (!triggerArray.length) {
          return;
        }
        for (const element of triggerArray) {
          element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen);
          element.setAttribute("aria-expanded", isOpen);
        }
      }
      // Static
      static jQueryInterface(config2) {
        const _config = {};
        if (typeof config2 === "string" && /show|hide/.test(config2)) {
          _config.toggle = false;
        }
        return this.each(function() {
          const data2 = Collapse.getOrCreateInstance(this, _config);
          if (typeof config2 === "string") {
            if (typeof data2[config2] === "undefined") {
              throw new TypeError(`No method named "${config2}"`);
            }
            data2[config2]();
          }
        });
      }
    }
    EventHandler.on(document, EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$4, function(event) {
      if (event.target.tagName === "A" || event.delegateTarget && event.delegateTarget.tagName === "A") {
        event.preventDefault();
      }
      for (const element of SelectorEngine.getMultipleElementsFromSelector(this)) {
        Collapse.getOrCreateInstance(element, {
          toggle: false
        }).toggle();
      }
    });
    defineJQueryPlugin(Collapse);
    const NAME$a = "dropdown";
    const DATA_KEY$6 = "bs.dropdown";
    const EVENT_KEY$6 = `.${DATA_KEY$6}`;
    const DATA_API_KEY$3 = ".data-api";
    const ESCAPE_KEY$2 = "Escape";
    const TAB_KEY$1 = "Tab";
    const ARROW_UP_KEY$1 = "ArrowUp";
    const ARROW_DOWN_KEY$1 = "ArrowDown";
    const RIGHT_MOUSE_BUTTON = 2;
    const EVENT_HIDE$5 = `hide${EVENT_KEY$6}`;
    const EVENT_HIDDEN$5 = `hidden${EVENT_KEY$6}`;
    const EVENT_SHOW$5 = `show${EVENT_KEY$6}`;
    const EVENT_SHOWN$5 = `shown${EVENT_KEY$6}`;
    const EVENT_CLICK_DATA_API$3 = `click${EVENT_KEY$6}${DATA_API_KEY$3}`;
    const EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY$6}${DATA_API_KEY$3}`;
    const EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY$6}${DATA_API_KEY$3}`;
    const CLASS_NAME_SHOW$6 = "show";
    const CLASS_NAME_DROPUP = "dropup";
    const CLASS_NAME_DROPEND = "dropend";
    const CLASS_NAME_DROPSTART = "dropstart";
    const CLASS_NAME_DROPUP_CENTER = "dropup-center";
    const CLASS_NAME_DROPDOWN_CENTER = "dropdown-center";
    const SELECTOR_DATA_TOGGLE$3 = '[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)';
    const SELECTOR_DATA_TOGGLE_SHOWN = `${SELECTOR_DATA_TOGGLE$3}.${CLASS_NAME_SHOW$6}`;
    const SELECTOR_MENU = ".dropdown-menu";
    const SELECTOR_NAVBAR = ".navbar";
    const SELECTOR_NAVBAR_NAV = ".navbar-nav";
    const SELECTOR_VISIBLE_ITEMS = ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)";
    const PLACEMENT_TOP = isRTL() ? "top-end" : "top-start";
    const PLACEMENT_TOPEND = isRTL() ? "top-start" : "top-end";
    const PLACEMENT_BOTTOM = isRTL() ? "bottom-end" : "bottom-start";
    const PLACEMENT_BOTTOMEND = isRTL() ? "bottom-start" : "bottom-end";
    const PLACEMENT_RIGHT = isRTL() ? "left-start" : "right-start";
    const PLACEMENT_LEFT = isRTL() ? "right-start" : "left-start";
    const PLACEMENT_TOPCENTER = "top";
    const PLACEMENT_BOTTOMCENTER = "bottom";
    const Default$9 = {
      autoClose: true,
      boundary: "clippingParents",
      display: "dynamic",
      offset: [0, 2],
      popperConfig: null,
      reference: "toggle"
    };
    const DefaultType$9 = {
      autoClose: "(boolean|string)",
      boundary: "(string|element)",
      display: "string",
      offset: "(array|string|function)",
      popperConfig: "(null|object|function)",
      reference: "(string|element|object)"
    };
    class Dropdown extends BaseComponent {
      constructor(element, config2) {
        super(element, config2);
        this._popper = null;
        this._parent = this._element.parentNode;
        this._menu = SelectorEngine.next(this._element, SELECTOR_MENU)[0] || SelectorEngine.prev(this._element, SELECTOR_MENU)[0] || SelectorEngine.findOne(SELECTOR_MENU, this._parent);
        this._inNavbar = this._detectNavbar();
      }
      // Getters
      static get Default() {
        return Default$9;
      }
      static get DefaultType() {
        return DefaultType$9;
      }
      static get NAME() {
        return NAME$a;
      }
      // Public
      toggle() {
        return this._isShown() ? this.hide() : this.show();
      }
      show() {
        if (isDisabled(this._element) || this._isShown()) {
          return;
        }
        const relatedTarget = {
          relatedTarget: this._element
        };
        const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$5, relatedTarget);
        if (showEvent.defaultPrevented) {
          return;
        }
        this._createPopper();
        if ("ontouchstart" in document.documentElement && !this._parent.closest(SELECTOR_NAVBAR_NAV)) {
          for (const element of [].concat(...document.body.children)) {
            EventHandler.on(element, "mouseover", noop);
          }
        }
        this._element.focus();
        this._element.setAttribute("aria-expanded", true);
        this._menu.classList.add(CLASS_NAME_SHOW$6);
        this._element.classList.add(CLASS_NAME_SHOW$6);
        EventHandler.trigger(this._element, EVENT_SHOWN$5, relatedTarget);
      }
      hide() {
        if (isDisabled(this._element) || !this._isShown()) {
          return;
        }
        const relatedTarget = {
          relatedTarget: this._element
        };
        this._completeHide(relatedTarget);
      }
      dispose() {
        if (this._popper) {
          this._popper.destroy();
        }
        super.dispose();
      }
      update() {
        this._inNavbar = this._detectNavbar();
        if (this._popper) {
          this._popper.update();
        }
      }
      // Private
      _completeHide(relatedTarget) {
        const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$5, relatedTarget);
        if (hideEvent.defaultPrevented) {
          return;
        }
        if ("ontouchstart" in document.documentElement) {
          for (const element of [].concat(...document.body.children)) {
            EventHandler.off(element, "mouseover", noop);
          }
        }
        if (this._popper) {
          this._popper.destroy();
        }
        this._menu.classList.remove(CLASS_NAME_SHOW$6);
        this._element.classList.remove(CLASS_NAME_SHOW$6);
        this._element.setAttribute("aria-expanded", "false");
        Manipulator.removeDataAttribute(this._menu, "popper");
        EventHandler.trigger(this._element, EVENT_HIDDEN$5, relatedTarget);
      }
      _getConfig(config2) {
        config2 = super._getConfig(config2);
        if (typeof config2.reference === "object" && !isElement(config2.reference) && typeof config2.reference.getBoundingClientRect !== "function") {
          throw new TypeError(`${NAME$a.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);
        }
        return config2;
      }
      _createPopper() {
        if (typeof Popper === "undefined") {
          throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");
        }
        let referenceElement = this._element;
        if (this._config.reference === "parent") {
          referenceElement = this._parent;
        } else if (isElement(this._config.reference)) {
          referenceElement = getElement(this._config.reference);
        } else if (typeof this._config.reference === "object") {
          referenceElement = this._config.reference;
        }
        const popperConfig = this._getPopperConfig();
        this._popper = createPopper(referenceElement, this._menu, popperConfig);
      }
      _isShown() {
        return this._menu.classList.contains(CLASS_NAME_SHOW$6);
      }
      _getPlacement() {
        const parentDropdown = this._parent;
        if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {
          return PLACEMENT_RIGHT;
        }
        if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {
          return PLACEMENT_LEFT;
        }
        if (parentDropdown.classList.contains(CLASS_NAME_DROPUP_CENTER)) {
          return PLACEMENT_TOPCENTER;
        }
        if (parentDropdown.classList.contains(CLASS_NAME_DROPDOWN_CENTER)) {
          return PLACEMENT_BOTTOMCENTER;
        }
        const isEnd = getComputedStyle(this._menu).getPropertyValue("--bs-position").trim() === "end";
        if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {
          return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP;
        }
        return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM;
      }
      _detectNavbar() {
        return this._element.closest(SELECTOR_NAVBAR) !== null;
      }
      _getOffset() {
        const {
          offset: offset2
        } = this._config;
        if (typeof offset2 === "string") {
          return offset2.split(",").map((value) => Number.parseInt(value, 10));
        }
        if (typeof offset2 === "function") {
          return (popperData) => offset2(popperData, this._element);
        }
        return offset2;
      }
      _getPopperConfig() {
        const defaultBsPopperConfig = {
          placement: this._getPlacement(),
          modifiers: [{
            name: "preventOverflow",
            options: {
              boundary: this._config.boundary
            }
          }, {
            name: "offset",
            options: {
              offset: this._getOffset()
            }
          }]
        };
        if (this._inNavbar || this._config.display === "static") {
          Manipulator.setDataAttribute(this._menu, "popper", "static");
          defaultBsPopperConfig.modifiers = [{
            name: "applyStyles",
            enabled: false
          }];
        }
        return {
          ...defaultBsPopperConfig,
          ...execute(this._config.popperConfig, [defaultBsPopperConfig])
        };
      }
      _selectMenuItem({
        key: key2,
        target
      }) {
        const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter((element) => isVisible(element));
        if (!items.length) {
          return;
        }
        getNextActiveElement(items, target, key2 === ARROW_DOWN_KEY$1, !items.includes(target)).focus();
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = Dropdown.getOrCreateInstance(this, config2);
          if (typeof config2 !== "string") {
            return;
          }
          if (typeof data2[config2] === "undefined") {
            throw new TypeError(`No method named "${config2}"`);
          }
          data2[config2]();
        });
      }
      static clearMenus(event) {
        if (event.button === RIGHT_MOUSE_BUTTON || event.type === "keyup" && event.key !== TAB_KEY$1) {
          return;
        }
        const openToggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE_SHOWN);
        for (const toggle of openToggles) {
          const context = Dropdown.getInstance(toggle);
          if (!context || context._config.autoClose === false) {
            continue;
          }
          const composedPath = event.composedPath();
          const isMenuTarget = composedPath.includes(context._menu);
          if (composedPath.includes(context._element) || context._config.autoClose === "inside" && !isMenuTarget || context._config.autoClose === "outside" && isMenuTarget) {
            continue;
          }
          if (context._menu.contains(event.target) && (event.type === "keyup" && event.key === TAB_KEY$1 || /input|select|option|textarea|form/i.test(event.target.tagName))) {
            continue;
          }
          const relatedTarget = {
            relatedTarget: context._element
          };
          if (event.type === "click") {
            relatedTarget.clickEvent = event;
          }
          context._completeHide(relatedTarget);
        }
      }
      static dataApiKeydownHandler(event) {
        const isInput = /input|textarea/i.test(event.target.tagName);
        const isEscapeEvent = event.key === ESCAPE_KEY$2;
        const isUpOrDownEvent = [ARROW_UP_KEY$1, ARROW_DOWN_KEY$1].includes(event.key);
        if (!isUpOrDownEvent && !isEscapeEvent) {
          return;
        }
        if (isInput && !isEscapeEvent) {
          return;
        }
        event.preventDefault();
        const getToggleButton = this.matches(SELECTOR_DATA_TOGGLE$3) ? this : SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE$3)[0] || SelectorEngine.next(this, SELECTOR_DATA_TOGGLE$3)[0] || SelectorEngine.findOne(SELECTOR_DATA_TOGGLE$3, event.delegateTarget.parentNode);
        const instance = Dropdown.getOrCreateInstance(getToggleButton);
        if (isUpOrDownEvent) {
          event.stopPropagation();
          instance.show();
          instance._selectMenuItem(event);
          return;
        }
        if (instance._isShown()) {
          event.stopPropagation();
          instance.hide();
          getToggleButton.focus();
        }
      }
    }
    EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$3, Dropdown.dataApiKeydownHandler);
    EventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler);
    EventHandler.on(document, EVENT_CLICK_DATA_API$3, Dropdown.clearMenus);
    EventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus);
    EventHandler.on(document, EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$3, function(event) {
      event.preventDefault();
      Dropdown.getOrCreateInstance(this).toggle();
    });
    defineJQueryPlugin(Dropdown);
    const NAME$9 = "backdrop";
    const CLASS_NAME_FADE$4 = "fade";
    const CLASS_NAME_SHOW$5 = "show";
    const EVENT_MOUSEDOWN = `mousedown.bs.${NAME$9}`;
    const Default$8 = {
      className: "modal-backdrop",
      clickCallback: null,
      isAnimated: false,
      isVisible: true,
      // if false, we use the backdrop helper without adding any element to the dom
      rootElement: "body"
      // give the choice to place backdrop under different elements
    };
    const DefaultType$8 = {
      className: "string",
      clickCallback: "(function|null)",
      isAnimated: "boolean",
      isVisible: "boolean",
      rootElement: "(element|string)"
    };
    class Backdrop extends Config {
      constructor(config2) {
        super();
        this._config = this._getConfig(config2);
        this._isAppended = false;
        this._element = null;
      }
      // Getters
      static get Default() {
        return Default$8;
      }
      static get DefaultType() {
        return DefaultType$8;
      }
      static get NAME() {
        return NAME$9;
      }
      // Public
      show(callback) {
        if (!this._config.isVisible) {
          execute(callback);
          return;
        }
        this._append();
        const element = this._getElement();
        if (this._config.isAnimated) {
          reflow(element);
        }
        element.classList.add(CLASS_NAME_SHOW$5);
        this._emulateAnimation(() => {
          execute(callback);
        });
      }
      hide(callback) {
        if (!this._config.isVisible) {
          execute(callback);
          return;
        }
        this._getElement().classList.remove(CLASS_NAME_SHOW$5);
        this._emulateAnimation(() => {
          this.dispose();
          execute(callback);
        });
      }
      dispose() {
        if (!this._isAppended) {
          return;
        }
        EventHandler.off(this._element, EVENT_MOUSEDOWN);
        this._element.remove();
        this._isAppended = false;
      }
      // Private
      _getElement() {
        if (!this._element) {
          const backdrop = document.createElement("div");
          backdrop.className = this._config.className;
          if (this._config.isAnimated) {
            backdrop.classList.add(CLASS_NAME_FADE$4);
          }
          this._element = backdrop;
        }
        return this._element;
      }
      _configAfterMerge(config2) {
        config2.rootElement = getElement(config2.rootElement);
        return config2;
      }
      _append() {
        if (this._isAppended) {
          return;
        }
        const element = this._getElement();
        this._config.rootElement.append(element);
        EventHandler.on(element, EVENT_MOUSEDOWN, () => {
          execute(this._config.clickCallback);
        });
        this._isAppended = true;
      }
      _emulateAnimation(callback) {
        executeAfterTransition(callback, this._getElement(), this._config.isAnimated);
      }
    }
    const NAME$8 = "focustrap";
    const DATA_KEY$5 = "bs.focustrap";
    const EVENT_KEY$5 = `.${DATA_KEY$5}`;
    const EVENT_FOCUSIN$2 = `focusin${EVENT_KEY$5}`;
    const EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY$5}`;
    const TAB_KEY = "Tab";
    const TAB_NAV_FORWARD = "forward";
    const TAB_NAV_BACKWARD = "backward";
    const Default$7 = {
      autofocus: true,
      trapElement: null
      // The element to trap focus inside of
    };
    const DefaultType$7 = {
      autofocus: "boolean",
      trapElement: "element"
    };
    class FocusTrap extends Config {
      constructor(config2) {
        super();
        this._config = this._getConfig(config2);
        this._isActive = false;
        this._lastTabNavDirection = null;
      }
      // Getters
      static get Default() {
        return Default$7;
      }
      static get DefaultType() {
        return DefaultType$7;
      }
      static get NAME() {
        return NAME$8;
      }
      // Public
      activate() {
        if (this._isActive) {
          return;
        }
        if (this._config.autofocus) {
          this._config.trapElement.focus();
        }
        EventHandler.off(document, EVENT_KEY$5);
        EventHandler.on(document, EVENT_FOCUSIN$2, (event) => this._handleFocusin(event));
        EventHandler.on(document, EVENT_KEYDOWN_TAB, (event) => this._handleKeydown(event));
        this._isActive = true;
      }
      deactivate() {
        if (!this._isActive) {
          return;
        }
        this._isActive = false;
        EventHandler.off(document, EVENT_KEY$5);
      }
      // Private
      _handleFocusin(event) {
        const {
          trapElement
        } = this._config;
        if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {
          return;
        }
        const elements = SelectorEngine.focusableChildren(trapElement);
        if (elements.length === 0) {
          trapElement.focus();
        } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {
          elements[elements.length - 1].focus();
        } else {
          elements[0].focus();
        }
      }
      _handleKeydown(event) {
        if (event.key !== TAB_KEY) {
          return;
        }
        this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD;
      }
    }
    const SELECTOR_FIXED_CONTENT = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top";
    const SELECTOR_STICKY_CONTENT = ".sticky-top";
    const PROPERTY_PADDING = "padding-right";
    const PROPERTY_MARGIN = "margin-right";
    class ScrollBarHelper {
      constructor() {
        this._element = document.body;
      }
      // Public
      getWidth() {
        const documentWidth = document.documentElement.clientWidth;
        return Math.abs(window.innerWidth - documentWidth);
      }
      hide() {
        const width = this.getWidth();
        this._disableOverFlow();
        this._setElementAttributes(this._element, PROPERTY_PADDING, (calculatedValue) => calculatedValue + width);
        this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, (calculatedValue) => calculatedValue + width);
        this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, (calculatedValue) => calculatedValue - width);
      }
      reset() {
        this._resetElementAttributes(this._element, "overflow");
        this._resetElementAttributes(this._element, PROPERTY_PADDING);
        this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING);
        this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN);
      }
      isOverflowing() {
        return this.getWidth() > 0;
      }
      // Private
      _disableOverFlow() {
        this._saveInitialAttribute(this._element, "overflow");
        this._element.style.overflow = "hidden";
      }
      _setElementAttributes(selector, styleProperty, callback) {
        const scrollbarWidth = this.getWidth();
        const manipulationCallBack = (element) => {
          if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {
            return;
          }
          this._saveInitialAttribute(element, styleProperty);
          const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty);
          element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`);
        };
        this._applyManipulationCallback(selector, manipulationCallBack);
      }
      _saveInitialAttribute(element, styleProperty) {
        const actualValue = element.style.getPropertyValue(styleProperty);
        if (actualValue) {
          Manipulator.setDataAttribute(element, styleProperty, actualValue);
        }
      }
      _resetElementAttributes(selector, styleProperty) {
        const manipulationCallBack = (element) => {
          const value = Manipulator.getDataAttribute(element, styleProperty);
          if (value === null) {
            element.style.removeProperty(styleProperty);
            return;
          }
          Manipulator.removeDataAttribute(element, styleProperty);
          element.style.setProperty(styleProperty, value);
        };
        this._applyManipulationCallback(selector, manipulationCallBack);
      }
      _applyManipulationCallback(selector, callBack) {
        if (isElement(selector)) {
          callBack(selector);
          return;
        }
        for (const sel of SelectorEngine.find(selector, this._element)) {
          callBack(sel);
        }
      }
    }
    const NAME$7 = "modal";
    const DATA_KEY$4 = "bs.modal";
    const EVENT_KEY$4 = `.${DATA_KEY$4}`;
    const DATA_API_KEY$2 = ".data-api";
    const ESCAPE_KEY$1 = "Escape";
    const EVENT_HIDE$4 = `hide${EVENT_KEY$4}`;
    const EVENT_HIDE_PREVENTED$1 = `hidePrevented${EVENT_KEY$4}`;
    const EVENT_HIDDEN$4 = `hidden${EVENT_KEY$4}`;
    const EVENT_SHOW$4 = `show${EVENT_KEY$4}`;
    const EVENT_SHOWN$4 = `shown${EVENT_KEY$4}`;
    const EVENT_RESIZE$1 = `resize${EVENT_KEY$4}`;
    const EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY$4}`;
    const EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY$4}`;
    const EVENT_KEYDOWN_DISMISS$1 = `keydown.dismiss${EVENT_KEY$4}`;
    const EVENT_CLICK_DATA_API$2 = `click${EVENT_KEY$4}${DATA_API_KEY$2}`;
    const CLASS_NAME_OPEN = "modal-open";
    const CLASS_NAME_FADE$3 = "fade";
    const CLASS_NAME_SHOW$4 = "show";
    const CLASS_NAME_STATIC = "modal-static";
    const OPEN_SELECTOR$1 = ".modal.show";
    const SELECTOR_DIALOG = ".modal-dialog";
    const SELECTOR_MODAL_BODY = ".modal-body";
    const SELECTOR_DATA_TOGGLE$2 = '[data-bs-toggle="modal"]';
    const Default$6 = {
      backdrop: true,
      focus: true,
      keyboard: true
    };
    const DefaultType$6 = {
      backdrop: "(boolean|string)",
      focus: "boolean",
      keyboard: "boolean"
    };
    class Modal extends BaseComponent {
      constructor(element, config2) {
        super(element, config2);
        this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element);
        this._backdrop = this._initializeBackDrop();
        this._focustrap = this._initializeFocusTrap();
        this._isShown = false;
        this._isTransitioning = false;
        this._scrollBar = new ScrollBarHelper();
        this._addEventListeners();
      }
      // Getters
      static get Default() {
        return Default$6;
      }
      static get DefaultType() {
        return DefaultType$6;
      }
      static get NAME() {
        return NAME$7;
      }
      // Public
      toggle(relatedTarget) {
        return this._isShown ? this.hide() : this.show(relatedTarget);
      }
      show(relatedTarget) {
        if (this._isShown || this._isTransitioning) {
          return;
        }
        const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$4, {
          relatedTarget
        });
        if (showEvent.defaultPrevented) {
          return;
        }
        this._isShown = true;
        this._isTransitioning = true;
        this._scrollBar.hide();
        document.body.classList.add(CLASS_NAME_OPEN);
        this._adjustDialog();
        this._backdrop.show(() => this._showElement(relatedTarget));
      }
      hide() {
        if (!this._isShown || this._isTransitioning) {
          return;
        }
        const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$4);
        if (hideEvent.defaultPrevented) {
          return;
        }
        this._isShown = false;
        this._isTransitioning = true;
        this._focustrap.deactivate();
        this._element.classList.remove(CLASS_NAME_SHOW$4);
        this._queueCallback(() => this._hideModal(), this._element, this._isAnimated());
      }
      dispose() {
        EventHandler.off(window, EVENT_KEY$4);
        EventHandler.off(this._dialog, EVENT_KEY$4);
        this._backdrop.dispose();
        this._focustrap.deactivate();
        super.dispose();
      }
      handleUpdate() {
        this._adjustDialog();
      }
      // Private
      _initializeBackDrop() {
        return new Backdrop({
          isVisible: Boolean(this._config.backdrop),
          // 'static' option will be translated to true, and booleans will keep their value,
          isAnimated: this._isAnimated()
        });
      }
      _initializeFocusTrap() {
        return new FocusTrap({
          trapElement: this._element
        });
      }
      _showElement(relatedTarget) {
        if (!document.body.contains(this._element)) {
          document.body.append(this._element);
        }
        this._element.style.display = "block";
        this._element.removeAttribute("aria-hidden");
        this._element.setAttribute("aria-modal", true);
        this._element.setAttribute("role", "dialog");
        this._element.scrollTop = 0;
        const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog);
        if (modalBody) {
          modalBody.scrollTop = 0;
        }
        reflow(this._element);
        this._element.classList.add(CLASS_NAME_SHOW$4);
        const transitionComplete = () => {
          if (this._config.focus) {
            this._focustrap.activate();
          }
          this._isTransitioning = false;
          EventHandler.trigger(this._element, EVENT_SHOWN$4, {
            relatedTarget
          });
        };
        this._queueCallback(transitionComplete, this._dialog, this._isAnimated());
      }
      _addEventListeners() {
        EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS$1, (event) => {
          if (event.key !== ESCAPE_KEY$1) {
            return;
          }
          if (this._config.keyboard) {
            this.hide();
            return;
          }
          this._triggerBackdropTransition();
        });
        EventHandler.on(window, EVENT_RESIZE$1, () => {
          if (this._isShown && !this._isTransitioning) {
            this._adjustDialog();
          }
        });
        EventHandler.on(this._element, EVENT_MOUSEDOWN_DISMISS, (event) => {
          EventHandler.one(this._element, EVENT_CLICK_DISMISS, (event2) => {
            if (this._element !== event.target || this._element !== event2.target) {
              return;
            }
            if (this._config.backdrop === "static") {
              this._triggerBackdropTransition();
              return;
            }
            if (this._config.backdrop) {
              this.hide();
            }
          });
        });
      }
      _hideModal() {
        this._element.style.display = "none";
        this._element.setAttribute("aria-hidden", true);
        this._element.removeAttribute("aria-modal");
        this._element.removeAttribute("role");
        this._isTransitioning = false;
        this._backdrop.hide(() => {
          document.body.classList.remove(CLASS_NAME_OPEN);
          this._resetAdjustments();
          this._scrollBar.reset();
          EventHandler.trigger(this._element, EVENT_HIDDEN$4);
        });
      }
      _isAnimated() {
        return this._element.classList.contains(CLASS_NAME_FADE$3);
      }
      _triggerBackdropTransition() {
        const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED$1);
        if (hideEvent.defaultPrevented) {
          return;
        }
        const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;
        const initialOverflowY = this._element.style.overflowY;
        if (initialOverflowY === "hidden" || this._element.classList.contains(CLASS_NAME_STATIC)) {
          return;
        }
        if (!isModalOverflowing) {
          this._element.style.overflowY = "hidden";
        }
        this._element.classList.add(CLASS_NAME_STATIC);
        this._queueCallback(() => {
          this._element.classList.remove(CLASS_NAME_STATIC);
          this._queueCallback(() => {
            this._element.style.overflowY = initialOverflowY;
          }, this._dialog);
        }, this._dialog);
        this._element.focus();
      }
      /**
       * The following methods are used to handle overflowing modals
       */
      _adjustDialog() {
        const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;
        const scrollbarWidth = this._scrollBar.getWidth();
        const isBodyOverflowing = scrollbarWidth > 0;
        if (isBodyOverflowing && !isModalOverflowing) {
          const property = isRTL() ? "paddingLeft" : "paddingRight";
          this._element.style[property] = `${scrollbarWidth}px`;
        }
        if (!isBodyOverflowing && isModalOverflowing) {
          const property = isRTL() ? "paddingRight" : "paddingLeft";
          this._element.style[property] = `${scrollbarWidth}px`;
        }
      }
      _resetAdjustments() {
        this._element.style.paddingLeft = "";
        this._element.style.paddingRight = "";
      }
      // Static
      static jQueryInterface(config2, relatedTarget) {
        return this.each(function() {
          const data2 = Modal.getOrCreateInstance(this, config2);
          if (typeof config2 !== "string") {
            return;
          }
          if (typeof data2[config2] === "undefined") {
            throw new TypeError(`No method named "${config2}"`);
          }
          data2[config2](relatedTarget);
        });
      }
    }
    EventHandler.on(document, EVENT_CLICK_DATA_API$2, SELECTOR_DATA_TOGGLE$2, function(event) {
      const target = SelectorEngine.getElementFromSelector(this);
      if (["A", "AREA"].includes(this.tagName)) {
        event.preventDefault();
      }
      EventHandler.one(target, EVENT_SHOW$4, (showEvent) => {
        if (showEvent.defaultPrevented) {
          return;
        }
        EventHandler.one(target, EVENT_HIDDEN$4, () => {
          if (isVisible(this)) {
            this.focus();
          }
        });
      });
      const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR$1);
      if (alreadyOpen) {
        Modal.getInstance(alreadyOpen).hide();
      }
      const data2 = Modal.getOrCreateInstance(target);
      data2.toggle(this);
    });
    enableDismissTrigger(Modal);
    defineJQueryPlugin(Modal);
    const NAME$6 = "offcanvas";
    const DATA_KEY$3 = "bs.offcanvas";
    const EVENT_KEY$3 = `.${DATA_KEY$3}`;
    const DATA_API_KEY$1 = ".data-api";
    const EVENT_LOAD_DATA_API$2 = `load${EVENT_KEY$3}${DATA_API_KEY$1}`;
    const ESCAPE_KEY = "Escape";
    const CLASS_NAME_SHOW$3 = "show";
    const CLASS_NAME_SHOWING$1 = "showing";
    const CLASS_NAME_HIDING = "hiding";
    const CLASS_NAME_BACKDROP = "offcanvas-backdrop";
    const OPEN_SELECTOR = ".offcanvas.show";
    const EVENT_SHOW$3 = `show${EVENT_KEY$3}`;
    const EVENT_SHOWN$3 = `shown${EVENT_KEY$3}`;
    const EVENT_HIDE$3 = `hide${EVENT_KEY$3}`;
    const EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY$3}`;
    const EVENT_HIDDEN$3 = `hidden${EVENT_KEY$3}`;
    const EVENT_RESIZE = `resize${EVENT_KEY$3}`;
    const EVENT_CLICK_DATA_API$1 = `click${EVENT_KEY$3}${DATA_API_KEY$1}`;
    const EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY$3}`;
    const SELECTOR_DATA_TOGGLE$1 = '[data-bs-toggle="offcanvas"]';
    const Default$5 = {
      backdrop: true,
      keyboard: true,
      scroll: false
    };
    const DefaultType$5 = {
      backdrop: "(boolean|string)",
      keyboard: "boolean",
      scroll: "boolean"
    };
    class Offcanvas extends BaseComponent {
      constructor(element, config2) {
        super(element, config2);
        this._isShown = false;
        this._backdrop = this._initializeBackDrop();
        this._focustrap = this._initializeFocusTrap();
        this._addEventListeners();
      }
      // Getters
      static get Default() {
        return Default$5;
      }
      static get DefaultType() {
        return DefaultType$5;
      }
      static get NAME() {
        return NAME$6;
      }
      // Public
      toggle(relatedTarget) {
        return this._isShown ? this.hide() : this.show(relatedTarget);
      }
      show(relatedTarget) {
        if (this._isShown) {
          return;
        }
        const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$3, {
          relatedTarget
        });
        if (showEvent.defaultPrevented) {
          return;
        }
        this._isShown = true;
        this._backdrop.show();
        if (!this._config.scroll) {
          new ScrollBarHelper().hide();
        }
        this._element.setAttribute("aria-modal", true);
        this._element.setAttribute("role", "dialog");
        this._element.classList.add(CLASS_NAME_SHOWING$1);
        const completeCallBack = () => {
          if (!this._config.scroll || this._config.backdrop) {
            this._focustrap.activate();
          }
          this._element.classList.add(CLASS_NAME_SHOW$3);
          this._element.classList.remove(CLASS_NAME_SHOWING$1);
          EventHandler.trigger(this._element, EVENT_SHOWN$3, {
            relatedTarget
          });
        };
        this._queueCallback(completeCallBack, this._element, true);
      }
      hide() {
        if (!this._isShown) {
          return;
        }
        const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$3);
        if (hideEvent.defaultPrevented) {
          return;
        }
        this._focustrap.deactivate();
        this._element.blur();
        this._isShown = false;
        this._element.classList.add(CLASS_NAME_HIDING);
        this._backdrop.hide();
        const completeCallback = () => {
          this._element.classList.remove(CLASS_NAME_SHOW$3, CLASS_NAME_HIDING);
          this._element.removeAttribute("aria-modal");
          this._element.removeAttribute("role");
          if (!this._config.scroll) {
            new ScrollBarHelper().reset();
          }
          EventHandler.trigger(this._element, EVENT_HIDDEN$3);
        };
        this._queueCallback(completeCallback, this._element, true);
      }
      dispose() {
        this._backdrop.dispose();
        this._focustrap.deactivate();
        super.dispose();
      }
      // Private
      _initializeBackDrop() {
        const clickCallback = () => {
          if (this._config.backdrop === "static") {
            EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);
            return;
          }
          this.hide();
        };
        const isVisible2 = Boolean(this._config.backdrop);
        return new Backdrop({
          className: CLASS_NAME_BACKDROP,
          isVisible: isVisible2,
          isAnimated: true,
          rootElement: this._element.parentNode,
          clickCallback: isVisible2 ? clickCallback : null
        });
      }
      _initializeFocusTrap() {
        return new FocusTrap({
          trapElement: this._element
        });
      }
      _addEventListeners() {
        EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, (event) => {
          if (event.key !== ESCAPE_KEY) {
            return;
          }
          if (this._config.keyboard) {
            this.hide();
            return;
          }
          EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);
        });
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = Offcanvas.getOrCreateInstance(this, config2);
          if (typeof config2 !== "string") {
            return;
          }
          if (data2[config2] === void 0 || config2.startsWith("_") || config2 === "constructor") {
            throw new TypeError(`No method named "${config2}"`);
          }
          data2[config2](this);
        });
      }
    }
    EventHandler.on(document, EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE$1, function(event) {
      const target = SelectorEngine.getElementFromSelector(this);
      if (["A", "AREA"].includes(this.tagName)) {
        event.preventDefault();
      }
      if (isDisabled(this)) {
        return;
      }
      EventHandler.one(target, EVENT_HIDDEN$3, () => {
        if (isVisible(this)) {
          this.focus();
        }
      });
      const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR);
      if (alreadyOpen && alreadyOpen !== target) {
        Offcanvas.getInstance(alreadyOpen).hide();
      }
      const data2 = Offcanvas.getOrCreateInstance(target);
      data2.toggle(this);
    });
    EventHandler.on(window, EVENT_LOAD_DATA_API$2, () => {
      for (const selector of SelectorEngine.find(OPEN_SELECTOR)) {
        Offcanvas.getOrCreateInstance(selector).show();
      }
    });
    EventHandler.on(window, EVENT_RESIZE, () => {
      for (const element of SelectorEngine.find("[aria-modal][class*=show][class*=offcanvas-]")) {
        if (getComputedStyle(element).position !== "fixed") {
          Offcanvas.getOrCreateInstance(element).hide();
        }
      }
    });
    enableDismissTrigger(Offcanvas);
    defineJQueryPlugin(Offcanvas);
    const ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
    const DefaultAllowlist = {
      // Global attributes allowed on any supplied element below.
      "*": ["class", "dir", "id", "lang", "role", ARIA_ATTRIBUTE_PATTERN],
      a: ["target", "href", "title", "rel"],
      area: [],
      b: [],
      br: [],
      col: [],
      code: [],
      dd: [],
      div: [],
      dl: [],
      dt: [],
      em: [],
      hr: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      i: [],
      img: ["src", "srcset", "alt", "title", "width", "height"],
      li: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      small: [],
      span: [],
      sub: [],
      sup: [],
      strong: [],
      u: [],
      ul: []
    };
    const uriAttributes = /* @__PURE__ */ new Set(["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"]);
    const SAFE_URL_PATTERN = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i;
    const allowedAttribute = (attribute, allowedAttributeList) => {
      const attributeName = attribute.nodeName.toLowerCase();
      if (allowedAttributeList.includes(attributeName)) {
        if (uriAttributes.has(attributeName)) {
          return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue));
        }
        return true;
      }
      return allowedAttributeList.filter((attributeRegex) => attributeRegex instanceof RegExp).some((regex) => regex.test(attributeName));
    };
    function sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {
      if (!unsafeHtml.length) {
        return unsafeHtml;
      }
      if (sanitizeFunction && typeof sanitizeFunction === "function") {
        return sanitizeFunction(unsafeHtml);
      }
      const domParser = new window.DOMParser();
      const createdDocument = domParser.parseFromString(unsafeHtml, "text/html");
      const elements = [].concat(...createdDocument.body.querySelectorAll("*"));
      for (const element of elements) {
        const elementName = element.nodeName.toLowerCase();
        if (!Object.keys(allowList).includes(elementName)) {
          element.remove();
          continue;
        }
        const attributeList = [].concat(...element.attributes);
        const allowedAttributes = [].concat(allowList["*"] || [], allowList[elementName] || []);
        for (const attribute of attributeList) {
          if (!allowedAttribute(attribute, allowedAttributes)) {
            element.removeAttribute(attribute.nodeName);
          }
        }
      }
      return createdDocument.body.innerHTML;
    }
    const NAME$5 = "TemplateFactory";
    const Default$4 = {
      allowList: DefaultAllowlist,
      content: {},
      // { selector : text ,  selector2 : text2 , }
      extraClass: "",
      html: false,
      sanitize: true,
      sanitizeFn: null,
      template: "<div></div>"
    };
    const DefaultType$4 = {
      allowList: "object",
      content: "object",
      extraClass: "(string|function)",
      html: "boolean",
      sanitize: "boolean",
      sanitizeFn: "(null|function)",
      template: "string"
    };
    const DefaultContentType = {
      entry: "(string|element|function|null)",
      selector: "(string|element)"
    };
    class TemplateFactory extends Config {
      constructor(config2) {
        super();
        this._config = this._getConfig(config2);
      }
      // Getters
      static get Default() {
        return Default$4;
      }
      static get DefaultType() {
        return DefaultType$4;
      }
      static get NAME() {
        return NAME$5;
      }
      // Public
      getContent() {
        return Object.values(this._config.content).map((config2) => this._resolvePossibleFunction(config2)).filter(Boolean);
      }
      hasContent() {
        return this.getContent().length > 0;
      }
      changeContent(content) {
        this._checkContent(content);
        this._config.content = {
          ...this._config.content,
          ...content
        };
        return this;
      }
      toHtml() {
        const templateWrapper = document.createElement("div");
        templateWrapper.innerHTML = this._maybeSanitize(this._config.template);
        for (const [selector, text2] of Object.entries(this._config.content)) {
          this._setContent(templateWrapper, text2, selector);
        }
        const template = templateWrapper.children[0];
        const extraClass = this._resolvePossibleFunction(this._config.extraClass);
        if (extraClass) {
          template.classList.add(...extraClass.split(" "));
        }
        return template;
      }
      // Private
      _typeCheckConfig(config2) {
        super._typeCheckConfig(config2);
        this._checkContent(config2.content);
      }
      _checkContent(arg) {
        for (const [selector, content] of Object.entries(arg)) {
          super._typeCheckConfig({
            selector,
            entry: content
          }, DefaultContentType);
        }
      }
      _setContent(template, content, selector) {
        const templateElement = SelectorEngine.findOne(selector, template);
        if (!templateElement) {
          return;
        }
        content = this._resolvePossibleFunction(content);
        if (!content) {
          templateElement.remove();
          return;
        }
        if (isElement(content)) {
          this._putElementInTemplate(getElement(content), templateElement);
          return;
        }
        if (this._config.html) {
          templateElement.innerHTML = this._maybeSanitize(content);
          return;
        }
        templateElement.textContent = content;
      }
      _maybeSanitize(arg) {
        return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg;
      }
      _resolvePossibleFunction(arg) {
        return execute(arg, [this]);
      }
      _putElementInTemplate(element, templateElement) {
        if (this._config.html) {
          templateElement.innerHTML = "";
          templateElement.append(element);
          return;
        }
        templateElement.textContent = element.textContent;
      }
    }
    const NAME$4 = "tooltip";
    const DISALLOWED_ATTRIBUTES = /* @__PURE__ */ new Set(["sanitize", "allowList", "sanitizeFn"]);
    const CLASS_NAME_FADE$2 = "fade";
    const CLASS_NAME_MODAL = "modal";
    const CLASS_NAME_SHOW$2 = "show";
    const SELECTOR_TOOLTIP_INNER = ".tooltip-inner";
    const SELECTOR_MODAL = `.${CLASS_NAME_MODAL}`;
    const EVENT_MODAL_HIDE = "hide.bs.modal";
    const TRIGGER_HOVER = "hover";
    const TRIGGER_FOCUS = "focus";
    const TRIGGER_CLICK = "click";
    const TRIGGER_MANUAL = "manual";
    const EVENT_HIDE$2 = "hide";
    const EVENT_HIDDEN$2 = "hidden";
    const EVENT_SHOW$2 = "show";
    const EVENT_SHOWN$2 = "shown";
    const EVENT_INSERTED = "inserted";
    const EVENT_CLICK$1 = "click";
    const EVENT_FOCUSIN$1 = "focusin";
    const EVENT_FOCUSOUT$1 = "focusout";
    const EVENT_MOUSEENTER = "mouseenter";
    const EVENT_MOUSELEAVE = "mouseleave";
    const AttachmentMap = {
      AUTO: "auto",
      TOP: "top",
      RIGHT: isRTL() ? "left" : "right",
      BOTTOM: "bottom",
      LEFT: isRTL() ? "right" : "left"
    };
    const Default$3 = {
      allowList: DefaultAllowlist,
      animation: true,
      boundary: "clippingParents",
      container: false,
      customClass: "",
      delay: 0,
      fallbackPlacements: ["top", "right", "bottom", "left"],
      html: false,
      offset: [0, 6],
      placement: "top",
      popperConfig: null,
      sanitize: true,
      sanitizeFn: null,
      selector: false,
      template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
      title: "",
      trigger: "hover focus"
    };
    const DefaultType$3 = {
      allowList: "object",
      animation: "boolean",
      boundary: "(string|element)",
      container: "(string|element|boolean)",
      customClass: "(string|function)",
      delay: "(number|object)",
      fallbackPlacements: "array",
      html: "boolean",
      offset: "(array|string|function)",
      placement: "(string|function)",
      popperConfig: "(null|object|function)",
      sanitize: "boolean",
      sanitizeFn: "(null|function)",
      selector: "(string|boolean)",
      template: "string",
      title: "(string|element|function)",
      trigger: "string"
    };
    class Tooltip extends BaseComponent {
      constructor(element, config2) {
        if (typeof Popper === "undefined") {
          throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");
        }
        super(element, config2);
        this._isEnabled = true;
        this._timeout = 0;
        this._isHovered = null;
        this._activeTrigger = {};
        this._popper = null;
        this._templateFactory = null;
        this._newContent = null;
        this.tip = null;
        this._setListeners();
        if (!this._config.selector) {
          this._fixTitle();
        }
      }
      // Getters
      static get Default() {
        return Default$3;
      }
      static get DefaultType() {
        return DefaultType$3;
      }
      static get NAME() {
        return NAME$4;
      }
      // Public
      enable() {
        this._isEnabled = true;
      }
      disable() {
        this._isEnabled = false;
      }
      toggleEnabled() {
        this._isEnabled = !this._isEnabled;
      }
      toggle() {
        if (!this._isEnabled) {
          return;
        }
        this._activeTrigger.click = !this._activeTrigger.click;
        if (this._isShown()) {
          this._leave();
          return;
        }
        this._enter();
      }
      dispose() {
        clearTimeout(this._timeout);
        EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);
        if (this._element.getAttribute("data-bs-original-title")) {
          this._element.setAttribute("title", this._element.getAttribute("data-bs-original-title"));
        }
        this._disposePopper();
        super.dispose();
      }
      show() {
        if (this._element.style.display === "none") {
          throw new Error("Please use show on visible elements");
        }
        if (!(this._isWithContent() && this._isEnabled)) {
          return;
        }
        const showEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOW$2));
        const shadowRoot = findShadowRoot(this._element);
        const isInTheDom = (shadowRoot || this._element.ownerDocument.documentElement).contains(this._element);
        if (showEvent.defaultPrevented || !isInTheDom) {
          return;
        }
        this._disposePopper();
        const tip = this._getTipElement();
        this._element.setAttribute("aria-describedby", tip.getAttribute("id"));
        const {
          container
        } = this._config;
        if (!this._element.ownerDocument.documentElement.contains(this.tip)) {
          container.append(tip);
          EventHandler.trigger(this._element, this.constructor.eventName(EVENT_INSERTED));
        }
        this._popper = this._createPopper(tip);
        tip.classList.add(CLASS_NAME_SHOW$2);
        if ("ontouchstart" in document.documentElement) {
          for (const element of [].concat(...document.body.children)) {
            EventHandler.on(element, "mouseover", noop);
          }
        }
        const complete = () => {
          EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOWN$2));
          if (this._isHovered === false) {
            this._leave();
          }
          this._isHovered = false;
        };
        this._queueCallback(complete, this.tip, this._isAnimated());
      }
      hide() {
        if (!this._isShown()) {
          return;
        }
        const hideEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDE$2));
        if (hideEvent.defaultPrevented) {
          return;
        }
        const tip = this._getTipElement();
        tip.classList.remove(CLASS_NAME_SHOW$2);
        if ("ontouchstart" in document.documentElement) {
          for (const element of [].concat(...document.body.children)) {
            EventHandler.off(element, "mouseover", noop);
          }
        }
        this._activeTrigger[TRIGGER_CLICK] = false;
        this._activeTrigger[TRIGGER_FOCUS] = false;
        this._activeTrigger[TRIGGER_HOVER] = false;
        this._isHovered = null;
        const complete = () => {
          if (this._isWithActiveTrigger()) {
            return;
          }
          if (!this._isHovered) {
            this._disposePopper();
          }
          this._element.removeAttribute("aria-describedby");
          EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDDEN$2));
        };
        this._queueCallback(complete, this.tip, this._isAnimated());
      }
      update() {
        if (this._popper) {
          this._popper.update();
        }
      }
      // Protected
      _isWithContent() {
        return Boolean(this._getTitle());
      }
      _getTipElement() {
        if (!this.tip) {
          this.tip = this._createTipElement(this._newContent || this._getContentForTemplate());
        }
        return this.tip;
      }
      _createTipElement(content) {
        const tip = this._getTemplateFactory(content).toHtml();
        if (!tip) {
          return null;
        }
        tip.classList.remove(CLASS_NAME_FADE$2, CLASS_NAME_SHOW$2);
        tip.classList.add(`bs-${this.constructor.NAME}-auto`);
        const tipId = getUID(this.constructor.NAME).toString();
        tip.setAttribute("id", tipId);
        if (this._isAnimated()) {
          tip.classList.add(CLASS_NAME_FADE$2);
        }
        return tip;
      }
      setContent(content) {
        this._newContent = content;
        if (this._isShown()) {
          this._disposePopper();
          this.show();
        }
      }
      _getTemplateFactory(content) {
        if (this._templateFactory) {
          this._templateFactory.changeContent(content);
        } else {
          this._templateFactory = new TemplateFactory({
            ...this._config,
            // the `content` var has to be after `this._config`
            // to override config.content in case of popover
            content,
            extraClass: this._resolvePossibleFunction(this._config.customClass)
          });
        }
        return this._templateFactory;
      }
      _getContentForTemplate() {
        return {
          [SELECTOR_TOOLTIP_INNER]: this._getTitle()
        };
      }
      _getTitle() {
        return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute("data-bs-original-title");
      }
      // Private
      _initializeOnDelegatedTarget(event) {
        return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig());
      }
      _isAnimated() {
        return this._config.animation || this.tip && this.tip.classList.contains(CLASS_NAME_FADE$2);
      }
      _isShown() {
        return this.tip && this.tip.classList.contains(CLASS_NAME_SHOW$2);
      }
      _createPopper(tip) {
        const placement = execute(this._config.placement, [this, tip, this._element]);
        const attachment = AttachmentMap[placement.toUpperCase()];
        return createPopper(this._element, tip, this._getPopperConfig(attachment));
      }
      _getOffset() {
        const {
          offset: offset2
        } = this._config;
        if (typeof offset2 === "string") {
          return offset2.split(",").map((value) => Number.parseInt(value, 10));
        }
        if (typeof offset2 === "function") {
          return (popperData) => offset2(popperData, this._element);
        }
        return offset2;
      }
      _resolvePossibleFunction(arg) {
        return execute(arg, [this._element]);
      }
      _getPopperConfig(attachment) {
        const defaultBsPopperConfig = {
          placement: attachment,
          modifiers: [{
            name: "flip",
            options: {
              fallbackPlacements: this._config.fallbackPlacements
            }
          }, {
            name: "offset",
            options: {
              offset: this._getOffset()
            }
          }, {
            name: "preventOverflow",
            options: {
              boundary: this._config.boundary
            }
          }, {
            name: "arrow",
            options: {
              element: `.${this.constructor.NAME}-arrow`
            }
          }, {
            name: "preSetPlacement",
            enabled: true,
            phase: "beforeMain",
            fn: (data2) => {
              this._getTipElement().setAttribute("data-popper-placement", data2.state.placement);
            }
          }]
        };
        return {
          ...defaultBsPopperConfig,
          ...execute(this._config.popperConfig, [defaultBsPopperConfig])
        };
      }
      _setListeners() {
        const triggers = this._config.trigger.split(" ");
        for (const trigger of triggers) {
          if (trigger === "click") {
            EventHandler.on(this._element, this.constructor.eventName(EVENT_CLICK$1), this._config.selector, (event) => {
              const context = this._initializeOnDelegatedTarget(event);
              context.toggle();
            });
          } else if (trigger !== TRIGGER_MANUAL) {
            const eventIn = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSEENTER) : this.constructor.eventName(EVENT_FOCUSIN$1);
            const eventOut = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSELEAVE) : this.constructor.eventName(EVENT_FOCUSOUT$1);
            EventHandler.on(this._element, eventIn, this._config.selector, (event) => {
              const context = this._initializeOnDelegatedTarget(event);
              context._activeTrigger[event.type === "focusin" ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;
              context._enter();
            });
            EventHandler.on(this._element, eventOut, this._config.selector, (event) => {
              const context = this._initializeOnDelegatedTarget(event);
              context._activeTrigger[event.type === "focusout" ? TRIGGER_FOCUS : TRIGGER_HOVER] = context._element.contains(event.relatedTarget);
              context._leave();
            });
          }
        }
        this._hideModalHandler = () => {
          if (this._element) {
            this.hide();
          }
        };
        EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);
      }
      _fixTitle() {
        const title = this._element.getAttribute("title");
        if (!title) {
          return;
        }
        if (!this._element.getAttribute("aria-label") && !this._element.textContent.trim()) {
          this._element.setAttribute("aria-label", title);
        }
        this._element.setAttribute("data-bs-original-title", title);
        this._element.removeAttribute("title");
      }
      _enter() {
        if (this._isShown() || this._isHovered) {
          this._isHovered = true;
          return;
        }
        this._isHovered = true;
        this._setTimeout(() => {
          if (this._isHovered) {
            this.show();
          }
        }, this._config.delay.show);
      }
      _leave() {
        if (this._isWithActiveTrigger()) {
          return;
        }
        this._isHovered = false;
        this._setTimeout(() => {
          if (!this._isHovered) {
            this.hide();
          }
        }, this._config.delay.hide);
      }
      _setTimeout(handler, timeout) {
        clearTimeout(this._timeout);
        this._timeout = setTimeout(handler, timeout);
      }
      _isWithActiveTrigger() {
        return Object.values(this._activeTrigger).includes(true);
      }
      _getConfig(config2) {
        const dataAttributes = Manipulator.getDataAttributes(this._element);
        for (const dataAttribute of Object.keys(dataAttributes)) {
          if (DISALLOWED_ATTRIBUTES.has(dataAttribute)) {
            delete dataAttributes[dataAttribute];
          }
        }
        config2 = {
          ...dataAttributes,
          ...typeof config2 === "object" && config2 ? config2 : {}
        };
        config2 = this._mergeConfigObj(config2);
        config2 = this._configAfterMerge(config2);
        this._typeCheckConfig(config2);
        return config2;
      }
      _configAfterMerge(config2) {
        config2.container = config2.container === false ? document.body : getElement(config2.container);
        if (typeof config2.delay === "number") {
          config2.delay = {
            show: config2.delay,
            hide: config2.delay
          };
        }
        if (typeof config2.title === "number") {
          config2.title = config2.title.toString();
        }
        if (typeof config2.content === "number") {
          config2.content = config2.content.toString();
        }
        return config2;
      }
      _getDelegateConfig() {
        const config2 = {};
        for (const [key2, value] of Object.entries(this._config)) {
          if (this.constructor.Default[key2] !== value) {
            config2[key2] = value;
          }
        }
        config2.selector = false;
        config2.trigger = "manual";
        return config2;
      }
      _disposePopper() {
        if (this._popper) {
          this._popper.destroy();
          this._popper = null;
        }
        if (this.tip) {
          this.tip.remove();
          this.tip = null;
        }
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = Tooltip.getOrCreateInstance(this, config2);
          if (typeof config2 !== "string") {
            return;
          }
          if (typeof data2[config2] === "undefined") {
            throw new TypeError(`No method named "${config2}"`);
          }
          data2[config2]();
        });
      }
    }
    defineJQueryPlugin(Tooltip);
    const NAME$3 = "popover";
    const SELECTOR_TITLE = ".popover-header";
    const SELECTOR_CONTENT = ".popover-body";
    const Default$2 = {
      ...Tooltip.Default,
      content: "",
      offset: [0, 8],
      placement: "right",
      template: '<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',
      trigger: "click"
    };
    const DefaultType$2 = {
      ...Tooltip.DefaultType,
      content: "(null|string|element|function)"
    };
    class Popover extends Tooltip {
      // Getters
      static get Default() {
        return Default$2;
      }
      static get DefaultType() {
        return DefaultType$2;
      }
      static get NAME() {
        return NAME$3;
      }
      // Overrides
      _isWithContent() {
        return this._getTitle() || this._getContent();
      }
      // Private
      _getContentForTemplate() {
        return {
          [SELECTOR_TITLE]: this._getTitle(),
          [SELECTOR_CONTENT]: this._getContent()
        };
      }
      _getContent() {
        return this._resolvePossibleFunction(this._config.content);
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = Popover.getOrCreateInstance(this, config2);
          if (typeof config2 !== "string") {
            return;
          }
          if (typeof data2[config2] === "undefined") {
            throw new TypeError(`No method named "${config2}"`);
          }
          data2[config2]();
        });
      }
    }
    defineJQueryPlugin(Popover);
    const NAME$2 = "scrollspy";
    const DATA_KEY$2 = "bs.scrollspy";
    const EVENT_KEY$2 = `.${DATA_KEY$2}`;
    const DATA_API_KEY = ".data-api";
    const EVENT_ACTIVATE = `activate${EVENT_KEY$2}`;
    const EVENT_CLICK = `click${EVENT_KEY$2}`;
    const EVENT_LOAD_DATA_API$1 = `load${EVENT_KEY$2}${DATA_API_KEY}`;
    const CLASS_NAME_DROPDOWN_ITEM = "dropdown-item";
    const CLASS_NAME_ACTIVE$1 = "active";
    const SELECTOR_DATA_SPY = '[data-bs-spy="scroll"]';
    const SELECTOR_TARGET_LINKS = "[href]";
    const SELECTOR_NAV_LIST_GROUP = ".nav, .list-group";
    const SELECTOR_NAV_LINKS = ".nav-link";
    const SELECTOR_NAV_ITEMS = ".nav-item";
    const SELECTOR_LIST_ITEMS = ".list-group-item";
    const SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_NAV_ITEMS} > ${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`;
    const SELECTOR_DROPDOWN = ".dropdown";
    const SELECTOR_DROPDOWN_TOGGLE$1 = ".dropdown-toggle";
    const Default$1 = {
      offset: null,
      // TODO: v6 @deprecated, keep it for backwards compatibility reasons
      rootMargin: "0px 0px -25%",
      smoothScroll: false,
      target: null,
      threshold: [0.1, 0.5, 1]
    };
    const DefaultType$1 = {
      offset: "(number|null)",
      // TODO v6 @deprecated, keep it for backwards compatibility reasons
      rootMargin: "string",
      smoothScroll: "boolean",
      target: "element",
      threshold: "array"
    };
    class ScrollSpy extends BaseComponent {
      constructor(element, config2) {
        super(element, config2);
        this._targetLinks = /* @__PURE__ */ new Map();
        this._observableSections = /* @__PURE__ */ new Map();
        this._rootElement = getComputedStyle(this._element).overflowY === "visible" ? null : this._element;
        this._activeTarget = null;
        this._observer = null;
        this._previousScrollData = {
          visibleEntryTop: 0,
          parentScrollTop: 0
        };
        this.refresh();
      }
      // Getters
      static get Default() {
        return Default$1;
      }
      static get DefaultType() {
        return DefaultType$1;
      }
      static get NAME() {
        return NAME$2;
      }
      // Public
      refresh() {
        this._initializeTargetsAndObservables();
        this._maybeEnableSmoothScroll();
        if (this._observer) {
          this._observer.disconnect();
        } else {
          this._observer = this._getNewObserver();
        }
        for (const section of this._observableSections.values()) {
          this._observer.observe(section);
        }
      }
      dispose() {
        this._observer.disconnect();
        super.dispose();
      }
      // Private
      _configAfterMerge(config2) {
        config2.target = getElement(config2.target) || document.body;
        config2.rootMargin = config2.offset ? `${config2.offset}px 0px -30%` : config2.rootMargin;
        if (typeof config2.threshold === "string") {
          config2.threshold = config2.threshold.split(",").map((value) => Number.parseFloat(value));
        }
        return config2;
      }
      _maybeEnableSmoothScroll() {
        if (!this._config.smoothScroll) {
          return;
        }
        EventHandler.off(this._config.target, EVENT_CLICK);
        EventHandler.on(this._config.target, EVENT_CLICK, SELECTOR_TARGET_LINKS, (event) => {
          const observableSection = this._observableSections.get(event.target.hash);
          if (observableSection) {
            event.preventDefault();
            const root = this._rootElement || window;
            const height = observableSection.offsetTop - this._element.offsetTop;
            if (root.scrollTo) {
              root.scrollTo({
                top: height,
                behavior: "smooth"
              });
              return;
            }
            root.scrollTop = height;
          }
        });
      }
      _getNewObserver() {
        const options = {
          root: this._rootElement,
          threshold: this._config.threshold,
          rootMargin: this._config.rootMargin
        };
        return new IntersectionObserver((entries) => this._observerCallback(entries), options);
      }
      // The logic of selection
      _observerCallback(entries) {
        const targetElement = (entry) => this._targetLinks.get(`#${entry.target.id}`);
        const activate = (entry) => {
          this._previousScrollData.visibleEntryTop = entry.target.offsetTop;
          this._process(targetElement(entry));
        };
        const parentScrollTop = (this._rootElement || document.documentElement).scrollTop;
        const userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop;
        this._previousScrollData.parentScrollTop = parentScrollTop;
        for (const entry of entries) {
          if (!entry.isIntersecting) {
            this._activeTarget = null;
            this._clearActiveClass(targetElement(entry));
            continue;
          }
          const entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop;
          if (userScrollsDown && entryIsLowerThanPrevious) {
            activate(entry);
            if (!parentScrollTop) {
              return;
            }
            continue;
          }
          if (!userScrollsDown && !entryIsLowerThanPrevious) {
            activate(entry);
          }
        }
      }
      _initializeTargetsAndObservables() {
        this._targetLinks = /* @__PURE__ */ new Map();
        this._observableSections = /* @__PURE__ */ new Map();
        const targetLinks = SelectorEngine.find(SELECTOR_TARGET_LINKS, this._config.target);
        for (const anchor of targetLinks) {
          if (!anchor.hash || isDisabled(anchor)) {
            continue;
          }
          const observableSection = SelectorEngine.findOne(decodeURI(anchor.hash), this._element);
          if (isVisible(observableSection)) {
            this._targetLinks.set(decodeURI(anchor.hash), anchor);
            this._observableSections.set(anchor.hash, observableSection);
          }
        }
      }
      _process(target) {
        if (this._activeTarget === target) {
          return;
        }
        this._clearActiveClass(this._config.target);
        this._activeTarget = target;
        target.classList.add(CLASS_NAME_ACTIVE$1);
        this._activateParents(target);
        EventHandler.trigger(this._element, EVENT_ACTIVATE, {
          relatedTarget: target
        });
      }
      _activateParents(target) {
        if (target.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {
          SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE$1, target.closest(SELECTOR_DROPDOWN)).classList.add(CLASS_NAME_ACTIVE$1);
          return;
        }
        for (const listGroup of SelectorEngine.parents(target, SELECTOR_NAV_LIST_GROUP)) {
          for (const item of SelectorEngine.prev(listGroup, SELECTOR_LINK_ITEMS)) {
            item.classList.add(CLASS_NAME_ACTIVE$1);
          }
        }
      }
      _clearActiveClass(parent) {
        parent.classList.remove(CLASS_NAME_ACTIVE$1);
        const activeNodes = SelectorEngine.find(`${SELECTOR_TARGET_LINKS}.${CLASS_NAME_ACTIVE$1}`, parent);
        for (const node of activeNodes) {
          node.classList.remove(CLASS_NAME_ACTIVE$1);
        }
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = ScrollSpy.getOrCreateInstance(this, config2);
          if (typeof config2 !== "string") {
            return;
          }
          if (data2[config2] === void 0 || config2.startsWith("_") || config2 === "constructor") {
            throw new TypeError(`No method named "${config2}"`);
          }
          data2[config2]();
        });
      }
    }
    EventHandler.on(window, EVENT_LOAD_DATA_API$1, () => {
      for (const spy of SelectorEngine.find(SELECTOR_DATA_SPY)) {
        ScrollSpy.getOrCreateInstance(spy);
      }
    });
    defineJQueryPlugin(ScrollSpy);
    const NAME$1 = "tab";
    const DATA_KEY$1 = "bs.tab";
    const EVENT_KEY$1 = `.${DATA_KEY$1}`;
    const EVENT_HIDE$1 = `hide${EVENT_KEY$1}`;
    const EVENT_HIDDEN$1 = `hidden${EVENT_KEY$1}`;
    const EVENT_SHOW$1 = `show${EVENT_KEY$1}`;
    const EVENT_SHOWN$1 = `shown${EVENT_KEY$1}`;
    const EVENT_CLICK_DATA_API = `click${EVENT_KEY$1}`;
    const EVENT_KEYDOWN = `keydown${EVENT_KEY$1}`;
    const EVENT_LOAD_DATA_API = `load${EVENT_KEY$1}`;
    const ARROW_LEFT_KEY = "ArrowLeft";
    const ARROW_RIGHT_KEY = "ArrowRight";
    const ARROW_UP_KEY = "ArrowUp";
    const ARROW_DOWN_KEY = "ArrowDown";
    const HOME_KEY = "Home";
    const END_KEY = "End";
    const CLASS_NAME_ACTIVE = "active";
    const CLASS_NAME_FADE$1 = "fade";
    const CLASS_NAME_SHOW$1 = "show";
    const CLASS_DROPDOWN = "dropdown";
    const SELECTOR_DROPDOWN_TOGGLE = ".dropdown-toggle";
    const SELECTOR_DROPDOWN_MENU = ".dropdown-menu";
    const NOT_SELECTOR_DROPDOWN_TOGGLE = `:not(${SELECTOR_DROPDOWN_TOGGLE})`;
    const SELECTOR_TAB_PANEL = '.list-group, .nav, [role="tablist"]';
    const SELECTOR_OUTER = ".nav-item, .list-group-item";
    const SELECTOR_INNER = `.nav-link${NOT_SELECTOR_DROPDOWN_TOGGLE}, .list-group-item${NOT_SELECTOR_DROPDOWN_TOGGLE}, [role="tab"]${NOT_SELECTOR_DROPDOWN_TOGGLE}`;
    const SELECTOR_DATA_TOGGLE = '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]';
    const SELECTOR_INNER_ELEM = `${SELECTOR_INNER}, ${SELECTOR_DATA_TOGGLE}`;
    const SELECTOR_DATA_TOGGLE_ACTIVE = `.${CLASS_NAME_ACTIVE}[data-bs-toggle="tab"], .${CLASS_NAME_ACTIVE}[data-bs-toggle="pill"], .${CLASS_NAME_ACTIVE}[data-bs-toggle="list"]`;
    class Tab extends BaseComponent {
      constructor(element) {
        super(element);
        this._parent = this._element.closest(SELECTOR_TAB_PANEL);
        if (!this._parent) {
          return;
        }
        this._setInitialAttributes(this._parent, this._getChildren());
        EventHandler.on(this._element, EVENT_KEYDOWN, (event) => this._keydown(event));
      }
      // Getters
      static get NAME() {
        return NAME$1;
      }
      // Public
      show() {
        const innerElem = this._element;
        if (this._elemIsActive(innerElem)) {
          return;
        }
        const active = this._getActiveElem();
        const hideEvent = active ? EventHandler.trigger(active, EVENT_HIDE$1, {
          relatedTarget: innerElem
        }) : null;
        const showEvent = EventHandler.trigger(innerElem, EVENT_SHOW$1, {
          relatedTarget: active
        });
        if (showEvent.defaultPrevented || hideEvent && hideEvent.defaultPrevented) {
          return;
        }
        this._deactivate(active, innerElem);
        this._activate(innerElem, active);
      }
      // Private
      _activate(element, relatedElem) {
        if (!element) {
          return;
        }
        element.classList.add(CLASS_NAME_ACTIVE);
        this._activate(SelectorEngine.getElementFromSelector(element));
        const complete = () => {
          if (element.getAttribute("role") !== "tab") {
            element.classList.add(CLASS_NAME_SHOW$1);
            return;
          }
          element.removeAttribute("tabindex");
          element.setAttribute("aria-selected", true);
          this._toggleDropDown(element, true);
          EventHandler.trigger(element, EVENT_SHOWN$1, {
            relatedTarget: relatedElem
          });
        };
        this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));
      }
      _deactivate(element, relatedElem) {
        if (!element) {
          return;
        }
        element.classList.remove(CLASS_NAME_ACTIVE);
        element.blur();
        this._deactivate(SelectorEngine.getElementFromSelector(element));
        const complete = () => {
          if (element.getAttribute("role") !== "tab") {
            element.classList.remove(CLASS_NAME_SHOW$1);
            return;
          }
          element.setAttribute("aria-selected", false);
          element.setAttribute("tabindex", "-1");
          this._toggleDropDown(element, false);
          EventHandler.trigger(element, EVENT_HIDDEN$1, {
            relatedTarget: relatedElem
          });
        };
        this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));
      }
      _keydown(event) {
        if (![ARROW_LEFT_KEY, ARROW_RIGHT_KEY, ARROW_UP_KEY, ARROW_DOWN_KEY, HOME_KEY, END_KEY].includes(event.key)) {
          return;
        }
        event.stopPropagation();
        event.preventDefault();
        const children = this._getChildren().filter((element) => !isDisabled(element));
        let nextActiveElement;
        if ([HOME_KEY, END_KEY].includes(event.key)) {
          nextActiveElement = children[event.key === HOME_KEY ? 0 : children.length - 1];
        } else {
          const isNext = [ARROW_RIGHT_KEY, ARROW_DOWN_KEY].includes(event.key);
          nextActiveElement = getNextActiveElement(children, event.target, isNext, true);
        }
        if (nextActiveElement) {
          nextActiveElement.focus({
            preventScroll: true
          });
          Tab.getOrCreateInstance(nextActiveElement).show();
        }
      }
      _getChildren() {
        return SelectorEngine.find(SELECTOR_INNER_ELEM, this._parent);
      }
      _getActiveElem() {
        return this._getChildren().find((child) => this._elemIsActive(child)) || null;
      }
      _setInitialAttributes(parent, children) {
        this._setAttributeIfNotExists(parent, "role", "tablist");
        for (const child of children) {
          this._setInitialAttributesOnChild(child);
        }
      }
      _setInitialAttributesOnChild(child) {
        child = this._getInnerElement(child);
        const isActive = this._elemIsActive(child);
        const outerElem = this._getOuterElement(child);
        child.setAttribute("aria-selected", isActive);
        if (outerElem !== child) {
          this._setAttributeIfNotExists(outerElem, "role", "presentation");
        }
        if (!isActive) {
          child.setAttribute("tabindex", "-1");
        }
        this._setAttributeIfNotExists(child, "role", "tab");
        this._setInitialAttributesOnTargetPanel(child);
      }
      _setInitialAttributesOnTargetPanel(child) {
        const target = SelectorEngine.getElementFromSelector(child);
        if (!target) {
          return;
        }
        this._setAttributeIfNotExists(target, "role", "tabpanel");
        if (child.id) {
          this._setAttributeIfNotExists(target, "aria-labelledby", `${child.id}`);
        }
      }
      _toggleDropDown(element, open) {
        const outerElem = this._getOuterElement(element);
        if (!outerElem.classList.contains(CLASS_DROPDOWN)) {
          return;
        }
        const toggle = (selector, className) => {
          const element2 = SelectorEngine.findOne(selector, outerElem);
          if (element2) {
            element2.classList.toggle(className, open);
          }
        };
        toggle(SELECTOR_DROPDOWN_TOGGLE, CLASS_NAME_ACTIVE);
        toggle(SELECTOR_DROPDOWN_MENU, CLASS_NAME_SHOW$1);
        outerElem.setAttribute("aria-expanded", open);
      }
      _setAttributeIfNotExists(element, attribute, value) {
        if (!element.hasAttribute(attribute)) {
          element.setAttribute(attribute, value);
        }
      }
      _elemIsActive(elem) {
        return elem.classList.contains(CLASS_NAME_ACTIVE);
      }
      // Try to get the inner element (usually the .nav-link)
      _getInnerElement(elem) {
        return elem.matches(SELECTOR_INNER_ELEM) ? elem : SelectorEngine.findOne(SELECTOR_INNER_ELEM, elem);
      }
      // Try to get the outer element (usually the .nav-item)
      _getOuterElement(elem) {
        return elem.closest(SELECTOR_OUTER) || elem;
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = Tab.getOrCreateInstance(this);
          if (typeof config2 !== "string") {
            return;
          }
          if (data2[config2] === void 0 || config2.startsWith("_") || config2 === "constructor") {
            throw new TypeError(`No method named "${config2}"`);
          }
          data2[config2]();
        });
      }
    }
    EventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function(event) {
      if (["A", "AREA"].includes(this.tagName)) {
        event.preventDefault();
      }
      if (isDisabled(this)) {
        return;
      }
      Tab.getOrCreateInstance(this).show();
    });
    EventHandler.on(window, EVENT_LOAD_DATA_API, () => {
      for (const element of SelectorEngine.find(SELECTOR_DATA_TOGGLE_ACTIVE)) {
        Tab.getOrCreateInstance(element);
      }
    });
    defineJQueryPlugin(Tab);
    const NAME = "toast";
    const DATA_KEY = "bs.toast";
    const EVENT_KEY = `.${DATA_KEY}`;
    const EVENT_MOUSEOVER = `mouseover${EVENT_KEY}`;
    const EVENT_MOUSEOUT = `mouseout${EVENT_KEY}`;
    const EVENT_FOCUSIN = `focusin${EVENT_KEY}`;
    const EVENT_FOCUSOUT = `focusout${EVENT_KEY}`;
    const EVENT_HIDE = `hide${EVENT_KEY}`;
    const EVENT_HIDDEN = `hidden${EVENT_KEY}`;
    const EVENT_SHOW = `show${EVENT_KEY}`;
    const EVENT_SHOWN = `shown${EVENT_KEY}`;
    const CLASS_NAME_FADE = "fade";
    const CLASS_NAME_HIDE = "hide";
    const CLASS_NAME_SHOW = "show";
    const CLASS_NAME_SHOWING = "showing";
    const DefaultType = {
      animation: "boolean",
      autohide: "boolean",
      delay: "number"
    };
    const Default = {
      animation: true,
      autohide: true,
      delay: 5e3
    };
    class Toast extends BaseComponent {
      constructor(element, config2) {
        super(element, config2);
        this._timeout = null;
        this._hasMouseInteraction = false;
        this._hasKeyboardInteraction = false;
        this._setListeners();
      }
      // Getters
      static get Default() {
        return Default;
      }
      static get DefaultType() {
        return DefaultType;
      }
      static get NAME() {
        return NAME;
      }
      // Public
      show() {
        const showEvent = EventHandler.trigger(this._element, EVENT_SHOW);
        if (showEvent.defaultPrevented) {
          return;
        }
        this._clearTimeout();
        if (this._config.animation) {
          this._element.classList.add(CLASS_NAME_FADE);
        }
        const complete = () => {
          this._element.classList.remove(CLASS_NAME_SHOWING);
          EventHandler.trigger(this._element, EVENT_SHOWN);
          this._maybeScheduleHide();
        };
        this._element.classList.remove(CLASS_NAME_HIDE);
        reflow(this._element);
        this._element.classList.add(CLASS_NAME_SHOW, CLASS_NAME_SHOWING);
        this._queueCallback(complete, this._element, this._config.animation);
      }
      hide() {
        if (!this.isShown()) {
          return;
        }
        const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE);
        if (hideEvent.defaultPrevented) {
          return;
        }
        const complete = () => {
          this._element.classList.add(CLASS_NAME_HIDE);
          this._element.classList.remove(CLASS_NAME_SHOWING, CLASS_NAME_SHOW);
          EventHandler.trigger(this._element, EVENT_HIDDEN);
        };
        this._element.classList.add(CLASS_NAME_SHOWING);
        this._queueCallback(complete, this._element, this._config.animation);
      }
      dispose() {
        this._clearTimeout();
        if (this.isShown()) {
          this._element.classList.remove(CLASS_NAME_SHOW);
        }
        super.dispose();
      }
      isShown() {
        return this._element.classList.contains(CLASS_NAME_SHOW);
      }
      // Private
      _maybeScheduleHide() {
        if (!this._config.autohide) {
          return;
        }
        if (this._hasMouseInteraction || this._hasKeyboardInteraction) {
          return;
        }
        this._timeout = setTimeout(() => {
          this.hide();
        }, this._config.delay);
      }
      _onInteraction(event, isInteracting) {
        switch (event.type) {
          case "mouseover":
          case "mouseout": {
            this._hasMouseInteraction = isInteracting;
            break;
          }
          case "focusin":
          case "focusout": {
            this._hasKeyboardInteraction = isInteracting;
            break;
          }
        }
        if (isInteracting) {
          this._clearTimeout();
          return;
        }
        const nextElement = event.relatedTarget;
        if (this._element === nextElement || this._element.contains(nextElement)) {
          return;
        }
        this._maybeScheduleHide();
      }
      _setListeners() {
        EventHandler.on(this._element, EVENT_MOUSEOVER, (event) => this._onInteraction(event, true));
        EventHandler.on(this._element, EVENT_MOUSEOUT, (event) => this._onInteraction(event, false));
        EventHandler.on(this._element, EVENT_FOCUSIN, (event) => this._onInteraction(event, true));
        EventHandler.on(this._element, EVENT_FOCUSOUT, (event) => this._onInteraction(event, false));
      }
      _clearTimeout() {
        clearTimeout(this._timeout);
        this._timeout = null;
      }
      // Static
      static jQueryInterface(config2) {
        return this.each(function() {
          const data2 = Toast.getOrCreateInstance(this, config2);
          if (typeof config2 === "string") {
            if (typeof data2[config2] === "undefined") {
              throw new TypeError(`No method named "${config2}"`);
            }
            data2[config2](this);
          }
        });
      }
    }
    enableDismissTrigger(Toast);
    defineJQueryPlugin(Toast);
    const hideModal = (modalEl) => {
      if (!modalEl) {
        return;
      }
      const myModal = Modal.getInstance(modalEl);
      myModal == null ? void 0 : myModal.hide();
    };
    const countries = [
      { code: "AF", name: "Afghanistan" },
      { code: "AX", name: "Aland Islands" },
      { code: "AL", name: "Albania" },
      { code: "DZ", name: "Algeria" },
      { code: "AS", name: "American Samoa" },
      { code: "AD", name: "Andorra" },
      { code: "AO", name: "Angola" },
      { code: "AI", name: "Anguilla" },
      { code: "AQ", name: "Antarctica" },
      { code: "AG", name: "Antigua and Barbuda" },
      { code: "AR", name: "Argentina" },
      { code: "AM", name: "Armenia" },
      { code: "AW", name: "Aruba" },
      { code: "AU", name: "Australia" },
      { code: "AT", name: "Austria" },
      { code: "AZ", name: "Azerbaijan" },
      { code: "BS", name: "Bahamas" },
      { code: "BH", name: "Bahrain" },
      { code: "BD", name: "Bangladesh" },
      { code: "BB", name: "Barbados" },
      { code: "BY", name: "Belarus" },
      { code: "BE", name: "Belgium" },
      { code: "BZ", name: "Belize" },
      { code: "BJ", name: "Benin" },
      { code: "BM", name: "Bermuda" },
      { code: "BT", name: "Bhutan" },
      { code: "BO", name: "Bolivia, Plurinational State of" },
      { code: "BQ", name: "Bonaire, Sint Eustatius and Saba" },
      { code: "BA", name: "Bosnia and Herzegovina" },
      { code: "BW", name: "Botswana" },
      { code: "BV", name: "Bouvet Island" },
      { code: "BR", name: "Brazil" },
      { code: "IO", name: "British Indian Ocean Territory" },
      { code: "BN", name: "Brunei Darussalam" },
      { code: "BG", name: "Bulgaria" },
      { code: "BF", name: "Burkina Faso" },
      { code: "BI", name: "Burundi" },
      { code: "KH", name: "Cambodia" },
      { code: "CM", name: "Cameroon" },
      { code: "CA", name: "Canada" },
      { code: "CV", name: "Cape Verde" },
      { code: "KY", name: "Cayman Islands" },
      { code: "CF", name: "Central African Republic" },
      { code: "TD", name: "Chad" },
      { code: "CL", name: "Chile" },
      { code: "CN", name: "China" },
      { code: "CX", name: "Christmas Island" },
      { code: "CC", name: "Cocos (Keeling) Islands" },
      { code: "CO", name: "Colombia" },
      { code: "KM", name: "Comoros" },
      { code: "CG", name: "Congo" },
      { code: "CD", name: "Congo, the Democratic Republic of the" },
      { code: "CK", name: "Cook Islands" },
      { code: "CR", name: "Costa Rica" },
      { code: "CI", name: "Côte d'Ivoire" },
      { code: "HR", name: "Croatia" },
      { code: "CU", name: "Cuba" },
      { code: "CW", name: "Curaçao" },
      { code: "CY", name: "Cyprus" },
      { code: "CZ", name: "Czech Republic" },
      { code: "DK", name: "Denmark" },
      { code: "DJ", name: "Djibouti" },
      { code: "DM", name: "Dominica" },
      { code: "DO", name: "Dominican Republic" },
      { code: "EC", name: "Ecuador" },
      { code: "EG", name: "Egypt" },
      { code: "SV", name: "El Salvador" },
      { code: "GQ", name: "Equatorial Guinea" },
      { code: "ER", name: "Eritrea" },
      { code: "EE", name: "Estonia" },
      { code: "ET", name: "Ethiopia" },
      { code: "FK", name: "Falkland Islands (Malvinas)" },
      { code: "FO", name: "Faroe Islands" },
      { code: "FJ", name: "Fiji" },
      { code: "FI", name: "Finland" },
      { code: "FR", name: "France" },
      { code: "GF", name: "French Guiana" },
      { code: "PF", name: "French Polynesia" },
      { code: "TF", name: "French Southern Territories" },
      { code: "GA", name: "Gabon" },
      { code: "GM", name: "Gambia" },
      { code: "GE", name: "Georgia" },
      { code: "DE", name: "Germany" },
      { code: "GH", name: "Ghana" },
      { code: "GI", name: "Gibraltar" },
      { code: "GR", name: "Greece" },
      { code: "GL", name: "Greenland" },
      { code: "GD", name: "Grenada" },
      { code: "GP", name: "Guadeloupe" },
      { code: "GU", name: "Guam" },
      { code: "GT", name: "Guatemala" },
      { code: "GG", name: "Guernsey" },
      { code: "GN", name: "Guinea" },
      { code: "GW", name: "Guinea-Bissau" },
      { code: "GY", name: "Guyana" },
      { code: "HT", name: "Haiti" },
      { code: "HM", name: "Heard Island and McDonald Islands" },
      { code: "VA", name: "Holy See (Vatican City State)" },
      { code: "HN", name: "Honduras" },
      { code: "HK", name: "Hong Kong" },
      { code: "HU", name: "Hungary" },
      { code: "IS", name: "Iceland" },
      { code: "IN", name: "India" },
      { code: "ID", name: "Indonesia" },
      { code: "IR", name: "Iran, Islamic Republic of" },
      { code: "IQ", name: "Iraq" },
      { code: "IE", name: "Ireland" },
      { code: "IM", name: "Isle of Man" },
      { code: "IL", name: "Israel" },
      { code: "IT", name: "Italy" },
      { code: "JM", name: "Jamaica" },
      { code: "JP", name: "Japan" },
      { code: "JE", name: "Jersey" },
      { code: "JO", name: "Jordan" },
      { code: "KZ", name: "Kazakhstan" },
      { code: "KE", name: "Kenya" },
      { code: "KI", name: "Kiribati" },
      { code: "KP", name: "Korea, Democratic People's Republic of" },
      { code: "KW", name: "Kuwait" },
      { code: "KG", name: "Kyrgyzstan" },
      { code: "LA", name: "Lao People's Democratic Republic" },
      { code: "LV", name: "Latvia" },
      { code: "LB", name: "Lebanon" },
      { code: "LS", name: "Lesotho" },
      { code: "LR", name: "Liberia" },
      { code: "LY", name: "Libya" },
      { code: "LI", name: "Liechtenstein" },
      { code: "LT", name: "Lithuania" },
      { code: "LU", name: "Luxembourg" },
      { code: "MO", name: "Macao" },
      { code: "MK", name: "Macedonia, the former Yugoslav Republic of" },
      { code: "MG", name: "Madagascar" },
      { code: "MW", name: "Malawi" },
      { code: "MY", name: "Malaysia" },
      { code: "MV", name: "Maldives" },
      { code: "ML", name: "Mali" },
      { code: "MT", name: "Malta" },
      { code: "MH", name: "Marshall Islands" },
      { code: "MQ", name: "Martinique" },
      { code: "MR", name: "Mauritania" },
      { code: "MU", name: "Mauritius" },
      { code: "YT", name: "Mayotte" },
      { code: "MX", name: "Mexico" },
      { code: "FM", name: "Micronesia, Federated States of" },
      { code: "MD", name: "Moldova, Republic of" },
      { code: "MC", name: "Monaco" },
      { code: "MN", name: "Mongolia" },
      { code: "ME", name: "Montenegro" },
      { code: "MS", name: "Montserrat" },
      { code: "MA", name: "Morocco" },
      { code: "MZ", name: "Mozambique" },
      { code: "MM", name: "Myanmar" },
      { code: "NA", name: "Namibia" },
      { code: "NR", name: "Nauru" },
      { code: "NP", name: "Nepal" },
      { code: "NL", name: "Netherlands" },
      { code: "NC", name: "New Caledonia" },
      { code: "NZ", name: "New Zealand" },
      { code: "NI", name: "Nicaragua" },
      { code: "NE", name: "Niger" },
      { code: "NG", name: "Nigeria" },
      { code: "NU", name: "Niue" },
      { code: "NF", name: "Norfolk Island" },
      { code: "MP", name: "Northern Mariana Islands" },
      { code: "NO", name: "Norway" },
      { code: "OM", name: "Oman" },
      { code: "PK", name: "Pakistan" },
      { code: "PW", name: "Palau" },
      { code: "PS", name: "Palestinian Territory, Occupied" },
      { code: "PA", name: "Panama" },
      { code: "PG", name: "Papua New Guinea" },
      { code: "PY", name: "Paraguay" },
      { code: "PE", name: "Peru" },
      { code: "PH", name: "Philippines" },
      { code: "PN", name: "Pitcairn" },
      { code: "PL", name: "Poland" },
      { code: "PT", name: "Portugal" },
      { code: "PR", name: "Puerto Rico" },
      { code: "QA", name: "Qatar" },
      { code: "RE", name: "Réunion" },
      { code: "RO", name: "Romania" },
      { code: "RU", name: "Russian Federation" },
      { code: "RW", name: "Rwanda" },
      { code: "BL", name: "Saint Barthélemy" },
      { code: "SH", name: "Saint Helena, Ascension and Tristan da Cunha" },
      { code: "KN", name: "Saint Kitts and Nevis" },
      { code: "LC", name: "Saint Lucia" },
      { code: "MF", name: "Saint Martin (French part)" },
      { code: "PM", name: "Saint Pierre and Miquelon" },
      { code: "VC", name: "Saint Vincent and the Grenadines" },
      { code: "WS", name: "Samoa" },
      { code: "SM", name: "San Marino" },
      { code: "ST", name: "Sao Tome and Principe" },
      { code: "SA", name: "Saudi Arabia" },
      { code: "SN", name: "Senegal" },
      { code: "RS", name: "Serbia" },
      { code: "SC", name: "Seychelles" },
      { code: "SL", name: "Sierra Leone" },
      { code: "SG", name: "Singapore" },
      { code: "SX", name: "Sint Maarten (Dutch part)" },
      { code: "SK", name: "Slovakia" },
      { code: "SI", name: "Slovenia" },
      { code: "SB", name: "Solomon Islands" },
      { code: "SO", name: "Somalia" },
      { code: "ZA", name: "South Africa" },
      { code: "GS", name: "South Georgia and the South Sandwich Islands" },
      { code: "KR", name: "South Korea" },
      { code: "SS", name: "South Sudan" },
      { code: "ES", name: "Spain" },
      { code: "LK", name: "Sri Lanka" },
      { code: "SD", name: "Sudan" },
      { code: "SR", name: "Suriname" },
      { code: "SJ", name: "Svalbard and Jan Mayen" },
      { code: "SZ", name: "Swaziland" },
      { code: "SE", name: "Sweden" },
      { code: "CH", name: "Switzerland" },
      { code: "SY", name: "Syrian Arab Republic" },
      { code: "TW", name: "Taiwan, Province of China" },
      { code: "TJ", name: "Tajikistan" },
      { code: "TZ", name: "Tanzania, United Republic of" },
      { code: "TH", name: "Thailand" },
      { code: "TL", name: "Timor-Leste" },
      { code: "TG", name: "Togo" },
      { code: "TK", name: "Tokelau" },
      { code: "TO", name: "Tonga" },
      { code: "TT", name: "Trinidad and Tobago" },
      { code: "TN", name: "Tunisia" },
      { code: "TR", name: "Turcode" },
      { code: "TM", name: "Turkmenistan" },
      { code: "TC", name: "Turks and Caicos Islands" },
      { code: "TV", name: "Tuvalu" },
      { code: "UG", name: "Uganda" },
      { code: "UA", name: "Ukraine" },
      { code: "AE", name: "United Arab Emirates" },
      { code: "GB", name: "United Kingdom" },
      { code: "US", name: "United States" },
      { code: "UY", name: "Uruguay" },
      { code: "UZ", name: "Uzbekistan" },
      { code: "VU", name: "Vanuatu" },
      { code: "VE", name: "Venezuela, Bolivarian Republic of" },
      { code: "VN", name: "Vietnam" },
      { code: "VI", name: "Virgin Islands" },
      { code: "WF", name: "Wallis and Futuna" },
      { code: "EH", name: "Western Sahara" },
      { code: "YE", name: "Yemen" },
      { code: "ZM", name: "Zambia" },
      { code: "ZW", name: "Zimbabwe" }
    ];
    const _sfc_main$3r = vueExports$1.defineComponent({
      name: "add-customer-modal",
      components: {},
      setup() {
        const formRef = vueExports$1.ref(null);
        const addCustomerModalRef = vueExports$1.ref(null);
        const loading2 = vueExports$1.ref(false);
        const formData = vueExports$1.ref({
          name: "Sean Bean",
          email: "sean@dellito.com",
          description: "",
          addressLine: "101, Collins Street",
          addressLine2: "",
          town: "Melbourne",
          state: "Victoria",
          postCode: "3000",
          country: "US"
        });
        const rules = vueExports$1.ref({
          name: [
            {
              required: true,
              message: "Customer name is required",
              trigger: "change"
            }
          ],
          email: [
            {
              required: true,
              message: "Customer email is required",
              trigger: "change"
            }
          ],
          addressLine: [
            {
              required: true,
              message: "Address 1 is required",
              trigger: "change"
            }
          ],
          town: [
            {
              required: true,
              message: "Town is required",
              trigger: "change"
            }
          ],
          state: [
            {
              required: true,
              message: "State is required",
              trigger: "change"
            }
          ],
          postCode: [
            {
              required: true,
              message: "Post code is required",
              trigger: "change"
            }
          ]
        });
        const submit = () => {
          if (!formRef.value) {
            return;
          }
          formRef.value.validate((valid) => {
            if (valid) {
              loading2.value = true;
              setTimeout(() => {
                loading2.value = false;
                Swal.fire({
                  text: "Form has been successfully submitted!",
                  icon: "success",
                  buttonsStyling: false,
                  confirmButtonText: "Ok, got it!",
                  heightAuto: false,
                  customClass: {
                    confirmButton: "btn btn-primary"
                  }
                }).then(() => {
                  hideModal(addCustomerModalRef.value);
                });
              }, 2e3);
            } else {
              Swal.fire({
                text: "Sorry, looks like there are some errors detected, please try again.",
                icon: "error",
                buttonsStyling: false,
                confirmButtonText: "Ok, got it!",
                heightAuto: false,
                customClass: {
                  confirmButton: "btn btn-primary"
                }
              });
              return false;
            }
          });
        };
        return {
          formData,
          rules,
          submit,
          formRef,
          loading: loading2,
          addCustomerModalRef,
          getAssetPath,
          countries
        };
      }
    });
    function _sfc_ssrRender$37(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_el_form = vueExports$1.resolveComponent("el-form");
      const _component_el_form_item = vueExports$1.resolveComponent("el-form-item");
      const _component_el_input = vueExports$1.resolveComponent("el-input");
      const _component_el_select = vueExports$1.resolveComponent("el-select");
      const _component_el_option = vueExports$1.resolveComponent("el-option");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        id: "kt_modal_add_customer",
        ref: "addCustomerModalRef",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-650px"><div class="modal-content"><div class="modal-header" id="kt_modal_add_customer_header"><h2 class="fw-bold">Add a Customer</h2><div id="kt_modal_add_customer_close" data-bs-dismiss="modal" class="btn btn-icon btn-sm btn-active-icon-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div>`);
      _push(ssrRenderComponent(_component_el_form, {
        onSubmit: ($event) => _ctx.submit(),
        model: _ctx.formData,
        rules: _ctx.rules,
        ref: "formRef"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="modal-body py-10 px-lg-17"${_scopeId}><div class="scroll-y me-n7 pe-7" id="kt_modal_add_customer_scroll" data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_modal_add_customer_header" data-kt-scroll-wrappers="#kt_modal_add_customer_scroll" data-kt-scroll-offset="300px"${_scopeId}><div class="fv-row mb-7"${_scopeId}><label class="required fs-6 fw-semibold mb-2"${_scopeId}>Name</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "name" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.formData.name,
                    "onUpdate:modelValue": ($event) => _ctx.formData.name = $event,
                    type: "text",
                    placeholder: ""
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.formData.name,
                      "onUpdate:modelValue": ($event) => _ctx.formData.name = $event,
                      type: "text",
                      placeholder: ""
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="fv-row mb-7"${_scopeId}><label class="fs-6 fw-semibold mb-2"${_scopeId}><span class="required"${_scopeId}>Email</span><i class="fas fa-exclamation-circle ms-1 fs-7" data-bs-toggle="tooltip" title="Email address must be active"${_scopeId}></i></label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "email" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.formData.email,
                    "onUpdate:modelValue": ($event) => _ctx.formData.email = $event
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.formData.email,
                      "onUpdate:modelValue": ($event) => _ctx.formData.email = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="fv-row mb-15"${_scopeId}><label class="fs-6 fw-semibold mb-2"${_scopeId}>Description</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "description" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.formData.description,
                    "onUpdate:modelValue": ($event) => _ctx.formData.description = $event,
                    type: "text"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.formData.description,
                      "onUpdate:modelValue": ($event) => _ctx.formData.description = $event,
                      type: "text"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="fw-bold fs-3 rotate collapsible mb-7" data-bs-toggle="collapse" href="#kt_modal_add_customer_billing_info" role="button" aria-expanded="false" aria-controls="kt_customer_view_details"${_scopeId}> Shipping Information <span class="ms-2 rotate-180"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "down",
              "icon-class": "fs-3"
            }, null, _parent2, _scopeId));
            _push2(`</span></div><div id="kt_modal_add_customer_billing_info" class="collapse show"${_scopeId}><div class="d-flex flex-column mb-7 fv-row"${_scopeId}><label class="required fs-6 fw-semibold mb-2"${_scopeId}>Address Line 1</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "addressLine" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.formData.addressLine,
                    "onUpdate:modelValue": ($event) => _ctx.formData.addressLine = $event
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.formData.addressLine,
                      "onUpdate:modelValue": ($event) => _ctx.formData.addressLine = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="d-flex flex-column mb-7 fv-row"${_scopeId}><label class="fs-6 fw-semibold mb-2"${_scopeId}>Address Line 2</label>`);
            _push2(ssrRenderComponent(_component_el_input, {
              modelValue: _ctx.formData.addressLine2,
              "onUpdate:modelValue": ($event) => _ctx.formData.addressLine2 = $event
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="d-flex flex-column mb-7 fv-row"${_scopeId}><label class="required fs-6 fw-semibold mb-2"${_scopeId}>Town</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "town" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.formData.town,
                    "onUpdate:modelValue": ($event) => _ctx.formData.town = $event
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.formData.town,
                      "onUpdate:modelValue": ($event) => _ctx.formData.town = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="row g-9 mb-7"${_scopeId}><div class="col-md-6 fv-row"${_scopeId}><label class="required fs-6 fw-semibold mb-2"${_scopeId}>State / Province</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "state" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.formData.state,
                    "onUpdate:modelValue": ($event) => _ctx.formData.state = $event
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.formData.state,
                      "onUpdate:modelValue": ($event) => _ctx.formData.state = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="col-md-6 fv-row"${_scopeId}><label class="required fs-6 fw-semibold mb-2"${_scopeId}>Post Code</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "postCode" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.formData.postCode,
                    "onUpdate:modelValue": ($event) => _ctx.formData.postCode = $event
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.formData.postCode,
                      "onUpdate:modelValue": ($event) => _ctx.formData.postCode = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div><div class="d-flex flex-column mb-7 fv-row"${_scopeId}><label class="fs-6 fw-semibold mb-2"${_scopeId}><span class="required"${_scopeId}>Country</span><i class="fas fa-exclamation-circle ms-1 fs-7" data-bs-toggle="tooltip" title="Country of origination"${_scopeId}></i></label>`);
            _push2(ssrRenderComponent(_component_el_select, {
              modelValue: _ctx.formData.country,
              "onUpdate:modelValue": ($event) => _ctx.formData.country = $event
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_option, { value: "" }, {
                    default: vueExports$1.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`Select a Country...`);
                      } else {
                        return [
                          vueExports$1.createTextVNode("Select a Country...")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`<!--[-->`);
                  ssrRenderList(_ctx.countries, (item, i) => {
                    _push3(ssrRenderComponent(_component_el_option, {
                      key: `countries-select-option-${i}`,
                      value: item.code
                    }, {
                      default: vueExports$1.withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`${ssrInterpolate(item.name)}`);
                        } else {
                          return [
                            vueExports$1.createTextVNode(vueExports$1.toDisplayString(item.name), 1)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_option, { value: "" }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createTextVNode("Select a Country...")
                      ]),
                      _: 1
                    }),
                    (vueExports$1.openBlock(true), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(_ctx.countries, (item, i) => {
                      return vueExports$1.openBlock(), vueExports$1.createBlock(_component_el_option, {
                        key: `countries-select-option-${i}`,
                        value: item.code
                      }, {
                        default: vueExports$1.withCtx(() => [
                          vueExports$1.createTextVNode(vueExports$1.toDisplayString(item.name), 1)
                        ]),
                        _: 2
                      }, 1032, ["value"]);
                    }), 128))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="fv-row mb-7"${_scopeId}><div class="d-flex flex-stack"${_scopeId}><div class="me-5"${_scopeId}><label class="fs-6 fw-semibold"${_scopeId}>Use as a billing adderess?</label><div class="fs-7 fw-semibold text-muted"${_scopeId}> If you need more info, please check budget planning </div></div><label class="form-check form-switch form-check-custom form-check-solid"${_scopeId}><input class="form-check-input" name="billing" type="checkbox" value="1" id="kt_modal_add_customer_billing" checked${_scopeId}><span class="form-check-label fw-semibold text-muted" for="kt_modal_add_customer_billing"${_scopeId}> Yes </span></label></div></div></div></div></div><div class="modal-footer flex-center"${_scopeId}><button type="reset" id="kt_modal_add_customer_cancel" class="btn btn-light me-3"${_scopeId}> Discard </button><button${ssrRenderAttr("data-kt-indicator", _ctx.loading ? "on" : null)} class="btn btn-lg btn-primary" type="submit"${_scopeId}>`);
            if (!_ctx.loading) {
              _push2(`<span class="indicator-label"${_scopeId}> Submit `);
              _push2(ssrRenderComponent(_component_KTIcon, {
                "icon-name": "arrow-right",
                "icon-class": "fs-2 me-2 me-0"
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.loading) {
              _push2(`<span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "modal-body py-10 px-lg-17" }, [
                vueExports$1.createVNode("div", {
                  class: "scroll-y me-n7 pe-7",
                  id: "kt_modal_add_customer_scroll",
                  "data-kt-scroll": "true",
                  "data-kt-scroll-activate": "{default: false, lg: true}",
                  "data-kt-scroll-max-height": "auto",
                  "data-kt-scroll-dependencies": "#kt_modal_add_customer_header",
                  "data-kt-scroll-wrappers": "#kt_modal_add_customer_scroll",
                  "data-kt-scroll-offset": "300px"
                }, [
                  vueExports$1.createVNode("div", { class: "fv-row mb-7" }, [
                    vueExports$1.createVNode("label", { class: "required fs-6 fw-semibold mb-2" }, "Name"),
                    vueExports$1.createVNode(_component_el_form_item, { prop: "name" }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode(_component_el_input, {
                          modelValue: _ctx.formData.name,
                          "onUpdate:modelValue": ($event) => _ctx.formData.name = $event,
                          type: "text",
                          placeholder: ""
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "fv-row mb-7" }, [
                    vueExports$1.createVNode("label", { class: "fs-6 fw-semibold mb-2" }, [
                      vueExports$1.createVNode("span", { class: "required" }, "Email"),
                      vueExports$1.createVNode("i", {
                        class: "fas fa-exclamation-circle ms-1 fs-7",
                        "data-bs-toggle": "tooltip",
                        title: "Email address must be active"
                      })
                    ]),
                    vueExports$1.createVNode(_component_el_form_item, { prop: "email" }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode(_component_el_input, {
                          modelValue: _ctx.formData.email,
                          "onUpdate:modelValue": ($event) => _ctx.formData.email = $event
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "fv-row mb-15" }, [
                    vueExports$1.createVNode("label", { class: "fs-6 fw-semibold mb-2" }, "Description"),
                    vueExports$1.createVNode(_component_el_form_item, { prop: "description" }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode(_component_el_input, {
                          modelValue: _ctx.formData.description,
                          "onUpdate:modelValue": ($event) => _ctx.formData.description = $event,
                          type: "text"
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ]),
                  vueExports$1.createVNode("div", {
                    class: "fw-bold fs-3 rotate collapsible mb-7",
                    "data-bs-toggle": "collapse",
                    href: "#kt_modal_add_customer_billing_info",
                    role: "button",
                    "aria-expanded": "false",
                    "aria-controls": "kt_customer_view_details"
                  }, [
                    vueExports$1.createTextVNode(" Shipping Information "),
                    vueExports$1.createVNode("span", { class: "ms-2 rotate-180" }, [
                      vueExports$1.createVNode(_component_KTIcon, {
                        "icon-name": "down",
                        "icon-class": "fs-3"
                      })
                    ])
                  ]),
                  vueExports$1.createVNode("div", {
                    id: "kt_modal_add_customer_billing_info",
                    class: "collapse show"
                  }, [
                    vueExports$1.createVNode("div", { class: "d-flex flex-column mb-7 fv-row" }, [
                      vueExports$1.createVNode("label", { class: "required fs-6 fw-semibold mb-2" }, "Address Line 1"),
                      vueExports$1.createVNode(_component_el_form_item, { prop: "addressLine" }, {
                        default: vueExports$1.withCtx(() => [
                          vueExports$1.createVNode(_component_el_input, {
                            modelValue: _ctx.formData.addressLine,
                            "onUpdate:modelValue": ($event) => _ctx.formData.addressLine = $event
                          }, null, 8, ["modelValue", "onUpdate:modelValue"])
                        ]),
                        _: 1
                      })
                    ]),
                    vueExports$1.createVNode("div", { class: "d-flex flex-column mb-7 fv-row" }, [
                      vueExports$1.createVNode("label", { class: "fs-6 fw-semibold mb-2" }, "Address Line 2"),
                      vueExports$1.createVNode(_component_el_input, {
                        modelValue: _ctx.formData.addressLine2,
                        "onUpdate:modelValue": ($event) => _ctx.formData.addressLine2 = $event
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    vueExports$1.createVNode("div", { class: "d-flex flex-column mb-7 fv-row" }, [
                      vueExports$1.createVNode("label", { class: "required fs-6 fw-semibold mb-2" }, "Town"),
                      vueExports$1.createVNode(_component_el_form_item, { prop: "town" }, {
                        default: vueExports$1.withCtx(() => [
                          vueExports$1.createVNode(_component_el_input, {
                            modelValue: _ctx.formData.town,
                            "onUpdate:modelValue": ($event) => _ctx.formData.town = $event
                          }, null, 8, ["modelValue", "onUpdate:modelValue"])
                        ]),
                        _: 1
                      })
                    ]),
                    vueExports$1.createVNode("div", { class: "row g-9 mb-7" }, [
                      vueExports$1.createVNode("div", { class: "col-md-6 fv-row" }, [
                        vueExports$1.createVNode("label", { class: "required fs-6 fw-semibold mb-2" }, "State / Province"),
                        vueExports$1.createVNode(_component_el_form_item, { prop: "state" }, {
                          default: vueExports$1.withCtx(() => [
                            vueExports$1.createVNode(_component_el_input, {
                              modelValue: _ctx.formData.state,
                              "onUpdate:modelValue": ($event) => _ctx.formData.state = $event
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ]),
                          _: 1
                        })
                      ]),
                      vueExports$1.createVNode("div", { class: "col-md-6 fv-row" }, [
                        vueExports$1.createVNode("label", { class: "required fs-6 fw-semibold mb-2" }, "Post Code"),
                        vueExports$1.createVNode(_component_el_form_item, { prop: "postCode" }, {
                          default: vueExports$1.withCtx(() => [
                            vueExports$1.createVNode(_component_el_input, {
                              modelValue: _ctx.formData.postCode,
                              "onUpdate:modelValue": ($event) => _ctx.formData.postCode = $event
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ]),
                          _: 1
                        })
                      ])
                    ]),
                    vueExports$1.createVNode("div", { class: "d-flex flex-column mb-7 fv-row" }, [
                      vueExports$1.createVNode("label", { class: "fs-6 fw-semibold mb-2" }, [
                        vueExports$1.createVNode("span", { class: "required" }, "Country"),
                        vueExports$1.createVNode("i", {
                          class: "fas fa-exclamation-circle ms-1 fs-7",
                          "data-bs-toggle": "tooltip",
                          title: "Country of origination"
                        })
                      ]),
                      vueExports$1.createVNode(_component_el_select, {
                        modelValue: _ctx.formData.country,
                        "onUpdate:modelValue": ($event) => _ctx.formData.country = $event
                      }, {
                        default: vueExports$1.withCtx(() => [
                          vueExports$1.createVNode(_component_el_option, { value: "" }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Select a Country...")
                            ]),
                            _: 1
                          }),
                          (vueExports$1.openBlock(true), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(_ctx.countries, (item, i) => {
                            return vueExports$1.openBlock(), vueExports$1.createBlock(_component_el_option, {
                              key: `countries-select-option-${i}`,
                              value: item.code
                            }, {
                              default: vueExports$1.withCtx(() => [
                                vueExports$1.createTextVNode(vueExports$1.toDisplayString(item.name), 1)
                              ]),
                              _: 2
                            }, 1032, ["value"]);
                          }), 128))
                        ]),
                        _: 1
                      }, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    vueExports$1.createVNode("div", { class: "fv-row mb-7" }, [
                      vueExports$1.createVNode("div", { class: "d-flex flex-stack" }, [
                        vueExports$1.createVNode("div", { class: "me-5" }, [
                          vueExports$1.createVNode("label", { class: "fs-6 fw-semibold" }, "Use as a billing adderess?"),
                          vueExports$1.createVNode("div", { class: "fs-7 fw-semibold text-muted" }, " If you need more info, please check budget planning ")
                        ]),
                        vueExports$1.createVNode("label", { class: "form-check form-switch form-check-custom form-check-solid" }, [
                          vueExports$1.createVNode("input", {
                            class: "form-check-input",
                            name: "billing",
                            type: "checkbox",
                            value: "1",
                            id: "kt_modal_add_customer_billing",
                            checked: ""
                          }),
                          vueExports$1.createVNode("span", {
                            class: "form-check-label fw-semibold text-muted",
                            for: "kt_modal_add_customer_billing"
                          }, " Yes ")
                        ])
                      ])
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "modal-footer flex-center" }, [
                vueExports$1.createVNode("button", {
                  type: "reset",
                  id: "kt_modal_add_customer_cancel",
                  class: "btn btn-light me-3"
                }, " Discard "),
                vueExports$1.createVNode("button", {
                  "data-kt-indicator": _ctx.loading ? "on" : null,
                  class: "btn btn-lg btn-primary",
                  type: "submit"
                }, [
                  !_ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                    key: 0,
                    class: "indicator-label"
                  }, [
                    vueExports$1.createTextVNode(" Submit "),
                    vueExports$1.createVNode(_component_KTIcon, {
                      "icon-name": "arrow-right",
                      "icon-class": "fs-2 me-2 me-0"
                    })
                  ])) : vueExports$1.createCommentVNode("", true),
                  _ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                    key: 1,
                    class: "indicator-progress"
                  }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])) : vueExports$1.createCommentVNode("", true)
                ], 8, ["data-kt-indicator"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div>`);
    }
    const _sfc_setup$3r = _sfc_main$3r.setup;
    _sfc_main$3r.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/forms/AddCustomerModal.vue");
      return _sfc_setup$3r ? _sfc_setup$3r(props, ctx) : void 0;
    };
    const AddCustomerModal = /* @__PURE__ */ _export_sfc(_sfc_main$3r, [["ssrRender", _sfc_ssrRender$37]]);
    const __vite_glob_0_57 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: AddCustomerModal
    }, Symbol.toStringTag, { value: "Module" }));
    const customers = [
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Smith",
        email: "e.smith@kpmg.com.au",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Dec 2020, 8:43 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Melody Macy",
        email: "melody@altbox.com",
        company: "Google",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Dec 2020, 10:12 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Max Smith",
        email: "max@kt.com",
        company: "Bistro Union",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "12 Nov 2020, 2:01 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Sean Bean",
        email: "sean@dellito.com",
        company: "Astro Limited",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "21 Oct 2020, 5:54 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Brian Cox",
        email: "brian@exchange.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "19 Oct 2020, 7:32 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Mikaela Collins",
        email: "mikaela@pexcom.com",
        company: "Keenthemes",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "23 Sep 2020, 12:37 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Francis Mitcham",
        email: "f.mitcham@kpmg.com.au",
        company: "Paypal",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "11 Sep 2020, 3:15 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Olivia Wild",
        email: "olivia@corpmail.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "03 Sep 2020, 1:08 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Neil Owen",
        email: "owen.neil@gmail.com",
        company: "Paramount",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Sep 2020, 4:58 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Dan Wilson",
        email: "dam@consilting.com",
        company: "Trinity Studio",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "18 Aug 2020, 3:34 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Bold",
        email: "emma@intenso.com",
        company: "B&T Legal Services",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Aug 2020, 1:21 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Ana Crown",
        email: "ana.cf@limtel.com",
        company: "Paysafe Security",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "11 Aug 2020, 5:13 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Smith",
        email: "e.smith@kpmg.com.au",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Dec 2020, 8:43 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Melody Macy",
        email: "melody@altbox.com",
        company: "Google",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Dec 2020, 10:12 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Max Smith",
        email: "max@kt.com",
        company: "Bistro Union",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "12 Nov 2020, 2:01 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Sean Bean",
        email: "sean@dellito.com",
        company: "Astro Limited",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "21 Oct 2020, 5:54 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Brian Cox",
        email: "brian@exchange.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "19 Oct 2020, 7:32 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Mikaela Collins",
        email: "mikaela@pexcom.com",
        company: "Keenthemes",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "23 Sep 2020, 12:37 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Francis Mitcham",
        email: "f.mitcham@kpmg.com.au",
        company: "Paypal",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "11 Sep 2020, 3:15 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Olivia Wild",
        email: "olivia@corpmail.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "03 Sep 2020, 1:08 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Neil Owen",
        email: "owen.neil@gmail.com",
        company: "Paramount",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Sep 2020, 4:58 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Dan Wilson",
        email: "dam@consilting.com",
        company: "Trinity Studio",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "18 Aug 2020, 3:34 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Bold",
        email: "emma@intenso.com",
        company: "B&T Legal Services",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Aug 2020, 1:21 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Ana Crown",
        email: "ana.cf@limtel.com",
        company: "Paysafe Security",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "11 Aug 2020, 5:13 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Smith",
        email: "e.smith@kpmg.com.au",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Dec 2020, 8:43 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Melody Macy",
        email: "melody@altbox.com",
        company: "Google",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Dec 2020, 10:12 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Max Smith",
        email: "max@kt.com",
        company: "Bistro Union",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "12 Nov 2020, 2:01 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Sean Bean",
        email: "sean@dellito.com",
        company: "Astro Limited",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "21 Oct 2020, 5:54 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Brian Cox",
        email: "brian@exchange.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "19 Oct 2020, 7:32 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Mikaela Collins",
        email: "mikaela@pexcom.com",
        company: "Keenthemes",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "23 Sep 2020, 12:37 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Francis Mitcham",
        email: "f.mitcham@kpmg.com.au",
        company: "Paypal",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "11 Sep 2020, 3:15 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Olivia Wild",
        email: "olivia@corpmail.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "03 Sep 2020, 1:08 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Neil Owen",
        email: "owen.neil@gmail.com",
        company: "Paramount",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Sep 2020, 4:58 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Dan Wilson",
        email: "dam@consilting.com",
        company: "Trinity Studio",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "18 Aug 2020, 3:34 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Bold",
        email: "emma@intenso.com",
        company: "B&T Legal Services",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Aug 2020, 1:21 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Ana Crown",
        email: "ana.cf@limtel.com",
        company: "Paysafe Security",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "11 Aug 2020, 5:13 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Smith",
        email: "e.smith@kpmg.com.au",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Dec 2020, 8:43 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Melody Macy",
        email: "melody@altbox.com",
        company: "Google",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Dec 2020, 10:12 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Max Smith",
        email: "max@kt.com",
        company: "Bistro Union",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "12 Nov 2020, 2:01 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Sean Bean",
        email: "sean@dellito.com",
        company: "Astro Limited",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "21 Oct 2020, 5:54 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Brian Cox",
        email: "brian@exchange.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "19 Oct 2020, 7:32 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Mikaela Collins",
        email: "mikaela@pexcom.com",
        company: "Keenthemes",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "23 Sep 2020, 12:37 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Francis Mitcham",
        email: "f.mitcham@kpmg.com.au",
        company: "Paypal",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "11 Sep 2020, 3:15 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Olivia Wild",
        email: "olivia@corpmail.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "03 Sep 2020, 1:08 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Neil Owen",
        email: "owen.neil@gmail.com",
        company: "Paramount",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Sep 2020, 4:58 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Dan Wilson",
        email: "dam@consilting.com",
        company: "Trinity Studio",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "18 Aug 2020, 3:34 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Bold",
        email: "emma@intenso.com",
        company: "B&T Legal Services",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Aug 2020, 1:21 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Ana Crown",
        email: "ana.cf@limtel.com",
        company: "Paysafe Security",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "11 Aug 2020, 5:13 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Smith",
        email: "e.smith@kpmg.com.au",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Dec 2020, 8:43 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Melody Macy",
        email: "melody@altbox.com",
        company: "Google",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Dec 2020, 10:12 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Max Smith",
        email: "max@kt.com",
        company: "Bistro Union",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "12 Nov 2020, 2:01 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Sean Bean",
        email: "sean@dellito.com",
        company: "Astro Limited",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "21 Oct 2020, 5:54 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Brian Cox",
        email: "brian@exchange.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "19 Oct 2020, 7:32 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Mikaela Collins",
        email: "mikaela@pexcom.com",
        company: "Keenthemes",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "23 Sep 2020, 12:37 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Francis Mitcham",
        email: "f.mitcham@kpmg.com.au",
        company: "Paypal",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "11 Sep 2020, 3:15 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Olivia Wild",
        email: "olivia@corpmail.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "03 Sep 2020, 1:08 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Neil Owen",
        email: "owen.neil@gmail.com",
        company: "Paramount",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Sep 2020, 4:58 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Dan Wilson",
        email: "dam@consilting.com",
        company: "Trinity Studio",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "18 Aug 2020, 3:34 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Bold",
        email: "emma@intenso.com",
        company: "B&T Legal Services",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Aug 2020, 1:21 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Ana Crown",
        email: "ana.cf@limtel.com",
        company: "Paysafe Security",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "11 Aug 2020, 5:13 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Smith",
        email: "e.smith@kpmg.com.au",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Dec 2020, 8:43 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Melody Macy",
        email: "melody@altbox.com",
        company: "Google",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Dec 2020, 10:12 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Max Smith",
        email: "max@kt.com",
        company: "Bistro Union",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "12 Nov 2020, 2:01 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Sean Bean",
        email: "sean@dellito.com",
        company: "Astro Limited",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "21 Oct 2020, 5:54 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Brian Cox",
        email: "brian@exchange.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "19 Oct 2020, 7:32 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Mikaela Collins",
        email: "mikaela@pexcom.com",
        company: "Keenthemes",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "23 Sep 2020, 12:37 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Francis Mitcham",
        email: "f.mitcham@kpmg.com.au",
        company: "Paypal",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "11 Sep 2020, 3:15 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Olivia Wild",
        email: "olivia@corpmail.com",
        company: "-",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "03 Sep 2020, 1:08 am"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Neil Owen",
        email: "owen.neil@gmail.com",
        company: "Paramount",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "01 Sep 2020, 4:58 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Dan Wilson",
        email: "dam@consilting.com",
        company: "Trinity Studio",
        payment: {
          icon: getAssetPath("media/svg/card-logos/visa.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "visa"
        },
        date: "18 Aug 2020, 3:34 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Emma Bold",
        email: "emma@intenso.com",
        company: "B&T Legal Services",
        payment: {
          icon: getAssetPath("media/svg/card-logos/mastercard.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "mastercard"
        },
        date: "14 Aug 2020, 1:21 pm"
      },
      {
        id: Math.floor(Math.random() * 99999) + 1,
        name: "Ana Crown",
        email: "ana.cf@limtel.com",
        company: "Paysafe Security",
        payment: {
          icon: getAssetPath("media/svg/card-logos/american-express.svg"),
          ccnumber: "**** " + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
          label: "american_express"
        },
        date: "11 Aug 2020, 5:13 pm"
      }
    ];
    class CookieComponent {
      /**
       * Returns the cookie with the given name, or undefined if not found
       *
       * @param  {string} name - cookie name
       * @returns string | null
       */
      static get(name) {
        const matches = document.cookie.match(
          new RegExp(
            "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") + "=([^;]*)"
          )
        );
        return matches ? decodeURIComponent(matches[1]) : void 0;
      }
      /**
       * Please note that a cookie value is encoded,
       * so getCookie uses a built-in decodeURIComponent function to decode it.
       *
       * @param  {string} name - cookie name
       * @param  {string | number | boolean} value - cookie value
       * @param  {any} cookieOptions - cookie options
       * @returns void
       */
      static set(name, value, cookieOptions) {
        const options = {
          path: "/",
          // add other defaults here if necessary
          ...cookieOptions
        };
        if (options.expires instanceof Date) {
          options.expires = options.expires.toUTCString();
        }
        let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(value);
        for (const optionKey in options) {
          updatedCookie += "; " + optionKey;
          const optionValue = options[optionKey];
          if (optionValue !== true) {
            updatedCookie += "=" + optionValue;
          }
        }
        document.cookie = updatedCookie;
      }
      /**
       * To delete a cookie, we can call it with a negative expiration date
       *
       * @param  {string} name
       */
      static delete(name) {
        CookieComponent.set(name, "", {
          "max-age": -1
        });
      }
    }
    const _DrawerStore = class _DrawerStore {
      static set(instanceId, drawerComponentObj) {
        if (_DrawerStore.has(instanceId)) {
          return;
        }
        _DrawerStore.store.set(instanceId, drawerComponentObj);
      }
      static get(instanceId) {
        if (!_DrawerStore.has(instanceId)) {
          return;
        }
        return _DrawerStore.store.get(instanceId);
      }
      static remove(instanceId) {
        if (!_DrawerStore.has(instanceId)) {
          return;
        }
        _DrawerStore.store.delete(instanceId);
      }
      static has(instanceId) {
        return _DrawerStore.store.has(instanceId);
      }
      static getAllInstances() {
        return _DrawerStore.store;
      }
    };
    __publicField(_DrawerStore, "store", /* @__PURE__ */ new Map());
    let DrawerStore = _DrawerStore;
    const defaultDrawerOptions = {
      overlay: true,
      baseClass: "drawer",
      overlayClass: "drawer-overlay",
      direction: "end"
    };
    const _DrawerComponent = class _DrawerComponent {
      constructor(_element, options) {
        __publicField(this, "element");
        __publicField(this, "overlayElement", null);
        __publicField(this, "toggleElement", null);
        __publicField(this, "options");
        __publicField(this, "instanceUid");
        __publicField(this, "name", "");
        __publicField(this, "shown", false);
        __publicField(this, "lastWidth", 0);
        __publicField(this, "closeElement", null);
        __publicField(this, "_handlers", () => {
          const togglers = this._getOption("toggle");
          const closers = this._getOption("close");
          if (togglers !== null && togglers.length > 0) {
            DOMEventHandlerUtil.on(document.body, togglers, "click", (e) => {
              e.preventDefault();
              this.toggleElement = document.getElementById(togglers);
              this._toggle();
            });
          }
          if (closers !== null && closers.length > 0) {
            DOMEventHandlerUtil.on(document.body, closers, "click", (e) => {
              e.preventDefault();
              this.closeElement = document.getElementById(closers);
              this._hide();
            });
          }
        });
        __publicField(this, "_update", () => {
          const width = String(this._getOption("width"));
          const direction = String(this._getOption("direction"));
          const hasBaseClass = this.element.classList.contains(
            `${this.options.baseClass}-on`
          );
          const bodyCanvasAttr = String(
            document.body.getAttribute(`data-kt-drawer-${this.name}-`)
          );
          if (hasBaseClass === true && bodyCanvasAttr === "on") {
            this.shown = true;
          } else {
            this.shown = false;
          }
          if (this._getOption("activate") === true) {
            this.element.classList.add(this.options.baseClass);
            this.element.classList.add(`${this.options.baseClass}-${direction}`);
            ElementStyleUtil.set(this.element, "width", width, true);
            this.lastWidth = parseInt(width);
          } else {
            ElementStyleUtil.set(this.element, "width", "");
            this.element.classList.remove(this.options.baseClass);
            this.element.classList.remove(`${this.options.baseClass}-${direction}`);
            this._hide();
          }
        });
        __publicField(this, "_getOption", (name) => {
          const attr = this.element.getAttribute(`data-kt-drawer-${name}`);
          if (attr) {
            const value = getAttributeValueByBreakpoint(attr);
            if (value !== null && String(value) === "true") {
              return true;
            } else {
              if (value !== null && String(value) === "false") {
                return false;
              }
            }
            return value;
          } else {
            const optionName = stringSnakeToCamel(name);
            const option = getObjectPropertyValueByKey(this.options, optionName);
            if (option) {
              return getAttributeValueByBreakpoint(option);
            } else {
              return null;
            }
          }
        });
        __publicField(this, "_toggle", () => {
          if (EventHandlerUtil.trigger(this.element, "kt.drawer.toggle") === false) {
            return;
          }
          if (this.shown) {
            this._hide();
          } else {
            this._show();
          }
          EventHandlerUtil.trigger(this.element, "kt.drawer.toggled");
        });
        __publicField(this, "_hide", () => {
          if (EventHandlerUtil.trigger(this.element, "kt.drawer.hide") === false) {
            return;
          }
          this.shown = false;
          this._deleteOverlay();
          document.body.removeAttribute(`data-kt-drawer-${this.name}`);
          document.body.removeAttribute(`data-kt-drawer`);
          this.element.classList.remove(`${this.options.baseClass}-on`);
          if (this.toggleElement != null) {
            this.toggleElement.classList.remove("active");
          }
          EventHandlerUtil.trigger(this.element, "kt.drawer.after.hidden");
        });
        __publicField(this, "_show", () => {
          if (EventHandlerUtil.trigger(this.element, "kt.drawer.show") === false) {
            return;
          }
          this.shown = true;
          this._createOverlay();
          document.body.setAttribute(`data-kt-drawer-${this.name}`, "on");
          document.body.setAttribute("data-kt-drawer", "on");
          this.element.classList.add(`${this.options.baseClass}-on`);
          if (this.toggleElement !== null) {
            this.toggleElement.classList.add("active");
          }
          EventHandlerUtil.trigger(this.element, "kt.drawer.shown");
        });
        __publicField(this, "_createOverlay", () => {
          if (this._getOption("overlay") === true) {
            this.overlayElement = document.createElement("DIV");
            const elementZIndex = getCSS(this.element, "z-index");
            if (elementZIndex) {
              const overlayZindex = parseInt(elementZIndex) - 1;
              ElementStyleUtil.set(this.overlayElement, "z-index", overlayZindex);
            }
            document.body.append(this.overlayElement);
            const overlayClassOption = this._getOption("overlay-class");
            if (overlayClassOption) {
              this.overlayElement.classList.add(overlayClassOption.toString());
            }
            if (!this._getOption("permanent")) {
              this.overlayElement.addEventListener("click", (e) => {
                e.preventDefault();
                this._hide();
              });
            }
          }
        });
        __publicField(this, "_deleteOverlay", () => {
          if (this.overlayElement !== null && this.overlayElement.parentNode) {
            this.overlayElement.parentNode.removeChild(this.overlayElement);
          }
        });
        __publicField(this, "_getDirection", () => {
          return String(this._getOption("direction")) === "left" ? "left" : "right";
        });
        __publicField(this, "_getWidth", () => {
          let width = this._getOption("width");
          if (width && width === "auto") {
            width = getCSS(this.element, "width");
          }
          return width;
        });
        ///////////////////////
        // ** Public API  ** //
        ///////////////////////
        __publicField(this, "toggle", () => {
          this._toggle();
        });
        __publicField(this, "show", () => {
          this._show();
        });
        __publicField(this, "hide", () => {
          this._hide();
        });
        __publicField(this, "isShown", () => {
          return this.shown;
        });
        __publicField(this, "update", () => {
          this._update();
        });
        __publicField(this, "goElement", () => {
          return this.element;
        });
        // Event API
        __publicField(this, "on", (name, handler) => {
          return EventHandlerUtil.on(this.element, name, handler);
        });
        __publicField(this, "one", (name, handler) => {
          return EventHandlerUtil.one(this.element, name, handler);
        });
        __publicField(this, "off", (name, handerId) => {
          return EventHandlerUtil.off(this.element, name, handerId);
        });
        __publicField(this, "trigger", (name, event) => {
          return EventHandlerUtil.trigger(this.element, name, event);
        });
        this.element = _element;
        this.options = Object.assign(defaultDrawerOptions, options);
        this.instanceUid = getUniqueIdWithPrefix("drawer");
        this.overlayElement = null;
        this.name = this.element.getAttribute("data-kt-drawer-name") || "";
        this.shown = false;
        this.toggleElement = null;
        this._handlers();
        this._update();
        DrawerStore.set(this.element.id, this);
      }
      // Create Instances
      static createInstances(selector) {
        const elements = document.body.querySelectorAll(selector);
        elements.forEach((element) => {
          const item = element;
          let drawer = _DrawerComponent.getInstance(item.id);
          if (!drawer) {
            drawer = new _DrawerComponent(item, defaultDrawerOptions);
          }
          drawer.element = item;
          drawer.hide();
        });
      }
      // Global Initialization
      static initGlobalHandlers() {
        window.addEventListener("resize", function() {
          let timer2;
          throttle$1(
            timer2,
            () => {
              const elements = document.body.querySelectorAll(
                '[data-kt-drawer="true"]'
              );
              elements.forEach((el) => {
                const item = el;
                const instance = _DrawerComponent.getInstance(item.id);
                if (instance) {
                  instance.element = item;
                  instance.update();
                }
              });
            },
            200
          );
        });
      }
    };
    // Static methods
    __publicField(_DrawerComponent, "hasInstace", (elementId) => {
      return DrawerStore.has(elementId);
    });
    __publicField(_DrawerComponent, "getInstance", (elementId) => {
      return DrawerStore.get(elementId);
    });
    __publicField(_DrawerComponent, "hideAll", () => {
      const oldInstances = DrawerStore.getAllInstances();
      oldInstances.forEach((dr) => {
        dr.hide();
      });
    });
    __publicField(_DrawerComponent, "updateAll", () => {
      const oldInstances = DrawerStore.getAllInstances();
      oldInstances.forEach((dr) => {
        dr.update();
      });
    });
    // Dismiss instances
    __publicField(_DrawerComponent, "handleDismiss", () => {
      DOMEventHandlerUtil.on(
        document.body,
        '[data-kt-drawer-dismiss="true"]',
        "click",
        () => {
          const element = _DrawerComponent.closest('[data-kt-drawer="true"]');
          if (element) {
            const drawer = _DrawerComponent.getInstance(element);
            if (drawer && drawer.isShown()) {
              drawer.hide();
            }
          }
        }
      );
    });
    __publicField(_DrawerComponent, "bootstrap", () => {
      _DrawerComponent.createInstances('[data-kt-drawer="true"]');
      _DrawerComponent.initGlobalHandlers();
      _DrawerComponent.handleDismiss();
    });
    __publicField(_DrawerComponent, "reinitialization", () => {
      _DrawerComponent.createInstances('[data-kt-drawer="true"]');
      _DrawerComponent.hideAll();
      _DrawerComponent.updateAll();
      _DrawerComponent.handleDismiss();
    });
    let DrawerComponent = _DrawerComponent;
    const defaultScrollOptions = {
      saveState: true
    };
    const _ScrollComponent = class _ScrollComponent {
      constructor(_element, options) {
        __publicField(this, "element");
        __publicField(this, "options");
        __publicField(this, "id");
        __publicField(this, "getOption", (name) => {
          if (this.element.hasAttribute("data-kt-scroll-" + name) === true) {
            const attr = this.element.getAttribute("data-kt-scroll-" + name) || "";
            let value = getAttributeValueByBreakpoint(attr);
            if (value !== null && String(value) === "true") {
              value = true;
            } else if (value !== null && String(value) === "false") {
              value = false;
            }
            return value;
          } else {
            const optionName = stringSnakeToCamel(name);
            const option = getObjectPropertyValueByKey(this.options, optionName);
            if (option) {
              return getAttributeValueByBreakpoint(option);
            } else {
              return null;
            }
          }
        });
        __publicField(this, "getHeightType", () => {
          if (this.getOption("height")) {
            return "height";
          }
          if (this.getOption("min-height")) {
            return "min-height";
          }
          if (this.getOption("max-height")) {
            return "max-height";
          }
        });
        __publicField(this, "getAutoHeight", () => {
          let height = getViewPort().height;
          const dependencies = this.getOption("dependencies");
          const wrappers = this.getOption("wrappers");
          const offset2 = this.getOption("offset");
          if (dependencies !== null) {
            const elements = document.querySelectorAll(dependencies);
            if (elements && elements.length > 0) {
              for (let i = 0, len = elements.length; i < len; i++) {
                const element = elements[i];
                if (isVisibleElement(element) === false) {
                  continue;
                }
                height = height - parseInt(getCSS(element, "height"));
                height = height - parseInt(getCSS(element, "margin-top"));
                height = height - parseInt(getCSS(element, "margin-bottom"));
                const borderTop2 = getCSS(element, "border-top");
                if (borderTop2) {
                  height = height - parseInt(borderTop2);
                }
                const borderBottom2 = getCSS(element, "border-bottom");
                if (borderBottom2) {
                  height = height - parseInt(borderBottom2);
                }
              }
            }
          }
          if (wrappers !== null) {
            const elements = document.querySelectorAll(wrappers);
            if (elements && elements.length > 0) {
              for (let i = 0, len = elements.length; i < len; i++) {
                const element = elements[i];
                if (!isVisibleElement(element)) {
                  continue;
                }
                height = height - parseInt(getCSS(element, "margin-top"));
                height = height - parseInt(getCSS(element, "margin-bottom"));
                height = height - parseInt(getCSS(element, "padding-top"));
                height = height - parseInt(getCSS(element, "padding-bottom"));
                const borderTop2 = getCSS(element, "border-top");
                if (borderTop2) {
                  height = height - parseInt(borderTop2);
                }
                const borderBottom2 = getCSS(element, "border-bottom");
                if (borderBottom2) {
                  height = height - parseInt(borderBottom2);
                }
              }
            }
          }
          if (offset2 !== null) {
            height = height - parseInt(offset2);
          }
          height = height - parseInt(getCSS(this.element, "margin-top"));
          height = height - parseInt(getCSS(this.element, "margin-bottom"));
          const borderTop = getCSS(this.element, "border-top");
          if (borderTop) {
            height = height - parseInt(borderTop);
          }
          const borderBottom = getCSS(this.element, "border-bottom");
          if (borderBottom) {
            height = height - parseInt(borderBottom);
          }
          height = String(height) + "px";
          return height;
        });
        __publicField(this, "setupHeight", () => {
          const height = this.getHeight();
          const heightType = this.getHeightType();
          if (height !== null && height.length > 0) {
            ElementStyleUtil.set(this.element, heightType, height);
          } else {
            ElementStyleUtil.set(this.element, heightType, "");
          }
        });
        __publicField(this, "setupState", () => {
          if (this.getOption("save-state") === true && this.id) {
            const cookie = CookieComponent.get(this.id + "st");
            if (cookie) {
              const pos = parseInt(cookie);
              if (pos > 0) {
                this.element.scrollTop = pos;
              }
            }
          }
        });
        __publicField(this, "setupScrollHandler", () => {
          if (this.getOption("save-state") === true && this.id) {
            this.element.addEventListener("scroll", this.scrollHandler);
          } else {
            this.element.removeEventListener("scroll", this.scrollHandler);
          }
        });
        __publicField(this, "scrollHandler", () => {
          const cookieId = this.id + "st";
          CookieComponent.set(cookieId, this.element.scrollTop, {});
        });
        __publicField(this, "destroyScrollHandler", () => {
          this.element.removeEventListener("scroll", this.scrollHandler);
        });
        __publicField(this, "resetHeight", () => {
          const heghtType = this.getHeightType();
          if (heghtType) {
            ElementStyleUtil.set(this.element, heghtType, "");
          }
        });
        ///////////////////////
        // ** Public API  ** //
        ///////////////////////
        __publicField(this, "update", () => {
          if (this.getOption("activate") === true || !this.element.hasAttribute("data-kt-scroll-activate")) {
            this.setupHeight();
            this.setupScrollHandler();
            this.setupState();
          } else {
            this.resetHeight();
            this.destroyScrollHandler();
          }
        });
        __publicField(this, "getHeight", () => {
          const heightType = this.getHeightType();
          const height = this.getOption(heightType || "");
          if (height instanceof Function) {
            return height.call(height);
          } else if (height !== null && typeof height === "string" && height.toLowerCase() === "auto") {
            return this.getAutoHeight();
          } else {
            return height;
          }
        });
        __publicField(this, "getElement", () => {
          return this.element;
        });
        this.element = _element;
        this.options = Object.assign(defaultScrollOptions, options);
        this.id = this.element.getAttribute("id") || "";
        this.update();
        DataUtil.set(this.element, "scroll", this);
      }
      // Static methods
      static hasInstace(element) {
        return DataUtil.has(element, "scroll");
      }
      static getInstance(element) {
        if (element !== null && _ScrollComponent.hasInstace(element)) {
          const data2 = DataUtil.get(element, "scroll");
          if (data2) {
            return data2;
          }
        }
      }
      // Create Instances
      static createInstances(selector) {
        const elements = document.body.querySelectorAll(selector);
        elements.forEach((element) => {
          const item = element;
          let scroll2 = _ScrollComponent.getInstance(item);
          if (!scroll2) {
            scroll2 = new _ScrollComponent(item, defaultScrollOptions);
          }
        });
      }
      static destroyAll(attr = '[data-kt-scroll="true"]') {
      }
      static bootstrap(attr = '[data-kt-scroll="true"]') {
        _ScrollComponent.createInstances(attr);
        _ScrollComponent.resize();
      }
      static reinitialization(attr = '[data-kt-scroll="true"]') {
        _ScrollComponent.createInstances(attr);
      }
      static updateAll() {
        const elements = document.body.querySelectorAll('[data-kt-scroll="true"]');
        elements.forEach((element) => {
          const instance = _ScrollComponent.getInstance(element);
          if (instance) {
            instance.update();
          }
        });
      }
      static resize() {
        window.addEventListener("resize", function() {
          let timer2;
          throttle$1(
            timer2,
            () => {
              _ScrollComponent.updateAll();
            },
            200
          );
        });
      }
    };
    __publicField(_ScrollComponent, "createInstance", (element, options = defaultScrollOptions) => {
      let scroll2 = _ScrollComponent.getInstance(element);
      if (!scroll2) {
        scroll2 = new _ScrollComponent(element, options);
      }
      return scroll2;
    });
    let ScrollComponent = _ScrollComponent;
    const defaultScrollTopOptions = {
      offset: 200,
      speed: 600
    };
    const _ScrollTopComponent = class _ScrollTopComponent {
      constructor(_element, options) {
        __publicField(this, "element");
        __publicField(this, "options");
        __publicField(this, "instanceUid");
        __publicField(this, "_handlers", () => {
          let timer2;
          window.addEventListener("scroll", () => {
            throttle$1(timer2, () => {
              this._scroll();
            });
          });
          this.element.addEventListener("click", (e) => {
            e.preventDefault();
            this._go();
          });
        });
        __publicField(this, "_scroll", () => {
          const offset2 = parseInt(this._getOption("offset"));
          const pos = getScrollTop();
          if (pos > offset2) {
            if (!document.body.hasAttribute("data-kt-scrolltop")) {
              document.body.setAttribute("data-kt-scrolltop", "on");
            }
          } else {
            if (document.body.hasAttribute("data-kt-scrolltop")) {
              document.body.removeAttribute("data-kt-scrolltop");
            }
          }
        });
        __publicField(this, "_go", () => {
          const speed = parseInt(this._getOption("speed"));
          ElementAnimateUtil.scrollTop(0, speed);
        });
        __publicField(this, "_getOption", (name) => {
          const attr = this.element.getAttribute(`data-kt-scrolltop-${name}`);
          if (attr) {
            const value = getAttributeValueByBreakpoint(attr);
            return value !== null && String(value) === "true";
          }
          const optionName = stringSnakeToCamel(name);
          const option = getObjectPropertyValueByKey(this.options, optionName);
          if (option) {
            return getAttributeValueByBreakpoint(option);
          }
          return null;
        });
        ///////////////////////
        // ** Public API  ** //
        ///////////////////////
        // Plugin API
        __publicField(this, "go", () => {
          return this._go();
        });
        __publicField(this, "getElement", () => {
          return this.element;
        });
        this.element = _element;
        this.options = Object.assign(defaultScrollTopOptions, options);
        this.instanceUid = getUniqueIdWithPrefix("scrolltop");
        this._handlers();
        DataUtil.set(this.element, "scrolltop", this);
      }
    };
    // Static methods
    __publicField(_ScrollTopComponent, "getInstance", (el) => {
      const scrollTop = DataUtil.get(el, "scrolltop");
      if (scrollTop) {
        return scrollTop;
      }
    });
    __publicField(_ScrollTopComponent, "createInstances", (selector) => {
      const elements = document.body.querySelectorAll(selector);
      elements.forEach((el) => {
        const item = el;
        let scrollTop = _ScrollTopComponent.getInstance(item);
        if (!scrollTop) {
          scrollTop = new _ScrollTopComponent(item, defaultScrollTopOptions);
        }
      });
    });
    __publicField(_ScrollTopComponent, "createInsance", (selector, options = defaultScrollTopOptions) => {
      const element = document.body.querySelector(selector);
      if (!element) {
        return;
      }
      const item = element;
      let scrollTop = _ScrollTopComponent.getInstance(item);
      if (!scrollTop) {
        scrollTop = new _ScrollTopComponent(item, options);
      }
      return scrollTop;
    });
    __publicField(_ScrollTopComponent, "bootstrap", () => {
      _ScrollTopComponent.createInstances('[data-kt-scrolltop="true"]');
    });
    __publicField(_ScrollTopComponent, "reinitialization", () => {
      _ScrollTopComponent.createInstances('[data-kt-scrolltop="true"]');
    });
    __publicField(_ScrollTopComponent, "goTop", () => {
      ElementAnimateUtil.scrollTop(0, defaultScrollTopOptions.speed);
    });
    let ScrollTopComponent = _ScrollTopComponent;
    const defaultStepperOptions = {
      startIndex: 1,
      animation: false,
      animationSpeed: "0.3s",
      animationNextClass: "animate__animated animate__slideInRight animate__fast",
      animationPreviousClass: "animate__animated animate__slideInLeft animate__fast"
    };
    const _StepperComponent = class _StepperComponent {
      constructor(_element, options) {
        __publicField(this, "element");
        __publicField(this, "options");
        __publicField(this, "instanceUid");
        __publicField(this, "steps");
        __publicField(this, "btnNext");
        __publicField(this, "btnPrev");
        __publicField(this, "btnSubmit");
        __publicField(this, "totalStepsNumber", 0);
        __publicField(this, "passedStepIndex", 0);
        __publicField(this, "currentStepIndex", 1);
        __publicField(this, "_goTo", (index) => {
          EventHandlerUtil.trigger(this.element, "kt.stepper.change");
          if (index === this.currentStepIndex || index > this.totalStepsNumber || index < 0) {
            return;
          }
          index = parseInt(index.toString());
          this.passedStepIndex = this.currentStepIndex;
          this.currentStepIndex = index;
          this.refreshUI();
          EventHandlerUtil.trigger(this.element, "kt.stepper.changed");
        });
        __publicField(this, "initHandlers", () => {
          var _a2, _b;
          (_a2 = this.btnNext) == null ? void 0 : _a2.addEventListener("click", (e) => {
            e.preventDefault();
            EventHandlerUtil.trigger(this.element, "kt.stepper.next", e);
          });
          (_b = this.btnPrev) == null ? void 0 : _b.addEventListener("click", (e) => {
            e.preventDefault();
            EventHandlerUtil.trigger(this.element, "kt.stepper.previous", e);
          });
          DOMEventHandlerUtil.on(
            this.element,
            '[data-kt-stepper-action="step"]',
            "click",
            (e) => {
              e.preventDefault();
              if (this.steps && this.steps.length > 0) {
                for (let i = 0; i < this.steps.length; i++) {
                  if (this.steps[i] === this.element) {
                    const index = i + 1;
                    const stepDirection = this._getStepDirection(index);
                    EventHandlerUtil.trigger(
                      this.element,
                      `stepper.${stepDirection}`,
                      e
                    );
                    return;
                  }
                }
              }
            }
          );
        });
        __publicField(this, "_getStepDirection", (index) => {
          return index > this.currentStepIndex ? "next" : "previous";
        });
        __publicField(this, "getStepContent", (index) => {
          const content = this.element.querySelectorAll(
            '[data-kt-stepper-element="content"]'
          );
          if (!content) {
            return false;
          }
          if (content[index - 1]) {
            return content[index - 1];
          }
          return false;
        });
        __publicField(this, "getLastStepIndex", () => {
          return this.totalStepsNumber;
        });
        __publicField(this, "getTotalStepsNumber", () => {
          return this.totalStepsNumber;
        });
        __publicField(this, "refreshUI", () => {
          let state = "";
          if (this.isLastStep()) {
            state = "last";
          } else if (this.isFirstStep()) {
            state = "first";
          } else {
            state = "between";
          }
          this.element.classList.remove("last");
          this.element.classList.remove("first");
          this.element.classList.remove("between");
          this.element.classList.add(state);
          const elements = this.element.querySelectorAll(
            '[data-kt-stepper-element="nav"], [data-kt-stepper-element="content"], [data-kt-stepper-element="info"]'
          );
          if (!elements || elements.length <= 0) {
            return;
          }
          for (let i = 0, len = elements.length; i < len; i++) {
            const element = elements[i];
            const index = getElementIndex(element) + 1;
            element.classList.remove("current");
            element.classList.remove("completed");
            element.classList.remove("pending");
            if (index === this.currentStepIndex) {
              element.classList.add("current");
              if (this.options.animation !== false && element.getAttribute("data-kt-stepper-element") === "content") {
                ElementStyleUtil.set(
                  element,
                  "animationDuration",
                  this.options.animationSpeed
                );
                const animation = this._getStepDirection(this.passedStepIndex) === "previous" ? this.options.animationPreviousClass : this.options.animationNextClass;
                ElementAnimateUtil.animateClass(element, animation);
              }
            } else {
              if (index < this.currentStepIndex) {
                element.classList.add("completed");
              } else {
                element.classList.add("pending");
              }
            }
          }
        });
        __publicField(this, "isLastStep", () => {
          return this.currentStepIndex === this.totalStepsNumber;
        });
        __publicField(this, "isFirstStep", () => {
          return this.currentStepIndex === 1;
        });
        __publicField(this, "isBetweenStep", () => {
          return this.isLastStep() === false && this.isFirstStep() === false;
        });
        //   ///////////////////////
        //   // ** Public API  ** //
        //   ///////////////////////
        //   // Plugin API
        __publicField(this, "goto", (index) => {
          return this._goTo(index);
        });
        __publicField(this, "goNext", () => {
          return this.goto(this.getNextStepIndex());
        });
        __publicField(this, "goPrev", () => {
          return this.goto(this.getPrevStepIndex());
        });
        __publicField(this, "goFirst", () => {
          return this.goto(1);
        });
        __publicField(this, "goLast", () => {
          return this.goto(this.getLastStepIndex());
        });
        __publicField(this, "getCurrentStepIndex", () => {
          return this.currentStepIndex;
        });
        __publicField(this, "getNextStepIndex", () => {
          if (this.totalStepsNumber >= this.currentStepIndex + 1) {
            return this.currentStepIndex + 1;
          } else {
            return this.totalStepsNumber;
          }
        });
        __publicField(this, "getPassedStepIndex", () => {
          return this.passedStepIndex;
        });
        __publicField(this, "getPrevStepIndex", () => {
          if (this.currentStepIndex - 1 > 1) {
            return this.currentStepIndex - 1;
          } else {
            return 1;
          }
        });
        __publicField(this, "getElement", (index) => {
          return this.element;
        });
        // Event API
        __publicField(this, "on", (name, handler) => {
          return EventHandlerUtil.on(this.element, name, handler);
        });
        __publicField(this, "one", (name, handler) => {
          return EventHandlerUtil.one(this.element, name, handler);
        });
        __publicField(this, "off", (name, handlerId) => {
          return EventHandlerUtil.off(this.element, name, handlerId);
        });
        __publicField(this, "destroy", () => {
        });
        __publicField(this, "trigger", (name, event) => {
          return EventHandlerUtil.trigger(this.element, name, event);
        });
        var _a2;
        this.element = _element;
        this.options = Object.assign(defaultStepperOptions, options);
        this.instanceUid = getUniqueIdWithPrefix("stepper");
        this.steps = this.element.querySelectorAll(
          '[data-kt-stepper-element="nav"]'
        );
        this.btnNext = this.element.querySelector(
          '[data-kt-stepper-action="next"]'
        );
        this.btnPrev = this.element.querySelector(
          '[data-kt-stepper-action="previous"]'
        );
        this.btnSubmit = this.element.querySelector(
          '[data-kt-stepper-action="submit"]'
        );
        this.totalStepsNumber = ((_a2 = this.steps) == null ? void 0 : _a2.length) | 0;
        this.passedStepIndex = 0;
        this.currentStepIndex = 1;
        if (this.options.startIndex > 1) {
          this._goTo(this.options.startIndex);
        }
        this.initHandlers();
        DataUtil.set(this.element, "stepper", this);
      }
      // Static methods
      static hasInstace(element) {
        return DataUtil.has(element, "stepper");
      }
      static getInstance(element) {
        if (element !== null && _StepperComponent.hasInstace(element)) {
          const data2 = DataUtil.get(element, "stepper");
          if (data2) {
            return data2;
          }
        }
      }
      // Create Instances
      static createInstances(selector) {
        const elements = document.body.querySelectorAll(selector);
        elements.forEach((element) => {
          const item = element;
          let stepper = _StepperComponent.getInstance(item);
          if (!stepper) {
            stepper = new _StepperComponent(item, defaultStepperOptions);
          }
        });
      }
      static bootstrap(attr = "[data-kt-stepper]") {
        _StepperComponent.createInstances(attr);
      }
    };
    __publicField(_StepperComponent, "createInsance", (element, options = defaultStepperOptions) => {
      if (!element) {
        return null;
      }
      let stepper = _StepperComponent.getInstance(element);
      if (!stepper) {
        stepper = new _StepperComponent(element, options);
      }
      return stepper;
    });
    let StepperComponent = _StepperComponent;
    const defaultStickyOptions = {
      offset: 200,
      reverse: false,
      animation: true,
      animationSpeed: "0.3s",
      animationClass: "animation-slide-in-down"
    };
    const _StickyComponent = class _StickyComponent {
      constructor(_element, options) {
        __publicField(this, "element");
        __publicField(this, "options");
        __publicField(this, "instanceUid");
        __publicField(this, "instanceName", "");
        __publicField(this, "attributeName");
        __publicField(this, "attributeName2");
        __publicField(this, "eventTriggerState");
        __publicField(this, "lastScrollTop");
        __publicField(this, "scroll", () => {
          console.log("trigger scoll");
          const offset2 = this.getOption("offset");
          const reverse = this.getOption("reverse");
          if (offset2 === false) {
            return;
          }
          let offsetNum = 0;
          if (typeof offset2 === "string") {
            offsetNum = parseInt(offset2);
          }
          const st = getScrollTop();
          if (reverse === true) {
            if (st > offsetNum && this.lastScrollTop < st) {
              if (document.body.hasAttribute(this.attributeName) === false) {
                this.enable();
                document.body.setAttribute(this.attributeName, "on");
                document.body.setAttribute(this.attributeName2, "on");
                this.element.setAttribute("data-kt-sticky-enabled", "true");
              }
              if (this.eventTriggerState === true) {
                EventHandlerUtil.trigger(this.element, "kt.sticky.on");
                EventHandlerUtil.trigger(this.element, "kt.sticky.change");
                this.eventTriggerState = false;
              }
            } else {
              if (document.body.hasAttribute(this.attributeName)) {
                this.disable();
                document.body.removeAttribute(this.attributeName);
                document.body.removeAttribute(this.attributeName2);
                this.element.removeAttribute("data-kt-sticky-enabled");
              }
              if (this.eventTriggerState === false) {
                EventHandlerUtil.trigger(this.element, "kt.sticky.off");
                EventHandlerUtil.trigger(this.element, "kt.sticky.change");
                this.eventTriggerState = true;
              }
            }
            this.lastScrollTop = st;
            return;
          }
          if (st > offsetNum) {
            if (document.body.hasAttribute(this.attributeName) === false) {
              this.enable();
              document.body.setAttribute(this.attributeName, "on");
              document.body.setAttribute(this.attributeName2, "on");
            }
            if (this.eventTriggerState === true) {
              EventHandlerUtil.trigger(this.element, "kt.sticky.on");
              EventHandlerUtil.trigger(this.element, "kt.sticky.change");
              this.eventTriggerState = false;
            }
          } else {
            if (document.body.hasAttribute(this.attributeName) === true) {
              this.disable();
              document.body.removeAttribute(this.attributeName);
              document.body.removeAttribute(this.attributeName2);
            }
            if (this.eventTriggerState === false) {
              EventHandlerUtil.trigger(this.element, "kt.sticky.off");
              EventHandlerUtil.trigger(this.element, "kt.sticky.change");
              this.eventTriggerState = true;
            }
          }
        });
        __publicField(this, "getOption", (name) => {
          const dataStickyAttr = "data-kt-sticky-" + name;
          if (this.element.hasAttribute(dataStickyAttr) === true) {
            const attrValueInStr = this.element.getAttribute(dataStickyAttr);
            const attrValue = getAttributeValueByBreakpoint(attrValueInStr || "");
            if (attrValue !== null && String(attrValue) === "true") {
              return true;
            } else if (attrValue !== null && String(attrValue) === "false") {
              return false;
            }
            return attrValue;
          } else {
            const optionName = stringSnakeToCamel(name);
            const option = getObjectPropertyValueByKey(this.options, optionName);
            if (option) {
              return getAttributeValueByBreakpoint(option);
            }
          }
        });
        __publicField(this, "disable", () => {
          ElementStyleUtil.remove(this.element, "top");
          ElementStyleUtil.remove(this.element, "width");
          ElementStyleUtil.remove(this.element, "left");
          ElementStyleUtil.remove(this.element, "right");
          ElementStyleUtil.remove(this.element, "z-index");
          ElementStyleUtil.remove(this.element, "position");
        });
        __publicField(this, "enable", (update = false) => {
          const top2 = this.getOption("top");
          const left2 = this.getOption("left");
          let width = this.getOption("width");
          const zindex = this.getOption("zindex");
          if (update !== true && this.getOption("animation") === true) {
            ElementStyleUtil.set(
              this.element,
              "animationDuration",
              this.getOption("animationSpeed")
            );
            ElementAnimateUtil.animateClass(
              this.element,
              "animation " + this.getOption("animationClass")
            );
          }
          if (zindex) {
            ElementStyleUtil.set(this.element, "z-index", zindex);
            ElementStyleUtil.set(this.element, "position", "fixed");
          }
          if (top2 !== null) {
            ElementStyleUtil.set(this.element, "top", top2);
          }
          if (width !== null && width !== void 0) {
            const widthTarget = getObjectPropertyValueByKey(width, "target");
            if (widthTarget) {
              const targetElement = document.querySelector(widthTarget);
              if (targetElement) {
                width = getCSS(targetElement, "width");
              }
            }
            ElementStyleUtil.set(this.element, "width", width);
          }
          if (left2 !== null) {
            if (String(left2).toLowerCase() === "auto") {
              const offsetLeft = getElementOffset(this.element).left;
              if (offsetLeft > 0) {
                ElementStyleUtil.set(this.element, "left", String(offsetLeft) + "px");
              }
            }
          }
        });
        __publicField(this, "update", () => {
          if (document.body.hasAttribute(this.attributeName) === true) {
            this.disable();
            document.body.removeAttribute(this.attributeName);
            document.body.removeAttribute(this.attributeName2);
            this.enable(true);
            document.body.setAttribute(this.attributeName, "on");
            document.body.setAttribute(this.attributeName2, "on");
          }
        });
        // Event API
        __publicField(this, "on", (name, callBack) => {
          return EventHandlerUtil.on(this.element, name, callBack);
        });
        __publicField(this, "one", (name, callback) => {
          return EventHandlerUtil.one(this.element, name, callback);
        });
        __publicField(this, "off", (name, handlerId) => {
          return EventHandlerUtil.off(this.element, name, handlerId);
        });
        __publicField(this, "trigger", (name) => {
          return EventHandlerUtil.trigger(this.element, name);
        });
        this.element = _element;
        this.options = Object.assign(defaultStickyOptions, options);
        this.instanceUid = getUniqueIdWithPrefix("sticky");
        this.instanceName = this.element.getAttribute("data-kt-sticky-name");
        this.attributeName = "data-kt-sticky-" + this.instanceName;
        this.attributeName2 = "data-kt-" + this.instanceName;
        this.eventTriggerState = true;
        this.lastScrollTop = 0;
        window.addEventListener("scroll", this.scroll);
        this.scroll();
        DataUtil.set(this.element, "sticky", this);
      }
      // Static methods
      static hasInstace(element) {
        return DataUtil.has(element, "sticky");
      }
      static getInstance(element) {
        if (element !== null && _StickyComponent.hasInstace(element)) {
          const data2 = DataUtil.get(element, "sticky");
          if (data2) {
            return data2;
          }
        }
      }
      // Create Instances
      static createInstances(selector) {
        const elements = document.body.querySelectorAll(selector);
        elements.forEach((element) => {
          const item = element;
          let sticky = _StickyComponent.getInstance(item);
          if (!sticky) {
            sticky = new _StickyComponent(item, defaultStickyOptions);
          }
        });
      }
      static bootstrap(attr = '[data-kt-sticky="true"]') {
        _StickyComponent.createInstances(attr);
      }
      static reInitialization(attr = '[data-kt-sticky="true"]') {
        _StickyComponent.createInstances(attr);
      }
    };
    __publicField(_StickyComponent, "createInsance", (selector, options = defaultStickyOptions) => {
      const element = document.body.querySelector(selector);
      if (!element) {
        return;
      }
      const item = element;
      let sticky = _StickyComponent.getInstance(item);
      if (!sticky) {
        sticky = new _StickyComponent(item, options);
      }
      return sticky;
    });
    let StickyComponent = _StickyComponent;
    const defaultToggleOptions = {
      saveState: false
    };
    const _ToggleComponent = class _ToggleComponent {
      constructor(_element, options) {
        __publicField(this, "element");
        __publicField(this, "instanceUid");
        __publicField(this, "options");
        __publicField(this, "state", "");
        __publicField(this, "mode", "");
        __publicField(this, "target", null);
        __publicField(this, "attribute", "");
        __publicField(this, "_handlers", () => {
          this.element.addEventListener("click", (e) => {
            e.preventDefault();
            if (this.mode === "") {
              this._toggle();
              return;
            }
            if (this.mode === "off" && !this._isEnabled()) {
              this._toggle();
            } else if (this.mode === "on" && this._isEnabled()) {
              this._toggle();
            }
          });
        });
        // Event handlers
        __publicField(this, "_toggle", () => {
          EventHandlerUtil.trigger(this.element, "kt.toggle.change");
          if (this._isEnabled()) {
            this._disable();
          } else {
            this._enable();
          }
          EventHandlerUtil.trigger(this.element, "kt.toggle.changed");
          return this;
        });
        __publicField(this, "_enable", () => {
          var _a2;
          if (this._isEnabled()) {
            return;
          }
          EventHandlerUtil.trigger(this.element, "kt.toggle.enable");
          (_a2 = this.target) == null ? void 0 : _a2.setAttribute(this.attribute, "on");
          if (this.state.length > 0) {
            this.element.classList.add(this.state);
          }
          if (this.options.saveState) {
            CookieComponent.set(this.attribute, "on", {});
          }
          EventHandlerUtil.trigger(this.element, "kt.toggle.enabled");
          return this;
        });
        __publicField(this, "_disable", () => {
          var _a2;
          if (!this._isEnabled()) {
            return false;
          }
          EventHandlerUtil.trigger(this.element, "kt.toggle.disable");
          (_a2 = this.target) == null ? void 0 : _a2.removeAttribute(this.attribute);
          if (this.state.length > 0) {
            this.element.classList.remove(this.state);
          }
          if (this.options.saveState) {
            CookieComponent.delete(this.attribute);
          }
          EventHandlerUtil.trigger(this.element, "kt.toggle.disabled");
          return this;
        });
        __publicField(this, "_isEnabled", () => {
          if (!this.target) {
            return false;
          }
          return String(this.target.getAttribute(this.attribute)).toLowerCase() === "on";
        });
        ///////////////////////
        // ** Public API  ** //
        ///////////////////////
        // Plugin API
        // Plugin API
        __publicField(this, "toggle", () => {
          return this._toggle();
        });
        __publicField(this, "enable", () => {
          return this._enable();
        });
        __publicField(this, "disable", () => {
          return this._disable();
        });
        __publicField(this, "isEnabled", () => {
          return this._isEnabled();
        });
        __publicField(this, "goElement", () => {
          return this.element;
        });
        // Event API
        __publicField(this, "on", (name, handler) => {
          return EventHandlerUtil.on(this.element, name, handler);
        });
        __publicField(this, "one", (name, handler) => {
          return EventHandlerUtil.one(this.element, name, handler);
        });
        __publicField(this, "off", (name, handlerId) => {
          return EventHandlerUtil.off(this.element, name, handlerId);
        });
        __publicField(this, "trigger", (name, event) => {
          return EventHandlerUtil.trigger(this.element, name, event);
        });
        this.options = Object.assign(defaultToggleOptions, options);
        this.instanceUid = getUniqueIdWithPrefix("toggle");
        this.element = _element;
        const elementTargetAttr = this.element.getAttribute(
          "data-kt-toggle-target"
        );
        if (elementTargetAttr) {
          this.target = document.querySelector(elementTargetAttr);
        }
        const elementToggleAttr = this.element.getAttribute("data-kt-toggle-state");
        this.state = elementToggleAttr || "";
        const elementModeAttr = this.element.getAttribute("data-kt-toggle-mode");
        this.mode = elementModeAttr || "";
        this.attribute = "data-kt-" + this.element.getAttribute("data-kt-toggle-name");
        this._handlers();
        DataUtil.set(this.element, "toggle", this);
      }
    };
    // Static methods
    __publicField(_ToggleComponent, "getInstance", (el) => {
      const toggleElement = DataUtil.get(el, "toggle");
      if (toggleElement) {
        return toggleElement;
      }
      return null;
    });
    __publicField(_ToggleComponent, "createInstances", (selector) => {
      const elements = document.body.querySelectorAll(selector);
      elements.forEach((el) => {
        let toggle = _ToggleComponent.getInstance(el);
        if (!toggle) {
          toggle = new _ToggleComponent(el, defaultToggleOptions);
        }
      });
    });
    __publicField(_ToggleComponent, "reinitialization", () => {
      _ToggleComponent.createInstances("[data-kt-toggle]");
    });
    __publicField(_ToggleComponent, "bootstrap", () => {
      _ToggleComponent.createInstances("[data-kt-toggle]");
    });
    let ToggleComponent = _ToggleComponent;
    const defaultPasswordMeterOptions = {
      minLength: 8,
      checkUppercase: true,
      checkLowercase: true,
      checkDigit: true,
      checkChar: true,
      scoreHighlightClass: "active"
    };
    const defaultPasswordMeterQueires = {
      componentName: "password-meter",
      instanseQuery: "[data-kt-password-meter]",
      inputQuery: "input[type]",
      visibilityQuery: '[data-kt-password-meter-control="visibility"]',
      highlightQuery: '[data-kt-password-meter-control="highlight"]'
    };
    const _PasswordMeterComponent = class _PasswordMeterComponent {
      constructor(_element, _options, _queries) {
        __publicField(this, "element");
        __publicField(this, "inputElement");
        __publicField(this, "visibilityElement");
        __publicField(this, "highlightElement");
        __publicField(this, "options");
        __publicField(this, "queries");
        __publicField(this, "score");
        __publicField(this, "checkSteps");
        ///////////////////////
        // ** Public API  ** //
        ///////////////////////
        __publicField(this, "reset", () => {
          this.score = 0;
          this.highlight();
        });
        this.element = _element;
        this.options = Object.assign(defaultPasswordMeterOptions, _options);
        this.queries = _queries;
        this.score = 0;
        this.checkSteps = 5;
        this.inputElement = this.element.querySelector(this.queries.inputQuery);
        this.visibilityElement = this.element.querySelector(
          this.queries.visibilityQuery
        );
        this.highlightElement = this.element.querySelector(
          this.queries.highlightQuery
        );
        this.handlers();
        DataUtil.set(this.element, this.queries.componentName, this);
      }
      handlers() {
        if (this.inputElement) {
          this.inputElement.addEventListener("input", () => {
            this.check();
          });
        }
        if (this.visibilityElement) {
          this.visibilityElement.addEventListener("click", () => {
            this.visitbility();
          });
        }
      }
      visitbility() {
        if (this.visibilityElement && this.inputElement) {
          const visibleIcon = this.visibilityElement.querySelector(
            "i:not(.d-none), .svg-icon:not(.d-none)"
          );
          const hiddenIcon = this.visibilityElement.querySelector(
            "i.d-none, .svg-icon.d-none"
          );
          const typeAttr = this.inputElement.getAttribute("type") || "";
          if (typeAttr === "password") {
            this.inputElement.setAttribute("type", "text");
          } else {
            this.inputElement.setAttribute("type", "password");
          }
          visibleIcon == null ? void 0 : visibleIcon.classList.add("d-none");
          hiddenIcon == null ? void 0 : hiddenIcon.classList.remove("d-none");
          this.inputElement.focus();
        }
      }
      checkScore() {
        return 0;
      }
      checkLength() {
        if (this.inputElement) {
          return this.inputElement.value.length >= this.options.minLength;
        }
        return false;
      }
      checkLowerCase() {
        const val = this.inputElement ? this.inputElement.value : "";
        return /[a-z]/.test(val);
      }
      checkUppercase() {
        const val = this.inputElement ? this.inputElement.value : "";
        return /[A-Z]/.test(val);
      }
      checkDigit() {
        const val = this.inputElement ? this.inputElement.value : "";
        return /[0-9]/.test(val);
      }
      checkChar() {
        const val = this.inputElement ? this.inputElement.value : "";
        return /[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(val);
      }
      getCheckScore() {
        let count = 1;
        if (this.options.checkUppercase) {
          count++;
        }
        if (this.options.checkLowercase) {
          count++;
        }
        if (this.options.checkDigit) {
          count++;
        }
        if (this.options.checkChar) {
          count++;
        }
        this.checkSteps = count;
        return 100 / this.checkSteps;
      }
      highlight() {
        const items = this.highlightElement ? [].slice.call(this.highlightElement.querySelectorAll("div")) : [];
        const total = items.length;
        let index = 0;
        const checkScore = this.getCheckScore();
        const score = this.getScore();
        items.map((item) => {
          index++;
          if (checkScore * index * (this.checkSteps / total) <= score) {
            item.classList.add("active");
          } else {
            item.classList.remove("active");
          }
        });
      }
      getScore() {
        return this.score;
      }
      check() {
        let score = 0;
        const checkScore = this.getCheckScore();
        if (this.checkLength()) {
          score = score + checkScore;
        }
        if (this.options.checkUppercase && this.checkLowerCase()) {
          score = score + checkScore;
        }
        if (this.options.checkLowercase && this.checkUppercase()) {
          score = score + checkScore;
        }
        if (this.options.checkDigit && this.checkDigit()) {
          score = score + checkScore;
        }
        if (this.options.checkChar && this.checkChar()) {
          score = score + checkScore;
        }
        this.score = score;
        this.highlight();
      }
    };
    // Static methods
    __publicField(_PasswordMeterComponent, "getInstance", (el, componentName = defaultPasswordMeterQueires.componentName) => {
      const passwordMeter = DataUtil.get(el, componentName);
      if (passwordMeter) {
        return passwordMeter;
      }
    });
    __publicField(_PasswordMeterComponent, "createInstances", (selector = defaultPasswordMeterQueires.instanseQuery, options = defaultPasswordMeterOptions, queries = defaultPasswordMeterQueires) => {
      const elements = document.body.querySelectorAll(selector);
      elements.forEach((el) => {
        const item = el;
        let passwordMeter = _PasswordMeterComponent.getInstance(item);
        if (!passwordMeter) {
          passwordMeter = new _PasswordMeterComponent(item, options, queries);
        }
      });
    });
    __publicField(_PasswordMeterComponent, "createInsance", (selector = defaultPasswordMeterQueires.instanseQuery, options = defaultPasswordMeterOptions, queries = defaultPasswordMeterQueires) => {
      const element = document.body.querySelector(selector);
      if (!element) {
        return;
      }
      const item = element;
      let passwordMeter = _PasswordMeterComponent.getInstance(item);
      if (!passwordMeter) {
        passwordMeter = new _PasswordMeterComponent(item, options, queries);
      }
      return passwordMeter;
    });
    __publicField(_PasswordMeterComponent, "bootstrap", (selector = defaultPasswordMeterQueires.instanseQuery) => {
      _PasswordMeterComponent.createInstances(selector);
    });
    __publicField(_PasswordMeterComponent, "reinitialization", (selector = defaultPasswordMeterQueires.instanseQuery) => {
      _PasswordMeterComponent.createInstances(selector);
    });
    let PasswordMeterComponent = _PasswordMeterComponent;
    const _SwapperStore = class _SwapperStore {
      static set(instanceId, drawerComponentObj) {
        if (_SwapperStore.has(instanceId)) {
          return;
        }
        _SwapperStore.store.set(instanceId, drawerComponentObj);
      }
      static get(instanceId) {
        if (!_SwapperStore.has(instanceId)) {
          return;
        }
        return _SwapperStore.store.get(instanceId);
      }
      static remove(instanceId) {
        if (!_SwapperStore.has(instanceId)) {
          return;
        }
        _SwapperStore.store.delete(instanceId);
      }
      static has(instanceId) {
        return _SwapperStore.store.has(instanceId);
      }
      static getAllInstances() {
        return _SwapperStore.store;
      }
    };
    __publicField(_SwapperStore, "store", /* @__PURE__ */ new Map());
    let SwapperStore = _SwapperStore;
    const defaultSwapperOptions = {
      mode: "append"
    };
    const defaultSwapperQueires = {
      componentName: "swapper",
      instanseQuery: '[data-kt-swapper="true"]',
      attrQuery: "data-kt-swapper-"
    };
    const _SwapperComponent = class _SwapperComponent {
      constructor(_element, _options, _queries) {
        __publicField(this, "element");
        __publicField(this, "options");
        __publicField(this, "queries");
        ///////////////////////
        // ** Public API  ** //
        ///////////////////////
        __publicField(this, "update", () => {
          var _a2;
          const parentSelector = (_a2 = this.getOption("parent")) == null ? void 0 : _a2.toString();
          const mode = this.getOption("mode");
          const parentElement = parentSelector ? document.querySelector(parentSelector) : null;
          if (parentElement && this.element.parentNode !== parentElement) {
            const alreadyPended = document.getElementById("kt_header_menu") !== null;
            if (!alreadyPended) {
              const childEl = parentElement.querySelector(
                '[data-kt-swapper="true"]'
              );
              childEl == null ? void 0 : childEl.remove();
              if (mode === "prepend") {
                parentElement.prepend(this.element);
              } else if (mode === "append") {
                parentElement.append(this.element);
              }
            }
          }
        });
        // Event API
        __publicField(this, "on", (name, handler) => {
          return EventHandlerUtil.on(this.element, name, handler);
        });
        __publicField(this, "one", (name, handler) => {
          return EventHandlerUtil.one(this.element, name, handler);
        });
        __publicField(this, "off", (name, handlerId) => {
          return EventHandlerUtil.off(this.element, name, handlerId);
        });
        __publicField(this, "trigger", (name, event) => {
          return EventHandlerUtil.trigger(this.element, name, event);
        });
        this.element = _element;
        this.options = Object.assign(defaultSwapperOptions, _options);
        this.queries = _queries;
        this.update();
        SwapperStore.set(this.element.id, this);
      }
      getOption(name) {
        const attr = this.element.getAttribute(`${this.queries.attrQuery}${name}`);
        if (attr) {
          const value = getAttributeValueByBreakpoint(attr);
          if (attr != null && String(value) === "true") {
            return true;
          } else if (value !== null && String(value) === "false") {
            return false;
          }
          return value;
        } else {
          const optionName = stringSnakeToCamel(name);
          const option = getObjectPropertyValueByKey(this.options, optionName);
          if (option) {
            return getAttributeValueByBreakpoint(option);
          } else {
            return null;
          }
        }
      }
    };
    // Static methods
    __publicField(_SwapperComponent, "getInstance", (el, componentName = defaultSwapperQueires.componentName) => {
      const place = SwapperStore.get(el.id);
      if (place) {
        return place;
      }
      return null;
    });
    __publicField(_SwapperComponent, "createInstances", (selector = defaultSwapperQueires.instanseQuery, options = defaultSwapperOptions, queries = defaultSwapperQueires) => {
      const elements = document.body.querySelectorAll(selector);
      elements.forEach((el) => {
        const item = el;
        let place = _SwapperComponent.getInstance(item);
        if (!place) {
          place = new _SwapperComponent(item, options, queries);
        }
      });
    });
    __publicField(_SwapperComponent, "createInsance", (selector = defaultSwapperQueires.instanseQuery, options = defaultSwapperOptions, queries = defaultSwapperQueires) => {
      const element = document.body.querySelector(selector);
      if (!element) {
        return;
      }
      const item = element;
      let place = _SwapperComponent.getInstance(item);
      if (!place) {
        place = new _SwapperComponent(item, options, queries);
      }
      return place;
    });
    __publicField(_SwapperComponent, "bootstrap", (selector = defaultSwapperQueires.instanseQuery) => {
      _SwapperComponent.createInstances(selector);
    });
    __publicField(_SwapperComponent, "reinitialization", (selector = defaultSwapperQueires.instanseQuery) => {
      _SwapperComponent.createInstances(selector);
    });
    let SwapperComponent = _SwapperComponent;
    window.addEventListener("resize", function() {
      let timer2;
      throttle$1(
        timer2,
        () => {
          const elements = document.querySelectorAll(
            defaultSwapperQueires.instanseQuery
          );
          elements.forEach((el) => {
            const place = SwapperComponent.getInstance(el);
            if (place) {
              place.update();
            }
          });
        },
        200
      );
    });
    const defaultMenuOptions = {
      dropdown: {
        hoverTimeout: 200,
        zindex: 105
      },
      accordion: {
        slideSpeed: 250,
        expand: false
      }
    };
    let MenuComponent$1 = (_a = class {
      constructor(_element, options) {
        __publicField(this, "element");
        __publicField(this, "options");
        __publicField(this, "instanceUid");
        __publicField(this, "triggerElement", null);
        // Set external trigger element
        __publicField(this, "_setTriggerElement", () => {
          const target = document.querySelector(
            `[data-kt-menu-target="#${this.element.getAttribute("id")}"`
          );
          if (target) {
            this.triggerElement = target;
          } else if (this.element.closest("[data-kt-menu-trigger]")) {
            this.triggerElement = this.element.closest(
              "[data-kt-menu-trigger]"
            );
          } else if (this.element.parentNode && getElementChild(
            this.element.parentNode,
            "[data-kt-menu-trigger]"
          )) {
            const child = getElementChild(
              this.element.parentNode,
              "[data-kt-menu-trigger]"
            );
            if (child) {
              this.triggerElement = child;
            }
          }
          if (this.triggerElement) {
            DataUtil.set(this.triggerElement, "menu", this);
          }
        });
        // Test if menu has external trigger element
        __publicField(this, "_isTriggerElement", (item) => {
          return this.triggerElement === item;
        });
        // Get item option(through html attributes)
        __publicField(this, "_getItemOption", (item, name) => {
          let value = null;
          if (item && item.hasAttribute("data-kt-menu-" + name)) {
            const attr = item.getAttribute("data-kt-menu-" + name) || "";
            value = getAttributeValueByBreakpoint(attr);
            if (value !== null && String(value) === "true") {
              value = true;
            } else if (value !== null && String(value) === "false") {
              value = false;
            }
          }
          return value;
        });
        // Get item element
        __publicField(this, "_getItemElement", (_element) => {
          if (this._isTriggerElement(_element)) {
            return _element;
          }
          if (_element.hasAttribute("data-kt-menu-trigger")) {
            return _element;
          }
          const itemElement = DataUtil.get(_element, "item");
          if (itemElement) {
            return itemElement;
          }
          const item = _element.closest(
            ".menu-item[data-kt-menu-trigger]"
          );
          if (item) {
            return item;
          }
          const sub = _element.closest(".menu-sub");
          if (sub) {
            const subItem = DataUtil.get(sub, "item");
            if (subItem) {
              return subItem;
            }
          }
        });
        // Get item parent element
        __publicField(this, "_getItemParentElement", (item) => {
          const sub = item.closest(".menu-sub");
          if (!sub) {
            return null;
          }
          const subItem = DataUtil.get(sub, "item");
          if (subItem) {
            return subItem;
          }
          const parentItem = sub.closest(
            ".menu-item[data-kt-menu-trigger]"
          );
          if (sub && parentItem) {
            return parentItem;
          }
          return null;
        });
        // Get item parent elements
        __publicField(this, "_getItemParentElements", (item) => {
          const parents = [];
          let parent;
          let i = 0;
          let buffer = item;
          do {
            parent = this._getItemParentElement(buffer);
            if (parent) {
              parents.push(parent);
              buffer = parent;
            }
            i++;
          } while (parent !== null && i < 20);
          if (this.triggerElement) {
            parents.unshift(this.triggerElement);
          }
          return parents;
        });
        // Prepare popper config for dropdown(see: https://popper.js.org/docs/v2/)
        __publicField(this, "_getDropdownPopperConfig", (item) => {
          const placementOption = this._getItemOption(item, "placement");
          let placement = "right";
          if (placementOption) {
            placement = placementOption;
          }
          const offsetValue = this._getItemOption(item, "offset");
          const offset2 = offsetValue ? offsetValue.toString().split(",") : [];
          const strategy = this._getItemOption(item, "overflow") === true ? "absolute" : "fixed";
          return {
            placement,
            strategy,
            modifiers: [
              {
                name: "offset",
                options: {
                  offset: offset2
                }
              },
              {
                name: "preventOverflow"
              },
              {
                name: "flip",
                options: {
                  // altBoundary: true,
                  // fallbackPlacements: flip,
                  flipVariations: false
                }
              }
            ]
          };
        });
        // Get item child element
        __publicField(this, "_getItemChildElement", (item) => {
          let selector = item;
          const subItem = DataUtil.get(item, "sub");
          if (subItem) {
            selector = subItem;
          }
          if (selector) {
            const element = selector.querySelector(
              ".menu-item[data-kt-menu-trigger]"
            );
            if (element) {
              return element;
            }
          }
          return null;
        });
        // Get item child elements
        __publicField(this, "_getItemChildElements", (item) => {
          const children = [];
          let child;
          let i = 0;
          let buffer = item;
          do {
            child = this._getItemChildElement(buffer);
            if (child) {
              children.push(child);
              buffer = child;
            }
            i++;
          } while (child !== null && i < 20);
          return children;
        });
        // Get item sub element
        __publicField(this, "_getItemSubElement", (item) => {
          if (!item) {
            return null;
          }
          if (this._isTriggerElement(item)) {
            return this.element;
          }
          if (item.classList.contains("menu-sub")) {
            return item;
          } else if (DataUtil.has(item, "sub")) {
            const itemSub = DataUtil.get(item, "sub");
            return itemSub ? itemSub : null;
          } else {
            return getElementChild(item, ".menu-sub");
          }
        });
        __publicField(this, "_getCss", (el, styleProp) => {
          const defaultView = (el.ownerDocument || document).defaultView;
          if (!defaultView) {
            return "";
          }
          styleProp = styleProp.replace(/([A-Z])/g, "-$1").toLowerCase();
          return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);
        });
        // Get item sub type
        __publicField(this, "_getItemSubType", (element) => {
          const sub = this._getItemSubElement(element);
          if (sub && parseInt(this._getCss(sub, "z-index")) > 0) {
            return "dropdown";
          } else {
            return "accordion";
          }
        });
        // Test if item's sub is shown
        __publicField(this, "_isItemSubShown", (item) => {
          const sub = this._getItemSubElement(item);
          if (sub) {
            if (this._getItemSubType(item) === "dropdown") {
              const subHTMLElement = sub;
              return subHTMLElement.classList.contains("show") && subHTMLElement.hasAttribute("data-popper-placement");
            } else {
              return item.classList.contains("show");
            }
          }
          return false;
        });
        // Test if item dropdown is permanent
        __publicField(this, "_isItemDropdownPermanent", (item) => {
          return this._getItemOption(item, "permanent") === true;
        });
        // Test if item's parent is shown
        __publicField(this, "_isItemParentShown", (item) => {
          return getElementParents(item, ".menu-item.show").length > 0;
        });
        // Test of it is item sub element
        __publicField(this, "_isItemSubElement", (item) => {
          return item.classList.contains("menu-sub");
        });
        // Test if item has sub
        __publicField(this, "_hasItemSub", (item) => {
          return item.classList.contains("menu-item") && item.hasAttribute("data-kt-menu-trigger");
        });
        // Get link element
        __publicField(this, "_getItemLinkElement", (item) => {
          return getElementChild(item, ".menu-link");
        });
        // Get toggle element
        __publicField(this, "_getItemToggleElement", (item) => {
          if (this.triggerElement) {
            return this.triggerElement;
          }
          return this._getItemLinkElement(item);
        });
        // Show item dropdown
        __publicField(this, "_showDropdown", (item) => {
          if (EventHandlerUtil.trigger(this.element, "kt.menu.dropdown.show") === false) {
            return;
          }
          _a.hideDropdowns(item);
          const sub = this._getItemSubElement(item);
          const width = this._getItemOption(item, "width");
          const height = this._getItemOption(item, "height");
          let zindex = this.options.dropdown.zindex;
          const parentZindex = getHighestZindex(item);
          if (parentZindex !== null && parentZindex >= zindex) {
            zindex = parentZindex + 1;
          }
          if (zindex && sub) {
            ElementStyleUtil.set(sub, "z-index", zindex);
          }
          if (width && sub) {
            ElementStyleUtil.set(sub, "width", width);
          }
          if (height && sub) {
            ElementStyleUtil.set(sub, "height", height);
          }
          this.initDropdownPopper(item, sub);
          item.classList.add("show");
          item.classList.add("menu-dropdown");
          sub == null ? void 0 : sub.classList.add("show");
          if (this._getItemOption(item, "overflow") === true) {
            if (sub) {
              document.body.appendChild(sub);
              DataUtil.set(item, "sub", sub);
              DataUtil.set(sub, "item", item);
              DataUtil.set(sub, "menu", this);
            }
          } else {
            if (sub) {
              DataUtil.set(sub, "item", item);
            }
          }
          EventHandlerUtil.trigger(this.element, "kt.menu.dropdown.shown");
        });
        // Init dropdown popper(new)
        __publicField(this, "initDropdownPopper", (item, sub) => {
          let reference2;
          const attach = this._getItemOption(item, "attach");
          if (attach) {
            if (attach === "parent") {
              reference2 = item.parentNode;
            } else {
              reference2 = document.querySelector(attach);
            }
          } else {
            reference2 = item;
          }
          if (reference2) {
            const popper2 = createPopper(
              reference2,
              sub,
              this._getDropdownPopperConfig(item)
            );
            DataUtil.set(item, "popper", popper2);
          }
        });
        // Hide item dropdown
        __publicField(this, "_hideDropdown", (item) => {
          if (EventHandlerUtil.trigger(this.element, "kt.menu.dropdown.hide") === false) {
            return;
          }
          const sub = this._getItemSubElement(item);
          if (sub) {
            ElementStyleUtil.set(sub, "z-index", "");
            ElementStyleUtil.set(sub, "width", "");
            ElementStyleUtil.set(sub, "height", "");
          }
          item.classList.remove("show");
          item.classList.remove("menu-dropdown");
          if (sub) {
            sub.classList.remove("show");
          }
          if (this._getItemOption(item, "overflow") === true) {
            if (item.classList.contains("menu-item")) {
              if (sub) {
                item.appendChild(sub);
              }
            } else {
              insertAfterElement(this.element, item);
            }
            if (sub) {
              DataUtil.remove(item, "sub");
              DataUtil.remove(sub, "item");
              DataUtil.remove(sub, "menu");
            }
          }
          if (DataUtil.has(item, "popper") === true) {
            DataUtil.get(item, "popper").destroy();
            DataUtil.remove(item, "popper");
          }
          this.destroyDropdownPopper(item);
          EventHandlerUtil.trigger(this.element, "kt.menu.dropdown.hidden");
        });
        // Destroy dropdown popper(new)
        __publicField(this, "destroyDropdownPopper", (item) => {
          if (DataUtil.has(item, "popper") === true) {
            DataUtil.get(item, "popper").destroy();
            DataUtil.remove(item, "popper");
          }
          EventHandlerUtil.trigger(this.element, "kt.menu.dropdown.hidden");
        });
        __publicField(this, "_showAccordion", (item) => {
          if (EventHandlerUtil.trigger(this.element, "kt.menu.accordion.show") === false) {
            return;
          }
          if (this.options.accordion.expand === false) {
            this._hideAccordions(item);
          }
          if (DataUtil.has(item, "popper") === true) {
            this._hideDropdown(item);
          }
          item.classList.add("hover");
          item.classList.add("showing");
          const subElement = this._getItemSubElement(item);
          if (subElement) {
            const sub = subElement;
            slideDown(sub, this.options.accordion.slideSpeed, () => {
              item.classList.remove("showing");
              item.classList.add("show");
              sub.classList.add("show");
              EventHandlerUtil.trigger(this.element, "kt.menu.accordion.shown");
            });
          }
        });
        __publicField(this, "_hideAccordion", (item) => {
          if (EventHandlerUtil.trigger(this.element, "kt.menu.accordion.hide") === false) {
            return;
          }
          const sub = this._getItemSubElement(item);
          item.classList.add("hiding");
          if (sub) {
            slideUp(sub, this.options.accordion.slideSpeed, () => {
              item.classList.remove("hiding");
              item.classList.remove("show");
              sub.classList.remove("show");
              item.classList.remove("hover");
              EventHandlerUtil.trigger(this.element, "kt.menu.accordion.hidden");
            });
          }
        });
        // Hide all shown accordions of item
        __publicField(this, "_hideAccordions", (item) => {
          const itemsToHide = this.element.querySelectorAll(
            ".show[data-kt-menu-trigger]"
          );
          if (itemsToHide && itemsToHide.length > 0) {
            for (let i = 0, len = itemsToHide.length; i < len; i++) {
              const itemToHide = itemsToHide[i];
              if (this._getItemSubType(itemToHide) === "accordion" && itemToHide !== item && item.contains(itemToHide) === false && itemToHide.contains(item) === false) {
                this._hideAccordion(itemToHide);
              }
            }
          }
        });
        // Event Handlers
        // Reset item state classes if item sub type changed
        __publicField(this, "_reset", (item) => {
          if (this._hasItemSub(item) === false) {
            return;
          }
          const sub = this._getItemSubElement(item);
          if (DataUtil.has(item, "type") && DataUtil.get(item, "type") !== this._getItemSubType(item)) {
            item.classList.remove("hover");
            item.classList.remove("show");
            item.classList.remove("show");
            if (sub) {
              sub.classList.remove("show");
            }
          }
        });
        // TODO: not done
        __publicField(this, "_destroy", () => {
        });
        // Update all item state classes if item sub type changed
        __publicField(this, "_update", () => {
          const items = this.element.querySelectorAll(
            ".menu-item[data-kt-menu-trigger]"
          );
          items.forEach((el) => this._reset(el));
        });
        // Hide item sub
        __publicField(this, "_hide", (item) => {
          if (!item) {
            return;
          }
          if (this._isItemSubShown(item) === false) {
            return;
          }
          if (this._getItemSubType(item) === "dropdown") {
            this._hideDropdown(item);
          } else if (this._getItemSubType(item) === "accordion") {
            this._hideAccordion(item);
          }
        });
        // Show item sub
        __publicField(this, "_show", (item) => {
          if (!item) {
            return;
          }
          if (this._isItemSubShown(item) === true) {
            return;
          }
          if (this._getItemSubType(item) === "dropdown") {
            this._showDropdown(item);
          } else if (this._getItemSubType(item) === "accordion") {
            this._showAccordion(item);
          }
          DataUtil.set(item, "type", this._getItemSubType(item));
        });
        // Toggle item sub
        __publicField(this, "_toggle", (item) => {
          if (!item) {
            return;
          }
          if (this._isItemSubShown(item) === true) {
            this._hide(item);
          } else {
            this._show(item);
          }
        });
        // Mouseout handle
        __publicField(this, "_mouseout", (element, e) => {
          const item = this._getItemElement(element);
          if (!item) {
            return;
          }
          if (this._getItemOption(item, "trigger") !== "hover") {
            return;
          }
          const timeout = setTimeout(() => {
            if (DataUtil.get(item, "hover") === "1") {
              this._hide(item);
            }
          }, this.options.dropdown.hoverTimeout);
          DataUtil.set(item, "hover", "1");
          DataUtil.set(item, "timeout", timeout);
        });
        // Mouseover handle
        __publicField(this, "_mouseover", (element, e) => {
          const item = this._getItemElement(element);
          if (!item) {
            return;
          }
          if (this._getItemOption(item, "trigger") !== "hover") {
            return;
          }
          if (DataUtil.get(item, "hover") === "1") {
            const timeout = DataUtil.get(item, "timeout");
            if (timeout) {
              clearTimeout(timeout);
            }
            DataUtil.remove(item, "hover");
            DataUtil.remove(item, "timeout");
          }
          this._show(item);
        });
        // Dismiss handler
        __publicField(this, "_dismiss", (element, e) => {
          const item = this._getItemElement(element);
          if (!item) {
            return;
          }
          const items = this._getItemChildElements(item);
          const itemSubType = this._getItemSubType(item);
          if (item !== null && itemSubType === "dropdown") {
            this._hide(item);
            if (items.length > 0) {
              for (let i = 0, len = items.length; i < len; i++) {
                if (items[i] !== null && this._getItemSubType(items[i]) === "dropdown") {
                  this._hide(items[i]);
                }
              }
            }
          }
        });
        // Link handler
        __publicField(this, "_link", (element, e) => {
          if (!EventHandlerUtil.trigger(this.element, "kt.menu.link.click")) {
            return;
          }
          _a.hideDropdowns(void 0);
          EventHandlerUtil.trigger(this.element, "kt.menu.link.clicked");
        });
        __publicField(this, "_click", (element, e) => {
          e.preventDefault();
          const item = this._getItemElement(element);
          if (item) {
            if (this._getItemOption(item, "trigger") !== "click") {
              return;
            }
            if (this._getItemOption(item, "toggle") === false) {
              this._show(item);
            } else {
              this._toggle(item);
            }
          }
        });
        ///////////////////////
        // ** Public API  ** //
        ///////////////////////
        __publicField(this, "click", (element, e) => {
          return this._click(element, e);
        });
        __publicField(this, "link", (element, e) => {
          return this._link(element, e);
        });
        __publicField(this, "dismiss", (element, e) => {
          return this._dismiss(element, e);
        });
        __publicField(this, "mouseover", (element, e) => {
          return this._mouseover(element, e);
        });
        __publicField(this, "mouseout", (element, e) => {
          return this._mouseout(element, e);
        });
        // General Methods
        __publicField(this, "getItemTriggerType", (item) => {
          return this._getItemOption(item, "trigger");
        });
        __publicField(this, "getItemSubType", (element) => {
          return this._getItemSubType(element);
        });
        __publicField(this, "show", (item) => {
          return this._show(item);
        });
        __publicField(this, "hide", (item) => {
          return this._hide(item);
        });
        __publicField(this, "reset", (item) => {
          return this._reset(item);
        });
        __publicField(this, "update", () => {
          return this._update();
        });
        __publicField(this, "getElement", () => {
          return this.element;
        });
        __publicField(this, "getItemLinkElement", (item) => {
          return this._getItemLinkElement(item);
        });
        __publicField(this, "getItemToggleElement", (item) => {
          return this._getItemToggleElement(item);
        });
        __publicField(this, "getItemSubElement", (item) => {
          return this._getItemSubElement(item);
        });
        __publicField(this, "getItemParentElements", (item) => {
          return this._getItemParentElements(item);
        });
        __publicField(this, "isItemSubShown", (item) => {
          return this._isItemSubShown(item);
        });
        __publicField(this, "isItemParentShown", (item) => {
          return this._isItemParentShown(item);
        });
        __publicField(this, "getTriggerElement", () => {
          return this.triggerElement;
        });
        __publicField(this, "isItemDropdownPermanent", (item) => {
          return this._isItemDropdownPermanent(item);
        });
        // Accordion Mode Methods
        __publicField(this, "hideAccordions", (item) => {
          return this._hideAccordions(item);
        });
        // Event API
        __publicField(this, "on", (name, handler) => {
          return EventHandlerUtil.on(this.element, name, handler);
        });
        __publicField(this, "one", (name, handler) => {
          return EventHandlerUtil.one(this.element, name, handler);
        });
        __publicField(this, "off", (name, handlerId) => {
          return EventHandlerUtil.off(this.element, name, handlerId);
        });
        this.element = _element;
        this.options = Object.assign(defaultMenuOptions, options);
        this.instanceUid = getUniqueIdWithPrefix("menu");
        this._setTriggerElement();
        this._update();
        DataUtil.set(this.element, "menu", this);
        return this;
      }
    }, // public static methods
    // Get KTMenu instance by element
    __publicField(_a, "getInstance", (element) => {
      const elementMenu = DataUtil.get(element, "menu");
      if (elementMenu) {
        return elementMenu;
      }
      const menu2 = element.closest(".menu");
      if (menu2) {
        const menuData = DataUtil.get(menu2, "menu");
        if (menuData) {
          return menuData;
        }
      }
      if (element.classList.contains("menu-link")) {
        const sub = element.closest(".menu-sub");
        if (sub) {
          const subMenu = DataUtil.get(sub, "menu");
          if (subMenu) {
            return subMenu;
          }
        }
      }
      return null;
    }), // Hide all dropdowns and skip one if provided
    __publicField(_a, "hideDropdowns", (skip) => {
      const items = document.querySelectorAll(
        ".show.menu-dropdown[data-kt-menu-trigger]"
      );
      if (items && items.length > 0) {
        for (let i = 0, len = items.length; i < len; i++) {
          const item = items[i];
          const menu2 = _a.getInstance(item);
          if (menu2 && menu2.getItemSubType(item) === "dropdown") {
            if (skip) {
              if (
                // @ts-ignore
                menu2.getItemSubElement(item).contains(skip) === false && item.contains(skip) === false && item !== skip
              ) {
                menu2.hide(item);
              }
            } else {
              menu2.hide(item);
            }
          }
        }
      }
    }), __publicField(_a, "updateDropdowns", () => {
      const items = document.querySelectorAll(
        ".show.menu-dropdown[data-kt-menu-trigger]"
      );
      if (items && items.length > 0) {
        for (let i = 0, len = items.length; i < len; i++) {
          const item = items[i];
          if (DataUtil.has(item, "popper")) {
            DataUtil.get(item, "popper").forceUpdate();
          }
        }
      }
    }), // Global handlers
    __publicField(_a, "createInstances", (selector) => {
      document.querySelectorAll(selector).forEach((el) => {
        const menuItem = el;
        let menuInstance = _a.getInstance(menuItem);
        if (!menuInstance) {
          menuInstance = new _a(el, defaultMenuOptions);
        }
      });
    }), __publicField(_a, "initGlobalHandlers", () => {
      document.addEventListener("click", (e) => {
        const menuItems = document.querySelectorAll(
          '.show.menu-dropdown[data-kt-menu-trigger]:not([data-kt-menu-static="true"])'
        );
        if (menuItems && menuItems.length > 0) {
          for (let i = 0; i < menuItems.length; i++) {
            const item = menuItems[i];
            const menuObj = _a.getInstance(item);
            if (menuObj && menuObj.getItemSubType(item) === "dropdown") {
              menuObj.getElement();
              const sub = menuObj.getItemSubElement(item);
              if (item === e.target || item.contains(e.target)) {
                continue;
              }
              if (sub && (sub === e.target || sub.contains(e.target))) {
                continue;
              }
              menuObj.hide(item);
            }
          }
        }
      });
      DOMEventHandlerUtil.on(
        document.body,
        '.menu-item[data-kt-menu-trigger] > .menu-link, [data-kt-menu-trigger]:not(.menu-item):not([data-kt-menu-trigger="auto"])',
        "click",
        function(e) {
          const menu2 = _a.getInstance(this);
          if (menu2) {
            return menu2.click(this, e);
          }
        }
      );
      DOMEventHandlerUtil.on(
        document.body,
        ".menu-item:not([data-kt-menu-trigger]) > .menu-link",
        "click",
        function(e) {
          e.stopPropagation();
          const menu2 = _a.getInstance(this);
          if (menu2 && menu2.link) {
            return menu2.link(this, e);
          }
        }
      );
      DOMEventHandlerUtil.on(
        document.body,
        '[data-kt-menu-dismiss="true"]',
        "click",
        function(e) {
          const menu2 = _a.getInstance(this);
          if (menu2) {
            return menu2.dismiss(this, e);
          }
        }
      );
      DOMEventHandlerUtil.on(
        document.body,
        "[data-kt-menu-trigger], .menu-sub",
        "mouseover",
        function(e) {
          const menu2 = _a.getInstance(this);
          if (menu2 && menu2.getItemSubType(this) === "dropdown") {
            return menu2.mouseover(this, e);
          }
        }
      );
      DOMEventHandlerUtil.on(
        document.body,
        "[data-kt-menu-trigger], .menu-sub",
        "mouseout",
        function(e) {
          const menu2 = _a.getInstance(this);
          if (menu2 && menu2.getItemSubType(this) === "dropdown") {
            return menu2.mouseout(this, e);
          }
        }
      );
      window.addEventListener("resize", () => {
        let timer2;
        throttle$1(
          timer2,
          () => {
            const elements = document.querySelectorAll('[data-kt-menu="true"]');
            elements.forEach((el) => {
              const menu2 = _a.getInstance(el);
              if (menu2) {
                menu2.update();
              }
            });
          },
          200
        );
      });
    }), __publicField(_a, "bootstrap", () => {
      _a.initGlobalHandlers();
      _a.createInstances('[data-kt-menu="true"]');
    }), __publicField(_a, "reinitialization", () => {
      _a.createInstances('[data-kt-menu="true"]');
    }), __publicField(_a, "createInsance", (selector, options = defaultMenuOptions) => {
      const element = document.body.querySelector(selector);
      if (!element) {
        return;
      }
      const item = element;
      let menu2 = _a.getInstance(item);
      if (!menu2) {
        menu2 = new _a(item, options);
      }
      return menu2;
    }), _a);
    const _sfc_main$3q = vueExports$1.defineComponent({
      name: "customers-listing",
      components: {
        Datatable: KTDatatable,
        ExportCustomerModal,
        AddCustomerModal
      },
      setup() {
        const tableHeader = vueExports$1.ref([
          {
            columnName: "Customer Name",
            columnLabel: "name",
            sortEnabled: true,
            columnWidth: 175
          },
          {
            columnName: "Email",
            columnLabel: "email",
            sortEnabled: true,
            columnWidth: 230
          },
          {
            columnName: "Company",
            columnLabel: "company",
            sortEnabled: true,
            columnWidth: 175
          },
          {
            columnName: "Payment Method",
            columnLabel: "paymentMethod",
            sortEnabled: true,
            columnWidth: 175
          },
          {
            columnName: "Created Date",
            columnLabel: "date",
            sortEnabled: true,
            columnWidth: 225
          },
          {
            columnName: "Actions",
            columnLabel: "actions",
            sortEnabled: false,
            columnWidth: 135
          }
        ]);
        const selectedIds = vueExports$1.ref([]);
        const tableData = vueExports$1.ref(customers);
        const initCustomers = vueExports$1.ref([]);
        vueExports$1.onMounted(() => {
          initCustomers.value.splice(0, tableData.value.length, ...tableData.value);
        });
        const deleteFewCustomers = () => {
          selectedIds.value.forEach((item) => {
            deleteCustomer(item);
          });
          selectedIds.value.length = 0;
        };
        const deleteCustomer = (id) => {
          for (let i = 0; i < tableData.value.length; i++) {
            if (tableData.value[i].id === id) {
              tableData.value.splice(i, 1);
            }
          }
        };
        const search = vueExports$1.ref("");
        const searchItems = () => {
          tableData.value.splice(0, tableData.value.length, ...initCustomers.value);
          if (search.value !== "") {
            let results = [];
            for (let j = 0; j < tableData.value.length; j++) {
              if (searchingFunc(tableData.value[j], search.value)) {
                results.push(tableData.value[j]);
              }
            }
            tableData.value.splice(0, tableData.value.length, ...results);
          }
          MenuComponent$1.reinitialization();
        };
        const searchingFunc = (obj, value) => {
          for (let key2 in obj) {
            if (!Number.isInteger(obj[key2]) && !(typeof obj[key2] === "object")) {
              if (obj[key2].indexOf(value) != -1) {
                return true;
              }
            }
          }
          return false;
        };
        const sort2 = (sort22) => {
          const reverse = sort22.order === "asc";
          if (sort22.label) {
            arraySort(tableData.value, sort22.label, { reverse });
          }
        };
        const onItemSelect = (selectedItems) => {
          selectedIds.value = selectedItems;
        };
        return {
          tableData,
          tableHeader,
          deleteCustomer,
          search,
          searchItems,
          selectedIds,
          deleteFewCustomers,
          sort: sort2,
          onItemSelect,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$36(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Datatable = vueExports$1.resolveComponent("Datatable");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_ExportCustomerModal = vueExports$1.resolveComponent("ExportCustomerModal");
      const _component_AddCustomerModal = vueExports$1.resolveComponent("AddCustomerModal");
      _push(`<!--[--><div class="card"><div class="card-header border-0 pt-6"><div class="card-title"><div class="d-flex align-items-center position-relative my-1">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "magnifier",
        "icon-class": "fs-1 position-absolute ms-6"
      }, null, _parent));
      _push(`<input type="text"${ssrRenderAttr("value", _ctx.search)} class="form-control form-control-solid w-250px ps-15" placeholder="Search Customers"></div></div><div class="card-toolbar">`);
      if (_ctx.selectedIds.length === 0) {
        _push(`<div class="d-flex justify-content-end" data-kt-customer-table-toolbar="base"><button type="button" class="btn btn-light-primary me-3" data-bs-toggle="modal" data-bs-target="#kt_customers_export_modal">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "exit-up",
          "icon-class": "fs-2"
        }, null, _parent));
        _push(` Export </button><button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_add_customer">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "plus",
          "icon-class": "fs-2"
        }, null, _parent));
        _push(` Add Customer </button></div>`);
      } else {
        _push(`<div class="d-flex justify-content-end align-items-center" data-kt-customer-table-toolbar="selected"><div class="fw-bold me-5"><span class="me-2">${ssrInterpolate(_ctx.selectedIds.length)}</span>Selected </div><button type="button" class="btn btn-danger"> Delete Selected </button></div>`);
      }
      _push(`<div class="d-flex justify-content-end align-items-center d-none" data-kt-customer-table-toolbar="selected"><div class="fw-bold me-5"><span class="me-2" data-kt-customer-table-select="selected_count"></span>Selected </div><button type="button" class="btn btn-danger" data-kt-customer-table-select="delete_selected"> Delete Selected </button></div></div></div><div class="card-body pt-0">`);
      _push(ssrRenderComponent(_component_Datatable, {
        onOnSort: _ctx.sort,
        onOnItemsSelect: _ctx.onItemSelect,
        data: _ctx.tableData,
        header: _ctx.tableHeader,
        "enable-items-per-page-dropdown": true,
        "checkbox-enabled": true,
        "checkbox-label": "id"
      }, {
        name: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(customer.name)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(customer.name), 1)
            ];
          }
        }),
        email: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<a href="#" class="text-gray-600 text-hover-primary mb-1"${_scopeId}>${ssrInterpolate(customer.email)}</a>`);
          } else {
            return [
              vueExports$1.createVNode("a", {
                href: "#",
                class: "text-gray-600 text-hover-primary mb-1"
              }, vueExports$1.toDisplayString(customer.email), 1)
            ];
          }
        }),
        company: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(customer.company)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(customer.company), 1)
            ];
          }
        }),
        paymentMethod: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<img${ssrRenderAttr("src", customer.payment.icon)} class="w-35px me-3" alt=""${_scopeId}>${ssrInterpolate(customer.payment.ccnumber)}`);
          } else {
            return [
              vueExports$1.createVNode("img", {
                src: customer.payment.icon,
                class: "w-35px me-3",
                alt: ""
              }, null, 8, ["src"]),
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(customer.payment.ccnumber), 1)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(customer.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(customer.date), 1)
            ];
          }
        }),
        actions: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<a href="#" class="btn btn-sm btn-light btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end"${_scopeId}>Actions `);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "down",
              "icon-class": "fs-5 m-0"
            }, null, _parent2, _scopeId));
            _push2(`</a><div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4" data-kt-menu="true"${_scopeId}><div class="menu-item px-3"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_router_link, {
              to: "/apps/customers/customer-details",
              class: "menu-link px-3"
            }, {
              default: vueExports$1.withCtx((_, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`View`);
                } else {
                  return [
                    vueExports$1.createTextVNode("View")
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</div><div class="menu-item px-3"${_scopeId}><a class="menu-link px-3"${_scopeId}>Delete</a></div></div>`);
          } else {
            return [
              vueExports$1.createVNode("a", {
                href: "#",
                class: "btn btn-sm btn-light btn-active-light-primary",
                "data-kt-menu-trigger": "click",
                "data-kt-menu-placement": "bottom-end",
                "data-kt-menu-flip": "top-end"
              }, [
                vueExports$1.createTextVNode("Actions "),
                vueExports$1.createVNode(_component_KTIcon, {
                  "icon-name": "down",
                  "icon-class": "fs-5 m-0"
                })
              ]),
              vueExports$1.createVNode("div", {
                class: "menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4",
                "data-kt-menu": "true"
              }, [
                vueExports$1.createVNode("div", { class: "menu-item px-3" }, [
                  vueExports$1.createVNode(_component_router_link, {
                    to: "/apps/customers/customer-details",
                    class: "menu-link px-3"
                  }, {
                    default: vueExports$1.withCtx(() => [
                      vueExports$1.createTextVNode("View")
                    ]),
                    _: 1
                  })
                ]),
                vueExports$1.createVNode("div", { class: "menu-item px-3" }, [
                  vueExports$1.createVNode("a", {
                    onClick: ($event) => _ctx.deleteCustomer(customer.id),
                    class: "menu-link px-3"
                  }, "Delete", 8, ["onClick"])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
      _push(ssrRenderComponent(_component_ExportCustomerModal, null, null, _parent));
      _push(ssrRenderComponent(_component_AddCustomerModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$3q = _sfc_main$3q.setup;
    _sfc_main$3q.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/customers/CustomersListing.vue");
      return _sfc_setup$3q ? _sfc_setup$3q(props, ctx) : void 0;
    };
    const CustomersListing = /* @__PURE__ */ _export_sfc(_sfc_main$3q, [["ssrRender", _sfc_ssrRender$36]]);
    const __vite_glob_0_190 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CustomersListing
    }, Symbol.toStringTag, { value: "Module" }));
    const useBodyStore = pinia_prod.defineStore("body", () => {
      const classes = vueExports$1.ref({});
      function getClasses(key2) {
        return classes.value[key2];
      }
      function addBodyClassname(className) {
        document.body.classList.add(className);
      }
      function removeBodyClassName(className) {
        document.body.classList.remove(className);
      }
      function addBodyAttribute(payload) {
        const { qualifiedName, value } = payload;
        document.body.setAttribute(qualifiedName, value);
      }
      function removeBodyAttribute(payload) {
        const { qualifiedName } = payload;
        document.body.removeAttribute(qualifiedName);
      }
      function addClassname(payload) {
        const { position, className } = payload;
        if (!classes.value[position]) {
          classes.value[position] = [className];
        } else {
          classes.value[position].push(className);
        }
      }
      return {
        getClasses,
        addBodyClassname,
        removeBodyClassName,
        addBodyAttribute,
        removeBodyAttribute,
        addClassname
      };
    });
    const abstract = 2;
    const category = 4;
    const setting = 2;
    const eraser = 3;
    const paintbucket = 3;
    const brush = 2;
    const size = 2;
    const design = 2;
    const copy = 0;
    const text = 0;
    const bucket = 4;
    const glass = 3;
    const feather = 2;
    const pencil = 2;
    const instagram = 2;
    const snapchat = 2;
    const classmates = 2;
    const facebook = 2;
    const whatsapp = 2;
    const youtube = 2;
    const dribbble = 6;
    const twitter = 2;
    const tiktok = 2;
    const behance = 2;
    const underlining = 3;
    const disconnect = 5;
    const code = 4;
    const gear = 2;
    const loading = 2;
    const scroll = 3;
    const wrench = 2;
    const frame = 4;
    const data = 5;
    const fasten = 2;
    const click = 5;
    const joystick = 4;
    const faceid = 6;
    const electricity = 10;
    const technology = 9;
    const cheque = 7;
    const handcart = 0;
    const shop = 5;
    const tag = 3;
    const purchase = 2;
    const discount = 2;
    const percentage = 2;
    const barcode = 8;
    const basket = 4;
    const lock = 3;
    const key = 2;
    const shield = 2;
    const eye = 3;
    const triangle = 3;
    const subtitle = 5;
    const ghost = 3;
    const information = 3;
    const milk = 3;
    const home = 0;
    const archive = 3;
    const pin = 2;
    const coffee = 6;
    const icon = 3;
    const ranking = 4;
    const slider = 4;
    const rescue = 2;
    const crown = 2;
    const picture = 2;
    const verify = 2;
    const send = 2;
    const disk = 2;
    const trash = 5;
    const star = 0;
    const cd = 2;
    const call = 8;
    const gift = 4;
    const share = 6;
    const sort = 4;
    const magnifier = 2;
    const tree = 3;
    const filter = 2;
    const cloud = 0;
    const cup = 2;
    const diamonds = 2;
    const status = 3;
    const rocket = 2;
    const menu = 4;
    const chrome = 2;
    const map = 3;
    const satellite = 6;
    const flag = 2;
    const focus = 2;
    const pointers = 3;
    const compass = 2;
    const route = 4;
    const geolocation = 2;
    const briefcase = 2;
    const clipboard = 3;
    const note = 2;
    const book = 4;
    const teacher = 2;
    const award = 3;
    const bookmark = 2;
    const chart = 2;
    const badge = 5;
    const graph = 4;
    const file = 2;
    const notepad = 5;
    const document$1 = 2;
    const folder = 2;
    const bootstrap = 3;
    const figma = 5;
    const dropbox = 5;
    const xaomi = 2;
    const microsoft = 4;
    const android = 6;
    const vue$1 = 2;
    const js = 2;
    const github = 2;
    const dj = 0;
    const angular = 3;
    const python = 2;
    const ts = 3;
    const xd = 3;
    const spotify = 2;
    const laravel = 7;
    const css = 2;
    const google = 2;
    const photoshop = 2;
    const twitch = 3;
    const illustrator = 4;
    const pails = 9;
    const react = 2;
    const html = 2;
    const slack = 8;
    const soft = 6;
    const yii = 3;
    const apple = 2;
    const vuesax = 3;
    const time = 2;
    const watch = 2;
    const calendar = 2;
    const timer = 3;
    const like = 2;
    const question = 3;
    const dislike = 2;
    const lovely = 2;
    const heart = 2;
    const user = 2;
    const people = 5;
    const capsule = 2;
    const virus = 3;
    const bandage = 2;
    const thermometer = 2;
    const flask = 2;
    const syringe = 3;
    const mask = 3;
    const pill = 0;
    const pulse = 2;
    const theta = 2;
    const dollar = 3;
    const binance = 5;
    const nexo = 2;
    const euro = 3;
    const avalanche = 2;
    const bitcoin = 2;
    const wallet = 4;
    const dash = 2;
    const lts = 2;
    const vibe = 2;
    const paypal = 2;
    const bill = 6;
    const ocean = 19;
    const celsius = 2;
    const educare = 4;
    const bank = 2;
    const wanchain = 2;
    const trello = 3;
    const xmr = 2;
    const sun = 9;
    const drop = 2;
    const moon = 2;
    const down = 0;
    const up = 0;
    const plus = 0;
    const check = 0;
    const right = 0;
    const cross = 2;
    const left = 0;
    const minus = 0;
    const sms = 2;
    const messages = 5;
    const notification = 3;
    const parcel = 5;
    const delivery = 5;
    const ship = 3;
    const courier = 3;
    const logistic = 7;
    const trailer = 5;
    const scooter = 7;
    const truck = 5;
    const bus = 5;
    const car = 5;
    const airplane = 2;
    const devices = 5;
    const keyboard = 2;
    const bluetooth = 2;
    const wifi = 4;
    const airpod = 3;
    const speaker = 3;
    const printer = 5;
    const simcard = 5;
    const router = 2;
    const phone = 2;
    const laptop = 2;
    const tablet = 3;
    const screen = 4;
    const calculator = 6;
    const mouse = 2;
    const grid = 2;
    const maximize = 5;
    const kanban = 2;
    const icons = {
      "abstract-33": 2,
      "abstract-27": 2,
      "abstract-26": 2,
      "abstract-32": 2,
      "abstract-18": 2,
      "abstract-24": 2,
      "abstract-30": 2,
      "abstract-8": 2,
      "abstract-9": 2,
      "abstract-31": 2,
      "abstract-25": 2,
      "abstract-19": 2,
      "abstract-21": 2,
      "abstract-35": 2,
      "abstract-34": 2,
      "abstract-20": 2,
      "abstract-36": 2,
      "abstract-22": 2,
      "abstract-23": 2,
      "abstract-37": 2,
      "abstract-44": 2,
      abstract,
      "abstract-45": 2,
      "abstract-47": 2,
      "abstract-46": 2,
      "abstract-42": 2,
      "abstract-43": 2,
      "abstract-41": 2,
      "abstract-40": 2,
      "abstract-48": 3,
      "abstract-49": 3,
      "abstract-12": 2,
      "abstract-2": 2,
      "abstract-3": 2,
      "abstract-13": 2,
      "abstract-39": 2,
      "abstract-11": 2,
      "abstract-1": 2,
      "abstract-10": 2,
      "abstract-38": 2,
      "abstract-14": 2,
      "abstract-28": 2,
      "abstract-4": 2,
      "abstract-5": 2,
      "abstract-29": 2,
      "abstract-15": 2,
      "abstract-17": 2,
      "abstract-7": 2,
      "abstract-6": 0,
      "abstract-16": 2,
      "toggle-on": 2,
      "toggle-on-circle": 2,
      "toggle-off": 2,
      category,
      setting,
      "toggle-off-circle": 2,
      "more-2": 4,
      "setting-4": 0,
      "setting-2": 2,
      "setting-3": 5,
      eraser,
      paintbucket,
      "add-item": 3,
      "design-2": 2,
      brush,
      size,
      design,
      copy,
      text,
      "design-frame": 2,
      bucket,
      glass,
      feather,
      pencil,
      "colors-square": 4,
      "design-mask": 2,
      "bucket-square": 3,
      "copy-success": 2,
      "color-swatch": 21,
      instagram,
      snapchat,
      classmates,
      facebook,
      whatsapp,
      "social-media": 2,
      youtube,
      dribbble,
      twitter,
      tiktok,
      behance,
      underlining,
      disconnect,
      code,
      gear,
      loading,
      scroll,
      wrench,
      "square-brackets": 4,
      frame,
      "message-programming": 4,
      data,
      fasten,
      click,
      "tech-wifi": 2,
      joystick,
      faceid,
      "technology-3": 4,
      "technology-2": 2,
      electricity,
      "fingerprint-scanning": 5,
      "technology-4": 7,
      "artificial-intelligence": 8,
      technology,
      "basket-ok": 4,
      cheque,
      handcart,
      shop,
      tag,
      purchase,
      discount,
      "package": 3,
      percentage,
      barcode,
      "lots-shopping": 8,
      basket,
      "book-square": 3,
      "receipt-square": 2,
      "save-2": 2,
      "archive-tick": 2,
      "shield-search": 3,
      "password-check": 5,
      "shield-tick": 2,
      lock,
      key,
      shield,
      "shield-cross": 3,
      "key-square": 2,
      "eye-slash": 4,
      "security-check": 4,
      "lock-3": 3,
      "scan-barcode": 8,
      "lock-2": 5,
      eye,
      "shield-slash": 3,
      "security-user": 2,
      triangle,
      subtitle,
      ghost,
      information,
      milk,
      home,
      "happy-emoji": 2,
      "mouse-square": 2,
      "filter-tick": 2,
      "filter-search": 3,
      "wifi-home": 4,
      "trash-square": 4,
      "paper-clip": 0,
      archive,
      pin,
      "wifi-square": 4,
      "auto-brightness": 3,
      coffee,
      icon,
      "emoji-happy": 4,
      "general-mouse": 2,
      ranking,
      slider,
      "crown-2": 3,
      rescue,
      "flash-circle": 2,
      "safe-home": 2,
      "cloud-change": 3,
      crown,
      "filter-edit": 2,
      picture,
      verify,
      send,
      "tag-cross": 3,
      "cloud-add": 2,
      "home-3": 2,
      disk,
      trash,
      star,
      cd,
      "home-2": 2,
      "mouse-circle": 2,
      "home-1": 2,
      call,
      gift,
      share,
      sort,
      magnifier,
      "filter-square": 2,
      tree,
      filter,
      "switch": 2,
      cloud,
      cup,
      diamonds,
      status,
      rocket,
      "cloud-download": 2,
      menu,
      chrome,
      "geolocation-home": 2,
      map,
      "telephone-geolocation": 3,
      satellite,
      flag,
      focus,
      pointers,
      compass,
      route,
      geolocation,
      "brifecase-timer": 3,
      briefcase,
      clipboard,
      "bookmark-2": 2,
      note,
      "note-2": 4,
      "book-open": 4,
      book,
      teacher,
      award,
      "brifecase-tick": 3,
      "brifecase-cros": 3,
      bookmark,
      "chart-line": 2,
      chart,
      "graph-3": 2,
      "chart-pie-3": 3,
      "graph-2": 3,
      "chart-line-down": 2,
      "chart-pie-too": 2,
      "chart-pie-4": 3,
      "chart-line-down-2": 3,
      "graph-4": 2,
      "chart-line-up-2": 2,
      badge,
      "chart-line-up": 2,
      "chart-simple-3": 4,
      "chart-pie-simple": 2,
      "chart-simple-2": 4,
      "graph-up": 6,
      "chart-line-star": 3,
      graph,
      "chart-simple": 4,
      "tablet-delete": 3,
      "file-added": 2,
      "file-up": 2,
      "minus-folder": 2,
      file,
      "delete-files": 2,
      "add-folder": 2,
      "file-left": 2,
      "file-deleted": 2,
      "some-files": 2,
      "file-right": 2,
      notepad,
      "notepad-bookmark": 6,
      document: document$1,
      "like-folder": 2,
      "folder-up": 2,
      "folder-added": 2,
      "file-down": 2,
      "filter-tablet": 2,
      "tablet-book": 2,
      "update-file": 4,
      "add-notepad": 4,
      "questionnaire-tablet": 2,
      "tablet-up": 3,
      "tablet-ok": 3,
      "update-folder": 2,
      "files-tablet": 2,
      "folder-down": 2,
      "notepad-edit": 2,
      "tablet-text-up": 2,
      "search-list": 3,
      "tablet-text-down": 4,
      "add-files": 3,
      "tablet-down": 3,
      "delete-folder": 2,
      folder,
      "file-sheet": 2,
      bootstrap,
      figma,
      dropbox,
      xaomi,
      microsoft,
      android,
      vue: vue$1,
      js,
      "spring-framework": 0,
      github,
      dj,
      "google-play": 2,
      angular,
      "soft-3": 2,
      python,
      "soft-2": 2,
      ts,
      xd,
      spotify,
      "js-2": 2,
      laravel,
      css,
      google,
      photoshop,
      twitch,
      illustrator,
      pails,
      react,
      html,
      slack,
      soft,
      yii,
      apple,
      vuesax,
      "calendar-add": 6,
      "calendar-search": 4,
      "calendar-2": 5,
      "calendar-tick": 6,
      time,
      watch,
      "calendar-edit": 3,
      calendar,
      "calendar-8": 6,
      timer,
      "calendar-remove": 6,
      "heart-circle": 2,
      like,
      "information-4": 3,
      "information-5": 3,
      "information-2": 3,
      "information-3": 3,
      question,
      dislike,
      "message-question": 3,
      "medal-star": 4,
      "like-tag": 2,
      "like-2": 2,
      "support-24": 3,
      "question-2": 3,
      lovely,
      "like-shapes": 2,
      heart,
      user,
      "user-square": 3,
      "user-tick": 3,
      people,
      "user-edit": 3,
      "profile-user": 4,
      "profile-circle": 3,
      capsule,
      virus,
      bandage,
      thermometer,
      flask,
      "test-tubes": 2,
      syringe,
      mask,
      pill,
      pulse,
      "burger-menu": 4,
      "burger-menu-6": 0,
      "burger-menu-5": 0,
      "burger-menu-4": 0,
      "burger-menu-1": 4,
      "burger-menu-3": 9,
      "burger-menu-2": 10,
      "text-align-center": 4,
      "text-italic": 4,
      "text-bold": 3,
      "text-strikethrough": 3,
      "text-underline": 3,
      "text-number": 6,
      "text-align-left": 4,
      "text-align-right": 4,
      "text-circle": 6,
      "text-align-justify-center": 4,
      theta,
      dollar,
      binance,
      nexo,
      euro,
      avalanche,
      bitcoin,
      wallet,
      "price-tag": 3,
      "finance-calculator": 7,
      dash,
      lts,
      vibe,
      "credit-cart": 2,
      paypal,
      bill,
      ocean,
      celsius,
      educare,
      "enjin-coin": 2,
      "two-credit-cart": 5,
      bank,
      "binance-usd": 4,
      wanchain,
      trello,
      "save-deposit": 4,
      xmr,
      "financial-schedule": 4,
      "office-bag": 4,
      "night-day": 10,
      sun,
      drop,
      moon,
      "exit-right-corner": 2,
      "dots-circle-vertical": 4,
      "check-square": 2,
      "right-left": 3,
      "arrow-down": 2,
      "dots-horizontal": 3,
      "arrow-right-left": 2,
      "up-down": 3,
      "double-check": 2,
      "arrow-up-left": 2,
      down,
      "exit-up": 2,
      "up-square": 2,
      "down-square": 2,
      "plus-square": 3,
      "dots-circle": 4,
      "arrow-down-left": 2,
      "double-check-circle": 3,
      up,
      "entrance-right": 2,
      "arrow-right": 2,
      "arrow-two-diagonals": 5,
      "minus-square": 2,
      "arrow-diagonal": 3,
      "black-left": 0,
      "arrow-down-refraction": 2,
      "black-right": 0,
      "double-left": 2,
      "arrow-circle-left": 2,
      "arrow-zigzag": 2,
      plus,
      check,
      "exit-left": 2,
      "arrow-circle-right": 2,
      "cross-square": 2,
      "entrance-left": 2,
      "left-square": 2,
      "arrows-loop": 2,
      "black-left-line": 2,
      "double-left-arrow": 2,
      "check-circle": 2,
      right,
      "dots-square-vertical": 4,
      "arrow-up-right": 2,
      "exit-down": 2,
      "dots-square": 4,
      "to-left": 0,
      "double-down": 3,
      "plus-circle": 2,
      "black-down": 0,
      "double-up": 3,
      "black-up": 0,
      "double-right-arrow": 2,
      "arrow-up": 2,
      "black-right-line": 2,
      "arrow-up-refraction": 2,
      "arrow-left": 2,
      cross,
      "minus-circle": 2,
      "arrow-down-right": 2,
      "exit-right": 2,
      "to-right": 0,
      "double-right": 2,
      "arrow-mix": 2,
      "right-square": 2,
      "arrows-circle": 2,
      "cross-circle": 2,
      left,
      minus,
      "dots-vertical": 3,
      "arrow-up-down": 2,
      "message-text-2": 3,
      "message-notif": 5,
      "message-add": 3,
      sms,
      "directbox-default": 4,
      "message-text": 3,
      messages,
      "address-book": 3,
      "message-edit": 2,
      "message-minus": 2,
      "notification-circle": 2,
      "notification-favorite": 3,
      "notification-2": 2,
      notification,
      "notification-bing": 3,
      "notification-status": 4,
      "notification-on": 5,
      "scooter-2": 0,
      parcel,
      "delivery-time": 5,
      delivery,
      "delivery-24": 4,
      ship,
      courier,
      logistic,
      trailer,
      "car-2": 6,
      "car-3": 3,
      "airplane-square": 2,
      scooter,
      truck,
      "cube-3": 2,
      bus,
      "cube-2": 3,
      "delivery-door": 4,
      "delivery-3": 3,
      "delivery-2": 9,
      car,
      "courier-express": 7,
      airplane,
      "delivery-geolocation": 5,
      "parcel-tracking": 3,
      "monitor-mobile": 2,
      devices,
      keyboard,
      "devices-2": 3,
      bluetooth,
      wifi,
      airpod,
      "simcard-2": 2,
      speaker,
      printer,
      simcard,
      router,
      phone,
      "electronic-clock": 4,
      "external-drive": 5,
      laptop,
      tablet,
      screen,
      calculator,
      mouse,
      grid,
      "slider-vertical-2": 3,
      maximize,
      "slider-vertical": 3,
      "row-horizontal": 2,
      kanban,
      "row-vertical": 2,
      "fat-rows": 2,
      "grid-2": 2,
      "element-8": 2,
      "element-9": 2,
      "element-12": 3,
      "element-4": 2,
      "element-5": 2,
      "grid-frame": 3,
      "element-11": 4,
      "element-7": 2,
      "element-6": 2,
      "element-10": 3,
      "element-2": 2,
      "element-3": 2,
      "element-equal": 5,
      "element-1": 4,
      "slider-horizontal-2": 3,
      "slider-horizontal": 3,
      "element-plus": 5
    };
    const _sfc_main$3p = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "KTIcon",
      __ssrInlineRender: true,
      props: {
        iconName: { type: String, default: "", required: true },
        iconType: {
          type: String,
          default: "",
          required: false
        },
        iconClass: { type: String, default: "", required: false }
      },
      setup(__props) {
        const props = __props;
        const currentIconType = vueExports$1.computed(() => {
          return props.iconType ? props.iconType : "duotone";
        });
        return (_ctx, _push, _parent, _attrs) => {
          _push(`<i${ssrRenderAttrs(vueExports$1.mergeProps({
            class: `ki-${currentIconType.value} ki-${props.iconName}${props.iconClass ? " " + props.iconClass : ""}`
          }, _attrs))}>`);
          if (vueExports$1.unref(icons)[props.iconName] && currentIconType.value === "duotone") {
            _push(`<!--[-->`);
            ssrRenderList(vueExports$1.unref(icons)[props.iconName], (i) => {
              _push(`<span class="${ssrRenderClass(`path${i}`)}"></span>`);
            });
            _push(`<!--]-->`);
          } else {
            _push(`<!---->`);
          }
          _push(`</i>`);
        };
      }
    });
    const _sfc_setup$3p = _sfc_main$3p.setup;
    _sfc_main$3p.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/core/helpers/kt-icon/KTIcon.vue");
      return _sfc_setup$3p ? _sfc_setup$3p(props, ctx) : void 0;
    };
    const __vite_glob_0_152 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$3p
    }, Symbol.toStringTag, { value: "Module" }));
    const initializeComponents = () => {
      ThemeModeComponent.init();
      setTimeout(() => {
        ToggleComponent.bootstrap();
        StickyComponent.bootstrap();
        MenuComponent$1.bootstrap();
        ScrollComponent.bootstrap();
        DrawerComponent.bootstrap();
        SwapperComponent.bootstrap();
      }, 0);
    };
    const reinitializeComponents = () => {
      ThemeModeComponent.init();
      setTimeout(() => {
        ToggleComponent.reinitialization();
        StickyComponent.reInitialization();
        MenuComponent$1.reinitialization();
        reinitializeScrollComponent().then(() => {
          ScrollComponent.updateAll();
        });
        DrawerComponent.reinitialization();
        SwapperComponent.reinitialization();
      }, 0);
    };
    const reinitializeScrollComponent = async () => {
      await ScrollComponent.reinitialization();
    };
    function makeShadow(el, option) {
      return makeShadowRaw(el, el.childNodes, option);
    }
    function makeShadowRaw(rootEl, childNodes, { mode = "open", delegatesFocus = false } = { mode: "open" }) {
      try {
        const oldroot = rootEl.shadowRoot;
        if (oldroot != null) {
          console.error("[shadow] Attach shadow multiple times", rootEl, childNodes, oldroot);
          return;
        } else {
          const shadow_root = rootEl.attachShadow({ mode, delegatesFocus });
          if (childNodes)
            putDomIntoShadow(shadow_root, childNodes);
          return shadow_root;
        }
      } catch (e) {
        console.error("[shadow] make shadow-root failed", rootEl, childNodes);
        console.error(e);
      }
    }
    function putDomIntoShadow(shadow_root, childNodes) {
      const fragment = document.createDocumentFragment();
      for (const node of childNodes) {
        fragment.appendChild(node);
      }
      shadow_root.appendChild(fragment);
    }
    const virtual_root = document.createDocumentFragment();
    const ShadowStyle = vueExports$1.defineComponent({
      props: {
        media: String,
        nonce: String
      },
      setup(props, { slots }) {
        return () => {
          var _a2;
          return vueExports$1.h("style", { media: props.media, nonce: props.nonce }, (_a2 = slots.default) == null ? void 0 : _a2.call(slots));
        };
      }
    });
    const ShadowRoot$1 = withType()(vueExports$1.defineComponent({
      props: {
        mode: {
          type: String,
          default: "open"
        },
        delegatesFocus: {
          type: Boolean,
          default: false
        },
        abstract: {
          type: Boolean,
          default: false
        },
        tag: {
          type: String,
          default: "div"
        },
        adoptedStyleSheets: {
          type: Array
        }
      },
      emits: ["error"],
      setup(props, { slots, expose, emit }) {
        const abstract2 = vueExports$1.ref(false);
        const el = vueExports$1.ref();
        const teleport_el = vueExports$1.ref();
        const shadow_root = vueExports$1.ref();
        const teleport_target = vueExports$1.computed(() => shadow_root.value ?? virtual_root);
        const ex = vueExports$1.reactive({
          shadow_root
        });
        expose(ex);
        vueExports$1.onBeforeMount(() => {
          abstract2.value = props.abstract;
        });
        vueExports$1.onMounted(() => {
          var _a2;
          try {
            if (abstract2.value) {
              if (teleport_el.value.parentElement.shadowRoot) {
                shadow_root.value = teleport_el.value.parentElement.shadowRoot;
              } else {
                shadow_root.value = makeShadowRaw(teleport_el.value.parentElement, void 0, {
                  mode: props.mode,
                  delegatesFocus: props.delegatesFocus
                });
              }
            } else {
              shadow_root.value = makeShadowRaw(el.value, void 0, { mode: props.mode, delegatesFocus: props.delegatesFocus });
            }
            (_a2 = shadow_root.value) == null ? void 0 : _a2.styleSheets;
          } catch (e) {
            console.error(e);
            emit("error", e);
          }
        });
        vueExports$1.watch([shadow_root, () => props.adoptedStyleSheets], ([shadow_root2, adoptedStyleSheets]) => {
          if (!shadow_root2 || !adoptedStyleSheets)
            return;
          try {
            ;
            shadow_root2.adoptedStyleSheets = adoptedStyleSheets;
          } catch (e) {
            console.error(e);
            emit("error", e);
          }
        });
        return () => {
          var _a2;
          const child_part = vueExports$1.h(vueExports$1.Teleport, { ref: teleport_el, to: teleport_target.value }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)]);
          if (abstract2.value)
            return child_part;
          return vueExports$1.h(props.tag, { ref: el }, child_part);
        };
      },
      install,
      Style: ShadowStyle
    }));
    function withType() {
      return (obj) => obj;
    }
    function install(app) {
      app.component("shadow-root", ShadowRoot$1);
      app.directive("shadow", {
        beforeMount(el) {
          console.warn("[VueShadowDom] Deprecated v-shadow directive, use <shadow-root> component");
          makeShadow(el);
        }
      });
    }
    const _sfc_main$3o = vueExports$1.defineComponent({
      name: "app",
      components: {
        ShadowRoot: ShadowRoot$1,
        CustomersListing
      },
      setup() {
        vueExports$1.onBeforeMount(() => {
        });
        vueExports$1.onMounted(() => {
          vueExports$1.nextTick(() => {
            initializeComponents();
          });
        });
      }
    });
    const App_vue_vue_type_style_index_0_lang = "";
    function _sfc_ssrRender$35(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_CustomersListing = vueExports$1.resolveComponent("CustomersListing");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ id: "vite-app" }, _attrs))}>`);
      _push(ssrRenderComponent(_component_CustomersListing, null, null, _parent));
      _push(`</div>`);
    }
    const _sfc_setup$3o = _sfc_main$3o.setup;
    _sfc_main$3o.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/App.vue");
      return _sfc_setup$3o ? _sfc_setup$3o(props, ctx) : void 0;
    };
    const App = /* @__PURE__ */ _export_sfc(_sfc_main$3o, [["ssrRender", _sfc_ssrRender$35]]);
    const __vite_glob_0_0 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: App
    }, Symbol.toStringTag, { value: "Module" }));
    function _typeof(e) {
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
        return typeof e2;
      } : function(e2) {
        return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
      }, _typeof(e);
    }
    function plugin(e, n) {
      if (!e.vueAxiosInstalled) {
        var o = isAxiosLike(n) ? migrateToMultipleInstances(n) : n;
        if (isValidConfig(o)) {
          var t = getVueVersion(e);
          if (t) {
            var i = t < 3 ? registerOnVue2 : registerOnVue3;
            Object.keys(o).forEach(function(n2) {
              i(e, n2, o[n2]);
            }), e.vueAxiosInstalled = true;
          } else
            console.error("[vue-axios] unknown Vue version");
        } else
          console.error("[vue-axios] configuration is invalid, expected options are either <axios_instance> or { <registration_key>: <axios_instance> }");
      }
    }
    function registerOnVue2(e, n, o) {
      Object.defineProperty(e.prototype, n, { get: function() {
        return o;
      } }), e[n] = o;
    }
    function registerOnVue3(e, n, o) {
      e.config.globalProperties[n] = o, e[n] = o;
    }
    function isAxiosLike(e) {
      return e && "function" == typeof e.get && "function" == typeof e.post;
    }
    function migrateToMultipleInstances(e) {
      return { axios: e, $http: e };
    }
    function isValidConfig(e) {
      return "object" === _typeof(e) && Object.keys(e).every(function(n) {
        return isAxiosLike(e[n]);
      });
    }
    function getVueVersion(e) {
      return e && e.version && Number(e.version.split(".")[0]);
    }
    "object" == ("undefined" == typeof exports ? "undefined" : _typeof(exports)) ? module.exports = plugin : "function" == typeof define && define.amd ? define([], function() {
      return plugin;
    }) : window.Vue && window.axios && window.Vue.use && Vue.use(plugin, window.axios);
    const ID_TOKEN_KEY = "id_token";
    const getToken = () => {
      return window.localStorage.getItem(ID_TOKEN_KEY);
    };
    const saveToken = (token) => {
      window.localStorage.setItem(ID_TOKEN_KEY, token);
    };
    const destroyToken = () => {
      window.localStorage.removeItem(ID_TOKEN_KEY);
    };
    const JwtService = { getToken, saveToken, destroyToken };
    const _ApiService = class _ApiService {
      /**
       * @description initialize vue axios
       */
      static init(app) {
        _ApiService.vueInstance = app;
        _ApiService.vueInstance.use(plugin, axios);
        _ApiService.vueInstance.axios.defaults.baseURL = {}.VITE_APP_API_URL;
      }
      /**
       * @description set the default HTTP request headers
       */
      static setHeader() {
        _ApiService.vueInstance.axios.defaults.headers.common["Authorization"] = `Token ${JwtService.getToken()}`;
        _ApiService.vueInstance.axios.defaults.headers.common["Accept"] = "application/json";
      }
      /**
       * @description send the GET HTTP request
       * @param resource: string
       * @param params: AxiosRequestConfig
       * @returns Promise<AxiosResponse>
       */
      static query(resource, params) {
        return _ApiService.vueInstance.axios.get(resource, params);
      }
      /**
       * @description send the GET HTTP request
       * @param resource: string
       * @param slug: string
       * @returns Promise<AxiosResponse>
       */
      static get(resource, slug = "") {
        return _ApiService.vueInstance.axios.get(`${resource}/${slug}`);
      }
      /**
       * @description set the POST HTTP request
       * @param resource: string
       * @param params: AxiosRequestConfig
       * @returns Promise<AxiosResponse>
       */
      static post(resource, params) {
        return _ApiService.vueInstance.axios.post(`${resource}`, params);
      }
      /**
       * @description send the UPDATE HTTP request
       * @param resource: string
       * @param slug: string
       * @param params: AxiosRequestConfig
       * @returns Promise<AxiosResponse>
       */
      static update(resource, slug, params) {
        return _ApiService.vueInstance.axios.put(`${resource}/${slug}`, params);
      }
      /**
       * @description Send the PUT HTTP request
       * @param resource: string
       * @param params: AxiosRequestConfig
       * @returns Promise<AxiosResponse>
       */
      static put(resource, params) {
        return _ApiService.vueInstance.axios.put(`${resource}`, params);
      }
      /**
       * @description Send the DELETE HTTP request
       * @param resource: string
       * @returns Promise<AxiosResponse>
       */
      static delete(resource) {
        return _ApiService.vueInstance.axios.delete(resource);
      }
    };
    /**
     * @description property to share vue instance
     */
    __publicField(_ApiService, "vueInstance");
    let ApiService = _ApiService;
    const _sfc_main$3n = vueExports$1.defineComponent({
      name: "app",
      props: {
        tableData: Array
      },
      components: {
        CustomersListing
      },
      setup() {
      }
    });
    function _sfc_ssrRender$34(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_CustomersListing = vueExports$1.resolveComponent("CustomersListing");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ id: "table-wrapper" }, _attrs))}>`);
      _push(ssrRenderComponent(_component_CustomersListing, null, null, _parent));
      _push(`<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_add_customer">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "plus",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(` Add Customer </button></div>`);
    }
    const _sfc_setup$3n = _sfc_main$3n.setup;
    _sfc_main$3n.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/TableWrapper.vue");
      return _sfc_setup$3n ? _sfc_setup$3n(props, ctx) : void 0;
    };
    const TableWrapper = /* @__PURE__ */ _export_sfc(_sfc_main$3n, [["ssrRender", _sfc_ssrRender$34]]);
    const __vite_glob_0_1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TableWrapper
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3m = vueExports$1.defineComponent({
      name: "kt-notify",
      props: {
        classes: { type: String },
        icon: { type: String },
        title: { type: String },
        body: { type: String },
        button: { type: String },
        buttonLabel: { type: String, default: "Button" },
        buttonUrl: { type: String, default: "#" },
        buttonModalId: { type: String },
        color: { type: String, default: "primary" },
        padding: { type: String, default: "p-6" }
      },
      components: {}
    });
    function _sfc_ssrRender$33(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `notice
      d-flex
      bg-light-${_ctx.color}
      rounded
      border-${_ctx.color}
      border
      border-dashed
      ${_ctx.classes}
     ${_ctx.padding}`
      }, _attrs))}>`);
      if (_ctx.icon) {
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": _ctx.icon,
          "icon-class": `fs-2tx text-${_ctx.color} me-4 ms-15 ms-lg-15`
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="d-flex flex-stack flex-grow-1">`);
      if (_ctx.body || _ctx.title) {
        _push(`<div class="${ssrRenderClass(`fw-semibold ${_ctx.button}`)}">`);
        if (_ctx.title) {
          _push(`<h4 class="text-gray-900 fw-bold">${ssrInterpolate(_ctx.title)}</h4>`);
        } else {
          _push(`<!---->`);
        }
        if (_ctx.body) {
          _push(`<div class="${ssrRenderClass(`fs-6 text-gray-700 pe-7`)}">${_ctx.body ?? ""}</div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      if (_ctx.button) {
        _push(`<a${ssrRenderAttr("href", _ctx.buttonUrl)} class="${ssrRenderClass(`btn btn-${_ctx.color} px-6 align-self-center text-nowrap`)}"${ssrRenderAttr("data-bs-toggle", _ctx.buttonModalId ? "modal" : false)}${ssrRenderAttr("data-bs-target", _ctx.buttonModalId ? _ctx.buttonModalId : false)}>${ssrInterpolate(_ctx.buttonLabel)}</a>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    }
    const _sfc_setup$3m = _sfc_main$3m.setup;
    _sfc_main$3m.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/Notice.vue");
      return _sfc_setup$3m ? _sfc_setup$3m(props, ctx) : void 0;
    };
    const Notice = /* @__PURE__ */ _export_sfc(_sfc_main$3m, [["ssrRender", _sfc_ssrRender$33]]);
    const __vite_glob_0_2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Notice
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3l = vueExports$1.defineComponent({
      name: "item-1",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$32(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "timeline-item" }, _attrs))}><div class="timeline-line w-40px"></div><div class="timeline-icon symbol symbol-circle symbol-40px me-4"><div class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "message-text-2",
        "icon-class": "fs-2 text-gray-500"
      }, null, _parent));
      _push(`</div></div><div class="timeline-content mb-10 mt-n1"><div class="pe-3 mb-5"><div class="fs-5 fw-semibold mb-2"> There are 2 new tasks for you in “AirPlus Mobile APp” project: </div><div class="d-flex align-items-center mt-1 fs-6"><div class="text-muted me-2 fs-7">Added at 4:23 PM by</div><div class="symbol symbol-circle symbol-25px" data-bs-toggle="tooltip" data-bs-boundary="window" data-bs-placement="top" title="Nina Nilson"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-14.jpg"))} alt="img"></div></div></div><div class="overflow-auto pb-5"><div class="d-flex align-items-center border border-dashed border-gray-300 rounded min-w-750px px-7 py-3 mb-5"><a href="#" class="fs-5 text-dark text-hover-primary fw-semibold w-375px min-w-200px">Meeting with customer</a><div class="min-w-175px pe-2"><span class="badge badge-light text-muted">Application Design</span></div><div class="symbol-group symbol-hover flex-nowrap flex-grow-1 min-w-100px pe-2"><div class="symbol symbol-circle symbol-25px"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-2.jpg"))} alt="img"></div><div class="symbol symbol-circle symbol-25px"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-14.jpg"))} alt="img"></div><div class="symbol symbol-circle symbol-25px"><div class="symbol-label fs-8 fw-semibold bg-primary text-inverse-primary"> A </div></div></div><div class="min-w-125px pe-2"><span class="badge badge-light-primary">In Progress</span></div><a href="#" class="btn btn-sm btn-light btn-active-light-primary">View</a></div><div class="d-flex align-items-center border border-dashed border-gray-300 rounded min-w-750px px-7 py-3 mb-0"><a href="#" class="fs-5 text-dark text-hover-primary fw-semibold w-375px min-w-200px">Project Delivery Preparation</a><div class="min-w-175px"><span class="badge badge-light text-muted">CRM System Development</span></div><div class="symbol-group symbol-hover flex-nowrap flex-grow-1 min-w-100px"><div class="symbol symbol-circle symbol-25px"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-20.jpg"))} alt="img"></div><div class="symbol symbol-circle symbol-25px"><div class="symbol-label fs-8 fw-semibold bg-success text-inverse-primary"> B </div></div></div><div class="min-w-125px"><span class="badge badge-light-success">Completed</span></div><a href="#" class="btn btn-sm btn-light btn-active-light-primary">View</a></div></div></div></div>`);
    }
    const _sfc_setup$3l = _sfc_main$3l.setup;
    _sfc_main$3l.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/activity-timeline-items/Item1.vue");
      return _sfc_setup$3l ? _sfc_setup$3l(props, ctx) : void 0;
    };
    const KTActivityItem1 = /* @__PURE__ */ _export_sfc(_sfc_main$3l, [["ssrRender", _sfc_ssrRender$32]]);
    const __vite_glob_0_3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTActivityItem1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3k = vueExports$1.defineComponent({
      name: "item-2",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$31(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "timeline-item" }, _attrs))}><div class="timeline-line w-40px"></div><div class="timeline-icon symbol symbol-circle symbol-40px"><div class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "pointers",
        "icon-class": "fs-2 text-gray-500"
      }, null, _parent));
      _push(`</div></div><div class="timeline-content mb-10 mt-n2"><div class="overflow-auto pe-3"><div class="fs-5 fw-semibold mb-2"> Invitation for crafting engaging designs that speak human workshop </div><div class="d-flex align-items-center mt-1 fs-6"><div class="text-muted me-2 fs-7">Sent at 4:23 PM by</div><div class="symbol symbol-circle symbol-25px" data-bs-toggle="tooltip" data-bs-boundary="window" data-bs-placement="top" title="Alan Nilson"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-1.jpg"))} alt="img"></div></div></div></div></div>`);
    }
    const _sfc_setup$3k = _sfc_main$3k.setup;
    _sfc_main$3k.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/activity-timeline-items/Item2.vue");
      return _sfc_setup$3k ? _sfc_setup$3k(props, ctx) : void 0;
    };
    const KTActivityItem2 = /* @__PURE__ */ _export_sfc(_sfc_main$3k, [["ssrRender", _sfc_ssrRender$31]]);
    const __vite_glob_0_4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTActivityItem2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3j = vueExports$1.defineComponent({
      name: "item-3",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$30(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "timeline-item" }, _attrs))}><div class="timeline-line w-40px"></div><div class="timeline-icon symbol symbol-circle symbol-40px"><div class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "disconnect",
        "icon-class": "fs-2 text-gray-500"
      }, null, _parent));
      _push(`</div></div><div class="timeline-content mb-10 mt-n1"><div class="mb-5 pe-3"><a href="#" class="fs-5 fw-semibold text-gray-800 text-hover-primary mb-2">3 New Incoming Project Files:</a><div class="d-flex align-items-center mt-1 fs-6"><div class="text-muted me-2 fs-7">Sent at 10:30 PM by</div><div class="symbol symbol-circle symbol-25px" data-bs-toggle="tooltip" data-bs-boundary="window" data-bs-placement="top" title="Jan Hummer"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-23.jpg"))} alt="img"></div></div></div><div class="overflow-auto pb-5"><div class="d-flex align-items-center border border-dashed border-gray-300 rounded min-w-700px p-5"><div class="d-flex flex-aligns-center pe-10 pe-lg-20"><img alt="" class="w-30px me-3"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/files/pdf.svg"))}><div class="ms-1 fw-semibold"><a href="#" class="fs-6 text-hover-primary fw-bold">Finance KPI App Guidelines</a><div class="text-gray-500">1.9mb</div></div></div><div class="d-flex flex-aligns-center pe-10 pe-lg-20"><img alt="" class="w-30px me-3"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/files/doc.svg"))}><div class="ms-1 fw-semibold"><a href="#" class="fs-6 text-hover-primary fw-bold">Client UAT Testing Results</a><div class="text-gray-500">18kb</div></div></div><div class="d-flex flex-aligns-center"><img alt="" class="w-30px me-3"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/files/css.svg"))}><div class="ms-1 fw-semibold"><a href="#" class="fs-6 text-hover-primary fw-bold">Finance Reports</a><div class="text-gray-500">20mb</div></div></div></div></div></div></div>`);
    }
    const _sfc_setup$3j = _sfc_main$3j.setup;
    _sfc_main$3j.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/activity-timeline-items/Item3.vue");
      return _sfc_setup$3j ? _sfc_setup$3j(props, ctx) : void 0;
    };
    const KTActivityItem3 = /* @__PURE__ */ _export_sfc(_sfc_main$3j, [["ssrRender", _sfc_ssrRender$30]]);
    const __vite_glob_0_5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTActivityItem3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3i = vueExports$1.defineComponent({
      name: "item-4",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2$(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "timeline-item" }, _attrs))}><div class="timeline-line w-40px"></div><div class="timeline-icon symbol symbol-circle symbol-40px"><div class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-26",
        "icon-class": "fs-2 text-gray-500"
      }, null, _parent));
      _push(`</div></div><div class="timeline-content mb-10 mt-n1"><div class="pe-3 mb-5"><div class="fs-5 fw-semibold mb-2"> Task <a href="#" class="text-primary fw-bold me-1">#45890</a> merged with <a href="#" class="text-primary fw-bold me-1">#45890</a> in “Ads Pro Admin Dashboard project: </div><div class="d-flex align-items-center mt-1 fs-6"><div class="text-muted me-2 fs-7">Initiated at 4:23 PM by</div><div class="symbol symbol-circle symbol-25px" data-bs-toggle="tooltip" data-bs-boundary="window" data-bs-placement="top" title="Nina Nilson"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-14.jpg"))} alt="img"></div></div></div></div></div>`);
    }
    const _sfc_setup$3i = _sfc_main$3i.setup;
    _sfc_main$3i.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/activity-timeline-items/Item4.vue");
      return _sfc_setup$3i ? _sfc_setup$3i(props, ctx) : void 0;
    };
    const KTActivityItem4 = /* @__PURE__ */ _export_sfc(_sfc_main$3i, [["ssrRender", _sfc_ssrRender$2$]]);
    const __vite_glob_0_6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTActivityItem4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3h = vueExports$1.defineComponent({
      name: "item-5",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "timeline-item" }, _attrs))}><div class="timeline-line w-40px"></div><div class="timeline-icon symbol symbol-circle symbol-40px"><div class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "pencil",
        "icon-class": "fs-2 text-gray-500"
      }, null, _parent));
      _push(`</div></div><div class="timeline-content mb-10 mt-n1"><div class="pe-3 mb-5"><div class="fs-5 fw-semibold mb-2"> 3 new application design concepts added: </div><div class="d-flex align-items-center mt-1 fs-6"><div class="text-muted me-2 fs-7">Created at 4:23 PM by</div><div class="symbol symbol-circle symbol-25px" data-bs-toggle="tooltip" data-bs-boundary="window" data-bs-placement="top" title="Marcus Dotson"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-2.jpg"))} alt="img"></div></div></div><div class="overflow-auto pb-5"><div class="d-flex align-items-center border border-dashed border-gray-300 rounded min-w-700px p-7"><div class="overlay me-10"><div class="overlay-wrapper"><img alt="img" class="rounded w-150px"${ssrRenderAttr("src", _ctx.getAssetPath("media/stock/600x400/img-29.jpg"))}></div><div class="overlay-layer bg-dark bg-opacity-10 rounded"><a href="#" class="btn btn-sm btn-primary btn-shadow">Explore</a></div></div><div class="overlay me-10"><div class="overlay-wrapper"><img alt="img" class="rounded w-150px"${ssrRenderAttr("src", _ctx.getAssetPath("media/stock/600x400/img-31.jpg"))}></div><div class="overlay-layer bg-dark bg-opacity-10 rounded"><a href="#" class="btn btn-sm btn-primary btn-shadow">Explore</a></div></div><div class="overlay"><div class="overlay-wrapper"><img alt="img" class="rounded w-150px"${ssrRenderAttr("src", _ctx.getAssetPath("media/stock/600x400/img-40.jpg"))}></div><div class="overlay-layer bg-dark bg-opacity-10 rounded"><a href="#" class="btn btn-sm btn-primary btn-shadow">Explore</a></div></div></div></div></div></div>`);
    }
    const _sfc_setup$3h = _sfc_main$3h.setup;
    _sfc_main$3h.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/activity-timeline-items/Item5.vue");
      return _sfc_setup$3h ? _sfc_setup$3h(props, ctx) : void 0;
    };
    const KTActivityItem5 = /* @__PURE__ */ _export_sfc(_sfc_main$3h, [["ssrRender", _sfc_ssrRender$2_]]);
    const __vite_glob_0_7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTActivityItem5
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3g = vueExports$1.defineComponent({
      name: "item-6",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2Z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "timeline-item" }, _attrs))}><div class="timeline-line w-40px"></div><div class="timeline-icon symbol symbol-circle symbol-40px"><div class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "sms",
        "icon-class": "fs-2 text-gray-500"
      }, null, _parent));
      _push(`</div></div><div class="timeline-content mb-10 mt-n1"><div class="pe-3 mb-5"><div class="fs-5 fw-semibold mb-2"> New case <a href="#" class="text-primary fw-bold me-1">#67890</a> is assigned to you in Multi-platform Database Design project </div><div class="overflow-auto pb-5"><div class="d-flex align-items-center mt-1 fs-6"><div class="text-muted me-2 fs-7">Added at 4:23 PM by</div><a href="#" class="text-primary fw-bold me-1">Alice Tan</a></div></div></div></div></div>`);
    }
    const _sfc_setup$3g = _sfc_main$3g.setup;
    _sfc_main$3g.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/activity-timeline-items/Item6.vue");
      return _sfc_setup$3g ? _sfc_setup$3g(props, ctx) : void 0;
    };
    const KTActivityItem6 = /* @__PURE__ */ _export_sfc(_sfc_main$3g, [["ssrRender", _sfc_ssrRender$2Z]]);
    const __vite_glob_0_8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTActivityItem6
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3f = vueExports$1.defineComponent({
      name: "item-7",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "timeline-item" }, _attrs))}><div class="timeline-line w-40px"></div><div class="timeline-icon symbol symbol-circle symbol-40px"><div class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "pencil",
        "icon-class": "fs-2 text-gray-500"
      }, null, _parent));
      _push(`</div></div><div class="timeline-content mb-10 mt-n1"><div class="pe-3 mb-5"><div class="fs-5 fw-semibold mb-2">You have received a new order:</div><div class="d-flex align-items-center mt-1 fs-6"><div class="text-muted me-2 fs-7">Placed at 5:05 AM by</div><div class="symbol symbol-circle symbol-25px" data-bs-toggle="tooltip" data-bs-boundary="window" data-bs-placement="top" title="Robert Rich"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-4.jpg"))} alt="img"></div></div></div><div class="overflow-auto pb-5"><div class="notice d-flex bg-light-primary rounded border-primary border border-dashed min-w-lg-600px flex-shrink-0 p-6">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "disconnect",
        "icon-class": "fs-2tx text-primary me-4"
      }, null, _parent));
      _push(`<div class="d-flex flex-stack flex-grow-1 flex-wrap flex-md-nowrap"><div class="mb-3 mb-md-0 fw-semibold"><h4 class="text-gray-800 fw-bold"> Database Backup Process Completed! </h4><div class="fs-6 text-gray-600 pe-7"> Login into Metronic Admin Dashboard to make sure the data integrity is OK </div></div><a href="#" class="btn btn-primary px-6 align-self-center text-nowrap"> Proceed </a></div></div></div></div></div>`);
    }
    const _sfc_setup$3f = _sfc_main$3f.setup;
    _sfc_main$3f.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/activity-timeline-items/Item7.vue");
      return _sfc_setup$3f ? _sfc_setup$3f(props, ctx) : void 0;
    };
    const KTActivityItem7 = /* @__PURE__ */ _export_sfc(_sfc_main$3f, [["ssrRender", _sfc_ssrRender$2Y]]);
    const __vite_glob_0_9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTActivityItem7
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3e = vueExports$1.defineComponent({
      name: "item-8",
      components: {}
    });
    function _sfc_ssrRender$2X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(_attrs)}></div>`);
    }
    const _sfc_setup$3e = _sfc_main$3e.setup;
    _sfc_main$3e.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/activity-timeline-items/Item8.vue");
      return _sfc_setup$3e ? _sfc_setup$3e(props, ctx) : void 0;
    };
    const KTActivityItem8 = /* @__PURE__ */ _export_sfc(_sfc_main$3e, [["ssrRender", _sfc_ssrRender$2X]]);
    const __vite_glob_0_10 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTActivityItem8
    }, Symbol.toStringTag, { value: "Module" }));
    const todayDate = moment().startOf("day");
    const YM = todayDate.format("YYYY-MM");
    const YESTERDAY = todayDate.clone().subtract(1, "day").format("YYYY-MM-DD");
    const TODAY = todayDate.format("YYYY-MM-DD");
    const TOMORROW = todayDate.clone().add(1, "day").format("YYYY-MM-DD");
    const events = [
      {
        title: "All Day Event",
        start: YM + "-01",
        description: "Toto lorem ipsum dolor sit incid idunt ut",
        className: "fc-event-danger fc-event-solid-warning"
      },
      {
        title: "Reporting",
        start: YM + "-14T13:30:00",
        description: "Lorem ipsum dolor incid idunt ut labore",
        end: YM + "-14",
        className: "fc-event-success"
      },
      {
        title: "Company Trip",
        start: YM + "-02",
        description: "Lorem ipsum dolor sit tempor incid",
        end: YM + "-03",
        className: "fc-event-primary"
      },
      {
        title: "ICT Expo 2017 - Product Release",
        start: YM + "-03",
        description: "Lorem ipsum dolor sit tempor inci",
        end: YM + "-05",
        className: "fc-event-light fc-event-solid-primary"
      },
      {
        title: "Dinner",
        start: YM + "-12",
        description: "Lorem ipsum dolor sit amet, conse ctetur",
        end: YM + "-10"
      },
      {
        id: "999",
        title: "Repeating Event",
        start: YM + "-09T16:00:00",
        description: "Lorem ipsum dolor sit ncididunt ut labore",
        className: "fc-event-danger"
      },
      {
        id: "1000",
        title: "Repeating Event",
        description: "Lorem ipsum dolor sit amet, labore",
        start: YM + "-16T16:00:00"
      },
      {
        title: "Conference",
        start: YESTERDAY,
        end: TOMORROW,
        description: "Lorem ipsum dolor eius mod tempor labore",
        className: "fc-event-primary"
      },
      {
        title: "Meeting",
        start: TODAY + "T10:30:00",
        end: TODAY + "T12:30:00",
        description: "Lorem ipsum dolor eiu idunt ut labore"
      },
      {
        title: "Lunch",
        start: TODAY + "T12:00:00",
        className: "fc-event-info",
        description: "Lorem ipsum dolor sit amet, ut labore"
      },
      {
        title: "Meeting",
        start: TODAY + "T14:30:00",
        className: "fc-event-warning",
        description: "Lorem ipsum conse ctetur adipi scing"
      },
      {
        title: "Happy Hour",
        start: TODAY + "T17:30:00",
        className: "fc-event-info",
        description: "Lorem ipsum dolor sit amet, conse ctetur"
      },
      {
        title: "Dinner",
        start: TOMORROW + "T05:00:00",
        className: "fc-event-solid-danger fc-event-light",
        description: "Lorem ipsum dolor sit ctetur adipi scing"
      },
      {
        title: "Birthday Party",
        start: TOMORROW + "T07:00:00",
        className: "fc-event-primary",
        description: "Lorem ipsum dolor sit amet, scing"
      },
      {
        title: "Click for Google",
        url: "http://google.com/",
        start: YM + "-28",
        className: "fc-event-solid-info fc-event-light",
        description: "Lorem ipsum dolor sit amet, labore"
      }
    ];
    const _sfc_main$3d = vueExports$1.defineComponent({
      name: "new-event-modal",
      components: {},
      setup() {
        const formRef = vueExports$1.ref(null);
        const newTargetModalRef = vueExports$1.ref(null);
        const loading2 = vueExports$1.ref(false);
        const targetData = vueExports$1.ref({
          eventName: "",
          eventDescription: "",
          eventLocation: "",
          allDay: true,
          eventStartDate: "",
          eventEndDate: ""
        });
        const rules = vueExports$1.ref({
          eventName: [
            {
              required: true,
              message: "Please input event name",
              trigger: "blur"
            }
          ]
        });
        const submit = () => {
          if (!formRef.value) {
            return;
          }
          formRef.value.validate((valid) => {
            if (valid) {
              loading2.value = true;
              setTimeout(() => {
                loading2.value = false;
                Swal.fire({
                  text: "Form has been successfully submitted!",
                  icon: "success",
                  buttonsStyling: false,
                  confirmButtonText: "Ok, got it!",
                  heightAuto: false,
                  customClass: {
                    confirmButton: "btn btn-primary"
                  }
                }).then(() => {
                  hideModal(newTargetModalRef.value);
                });
              }, 2e3);
            } else {
              Swal.fire({
                text: "Sorry, looks like there are some errors detected, please try again.",
                icon: "error",
                buttonsStyling: false,
                confirmButtonText: "Ok, got it!",
                heightAuto: false,
                customClass: {
                  confirmButton: "btn btn-primary"
                }
              });
              return false;
            }
          });
        };
        return {
          formRef,
          newTargetModalRef,
          loading: loading2,
          targetData,
          rules,
          submit,
          getAssetPath
        };
      }
    });
    const NewEventModal_vue_vue_type_style_index_0_lang = "";
    function _sfc_ssrRender$2W(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_el_form = vueExports$1.resolveComponent("el-form");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_el_form_item = vueExports$1.resolveComponent("el-form-item");
      const _component_el_input = vueExports$1.resolveComponent("el-input");
      const _component_el_checkbox = vueExports$1.resolveComponent("el-checkbox");
      const _component_el_date_picker = vueExports$1.resolveComponent("el-date-picker");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade show",
        id: "kt_modal_add_event",
        "aria-modal": "true",
        role: "dialog",
        ref: "newTargetModalRef"
      }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-650px"><div class="modal-content">`);
      _push(ssrRenderComponent(_component_el_form, {
        class: "form fv-plugins-bootstrap5 fv-plugins-framework",
        id: "kt_modal_add_event_form",
        onSubmit: ($event) => _ctx.submit(),
        model: _ctx.targetData,
        rules: _ctx.rules,
        ref: "formRef"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="modal-header"${_scopeId}><h2 class="fw-bold"${_scopeId}>Add a New Event</h2><div class="btn btn-icon btn-sm btn-active-icon-primary" id="kt_modal_add_event_close" data-bs-dismiss="modal"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "cross",
              "icon-class": "fs-1"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="modal-body py-10 px-lg-17"${_scopeId}><div class="fv-row mb-9 fv-plugins-icon-container"${_scopeId}><label class="fs-6 fw-semibold required mb-2"${_scopeId}>Event Name</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "eventName" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.targetData.eventName,
                    "onUpdate:modelValue": ($event) => _ctx.targetData.eventName = $event,
                    type: "text",
                    name: "eventName"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.targetData.eventName,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.eventName = $event,
                      type: "text",
                      name: "eventName"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container invalid-feedback"${_scopeId}></div></div><div class="fv-row mb-9"${_scopeId}><label class="fs-6 fw-semibold mb-2"${_scopeId}>Event Description</label>`);
            _push2(ssrRenderComponent(_component_el_input, {
              modelValue: _ctx.targetData.eventDescription,
              "onUpdate:modelValue": ($event) => _ctx.targetData.eventDescription = $event,
              type: "text",
              placeholder: "",
              name: "eventDescription"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="fv-row mb-9"${_scopeId}><label class="fs-6 fw-semibold mb-2"${_scopeId}>Event Location</label>`);
            _push2(ssrRenderComponent(_component_el_input, {
              modelValue: _ctx.targetData.eventLocation,
              "onUpdate:modelValue": ($event) => _ctx.targetData.eventLocation = $event,
              type: "text",
              placeholder: "",
              name: "eventLocation"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="fv-row mb-9"${_scopeId}><label class="form-check form-check-custom form-check-solid"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_el_checkbox, {
              modelValue: _ctx.targetData.allDay,
              "onUpdate:modelValue": ($event) => _ctx.targetData.allDay = $event,
              type: "checkbox"
            }, null, _parent2, _scopeId));
            _push2(`<span class="form-check-label fw-semibold"${_scopeId}>All Day</span></label></div><div class="row row-cols-lg-2 g-10"${_scopeId}><div class="col"${_scopeId}><div class="fv-row mb-9 fv-plugins-icon-container fv-plugins-bootstrap5-row-valid"${_scopeId}><label class="fs-6 fw-semibold mb-2 required"${_scopeId}>Event Start Date</label>`);
            _push2(ssrRenderComponent(_component_el_date_picker, {
              modelValue: _ctx.targetData.eventStartDate,
              "onUpdate:modelValue": ($event) => _ctx.targetData.eventStartDate = $event,
              type: "date",
              teleported: false,
              name: "eventStartDate"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container invalid-feedback"${_scopeId}></div></div></div></div><div class="row row-cols-lg-2 g-10"${_scopeId}><div class="col"${_scopeId}><div class="fv-row mb-9 fv-plugins-icon-container fv-plugins-bootstrap5-row-valid"${_scopeId}><label class="fs-6 fw-semibold mb-2 required"${_scopeId}>Event End Date</label>`);
            _push2(ssrRenderComponent(_component_el_date_picker, {
              modelValue: _ctx.targetData.eventEndDate,
              "onUpdate:modelValue": ($event) => _ctx.targetData.eventEndDate = $event,
              type: "date",
              teleported: false,
              name: "eventName"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container invalid-feedback"${_scopeId}></div></div></div></div></div><div class="modal-footer flex-center"${_scopeId}><button data-bs-dismiss="modal" type="reset" id="kt_modal_add_event_cancel" class="btn btn-light me-3"${_scopeId}> Cancel </button><button${ssrRenderAttr("data-kt-indicator", _ctx.loading ? "on" : null)} class="btn btn-lg btn-primary" type="submit"${_scopeId}>`);
            if (!_ctx.loading) {
              _push2(`<span class="indicator-label"${_scopeId}> Submit `);
              _push2(ssrRenderComponent(_component_KTIcon, {
                "icon-name": "arrow-right",
                "icon-class": "fs-3 ms-2 me-0"
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.loading) {
              _push2(`<span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</button></div><div${_scopeId}></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "modal-header" }, [
                vueExports$1.createVNode("h2", { class: "fw-bold" }, "Add a New Event"),
                vueExports$1.createVNode("div", {
                  class: "btn btn-icon btn-sm btn-active-icon-primary",
                  id: "kt_modal_add_event_close",
                  "data-bs-dismiss": "modal"
                }, [
                  vueExports$1.createVNode(_component_KTIcon, {
                    "icon-name": "cross",
                    "icon-class": "fs-1"
                  })
                ])
              ]),
              vueExports$1.createVNode("div", { class: "modal-body py-10 px-lg-17" }, [
                vueExports$1.createVNode("div", { class: "fv-row mb-9 fv-plugins-icon-container" }, [
                  vueExports$1.createVNode("label", { class: "fs-6 fw-semibold required mb-2" }, "Event Name"),
                  vueExports$1.createVNode(_component_el_form_item, { prop: "eventName" }, {
                    default: vueExports$1.withCtx(() => [
                      vueExports$1.createVNode(_component_el_input, {
                        modelValue: _ctx.targetData.eventName,
                        "onUpdate:modelValue": ($event) => _ctx.targetData.eventName = $event,
                        type: "text",
                        name: "eventName"
                      }, null, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 1
                  }),
                  vueExports$1.createVNode("div", { class: "fv-plugins-message-container invalid-feedback" })
                ]),
                vueExports$1.createVNode("div", { class: "fv-row mb-9" }, [
                  vueExports$1.createVNode("label", { class: "fs-6 fw-semibold mb-2" }, "Event Description"),
                  vueExports$1.createVNode(_component_el_input, {
                    modelValue: _ctx.targetData.eventDescription,
                    "onUpdate:modelValue": ($event) => _ctx.targetData.eventDescription = $event,
                    type: "text",
                    placeholder: "",
                    name: "eventDescription"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vueExports$1.createVNode("div", { class: "fv-row mb-9" }, [
                  vueExports$1.createVNode("label", { class: "fs-6 fw-semibold mb-2" }, "Event Location"),
                  vueExports$1.createVNode(_component_el_input, {
                    modelValue: _ctx.targetData.eventLocation,
                    "onUpdate:modelValue": ($event) => _ctx.targetData.eventLocation = $event,
                    type: "text",
                    placeholder: "",
                    name: "eventLocation"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                vueExports$1.createVNode("div", { class: "fv-row mb-9" }, [
                  vueExports$1.createVNode("label", { class: "form-check form-check-custom form-check-solid" }, [
                    vueExports$1.createVNode(_component_el_checkbox, {
                      modelValue: _ctx.targetData.allDay,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.allDay = $event,
                      type: "checkbox"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("span", { class: "form-check-label fw-semibold" }, "All Day")
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row row-cols-lg-2 g-10" }, [
                  vueExports$1.createVNode("div", { class: "col" }, [
                    vueExports$1.createVNode("div", { class: "fv-row mb-9 fv-plugins-icon-container fv-plugins-bootstrap5-row-valid" }, [
                      vueExports$1.createVNode("label", { class: "fs-6 fw-semibold mb-2 required" }, "Event Start Date"),
                      vueExports$1.createVNode(_component_el_date_picker, {
                        modelValue: _ctx.targetData.eventStartDate,
                        "onUpdate:modelValue": ($event) => _ctx.targetData.eventStartDate = $event,
                        type: "date",
                        teleported: false,
                        name: "eventStartDate"
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      vueExports$1.createVNode("div", { class: "fv-plugins-message-container invalid-feedback" })
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row row-cols-lg-2 g-10" }, [
                  vueExports$1.createVNode("div", { class: "col" }, [
                    vueExports$1.createVNode("div", { class: "fv-row mb-9 fv-plugins-icon-container fv-plugins-bootstrap5-row-valid" }, [
                      vueExports$1.createVNode("label", { class: "fs-6 fw-semibold mb-2 required" }, "Event End Date"),
                      vueExports$1.createVNode(_component_el_date_picker, {
                        modelValue: _ctx.targetData.eventEndDate,
                        "onUpdate:modelValue": ($event) => _ctx.targetData.eventEndDate = $event,
                        type: "date",
                        teleported: false,
                        name: "eventName"
                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                      vueExports$1.createVNode("div", { class: "fv-plugins-message-container invalid-feedback" })
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "modal-footer flex-center" }, [
                vueExports$1.createVNode("button", {
                  "data-bs-dismiss": "modal",
                  type: "reset",
                  id: "kt_modal_add_event_cancel",
                  class: "btn btn-light me-3"
                }, " Cancel "),
                vueExports$1.createVNode("button", {
                  "data-kt-indicator": _ctx.loading ? "on" : null,
                  class: "btn btn-lg btn-primary",
                  type: "submit"
                }, [
                  !_ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                    key: 0,
                    class: "indicator-label"
                  }, [
                    vueExports$1.createTextVNode(" Submit "),
                    vueExports$1.createVNode(_component_KTIcon, {
                      "icon-name": "arrow-right",
                      "icon-class": "fs-3 ms-2 me-0"
                    })
                  ])) : vueExports$1.createCommentVNode("", true),
                  _ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                    key: 1,
                    class: "indicator-progress"
                  }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])) : vueExports$1.createCommentVNode("", true)
                ], 8, ["data-kt-indicator"])
              ]),
              vueExports$1.createVNode("div")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div>`);
    }
    const _sfc_setup$3d = _sfc_main$3d.setup;
    _sfc_main$3d.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/forms/NewEventModal.vue");
      return _sfc_setup$3d ? _sfc_setup$3d(props, ctx) : void 0;
    };
    const NewEventModal = /* @__PURE__ */ _export_sfc(_sfc_main$3d, [["ssrRender", _sfc_ssrRender$2W]]);
    const __vite_glob_0_62 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: NewEventModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3c = vueExports$1.defineComponent({
      name: "calendar-app-1",
      components: {
        FullCalendar
      },
      setup() {
        const calendarRef = vueExports$1.ref(null);
        const newEvent = () => {
          const modal = new Modal(
            document.getElementById("kt_modal_add_event")
          );
          modal.show();
        };
        vueExports$1.onMounted(() => {
          vueExports$1.nextTick(function() {
            window.dispatchEvent(new Event("resize"));
          });
        });
        const calendarOptions = {
          plugins: [dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin],
          headerToolbar: {
            left: "prev,next today",
            center: "title",
            right: "dayGridMonth,timeGridWeek,timeGridDay"
          },
          initialDate: TODAY,
          navLinks: true,
          // can click day/week names to navigate views
          selectable: true,
          selectMirror: true,
          views: {
            dayGridMonth: { buttonText: "month" },
            timeGridWeek: { buttonText: "week" },
            timeGridDay: { buttonText: "day" }
          },
          editable: true,
          dayMaxEvents: true,
          // allow "more" link when too many events
          events,
          dateClick: newEvent,
          eventClick: newEvent
        };
        return {
          calendarOptions,
          newEvent,
          getAssetPath,
          calendarRef
        };
      }
    });
    const CalendarApp1_vue_vue_type_style_index_0_lang = "";
    function _sfc_ssrRender$2V(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_FullCalendar = vueExports$1.resolveComponent("FullCalendar");
      _push(ssrRenderComponent(_component_FullCalendar, vueExports$1.mergeProps({
        ref: "calendarRef",
        class: "demo-app-calendar",
        options: _ctx.calendarOptions
      }, _attrs), null, _parent));
    }
    const _sfc_setup$3c = _sfc_main$3c.setup;
    _sfc_main$3c.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/calendar/CalendarApp1.vue");
      return _sfc_setup$3c ? _sfc_setup$3c(props, ctx) : void 0;
    };
    const CalendarApp1 = /* @__PURE__ */ _export_sfc(_sfc_main$3c, [["ssrRender", _sfc_ssrRender$2V]]);
    const __vite_glob_0_11 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CalendarApp1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3b = vueExports$1.defineComponent({
      name: "modal-card",
      props: {
        title: String,
        description: String,
        buttonText: String,
        image: String,
        modalId: String
      },
      components: {}
    });
    function _sfc_ssrRender$2U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card" }, _attrs))}><div class="card-body p-0"><div class="card-px text-center py-20 my-10"><h2 class="fs-2x fw-bold mb-10">${ssrInterpolate(_ctx.title)}</h2><p class="text-gray-500 fs-5 fw-semibold mb-13"><span>${_ctx.description ?? ""}</span></p><button type="button" class="btn btn-primary er fs-6 px-8 py-4" data-bs-toggle="modal"${ssrRenderAttr("data-bs-target", `#${_ctx.modalId}`)}>${ssrInterpolate(_ctx.buttonText)}</button></div><div class="text-center px-5"><img${ssrRenderAttr("src", _ctx.image)} alt="" class="mw-100 mh-300px"></div></div></div>`);
    }
    const _sfc_setup$3b = _sfc_main$3b.setup;
    _sfc_main$3b.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/cards/Card.vue");
      return _sfc_setup$3b ? _sfc_setup$3b(props, ctx) : void 0;
    };
    const KTModalCard = /* @__PURE__ */ _export_sfc(_sfc_main$3b, [["ssrRender", _sfc_ssrRender$2U]]);
    const __vite_glob_0_12 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTModalCard
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3a = vueExports$1.defineComponent({
      name: "card-1",
      components: {},
      props: {
        progress: Number,
        statusDataBadgeColor: String,
        statusDataColor: String,
        status: String,
        icon: String,
        title: String,
        description: String,
        date: String,
        budget: String,
        users: Array
      },
      setup(props) {
        const getDescription = vueExports$1.computed(() => {
          return props.description ? props.description : "CRM App application to HR efficiency";
        });
        const getDate = vueExports$1.computed(() => {
          return props.date ? props.date : "Feb 21, 2021";
        });
        const getBudget = vueExports$1.computed(() => {
          return props.budget ? props.budget : "$284,900.00";
        });
        const getStatus = vueExports$1.computed(() => {
          return props.status ? props.status : "In Progress";
        });
        const getStatusDataBadgeColor = vueExports$1.computed(() => {
          return props.statusDataBadgeColor ? props.statusDataBadgeColor : "badge-light-primary";
        });
        const getStatusDataColor = vueExports$1.computed(() => {
          return props.statusDataColor ? props.statusDataColor : "bg-primary";
        });
        return {
          getDescription,
          getDate,
          getBudget,
          getStatus,
          getStatusDataBadgeColor,
          getStatusDataColor
        };
      }
    });
    function _sfc_ssrRender$2T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<a${ssrRenderAttrs(vueExports$1.mergeProps({
        href: "#",
        class: "card border border-2 border-gray-300 border-hover"
      }, _attrs))}><div class="card-header border-0 pt-9"><div class="card-title m-0"><div class="symbol symbol-50px w-50px bg-light"><img${ssrRenderAttr("src", _ctx.icon)} alt="image" class="p-3"></div></div><div class="card-toolbar"><span class="${ssrRenderClass([_ctx.getStatusDataBadgeColor, "badge fw-bold me-auto px-4 py-3"])}">${ssrInterpolate(_ctx.getStatus)}</span></div></div><div class="card-body p-9"><div class="fs-3 fw-bold text-gray-900">${ssrInterpolate(_ctx.title)}</div><p class="text-gray-500 fw-semibold fs-5 mt-1 mb-7">${ssrInterpolate(_ctx.getDescription)}</p><div class="d-flex flex-wrap mb-5"><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 px-4 me-7 mb-3"><div class="fs-6 text-gray-800 fw-bold">${ssrInterpolate(_ctx.getDate)}</div><div class="fw-semibold text-gray-500">Due Date</div></div><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 px-4 mb-3"><div class="fs-6 text-gray-800 fw-bold">${ssrInterpolate(_ctx.getBudget)}</div><div class="fw-semibold text-gray-500">Budget</div></div></div><div class="h-4px w-100 bg-light mb-5" data-bs-toggle="tooltip"${ssrRenderAttr("title", `This project ${_ctx.progress}% completed`)}><div class="${ssrRenderClass([_ctx.getStatusDataColor, "rounded h-4px"])}" role="progressbar" style="${ssrRenderStyle({ width: _ctx.progress + `%` })}"${ssrRenderAttr("aria-valuenow", _ctx.progress)} aria-valuemin="0" aria-valuemax="100"></div></div>`);
      if (_ctx.users) {
        _push(`<div class="symbol-group symbol-hover"><!--[-->`);
        ssrRenderList(_ctx.users, (user2, index) => {
          _push(`<div class="symbol symbol-35px symbol-circle" data-bs-toggle="tooltip"${ssrRenderAttr("title", user2.title)}>`);
          if (user2.src) {
            _push(`<img alt="Pic"${ssrRenderAttr("src", user2.src)}>`);
          } else {
            _push(`<span class="${ssrRenderClass([`bg-${user2.state} text-inverse-${user2.state}`, "symbol-label fw-bold"])}">${ssrInterpolate(user2.initials)}</span>`);
          }
          _push(`</div>`);
        });
        _push(`<!--]--></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></a>`);
    }
    const _sfc_setup$3a = _sfc_main$3a.setup;
    _sfc_main$3a.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/cards/Card1.vue");
      return _sfc_setup$3a ? _sfc_setup$3a(props, ctx) : void 0;
    };
    const KTCard = /* @__PURE__ */ _export_sfc(_sfc_main$3a, [["ssrRender", _sfc_ssrRender$2T]]);
    const __vite_glob_0_13 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTCard
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$39 = vueExports$1.defineComponent({
      name: "dropdown-3",
      components: {}
    });
    function _sfc_ssrRender$2S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg-light-primary fw-semibold py-4 w-250px fs-6",
        "data-kt-menu": "true"
      }, _attrs))}><div class="menu-item px-5"><div class="menu-content text-muted pb-2 px-5 fs-7 text-uppercase"> Payments </div></div><div class="menu-item px-5"><a href="#" class="menu-link px-5"> Create invoice </a></div><div class="menu-item px-5"><a href="#" class="menu-link flex-stack px-5"> Create payments <i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="tooltip" title="Specify a target name for future usage and reference"></i></a></div><div class="menu-item px-5" data-kt-menu-trigger="hover" data-kt-menu-placement="left-start"><a href="#" class="menu-link px-5"><span class="menu-title">Subscription</span><span class="menu-arrow"></span></a><div class="menu-sub menu-sub-dropdown w-175px py-4"><div class="menu-item px-3"><a href="#" class="menu-link px-5"> Apps </a></div><div class="menu-item px-3"><a href="#" class="menu-link px-5"> Billing </a></div><div class="menu-item px-3"><a href="#" class="menu-link px-5"> Statements </a></div><div class="separator my-2"></div><div class="menu-item px-3"><div class="menu-content px-3"><label class="form-check form-switch form-check-custom form-check-solid"><input class="form-check-input w-30px h-20px" type="checkbox" value="" name="notifications" checked id="kt_user_menu_notifications"><span class="form-check-label text-muted fs-6" for="kt_user_menu_notifications"> Notifications </span></label></div></div></div></div><div class="separator my-3"></div><div class="menu-item px-5"><div class="menu-content text-muted pb-2 px-5 fs-7 text-uppercase"> Account </div></div><div class="menu-item px-5"><a href="#" class="menu-link px-5"> Reports </a></div><div class="menu-item px-5 my-1"><a href="#" class="menu-link px-5"> Account Settings </a></div><div class="menu-item px-5"><a href="#" class="menu-link text-danger px-5"> Delete customer </a></div></div>`);
    }
    const _sfc_setup$39 = _sfc_main$39.setup;
    _sfc_main$39.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dropdown/Dropdown3.vue");
      return _sfc_setup$39 ? _sfc_setup$39(props, ctx) : void 0;
    };
    const Dropdown3 = /* @__PURE__ */ _export_sfc(_sfc_main$39, [["ssrRender", _sfc_ssrRender$2S]]);
    const __vite_glob_0_40 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Dropdown3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$38 = vueExports$1.defineComponent({
      name: "card-2",
      components: {
        Dropdown3
      },
      props: {
        cardClasses: String,
        icon: String,
        title: String,
        content: String,
        color: String,
        arrow: String,
        footerData: String,
        footerText: String,
        indicatorValue: String,
        indicatorLabel: String
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card h-100", _ctx.cardClasses]
      }, _attrs))}><div class="card-header flex-nowrap border-0 pt-9"><div class="card-title m-0"><div class="symbol symbol-45px w-45px bg-light me-5"><img${ssrRenderAttr("src", _ctx.icon)} alt="image" class="p-3"></div><a href="#" class="fs-4 fw-semibold text-hover-primary text-gray-600 m-0">${ssrInterpolate(_ctx.title)}</a></div><div class="card-toolbar m-0"><button type="button" class="btn btn-clean btn-sm btn-icon btn-icon-primary btn-active-light-primary me-n3" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-3 text-primary"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="card-body d-flex flex-column px-9 pt-6 pb-8"><div class="fs-2tx fw-bold mb-3">${ssrInterpolate(_ctx.content)}</div><div class="d-flex align-items-center flex-wrap mb-5 mt-auto fs-6">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": _ctx.arrow,
        "icon-class": `fs-3 me-1 text-${_ctx.color}`
      }, null, _parent));
      _push(`<div class="${ssrRenderClass([`text-${_ctx.color}`, "fw-bold me-2"])}">${ssrInterpolate(_ctx.footerData)}</div><div class="fw-semibold text-gray-500">${ssrInterpolate(_ctx.footerText)}</div></div><div class="d-flex align-items-center fw-semibold"><span class="badge bg-light text-gray-700 px-3 py-2 me-2">${ssrInterpolate(_ctx.indicatorValue)}</span><span class="text-gray-500 fs-7">${ssrInterpolate(_ctx.indicatorLabel)}</span></div></div></div>`);
    }
    const _sfc_setup$38 = _sfc_main$38.setup;
    _sfc_main$38.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/cards/Card2.vue");
      return _sfc_setup$38 ? _sfc_setup$38(props, ctx) : void 0;
    };
    const Card2 = /* @__PURE__ */ _export_sfc(_sfc_main$38, [["ssrRender", _sfc_ssrRender$2R]]);
    const __vite_glob_0_14 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Card2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$37 = vueExports$1.defineComponent({
      name: "card-3",
      components: {},
      props: {
        cardClasses: String,
        avatar: String,
        online: Boolean,
        initials: String,
        color: String,
        name: String,
        position: String,
        avgEarnings: String,
        totalSales: String,
        connected: Boolean
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "col-md-6 col-xxl-4" }, _attrs))}><div class="${ssrRenderClass([_ctx.cardClasses, "card"])}"><div class="card-body d-flex flex-center flex-column p-9">`);
      if (_ctx.avatar) {
        _push(`<div class="symbol symbol-65px symbol-circle mb-5"><img${ssrRenderAttr("src", _ctx.avatar)} alt="image">`);
        if (_ctx.online) {
          _push(`<div class="bg-success position-absolute rounded-circle translate-middle start-100 top-100 border border-4 border-white h-15px w-15px ms-n3 mt-n3"></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div>`);
      } else {
        _push(`<div class="symbol symbol-65px symbol-circle mb-5"><span class="${ssrRenderClass([`text-${_ctx.color} bg-light-${_ctx.color}`, "symbol-label fs-2x fw-semibold"])}">${ssrInterpolate(_ctx.initials)}</span>`);
        if (_ctx.online) {
          _push(`<div class="bg-success position-absolute rounded-circle translate-middle start-100 top-100 border border-4 border-white h-15px w-15px ms-n3 mt-n3"></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div>`);
      }
      _push(`<a href="#" class="fs-4 text-gray-800 text-hover-primary fw-bold mb-0">${ssrInterpolate(_ctx.name)}</a><div class="fw-semibold text-gray-400 mb-6">${ssrInterpolate(_ctx.position)}</div><div class="d-flex flex-center flex-wrap mb-5"><div class="border border-dashed rounded min-w-125px py-3 px-4 mx-3 mb-3"><div class="fs-6 fw-bold text-gray-700">${ssrInterpolate(_ctx.avgEarnings)}</div><div class="fw-semibold text-gray-500">Avg. Earnings</div></div><div class="border border-dashed rounded min-w-125px py-3 px-4 mx-3 mb-3"><div class="fs-6 fw-bold text-gray-700">${ssrInterpolate(_ctx.totalSales)}</div><div class="fw-semibold text-gray-500">Total Sales</div></div></div>`);
      if (_ctx.connected) {
        _push(`<a href="#" class="btn btn-sm btn-light-primary">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "check",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(` Connected </a>`);
      } else {
        _push(`<a href="#" class="btn btn-sm btn-light">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "plus",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(` Connect </a>`);
      }
      _push(`</div></div></div>`);
    }
    const _sfc_setup$37 = _sfc_main$37.setup;
    _sfc_main$37.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/cards/Card3.vue");
      return _sfc_setup$37 ? _sfc_setup$37(props, ctx) : void 0;
    };
    const Card3 = /* @__PURE__ */ _export_sfc(_sfc_main$37, [["ssrRender", _sfc_ssrRender$2Q]]);
    const __vite_glob_0_15 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Card3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$36 = vueExports$1.defineComponent({
      name: "card-4",
      components: {},
      props: {
        cardClasses: String,
        avatar: String,
        online: Boolean,
        initials: String,
        color: String,
        name: String,
        position: String,
        avgEarnings: String,
        totalSales: String
      },
      setup() {
        const openDrawer = () => {
          var _a2;
          (_a2 = DrawerComponent == null ? void 0 : DrawerComponent.getInstance("kt_drawer_chat")) == null ? void 0 : _a2.toggle();
        };
        return {
          openDrawer
        };
      }
    });
    function _sfc_ssrRender$2P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "col-md-6 col-xxl-4" }, _attrs))}><div class="card"><div class="card-body d-flex flex-center flex-column p-9"><div class="mb-5"><div class="symbol symbol-75px symbol-circle">`);
      if (_ctx.avatar) {
        _push(`<img${ssrRenderAttr("src", _ctx.avatar)} alt="">`);
      } else {
        _push(`<span class="${ssrRenderClass([`bg-light-${_ctx.color} text-${_ctx.color}`, "symbol-label fs-5 fw-bold"])}">${ssrInterpolate(_ctx.initials)}</span>`);
      }
      if (_ctx.online) {
        _push(`<div class="symbol-badge bg-success start-100 top-100 border-4 h-15px w-15px ms-n3 mt-n3"></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div><a href="#" class="fs-4 text-gray-800 text-hover-primary fw-bold mb-0">${ssrInterpolate(_ctx.name)}</a><div class="fw-semibold text-gray-400 mb-6">${ssrInterpolate(_ctx.position)}</div><div class="d-flex flex-center flex-wrap mb-5"><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 px-4 mx-3 mb-3"><div class="fs-6 fw-bold text-gray-700">${ssrInterpolate(_ctx.avgEarnings)}</div><div class="fw-semibold text-gray-500">Avg. Earnings</div></div><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 mx-3 px-4 mb-3"><div class="fs-6 fw-bold text-gray-700">${ssrInterpolate(_ctx.totalSales)}</div><div class="fw-semibold text-gray-500">Total Sales</div></div></div><button class="btn btn-sm btn-light-primary fw-bold" data-kt-drawer-toggle="true" data-kt-drawer-target="#kt_drawer_chat"> Send Message </button></div></div></div>`);
    }
    const _sfc_setup$36 = _sfc_main$36.setup;
    _sfc_main$36.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/cards/Card4.vue");
      return _sfc_setup$36 ? _sfc_setup$36(props, ctx) : void 0;
    };
    const Card4 = /* @__PURE__ */ _export_sfc(_sfc_main$36, [["ssrRender", _sfc_ssrRender$2P]]);
    const __vite_glob_0_16 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Card4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$35 = vueExports$1.defineComponent({
      name: "events-card",
      props: {
        cardClasses: String
      },
      components: {},
      setup() {
        const events2 = vueExports$1.ref([
          {
            event: 'Invoice <a href="#" class="fw-bold text-gray-900 text-hover-primary me-1">#LOP-45640</a> has been <span class="badge badge-light-danger">Declined</span>',
            date: "20 Dec 2021, 5:30 pm"
          },
          {
            event: 'Invoice <a href="#" class="fw-bold text-gray-900 text-hover-primary me-1">#DER-45645</a> status has changed from <span class="badge badge-light-info me-1">In Progress</span> to <span class="badge badge-light-primary">In Transit</span>',
            date: "24 Jun 2021, 5:20 pm"
          },
          {
            event: '<a href="#" class="text-gray-600 text-hover-primary me-1">Melody Macy</a> has made payment to <a href="#" class="fw-bold text-gray-900 text-hover-primary">#XRS-45670</a>',
            date: "05 May 2021, 11:05 am"
          },
          {
            event: 'Invoice <a href="#" class="fw-bold text-gray-900 text-hover-primary me-1">#KIO-45656</a> status has changed from <span class="badge badge-light-succees me-1">In Transit</span> to <span class="badge badge-light-success">Approved</span>',
            date: "20 Dec 2021, 6:43 am"
          },
          {
            event: '<a href="#" class="text-gray-600 text-hover-primary me-1">Max Smith</a> has made payment to <a href="#" class="fw-bold text-gray-900 text-hover-primary">#XRS-45670</a>',
            date: "10 Nov 2021, 9:23 pm"
          },
          {
            event: 'Invoice <a href="#" class="fw-bold text-gray-900 text-hover-primary me-1">#SEP-45656</a> status has changed from <span class="badge badge-light-warning me-1">Pending</span> to <span class="badge badge-light-info">In Progress</span>',
            date: "22 Sep 2021, 5:30 pm"
          },
          {
            event: '<a href="#" class="text-gray-600 text-hover-primary me-1">Emma Smith</a> has made payment to <a href="#" class="fw-bold text-gray-900 text-hover-primary">#SDK-45670</a>',
            date: "25 Jul 2021, 8:43 pm"
          },
          {
            event: '<a href="#" class="text-gray-600 text-hover-primary me-1">Melody Macy</a> has made payment to <a href="#" class="fw-bold text-gray-900 text-hover-primary">#XRS-45670</a>',
            date: "05 May 2021, 2:40 pm"
          },
          {
            event: '<a href="#" class="text-gray-600 text-hover-primary me-1">Emma Smith</a> has made payment to <a href="#" class="fw-bold text-gray-900 text-hover-primary">#OLP-45690</a>',
            date: "25 Oct 2021, 10:30 am"
          },
          {
            event: 'Invoice <a href="#" class="fw-bold text-gray-900 text-hover-primary me-1">#WER-45670</a> is <span class="badge badge-light-info">In Progress</span>',
            date: "10 Mar 2021, 9:23 pm"
          }
        ]);
        return {
          events: events2,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `card pt-4 ${_ctx.cardClasses}`
      }, _attrs))}><div class="card-header border-0"><div class="card-title"><h2>Events</h2></div><div class="card-toolbar"><button type="button" class="btn btn-sm btn-light-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cloud-change",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` Download Report </button></div></div><div class="card-body py-0"><table class="table align-middle table-row-dashed fs-6 text-gray-600 fw-semibold gy-5" id="kt_table_customers_events"><tbody><!--[-->`);
      ssrRenderList(_ctx.events, (event, i) => {
        _push(`<tr><td class="min-w-400px">${event.event ?? ""}</td><td class="pe-0 text-gray-600 text-end min-w-200px">${ssrInterpolate(event.date)}</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div>`);
    }
    const _sfc_setup$35 = _sfc_main$35.setup;
    _sfc_main$35.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/customers/cards/events-and-logs/Events.vue");
      return _sfc_setup$35 ? _sfc_setup$35(props, ctx) : void 0;
    };
    const Events$1 = /* @__PURE__ */ _export_sfc(_sfc_main$35, [["ssrRender", _sfc_ssrRender$2O]]);
    const __vite_glob_0_17 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Events$1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$34 = vueExports$1.defineComponent({
      name: "logs-card",
      components: {},
      props: {
        cardClasses: String
      },
      setup() {
        const logs = vueExports$1.ref([
          {
            code: "200 OK",
            color: "success",
            message: "POST /v1/invoices/in_5806_7068/payment",
            date: "10 Mar 2021, 11:05 am"
          },
          {
            code: "404 WRN",
            color: "warning",
            message: "POST /v1/customer/in_9092_7391/not_found",
            date: "15 Apr 2021, 6:43 am"
          },
          {
            code: "200 OK",
            color: "success",
            message: "POST /v1/invoices/in_9757_6897/payment",
            date: "15 Apr 2021, 6:43 am"
          },
          {
            code: "500 ERR",
            color: "danger",
            message: "POST /v1/invoice/c_6140090460c97/invalid",
            date: "10 Nov 2021, 2:40 pm"
          },
          {
            code: "200 OK",
            color: "success",
            message: "POST /v1/invoices/c_6140090460c99/payment",
            date: "05 May 2021, 10:10 pm"
          },
          {
            code: "500 ERR",
            color: "danger",
            message: "POST /v1/invoice/c_6140090460c97/invalid",
            date: "20 Dec 2021, 11:05 am"
          },
          {
            code: "200 OK",
            color: "success",
            message: "POST /v1/invoices/in_5806_7068/payment",
            date: "10 Mar 2021, 8:43 pm"
          },
          {
            code: "404 WRN",
            color: "warning",
            message: "POST /v1/customer/c_6140090460c99/not_found",
            date: "20 Dec 2021, 2:40 pm"
          },
          {
            code: "200 OK",
            color: "success",
            message: "POST /v1/invoices/c_6140090460c97/payment",
            date: "25 Oct 2021, 11:05 am"
          },
          {
            code: "404 WRN",
            color: "warning",
            message: "POST /v1/customer/in_8377_7366/not_found",
            date: "19 Aug 2021, 6:43 am"
          },
          {
            code: "200 OK",
            color: "success",
            message: "POST /v1/invoices/in_6370_5796/payment",
            date: "25 Oct 2021, 11:05 am"
          },
          {
            code: "500 ERR",
            color: "danger",
            message: "POST /v1/invoice/in_9092_7391/invalid",
            date: "20 Dec 2021, 11:05 am"
          }
        ]);
        return {
          logs,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `card pt-4 ${_ctx.cardClasses}`
      }, _attrs))}><div class="card-header border-0"><div class="card-title"><h2>Logs</h2></div><div class="card-toolbar"><button type="button" class="btn btn-sm btn-light-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cloud-change",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` Download Report </button></div></div><div class="card-body py-0"><div class="table-responsive"><table class="table align-middle table-row-dashed fw-semibold text-gray-600 fs-6 gy-5" id="kt_table_customers_logs"><tbody><!--[-->`);
      ssrRenderList(_ctx.logs, (log, i) => {
        _push(`<tr><td class="min-w-70px"><div class="${ssrRenderClass(`badge badge-light-${log.color}`)}">${ssrInterpolate(log.code)}</div></td><td>${ssrInterpolate(log.message)}</td><td class="pe-0 text-end min-w-200px">${ssrInterpolate(log.date)}</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$34 = _sfc_main$34.setup;
    _sfc_main$34.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/customers/cards/events-and-logs/Logs.vue");
      return _sfc_setup$34 ? _sfc_setup$34(props, ctx) : void 0;
    };
    const Logs = /* @__PURE__ */ _export_sfc(_sfc_main$34, [["ssrRender", _sfc_ssrRender$2N]]);
    const __vite_glob_0_18 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Logs
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$33 = vueExports$1.defineComponent({
      name: "credit-bilance",
      props: {
        cardClasses: String
      },
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `card pt-4 ${_ctx.cardClasses}`
      }, _attrs))}><div class="card-header border-0"><div class="card-title"><h2 class="fw-bold">Credit Balance</h2></div><div class="card-toolbar"><a href="#" class="btn btn-sm btn-flex btn-light-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_adjust_balance">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "pencil",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` Adjust Balance </a></div></div><div class="card-body pt-0"><div class="fw-bold fs-2"> $32,487.57 <span class="text-muted fs-4 fw-semibold">USD</span><div class="fs-7 fw-normal text-muted"> Balance will increase the amount due on the customer&#39;s next invoice. </div></div></div></div>`);
    }
    const _sfc_setup$33 = _sfc_main$33.setup;
    _sfc_main$33.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/customers/cards/overview/CreditBalance.vue");
      return _sfc_setup$33 ? _sfc_setup$33(props, ctx) : void 0;
    };
    const CreditBalance = /* @__PURE__ */ _export_sfc(_sfc_main$33, [["ssrRender", _sfc_ssrRender$2M]]);
    const __vite_glob_0_19 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CreditBalance
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$32 = vueExports$1.defineComponent({
      name: "invoices-card",
      props: {
        cardClasses: String
      },
      components: {
        Datatable: KTDatatable
      },
      setup() {
        const tableHeader = vueExports$1.ref([
          {
            columnName: "Order id",
            columnLabel: "order",
            sortEnabled: false
          },
          {
            columnName: "Amount",
            columnLabel: "amount",
            sortEnabled: false
          },
          {
            columnName: "Status",
            columnLabel: "status",
            sortingField: "status.label",
            sortEnabled: false
          },
          {
            columnName: "Date",
            columnLabel: "date",
            sortEnabled: false
          },
          {
            columnName: "Invoice",
            columnLabel: "invoice",
            sortEnabled: false
          }
        ]);
        const tableData1 = vueExports$1.ref([
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Sep 15, 2020",
            order: "312445984",
            details: "Iphone 12 Pro Mockup  Mega Bundle",
            color: "success",
            amount: "$5.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "May 30, 2020",
            order: "523445943",
            details: "Seller Fee",
            color: "danger",
            amount: "$-1.30",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Apr 22, 2020",
            order: "231445943",
            details: "Parcel Shipping / Delivery Service App",
            color: "success",
            amount: "$204.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        const tableData2 = vueExports$1.ref([
          {
            date: "May 30, 2020",
            order: "523445943",
            details: "Seller Fee",
            color: "danger",
            amount: "$-1.30",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Apr 22, 2020",
            order: "231445943",
            details: "Parcel Shipping / Delivery Service App",
            color: "success",
            amount: "$204.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Sep 15, 2020",
            order: "312445984",
            details: "Iphone 12 Pro Mockup  Mega Bundle",
            color: "success",
            amount: "$5.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        const tableData3 = vueExports$1.ref([
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Successful",
              state: "success"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Sep 15, 2020",
            order: "312445984",
            details: "Iphone 12 Pro Mockup  Mega Bundle",
            color: "success",
            amount: "$5.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "May 30, 2020",
            order: "523445943",
            details: "Seller Fee",
            color: "danger",
            amount: "$-1.30",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Apr 22, 2020",
            order: "231445943",
            details: "Parcel Shipping / Delivery Service App",
            color: "success",
            amount: "$204.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        const tableData4 = vueExports$1.ref([
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        return { tableHeader, tableData1, tableData2, tableData3, tableData4 };
      }
    });
    function _sfc_ssrRender$2L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_Datatable = vueExports$1.resolveComponent("Datatable");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `card pt-2 ${_ctx.cardClasses}`
      }, _attrs))}><div class="card-header border-0"><div class="card-title"><h2>Invoices</h2></div><div class="card-toolbar m-0"><ul class="nav nav-stretch fs-5 fw-semibold nav-line-tabs nav-line-tabs-2x border-transparent" role="tablist"><li class="nav-item" role="presentation"><a id="kt_referrals_year_tab" class="nav-link text-active-primary active" data-bs-toggle="tab" role="tab" href="#kt_customer_details_invoices_1"> This Year </a></li><li class="nav-item" role="presentation"><a id="kt_referrals_2019_tab" class="nav-link text-active-primary ms-3" data-bs-toggle="tab" role="tab" href="#kt_customer_details_invoices_2"> 2020 </a></li><li class="nav-item" role="presentation"><a id="kt_referrals_2018_tab" class="nav-link text-active-primary ms-3" data-bs-toggle="tab" role="tab" href="#kt_customer_details_invoices_3"> 2019 </a></li><li class="nav-item" role="presentation"><a id="kt_referrals_2017_tab" class="nav-link text-active-primary ms-3" data-bs-toggle="tab" role="tab" href="#kt_customer_details_invoices_4"> 2018 </a></li></ul></div></div><div class="card-body pt-0"><div id="kt_referred_users_tab_content" class="tab-content"><div id="kt_customer_details_invoices_1" class="py-0 tab-pane fade active show" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData1,
        "items-per-page": 5,
        "items-per-page-dropdown-enabled": false
      }, {
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`badge badge-light-${invoice.status.state}`)}"${_scopeId}>${ssrInterpolate(invoice.status.label)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `badge badge-light-${invoice.status.state}`
              }, vueExports$1.toDisplayString(invoice.status.label), 3)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_customer_details_invoices_2" class="py-0 tab-pane fade" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData2,
        "items-per-page": 5,
        "items-per-page-dropdown-enabled": false
      }, {
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`badge badge-light-${invoice.status.state}`)}"${_scopeId}>${ssrInterpolate(invoice.status.label)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `badge badge-light-${invoice.status.state}`
              }, vueExports$1.toDisplayString(invoice.status.label), 3)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_customer_details_invoices_3" class="py-0 tab-pane fade" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData3,
        "items-per-page": 5,
        "items-per-page-dropdown-enabled": false
      }, {
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`badge badge-light-${invoice.status.state}`)}"${_scopeId}>${ssrInterpolate(invoice.status.label)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `badge badge-light-${invoice.status.state}`
              }, vueExports$1.toDisplayString(invoice.status.label), 3)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_customer_details_invoices_4" class="py-0 tab-pane fade" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData4,
        "items-per-page": 5,
        "items-per-page-dropdown-enabled": false
      }, {
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`badge badge-light-${invoice.status.state}`)}"${_scopeId}>${ssrInterpolate(invoice.status.label)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `badge badge-light-${invoice.status.state}`
              }, vueExports$1.toDisplayString(invoice.status.label), 3)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div>`);
    }
    const _sfc_setup$32 = _sfc_main$32.setup;
    _sfc_main$32.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/customers/cards/overview/Invoices.vue");
      return _sfc_setup$32 ? _sfc_setup$32(props, ctx) : void 0;
    };
    const Invoices$1 = /* @__PURE__ */ _export_sfc(_sfc_main$32, [["ssrRender", _sfc_ssrRender$2L]]);
    const __vite_glob_0_20 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Invoices$1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$31 = vueExports$1.defineComponent({
      name: "payment-methods",
      props: {
        cardClasses: String
      },
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2K(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `card pt-4 ${_ctx.cardClasses}`
      }, _attrs))}><div class="card-header border-0"><div class="card-title"><h2 class="fw-bold mb-0">Payment Methods</h2></div><div class="card-toolbar"><a href="#" class="btn btn-sm btn-flex btn-light-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_new_card">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "plus-square",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` Add new method</a></div></div><div id="kt_customer_view_payment_method" class="card-body pt-0"><div class="py-0" data-kt-customer-payment-method="row"><div class="py-3 d-flex flex-stack flex-wrap"><div class="d-flex align-items-center collapsible rotate collapsed" data-bs-toggle="collapse" href="#kt_customer_view_payment_method_1" role="button" aria-expanded="false" aria-controls="kt_customer_view_payment_method_1"><div class="me-3 rotate-90">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "right",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</div><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/mastercard.svg"))} class="w-40px me-3" alt=""><div class="me-3"><div class="d-flex align-items-center"><div class="text-gray-800 fw-bold">Mastercard</div><div class="badge badge-light-primary ms-5">Primary</div></div><div class="text-muted">Expires Dec 2024</div></div></div><div class="d-flex my-3 ms-9"><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px me-3" data-bs-toggle="modal" data-bs-target="#kt_modal_new_card"><span data-bs-toggle="tooltip" data-bs-trigger="hover" title="" data-bs-original-title="Edit">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "pencil",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</span></a><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px me-3" data-bs-toggle="tooltip" title="" data-kt-customer-payment-method="delete" data-bs-original-title="Delete">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "trash",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px" data-bs-toggle="tooltip" title="" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-bs-original-title="More Options">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "switch",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a><div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold w-150px py-3" data-kt-menu="true"><div class="menu-item px-3"><a href="#" class="menu-link px-3" data-kt-payment-mehtod-action="set_as_primary">Set as Primary</a></div></div></div></div><div id="kt_customer_view_payment_method_1" class="fs-6 ps-10 collapse" data-bs-parent="#kt_customer_view_payment_method" style="${ssrRenderStyle({})}"><div class="d-flex flex-wrap py-5"><div class="flex-equal me-5"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px">Name</td><td class="text-gray-800">Emma Smith</td></tr><tr><td class="text-muted min-w-125px w-125px">Number</td><td class="text-gray-800">**** 9916</td></tr><tr><td class="text-muted min-w-125px w-125px">Expires</td><td class="text-gray-800">12/2024</td></tr><tr><td class="text-muted min-w-125px w-125px">Type</td><td class="text-gray-800">Mastercard credit card</td></tr><tr><td class="text-muted min-w-125px w-125px">Issuer</td><td class="text-gray-800">VICBANK</td></tr><tr><td class="text-muted min-w-125px w-125px">ID</td><td class="text-gray-800">id_4325df90sdf8</td></tr></tbody></table></div><div class="flex-equal"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px"> Billing address </td><td class="text-gray-800">AU</td></tr><tr><td class="text-muted min-w-125px w-125px">Phone</td><td class="text-gray-800">No phone provided</td></tr><tr><td class="text-muted min-w-125px w-125px">Email</td><td class="text-gray-800"><a href="#" class="text-gray-900 text-hover-primary">e.smith@kpmg.com.au</a></td></tr><tr><td class="text-muted min-w-125px w-125px">Origin</td><td class="text-gray-800"> Australia <div class="symbol symbol-20px symbol-circle ms-2"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/australia.svg"))}></div></td></tr><tr><td class="text-muted min-w-125px w-125px">CVC check</td><td class="text-gray-800"> Passed `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "check-circle",
        "icon-class": "fs-2 text-success"
      }, null, _parent));
      _push(`</td></tr></tbody></table></div></div></div></div><div class="separator separator-dashed"></div><div class="py-0" data-kt-customer-payment-method="row"><div class="py-3 d-flex flex-stack flex-wrap"><div class="d-flex align-items-center collapsible rotate collapsed" data-bs-toggle="collapse" href="#kt_customer_view_payment_method_2" role="button" aria-expanded="false" aria-controls="kt_customer_view_payment_method_2"><div class="me-3 rotate-90">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "right",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</div><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/visa.svg"))} class="w-40px me-3" alt=""><div class="me-3"><div class="d-flex align-items-center"><div class="text-gray-800 fw-bold">Visa</div></div><div class="text-muted">Expires Feb 2022</div></div></div><div class="d-flex my-3 ms-9"><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px me-3" data-bs-toggle="modal" data-bs-target="#kt_modal_new_card"><span data-bs-toggle="tooltip" data-bs-trigger="hover" title="" data-bs-original-title="Edit">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "pencil",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</span></a><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px me-3" data-bs-toggle="tooltip" title="" data-kt-customer-payment-method="delete" data-bs-original-title="Delete">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "trash",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px" data-bs-toggle="tooltip" title="" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-bs-original-title="More Options">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "switch",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a><div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold w-150px py-3" data-kt-menu="true"><div class="menu-item px-3"><a href="#" class="menu-link px-3" data-kt-payment-mehtod-action="set_as_primary">Set as Primary</a></div></div></div></div><div id="kt_customer_view_payment_method_2" class="fs-6 ps-10 collapse" data-bs-parent="#kt_customer_view_payment_method" style="${ssrRenderStyle({})}"><div class="d-flex flex-wrap py-5"><div class="flex-equal me-5"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px">Name</td><td class="text-gray-800">Melody Macy</td></tr><tr><td class="text-muted min-w-125px w-125px">Number</td><td class="text-gray-800">**** 5459</td></tr><tr><td class="text-muted min-w-125px w-125px">Expires</td><td class="text-gray-800">02/2022</td></tr><tr><td class="text-muted min-w-125px w-125px">Type</td><td class="text-gray-800">Visa credit card</td></tr><tr><td class="text-muted min-w-125px w-125px">Issuer</td><td class="text-gray-800">ENBANK</td></tr><tr><td class="text-muted min-w-125px w-125px">ID</td><td class="text-gray-800">id_w2r84jdy723</td></tr></tbody></table></div><div class="flex-equal"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px"> Billing address </td><td class="text-gray-800">UK</td></tr><tr><td class="text-muted min-w-125px w-125px">Phone</td><td class="text-gray-800">No phone provided</td></tr><tr><td class="text-muted min-w-125px w-125px">Email</td><td class="text-gray-800"><a href="#" class="text-gray-900 text-hover-primary">melody@altbox.com</a></td></tr><tr><td class="text-muted min-w-125px w-125px">Origin</td><td class="text-gray-800"> United Kingdom <div class="symbol symbol-20px symbol-circle ms-2"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/united-kingdom.svg"))}></div></td></tr><tr><td class="text-muted min-w-125px w-125px">CVC check</td><td class="text-gray-800"> Passed `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "check",
        "icon-class": "fs-2 text-success"
      }, null, _parent));
      _push(`</td></tr></tbody></table></div></div></div></div><div class="separator separator-dashed"></div><div class="py-0" data-kt-customer-payment-method="row"><div class="py-3 d-flex flex-stack flex-wrap"><div class="d-flex align-items-center collapsible collapsed rotate" data-bs-toggle="collapse" href="#kt_customer_view_payment_method_3" role="button" aria-expanded="false" aria-controls="kt_customer_view_payment_method_3"><div class="me-3 rotate-90">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "right",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</div><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/american-express.svg"))} class="w-40px me-3" alt=""><div class="me-3"><div class="d-flex align-items-center"><div class="text-gray-800 fw-bold">American Express</div><div class="badge badge-light-danger ms-5">Expired</div></div><div class="text-muted">Expires Aug 2021</div></div></div><div class="d-flex my-3 ms-9"><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px me-3" data-bs-toggle="modal" data-bs-target="#kt_modal_new_card"><span data-bs-toggle="tooltip" data-bs-trigger="hover" title="" data-bs-original-title="Edit">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "pencil",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</span></a><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px me-3" data-bs-toggle="tooltip" title="" data-kt-customer-payment-method="delete" data-bs-original-title="Delete">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "trash",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px" data-bs-toggle="tooltip" title="" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-bs-original-title="More Options">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "switch",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a><div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold w-150px py-3" data-kt-menu="true"><div class="menu-item px-3"><a href="#" class="menu-link px-3" data-kt-payment-mehtod-action="set_as_primary">Set as Primary</a></div></div></div></div><div id="kt_customer_view_payment_method_3" class="collapse fs-6 ps-10" data-bs-parent="#kt_customer_view_payment_method"><div class="d-flex flex-wrap py-5"><div class="flex-equal me-5"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px">Name</td><td class="text-gray-800">Max Smith</td></tr><tr><td class="text-muted min-w-125px w-125px">Number</td><td class="text-gray-800">**** 5029</td></tr><tr><td class="text-muted min-w-125px w-125px">Expires</td><td class="text-gray-800">08/2021</td></tr><tr><td class="text-muted min-w-125px w-125px">Type</td><td class="text-gray-800">American express credit card</td></tr><tr><td class="text-muted min-w-125px w-125px">Issuer</td><td class="text-gray-800">USABANK</td></tr><tr><td class="text-muted min-w-125px w-125px">ID</td><td class="text-gray-800">id_89457jcje63</td></tr></tbody></table></div><div class="flex-equal"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px"> Billing address </td><td class="text-gray-800">US</td></tr><tr><td class="text-muted min-w-125px w-125px">Phone</td><td class="text-gray-800">No phone provided</td></tr><tr><td class="text-muted min-w-125px w-125px">Email</td><td class="text-gray-800"><a href="#" class="text-gray-900 text-hover-primary">max@kt.com</a></td></tr><tr><td class="text-muted min-w-125px w-125px">Origin</td><td class="text-gray-800"> United States of America <div class="symbol symbol-20px symbol-circle ms-2"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/united-states.svg"))}></div></td></tr><tr><td class="text-muted min-w-125px w-125px">CVC check</td><td class="text-gray-800"> Failed `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-2 text-danger"
      }, null, _parent));
      _push(`</td></tr></tbody></table></div></div></div></div></div></div>`);
    }
    const _sfc_setup$31 = _sfc_main$31.setup;
    _sfc_main$31.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/customers/cards/overview/PaymentMethods.vue");
      return _sfc_setup$31 ? _sfc_setup$31(props, ctx) : void 0;
    };
    const PaymentMethods = /* @__PURE__ */ _export_sfc(_sfc_main$31, [["ssrRender", _sfc_ssrRender$2K]]);
    const __vite_glob_0_21 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: PaymentMethods
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$30 = vueExports$1.defineComponent({
      name: "payment-records",
      props: {
        cardClasses: String
      },
      components: {
        Datatable: KTDatatable
      },
      setup() {
        const tableHeader = vueExports$1.ref([
          {
            columnName: "Invoice No.",
            columnLabel: "invoice",
            sortEnabled: false
          },
          {
            columnName: "Status",
            columnLabel: "status",
            sortingField: "status.label",
            sortEnabled: false
          },
          {
            columnName: "Amount",
            columnLabel: "amount",
            sortEnabled: false
          },
          {
            columnName: "Date",
            columnLabel: "date",
            sortEnabled: false
          },
          {
            columnName: "Actions",
            columnLabel: "actions",
            sortEnabled: false
          }
        ]);
        const tableData = vueExports$1.ref([
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Payment for invoice",
            amount: "$880.00",
            status: {
              label: "Pending",
              state: "warning"
            },
            date: "21 Oct 2020, 5:54 pm"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Monthly utilites",
            amount: "$7,650.00",
            status: {
              label: "Successful",
              state: "success"
            },
            date: "19 Oct 2020, 7:32 am"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Payment for invoice",
            amount: "$375.00",
            status: {
              label: "Successful",
              state: "success"
            },
            date: "23 Sep 2020, 12:38 am"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Hosting Fees",
            amount: "$129.00",
            status: {
              label: "Successful",
              state: "success"
            },
            date: "11 Sep 2020, 3:18 pm"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Marketing automation",
            amount: "$450.00",
            status: {
              label: "Rejected",
              state: "danger"
            },
            date: "03 Sep 2020, 1:08 am"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Sales injection",
            amount: "$8,700.00",
            status: {
              label: "Pending",
              state: "warning"
            },
            date: "01 Sep 2020, 4:58 pm"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Payment for invoice",
            amount: "$1,200.00",
            status: {
              label: "Successful",
              state: "success"
            },
            date: "14 Dec 2020, 8:43 pm"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Google cloud subscription",
            amount: "$79.00",
            status: {
              label: "Successful",
              state: "success"
            },
            date: "01 Dec 2020, 10:12 am"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Capital investment",
            amount: "$5,500.00",
            status: {
              label: "Successful",
              state: "success"
            },
            date: "12 Nov 2020, 2:01 pm"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Payment for invoice",
            amount: "$880.00",
            status: {
              label: "Pending",
              state: "warning"
            },
            date: "21 Oct 2020, 5:54 pm"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Monthly utilites",
            amount: "$7,650.00",
            status: {
              label: "Successful",
              state: "success"
            },
            date: "19 Oct 2020, 7:32 am"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Payment for invoice",
            amount: "$375.00",
            status: {
              label: "Successful",
              state: "success"
            },
            date: "23 Sep 2020, 12:38 am"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Hosting Fees",
            amount: "$129.00",
            status: {
              label: "Successful",
              state: "success"
            },
            date: "11 Sep 2020, 3:18 pm"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Marketing automation",
            amount: "$450.00",
            status: {
              label: "Rejected",
              state: "danger"
            },
            date: "03 Sep 2020, 1:08 am"
          },
          {
            invoice: Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3) + "-" + Math.floor(Math.random() * (9999 - 1e3 + 1) + 1e3),
            description: "Sales injection",
            amount: "$8,700.00",
            status: {
              label: "Pending",
              state: "warning"
            },
            date: "01 Sep 2020, 4:58 pm"
          }
        ]);
        const deleteRecord = (invoice) => {
          for (let i = 0; i < tableData.value.length; i++) {
            if (tableData.value[i].invoice === invoice) {
              tableData.value.splice(i, 1);
            }
          }
        };
        return { tableHeader, tableData, deleteRecord, getAssetPath };
      }
    });
    function _sfc_ssrRender$2J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Datatable = vueExports$1.resolveComponent("Datatable");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `card pt-4 ${_ctx.cardClasses}`
      }, _attrs))}><div class="card-header border-0"><div class="card-title"><h2>Payment Records</h2></div><div class="card-toolbar"><button type="button" class="btn btn-sm btn-flex btn-light-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_add_payment">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "plus-square",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` Add payment </button></div></div><div class="card-body pt-0 pb-5">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData,
        "items-per-page": 5,
        "items-per-page-dropdown-enabled": false
      }, {
        invoice: vueExports$1.withCtx(({ row: payment }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(payment.invoice)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(payment.invoice), 1)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: payment }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`badge badge-light-${payment.status.state}`)}"${_scopeId}>${ssrInterpolate(payment.status.label)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `badge badge-light-${payment.status.state}`
              }, vueExports$1.toDisplayString(payment.status.label), 3)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: payment }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(payment.amount)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(payment.amount), 1)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: payment }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(payment.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(payment.date), 1)
            ];
          }
        }),
        actions: vueExports$1.withCtx(({ row: payment }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<a href="#" class="btn btn-sm btn-light btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end"${_scopeId}>Actions `);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "down",
              "icon-class": "fs-5 m-0"
            }, null, _parent2, _scopeId));
            _push2(`</a><div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4" data-kt-menu="true"${_scopeId}><div class="menu-item px-3"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_router_link, {
              to: "/apps/customers/customer-details",
              class: "menu-link px-3"
            }, {
              default: vueExports$1.withCtx((_, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`View`);
                } else {
                  return [
                    vueExports$1.createTextVNode("View")
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</div><div class="menu-item px-3"${_scopeId}><a class="menu-link px-3"${_scopeId}>Delete</a></div></div>`);
          } else {
            return [
              vueExports$1.createVNode("a", {
                href: "#",
                class: "btn btn-sm btn-light btn-active-light-primary",
                "data-kt-menu-trigger": "click",
                "data-kt-menu-placement": "bottom-end",
                "data-kt-menu-flip": "top-end"
              }, [
                vueExports$1.createTextVNode("Actions "),
                vueExports$1.createVNode(_component_KTIcon, {
                  "icon-name": "down",
                  "icon-class": "fs-5 m-0"
                })
              ]),
              vueExports$1.createVNode("div", {
                class: "menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4",
                "data-kt-menu": "true"
              }, [
                vueExports$1.createVNode("div", { class: "menu-item px-3" }, [
                  vueExports$1.createVNode(_component_router_link, {
                    to: "/apps/customers/customer-details",
                    class: "menu-link px-3"
                  }, {
                    default: vueExports$1.withCtx(() => [
                      vueExports$1.createTextVNode("View")
                    ]),
                    _: 1
                  })
                ]),
                vueExports$1.createVNode("div", { class: "menu-item px-3" }, [
                  vueExports$1.createVNode("a", {
                    onClick: ($event) => _ctx.deleteRecord(payment.invoice),
                    class: "menu-link px-3"
                  }, "Delete", 8, ["onClick"])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$30 = _sfc_main$30.setup;
    _sfc_main$30.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/customers/cards/overview/PaymentRecords.vue");
      return _sfc_setup$30 ? _sfc_setup$30(props, ctx) : void 0;
    };
    const PaymentRecords = /* @__PURE__ */ _export_sfc(_sfc_main$30, [["ssrRender", _sfc_ssrRender$2J]]);
    const __vite_glob_0_22 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: PaymentRecords
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2$ = vueExports$1.defineComponent({
      name: "earnings-card",
      props: {
        cardClasses: String
      },
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `card ${_ctx.cardClasses}`
      }, _attrs))}><div class="card-header border-0"><div class="card-title"><h2>Earnings</h2></div></div><div class="card-body py-0"><div class="fs-5 fw-semibold text-gray-500 mb-4"> Last 30 day earnings calculated. Apart from arranging the order of topics. </div><div class="d-flex flex-wrap flex-stack mb-5"><div class="d-flex flex-wrap"><div class="border border-dashed border-gray-300 w-150px rounded my-3 p-4 me-6"><span class="fs-1 fw-bold text-gray-800 lh-1"><span data-kt-countup="true" data-kt-countup-value="6,840" data-kt-countup-prefix="$">6,840$</span>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-1 text-success"
      }, null, _parent));
      _push(`</span><span class="fs-6 fw-semibold text-muted d-block lh-1 pt-2">Net Earnings</span></div><div class="border border-dashed border-gray-300 w-125px rounded my-3 p-4 me-6"><span class="fs-1 fw-bold text-gray-800 lh-1"><span class="" data-kt-countup="true" data-kt-countup-value="16">16</span>% `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-down",
        "icon-class": "fs-1 text-danger"
      }, null, _parent));
      _push(`</span><span class="fs-6 fw-semibold text-muted d-block lh-1 pt-2">Change</span></div><div class="border border-dashed border-gray-300 w-150px rounded my-3 p-4 me-6"><span class="fs-1 fw-bold text-gray-800 lh-1"><span data-kt-countup="true" data-kt-countup-value="1,240" data-kt-countup-prefix="$">1,240$</span><span class="text-primary">--</span></span><span class="fs-6 fw-semibold text-muted d-block lh-1 pt-2">Fees</span></div></div><a href="#" class="btn btn-sm btn-light-primary flex-shrink-0">Withdraw Earnings</a></div></div></div>`);
    }
    const _sfc_setup$2$ = _sfc_main$2$.setup;
    _sfc_main$2$.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/customers/cards/statments/Earnings.vue");
      return _sfc_setup$2$ ? _sfc_setup$2$(props, ctx) : void 0;
    };
    const Earnings = /* @__PURE__ */ _export_sfc(_sfc_main$2$, [["ssrRender", _sfc_ssrRender$2I]]);
    const __vite_glob_0_23 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Earnings
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2_ = vueExports$1.defineComponent({
      name: "statement-card",
      props: {
        cardClasses: String
      },
      components: {
        Datatable: KTDatatable
      },
      setup() {
        const tableHeader = vueExports$1.ref([
          {
            columnName: "Date",
            columnLabel: "date",
            sortEnabled: true
          },
          {
            columnName: "Order id",
            columnLabel: "order",
            sortEnabled: true
          },
          {
            columnName: "Details",
            columnLabel: "details",
            sortEnabled: true
          },
          {
            columnName: "Amount",
            columnLabel: "amount",
            sortEnabled: true
          },
          {
            columnName: "Invoice",
            columnLabel: "invoice",
            sortEnabled: false
          }
        ]);
        const tableData1 = vueExports$1.ref([
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Sep 15, 2020",
            order: "312445984",
            details: "Iphone 12 Pro Mockup  Mega Bundle",
            color: "success",
            amount: "$5.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "May 30, 2020",
            order: "523445943",
            details: "Seller Fee",
            color: "danger",
            amount: "$-1.30",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Apr 22, 2020",
            order: "231445943",
            details: "Parcel Shipping / Delivery Service App",
            color: "success",
            amount: "$204.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        const tableData2 = vueExports$1.ref([
          {
            date: "May 30, 2020",
            order: "523445943",
            details: "Seller Fee",
            color: "danger",
            amount: "$-1.30",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Apr 22, 2020",
            order: "231445943",
            details: "Parcel Shipping / Delivery Service App",
            color: "success",
            amount: "$204.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Sep 15, 2020",
            order: "312445984",
            details: "Iphone 12 Pro Mockup  Mega Bundle",
            color: "success",
            amount: "$5.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        const tableData3 = vueExports$1.ref([
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Sep 15, 2020",
            order: "312445984",
            details: "Iphone 12 Pro Mockup  Mega Bundle",
            color: "success",
            amount: "$5.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "May 30, 2020",
            order: "523445943",
            details: "Seller Fee",
            color: "danger",
            amount: "$-1.30",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Apr 22, 2020",
            order: "231445943",
            details: "Parcel Shipping / Delivery Service App",
            color: "success",
            amount: "$204.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        const tableData4 = vueExports$1.ref([
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        return { tableHeader, tableData1, tableData2, tableData3, tableData4 };
      }
    });
    function _sfc_ssrRender$2H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_Datatable = vueExports$1.resolveComponent("Datatable");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `card ${_ctx.cardClasses}`
      }, _attrs))}><div class="card-header"><div class="card-title"><h2>Statement</h2></div><div class="card-toolbar"><ul class="nav nav-stretch fs-5 fw-semibold nav-line-tabs nav-line-tabs-2x border-transparent" role="tablist"><li class="nav-item" role="presentation"><a class="nav-link text-active-primary active" data-bs-toggle="tab" role="tab" href="#kt_customer_view_statement_1"> This Year </a></li><li class="nav-item" role="presentation"><a class="nav-link text-active-primary ms-3" data-bs-toggle="tab" role="tab" href="#kt_customer_view_statement_2"> 2020 </a></li><li class="nav-item" role="presentation"><a class="nav-link text-active-primary ms-3" data-bs-toggle="tab" role="tab" href="#kt_customer_view_statement_3"> 2019 </a></li><li class="nav-item" role="presentation"><a class="nav-link text-active-primary ms-3" data-bs-toggle="tab" role="tab" href="#kt_customer_view_statement_4"> 2018 </a></li></ul></div></div><div class="card-body pb-5"><div id="kt_customer_view_statement_tab_content" class="tab-content"><div id="kt_customer_view_statement_1" class="py-0 tab-pane fade active show" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData1,
        "items-per-page": 10,
        "items-per-page-dropdown-enabled": false
      }, {
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        details: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.details)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.details), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_customer_view_statement_2" class="py-0 tab-pane fade" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData2,
        "items-per-page": 10,
        "items-per-page-dropdown-enabled": false
      }, {
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        details: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.details)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.details), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_customer_view_statement_3" class="py-0 tab-pane fade" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData3,
        "items-per-page": 10,
        "items-per-page-dropdown-enabled": false
      }, {
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        details: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.details)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.details), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_customer_view_statement_4" class="py-0 tab-pane fade" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData4,
        "items-per-page": 10,
        "items-per-page-dropdown-enabled": false
      }, {
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        details: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.details)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.details), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div>`);
    }
    const _sfc_setup$2_ = _sfc_main$2_.setup;
    _sfc_main$2_.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/customers/cards/statments/Statement.vue");
      return _sfc_setup$2_ ? _sfc_setup$2_(props, ctx) : void 0;
    };
    const Statement = /* @__PURE__ */ _export_sfc(_sfc_main$2_, [["ssrRender", _sfc_ssrRender$2H]]);
    const __vite_glob_0_24 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Statement
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2Z = vueExports$1.defineComponent({
      name: "default-dashboard-widget-1",
      components: {},
      props: {
        className: { type: String, required: false },
        bgColor: { type: String, required: false, default: "#080655" },
        bgImage: { type: String, required: false },
        description: { type: String, required: true }
      }
    });
    function _sfc_ssrRender$2G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush bgi-no-repeat bgi-size-contain bgi-position-x-end", _ctx.className],
        style: { backgroundColor: _ctx.bgColor, backgroundImage: `url('${_ctx.bgImage}')` }
      }, _attrs))}><div class="card-header pt-5"><div class="card-title d-flex flex-column"><span class="fs-2hx fw-bold text-white me-2 lh-1 ls-n2">69</span><span class="text-white opacity-50 pt-1 fw-semibold fs-6">${ssrInterpolate(_ctx.description)}</span></div></div><div class="card-body d-flex align-items-end pt-0"><div class="d-flex align-items-center flex-column mt-3 w-100"><div class="d-flex justify-content-between fw-bold fs-6 text-white opacity-50 w-100 mt-auto mb-2"><span>43 Pending</span><span>72%</span></div><div class="h-8px mx-3 w-100 bg-white bg-opacity-50 rounded"><div class="bg-white rounded h-8px" role="progressbar" style="${ssrRenderStyle({ "width": "72%" })}" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div></div></div></div></div>`);
    }
    const _sfc_setup$2Z = _sfc_main$2Z.setup;
    _sfc_main$2Z.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget1.vue");
      return _sfc_setup$2Z ? _sfc_setup$2Z(props, ctx) : void 0;
    };
    const Widget1 = /* @__PURE__ */ _export_sfc(_sfc_main$2Z, [["ssrRender", _sfc_ssrRender$2G]]);
    const __vite_glob_0_25 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2Y = vueExports$1.defineComponent({
      name: "default-dashboard-widget-10",
      components: {},
      props: {
        className: { type: String, required: false }
      },
      setup() {
        const table = [
          {
            img: getAssetPath("media/stock/600x600/img-49.jpg"),
            title: "Mivy App",
            name: "Jane Cooper",
            price: "32,400",
            statistics: "9.2",
            icon: true,
            chartColor: "success",
            status: {
              label: "In Process",
              state: "primary"
            }
          },
          {
            img: getAssetPath("media/stock/600x600/img-40.jpg"),
            title: "Avionica",
            name: "Esther Howard",
            price: "256,910",
            statistics: "0.4",
            icon: false,
            chartColor: "danger",
            status: {
              label: "On Hold",
              state: "warning"
            }
          },
          {
            img: getAssetPath("media/stock/600x600/img-39.jpg"),
            title: "Charto CRM",
            name: "Jenny Wilson",
            price: "8,220",
            statistics: "9.2",
            icon: true,
            chartColor: "success",
            status: {
              label: "In Process",
              state: "primary"
            }
          },
          {
            img: getAssetPath("media/stock/600x600/img-47.jpg"),
            title: "Tower Hill",
            name: "Cody Fisher",
            price: "74,000",
            statistics: "9.2",
            icon: true,
            chartColor: "success",
            status: {
              label: "Completed",
              state: "success"
            }
          },
          {
            img: getAssetPath("media/stock/600x600/img-48.jpg"),
            title: "9 Degree",
            name: "Savannah Nguyen",
            price: "183,300",
            statistics: "0.4",
            icon: false,
            chartColor: "danger",
            status: {
              label: "In Process",
              state: "primary"
            }
          }
        ];
        return {
          table,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush", _ctx.className]
      }, _attrs))}><div class="card-header pt-7"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold text-gray-800">Projects Stats</span><span class="text-gray-500 mt-1 fw-semibold fs-6">Updated 37 minutes ago</span></h3><div class="card-toolbar"><a href="#" class="btn btn-sm btn-light">History</a></div></div><div class="card-body pt-6"><div class="table-responsive"><table class="table table-row-dashed align-middle gs-0 gy-3 my-0"><thead><tr class="fs-7 fw-bold text-gray-500 border-bottom-0"><th class="p-0 pb-3 min-w-175px text-start">ITEM</th><th class="p-0 pb-3 min-w-100px text-end">BUDGET</th><th class="p-0 pb-3 min-w-100px text-end">PROGRESS</th><th class="p-0 pb-3 min-w-175px text-end pe-12">STATUS</th><th class="p-0 pb-3 w-50px text-end">VIEW</th></tr></thead><tbody><!--[-->`);
      ssrRenderList(_ctx.table, (row, i) => {
        _push(`<tr><td><div class="d-flex align-items-center"><div class="symbol symbol-50px me-3"><img${ssrRenderAttr("src", row.img)} class="" alt=""></div><div class="d-flex justify-content-start flex-column"><a href="#" class="text-gray-800 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(row.title)}</a><span class="text-gray-500 fw-semibold d-block fs-7">${ssrInterpolate(row.name)}</span></div></div></td><td class="text-end pe-0"><span class="text-gray-600 fw-bold fs-6">$ ${ssrInterpolate(row.price)}</span></td><td class="text-end pe-0">`);
        if (row.icon) {
          _push(`<span class="badge badge-light-success fs-base">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "arrow-up",
            "icon-class": "fs-5 text-success ms-n1"
          }, null, _parent));
          _push(` ${ssrInterpolate(row.statistics)} % </span>`);
        } else {
          _push(`<span class="badge badge-light-danger fs-base">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "arrow-down",
            "icon-class": "fs-5 text-danger ms-n1"
          }, null, _parent));
          _push(` ${ssrInterpolate(row.statistics)} % </span>`);
        }
        _push(`</td><td class="text-end pe-12"><span class="${ssrRenderClass(`badge py-3 px-4 fs-7 badge-light-${row.status.state}`)}">${ssrInterpolate(row.status.label)}</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary w-30px h-30px">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "black-right",
          "icon-class": "fs-5 text-gray-700"
        }, null, _parent));
        _push(`</a></td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$2Y = _sfc_main$2Y.setup;
    _sfc_main$2Y.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget10.vue");
      return _sfc_setup$2Y ? _sfc_setup$2Y(props, ctx) : void 0;
    };
    const Widget10 = /* @__PURE__ */ _export_sfc(_sfc_main$2Y, [["ssrRender", _sfc_ssrRender$2F]]);
    const __vite_glob_0_26 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget10
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2X = vueExports$1.defineComponent({
      name: "default-dashboard-widget-3",
      components: {},
      props: {
        stats: { type: String, required: true },
        description: { type: String, required: true },
        className: { type: String, required: false }
      },
      setup() {
        const profiles = [
          {
            name: "Alan Warden",
            initials: "A",
            state: "warning"
          },
          {
            name: "Michael Eberon",
            src: getAssetPath("media/avatars/300-11.jpg")
          },
          {
            name: "Susan Redwood",
            initials: "S",
            state: "primary"
          },
          {
            name: "Melody Macy",
            src: getAssetPath("media/avatars/300-2.jpg")
          },
          {
            name: "Perry Matthew",
            initials: "P",
            state: "danger"
          },
          {
            name: "Barry Walter",
            src: getAssetPath("media/avatars/300-12.jpg")
          }
        ];
        return {
          profiles,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush", _ctx.className]
      }, _attrs))}><div class="card-header pt-5"><div class="card-title d-flex flex-column"><span class="fs-2hx fw-bold text-gray-900 me-2 lh-1 ls-n2">${ssrInterpolate(_ctx.stats)}</span><span class="text-gray-500 pt-1 fw-semibold fs-6">${ssrInterpolate(_ctx.description)}</span></div></div><div class="card-body d-flex flex-column justify-content-end pe-0"><span class="fs-6 fw-bolder text-gray-800 d-block mb-2">Today’s Heroes</span><div class="symbol-group symbol-hover flex-nowrap"><!--[-->`);
      ssrRenderList(_ctx.profiles, (item, i) => {
        _push(`<div class="symbol symbol-35px symbol-circle" data-bs-toggle="tooltip"${ssrRenderAttr("title", item.name)}>`);
        if (item.src) {
          _push(`<img alt="Pic"${ssrRenderAttr("src", item.src)}>`);
        } else {
          _push(`<span class="${ssrRenderClass([`bg-${item.state} text-inverse-${item.state}`, "symbol-label fw-bold"])}">${ssrInterpolate(item.initials)}</span>`);
        }
        _push(`</div>`);
      });
      _push(`<!--]--><a href="#" class="symbol symbol-35px symbol-circle" data-bs-toggle="modal" data-bs-target="#kt_modal_view_users"><span class="symbol-label bg-dark text-gray-300 fs-8 fw-bold">+42</span></a></div></div></div>`);
    }
    const _sfc_setup$2X = _sfc_main$2X.setup;
    _sfc_main$2X.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget2.vue");
      return _sfc_setup$2X ? _sfc_setup$2X(props, ctx) : void 0;
    };
    const Widget2 = /* @__PURE__ */ _export_sfc(_sfc_main$2X, [["ssrRender", _sfc_ssrRender$2E]]);
    const __vite_glob_0_27 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2W = vueExports$1.defineComponent({
      name: "default-dashboard-widget-2",
      components: {},
      props: {
        className: { type: String, required: false },
        chartSize: { type: Number, required: true }
      },
      setup(props, { expose }) {
        const initChart = () => {
          expose();
          var el = document.getElementById("kt_card_widget_17_chart");
          if (!el) {
            return;
          }
          var options = {
            size: el.getAttribute("data-kt-size") ? parseInt(el.getAttribute("data-kt-size")) : 70,
            lineWidth: el.getAttribute("data-kt-line") ? parseInt(el.getAttribute("data-kt-line")) : 11,
            rotate: el.getAttribute("data-kt-rotate") ? parseInt(el.getAttribute("data-kt-rotate")) : 145
            //percent:  el.getAttribute('data-kt-percent') ,
          };
          var canvas = document.createElement("canvas");
          var span = document.createElement("span");
          var ctx = canvas.getContext("2d");
          canvas.width = canvas.height = options.size;
          el.appendChild(span);
          el.appendChild(canvas);
          ctx.translate(options.size / 2, options.size / 2);
          ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);
          var radius = (options.size - options.lineWidth) / 2;
          var drawCircle = function(color, lineWidth, percent) {
            percent = Math.min(Math.max(0, percent || 1), 1);
            ctx.beginPath();
            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);
            ctx.strokeStyle = color;
            ctx.lineCap = "round";
            ctx.lineWidth = lineWidth;
            ctx.stroke();
          };
          drawCircle("#E4E6EF", options.lineWidth, 100 / 100);
          drawCircle(
            getCSSVariableValue("--bs-primary"),
            options.lineWidth,
            100 / 150
          );
          drawCircle(
            getCSSVariableValue("--bs-success"),
            options.lineWidth,
            100 / 250
          );
        };
        vueExports$1.onMounted(() => {
          initChart();
        });
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush", _ctx.className]
      }, _attrs))}><div class="card-header pt-5"><div class="card-title d-flex flex-column"><div class="d-flex align-items-center"><span class="fs-4 fw-semibold text-gray-500 me-1 align-self-start">$</span><span class="fs-2hx fw-bold text-gray-900 me-2 lh-1 ls-n2">69,700</span><span class="badge badge-light-success fs-base">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-5 text-success ms-n1"
      }, null, _parent));
      _push(` 2.2% </span></div><span class="text-gray-500 pt-1 fw-semibold fs-6">Projects Earnings in April</span></div></div><div class="card-body pt-2 pb-4 d-flex flex-wrap align-items-center"><div class="d-flex flex-center me-5 pt-2"><div id="kt_card_widget_17_chart" style="${ssrRenderStyle({
        minWidth: `${_ctx.chartSize}px`,
        minHeight: `${_ctx.chartSize}px`
      })}"${ssrRenderAttr("data-kt-size", _ctx.chartSize)}${ssrRenderAttr("data-kt-line", 11)}></div></div><div class="d-flex flex-column content-justify-center flex-row-fluid"><div class="d-flex fw-semibold align-items-center"><div class="bullet w-8px h-3px rounded-2 bg-success me-3"></div><div class="text-gray-500 flex-grow-1 me-4">Leaf CRM</div><div class="fw-bolder text-gray-700 text-xxl-end">$7,660</div></div><div class="d-flex fw-semibold align-items-center my-3"><div class="bullet w-8px h-3px rounded-2 bg-primary me-3"></div><div class="text-gray-500 flex-grow-1 me-4">Mivy App</div><div class="fw-bolder text-gray-700 text-xxl-end">$2,820</div></div><div class="d-flex fw-semibold align-items-center"><div class="bullet w-8px h-3px rounded-2 me-3" style="${ssrRenderStyle({ "background-color": "#e4e6ef" })}"></div><div class="text-gray-500 flex-grow-1 me-4">Others</div><div class="fw-bolder text-gray-700 text-xxl-end">$45,257</div></div></div></div></div>`);
    }
    const _sfc_setup$2W = _sfc_main$2W.setup;
    _sfc_main$2W.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget3.vue");
      return _sfc_setup$2W ? _sfc_setup$2W(props, ctx) : void 0;
    };
    const Widget3 = /* @__PURE__ */ _export_sfc(_sfc_main$2W, [["ssrRender", _sfc_ssrRender$2D]]);
    const __vite_glob_0_28 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2V = vueExports$1.defineComponent({
      name: "dropdown-2",
      components: {}
    });
    function _sfc_ssrRender$2C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold w-200px",
        "data-kt-menu": "true"
      }, _attrs))}><div class="menu-item px-3"><div class="menu-content fs-6 text-gray-900 fw-bold px-3 py-4"> Quick Actions </div></div><div class="separator mb-3 opacity-75"></div><div class="menu-item px-3"><a href="#" class="menu-link px-3"> New Ticket </a></div><div class="menu-item px-3"><a href="#" class="menu-link px-3"> New Customer </a></div><div class="menu-item px-3" data-kt-menu-trigger="hover" data-kt-menu-placement="right-start" data-kt-menu-flip="left-start, top"><a href="#" class="menu-link px-3"><span class="menu-title">New Group</span><span class="menu-arrow"></span></a><div class="menu-sub menu-sub-dropdown w-175px py-4"><div class="menu-item px-3"><a href="#" class="menu-link px-3"> Admin Group </a></div><div class="menu-item px-3"><a href="#" class="menu-link px-3"> Staff Group </a></div><div class="menu-item px-3"><a href="#" class="menu-link px-3"> Member Group </a></div></div></div><div class="menu-item px-3"><a href="#" class="menu-link px-3"> New Contact </a></div><div class="separator mt-3 opacity-75"></div><div class="menu-item px-3"><div class="menu-content px-3 py-3"><a class="btn btn-primary btn-sm px-4" href="#"> Generate Reports </a></div></div></div>`);
    }
    const _sfc_setup$2V = _sfc_main$2V.setup;
    _sfc_main$2V.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dropdown/Dropdown2.vue");
      return _sfc_setup$2V ? _sfc_setup$2V(props, ctx) : void 0;
    };
    const Dropdown2 = /* @__PURE__ */ _export_sfc(_sfc_main$2V, [["ssrRender", _sfc_ssrRender$2C]]);
    const __vite_glob_0_39 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Dropdown2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2U = vueExports$1.defineComponent({
      name: "default-dashboard-widget-4",
      components: {
        Dropdown2
      },
      props: {
        className: { type: String, required: false }
      },
      setup() {
        const items = [
          {
            description: "Avg. Client Rating",
            statistics: "7.8",
            inc: true,
            number: "true"
          },
          {
            description: "Instagram Followers",
            statistics: "730k",
            inc: false,
            number: "false"
          },
          {
            description: "Google Ads CPC",
            statistics: "$2.09",
            inc: true,
            number: "false"
          }
        ];
        return {
          items,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush", _ctx.className]
      }, _attrs))}><div class="card-header pt-5"><h3 class="card-title text-gray-800 fw-bold">External Links</h3><div class="card-toolbar"><button class="btn btn-icon btn-color-gray-500 btn-active-color-primary justify-content-end" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-overflow="true">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "dots-square",
        "icon-class": "fs-1 text-gray-300 me-n1"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="card-body pt-5"><!--[-->`);
      ssrRenderList(_ctx.items, (item, i) => {
        _push(`<!--[--><div class="d-flex flex-stack"><a href="#" class="text-primary fw-semibold fs-6 me-2">${ssrInterpolate(item.description)}</a><button type="button" class="btn btn-icon btn-sm h-auto btn-color-gray-500 btn-active-color-primary justify-content-end">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "exit-right-corner",
          "icon-class": "fs-2"
        }, null, _parent));
        _push(`</button></div>`);
        if (_ctx.items.length - 1 !== i) {
          _push(`<div class="separator separator-dashed my-3"></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div></div>`);
    }
    const _sfc_setup$2U = _sfc_main$2U.setup;
    _sfc_main$2U.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget4.vue");
      return _sfc_setup$2U ? _sfc_setup$2U(props, ctx) : void 0;
    };
    const Widget4 = /* @__PURE__ */ _export_sfc(_sfc_main$2U, [["ssrRender", _sfc_ssrRender$2B]]);
    const __vite_glob_0_29 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2T = vueExports$1.defineComponent({
      name: "default-dashboard-widget-5",
      components: {},
      props: {
        className: { type: String, required: false }
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush", _ctx.className]
      }, _attrs))}><div class="card-body d-flex flex-column justify-content-between mt-9 bgi-no-repeat bgi-size-cover bgi-position-x-center pb-0" style="${ssrRenderStyle(`background-position: 100% 50%;
        background-image: url('${_ctx.getAssetPath(
        "/media/stock/900x600/42.png"
      )}');`)}"><div class="mb-10"><div class="fs-2hx fw-bold text-gray-800 text-center mb-13"><span class="me-2"> Try our all new Enviroment with <br><span class="position-relative d-inline-block text-danger">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/crafted/account/overview",
        class: "text-danger opacity-75-hover"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Pro Plan`);
          } else {
            return [
              vueExports$1.createTextVNode("Pro Plan")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<span class="position-absolute opacity-15 bottom-0 start-0 border-4 border-danger border-bottom w-100"></span></span></span>for Free </div><div class="text-center"><a href="#" class="btn btn-sm btn-dark fw-bold"> Upgrade Now </a></div></div><img class="mx-auto h-150px h-lg-200px theme-light-show"${ssrRenderAttr("src", _ctx.getAssetPath("media/illustrations/misc/upgrade.svg"))} alt=""><img class="mx-auto h-150px h-lg-200px theme-dark-show"${ssrRenderAttr("src", _ctx.getAssetPath("media/illustrations/misc/upgrade-dark.svg"))} alt=""></div></div>`);
    }
    const _sfc_setup$2T = _sfc_main$2T.setup;
    _sfc_main$2T.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget5.vue");
      return _sfc_setup$2T ? _sfc_setup$2T(props, ctx) : void 0;
    };
    const Widget5 = /* @__PURE__ */ _export_sfc(_sfc_main$2T, [["ssrRender", _sfc_ssrRender$2A]]);
    const __vite_glob_0_30 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget5
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2S = vueExports$1.defineComponent({
      name: "default-dashboard-widget-6",
      components: {},
      props: {
        className: { type: String, required: false },
        height: { type: String, required: false, default: "425px" }
      },
      setup(props) {
        const chartRef1 = vueExports$1.ref(null);
        const chartRef2 = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series1 = [
          {
            name: "Social Campaigns",
            data: [[100, 250, 30]]
          },
          {
            name: "Email Newsletter",
            data: [[225, 300, 35]]
          },
          {
            name: "TV Campaign",
            data: [[300, 350, 25]]
          },
          {
            name: "Google Ads",
            data: [[350, 350, 20]]
          },
          {
            name: "Courses",
            data: [[450, 400, 25]]
          },
          {
            name: "Radio",
            data: [[550, 350, 35]]
          }
        ];
        const series2 = [
          {
            name: "Social Campaigns",
            data: [[125, 300, 40]]
          },
          {
            name: "Email Newsletter",
            data: [[250, 350, 35]]
          },
          {
            name: "TV Campaign",
            data: [[350, 450, 30]]
          },
          {
            name: "Google Ads",
            data: [[450, 250, 25]]
          },
          {
            name: "Courses",
            data: [[500, 500, 30]]
          },
          {
            name: "Radio",
            data: [[600, 250, 28]]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onMounted(() => {
          Object.assign(chart2.value, chartOptions$l(props.height));
        });
        const refreshChart = () => {
          if (!chartRef1.value || !chartRef2.value) {
            return;
          }
          chartRef1.value.updateOptions(chartOptions$l(props.height));
          chartRef2.value.updateOptions(chartOptions$l(props.height));
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          chartRef1,
          chartRef2,
          series1,
          series2,
          getAssetPath
        };
      }
    });
    const chartOptions$l = (height) => {
      const borderColor = getCSSVariableValue("--bs-border-dashed-color");
      return {
        chart: {
          fontFamily: "inherit",
          type: "bubble",
          height,
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          bubble: {}
        },
        stroke: {
          show: false,
          width: 0
        },
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        xaxis: {
          type: "numeric",
          tickAmount: 7,
          min: 0,
          max: 700,
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: true,
            height: 0
          },
          labels: {
            show: true,
            trim: true,
            style: {
              colors: getCSSVariableValue("--bs-gray-500"),
              fontSize: "13px"
            }
          }
        },
        yaxis: {
          tickAmount: 7,
          min: 0,
          max: 700,
          labels: {
            style: {
              colors: getCSSVariableValue("--bs-gray-500"),
              fontSize: "13px"
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          x: {
            formatter: function(val) {
              return "Clicks: " + val;
            }
          },
          y: {
            formatter: function(val) {
              return "$" + val + "K";
            }
          },
          z: {
            title: "Impression: "
          }
        },
        colors: [
          getCSSVariableValue("--bs-primary"),
          getCSSVariableValue("--bs-success"),
          getCSSVariableValue("--bs-warning"),
          getCSSVariableValue("--bs-danger"),
          getCSSVariableValue("--bs-info"),
          "#43CED7"
        ],
        fill: {
          opacity: 1
        },
        markers: {
          strokeWidth: 0
        },
        grid: {
          borderColor,
          strokeDashArray: 4,
          padding: {
            right: 20
          },
          yaxis: {
            lines: {
              show: true
            }
          }
        }
      };
    };
    function _sfc_ssrRender$2z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush", _ctx.className]
      }, _attrs))}><div class="card-header pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold text-gray-900">Performance Overview</span><span class="text-gray-500 mt-1 fw-semibold fs-6">Users from all channels</span></h3><div class="card-toolbar"><ul class="nav" id="kt_chart_widget_8_tabs"><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light fw-bold px-4 me-1" data-bs-toggle="tab" id="kt_chart_widget_8_week_toggle" href="#kt_chart_widget_8_week_tab">Month</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light fw-bold px-4 me-1 active" data-bs-toggle="tab" id="kt_chart_widget_8_month_toggle" href="#kt_chart_widget_8_month_tab">Week</a></li></ul></div></div><div class="card-body pt-6"><div class="tab-content"><div class="tab-pane fade" id="kt_chart_widget_8_week_tab" role="tabpanel"><div class="mb-5"><div class="d-flex align-items-center mb-2"><span class="fs-1 fw-semibold text-gray-500 me-1 mt-n1">$</span><span class="fs-3x fw-bold text-gray-800 me-2 lh-1 ls-n2">18,89</span><span class="badge badge-light-success fs-base">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-5 text-success ms-n1"
      }, null, _parent));
      _push(` 4,8% </span></div><span class="fs-6 fw-semibold text-gray-500">Avarage cost per interaction</span></div>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef1",
        type: "bubble",
        options: _ctx.chart,
        series: _ctx.series1,
        height: _ctx.height
      }, null, _parent));
      _push(`<div class="d-flex flex-wrap pt-5"><div class="d-flex flex-column me-7 me-lg-16 pt-sm-3 pt-6"><div class="d-flex align-items-center mb-3 mb-sm-6"><span class="bullet bullet-dot bg-primary me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">Social Campaigns</span></div><div class="d-flex align-items-center"><span class="bullet bullet-dot bg-danger me-2 h-10px w-10px"></span><span class="fw-bold text-&lt;gray-600 fs-6">Google Ads</span></div></div><div class="d-flex flex-column me-7 me-lg-16 pt-sm-3 pt-6"><div class="d-flex align-items-center mb-3 mb-sm-6"><span class="bullet bullet-dot bg-success me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">Email Newsletter</span></div><div class="d-flex align-items-center"><span class="bullet bullet-dot bg-warning me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">Courses</span></div></div><div class="d-flex flex-column pt-sm-3 pt-6"><div class="d-flex align-items-center mb-3 mb-sm-6"><span class="bullet bullet-dot bg-info me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">TV Campaign</span></div><div class="d-flex align-items-center"><span class="bullet bullet-dot bg-success me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">Radio</span></div></div></div></div><div class="tab-pane fade active show" id="kt_chart_widget_8_month_tab" role="tabpanel"><div class="mb-5"><div class="d-flex align-items-center mb-2"><span class="fs-1 fw-semibold text-gray-500 me-1 mt-n1">$</span><span class="fs-3x fw-bold text-gray-800 me-2 lh-1 ls-n2">8,55</span><span class="badge badge-light-success fs-base">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-5 text-success ms-n1"
      }, null, _parent));
      _push(` 2.2% </span></div><span class="fs-6 fw-semibold text-gray-500">Avarage cost per interaction</span></div>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef2",
        type: "bubble",
        options: _ctx.chart,
        series: _ctx.series2,
        height: _ctx.height
      }, null, _parent));
      _push(`<div class="d-flex flex-wrap pt-5"><div class="d-flex flex-column me-7 me-lg-16 pt-sm-3 pt-6"><div class="d-flex align-items-center mb-3 mb-sm-6"><span class="bullet bullet-dot bg-primary me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">Social Campaigns</span></div><div class="d-flex align-items-center"><span class="bullet bullet-dot bg-danger me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">Google Ads</span></div></div><div class="d-flex flex-column me-7 me-lg-16 pt-sm-3 pt-6"><div class="d-flex align-items-center mb-3 mb-sm-6"><span class="bullet bullet-dot bg-success me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">Email Newsletter</span></div><div class="d-flex align-items-center"><span class="bullet bullet-dot bg-warning me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">Courses</span></div></div><div class="d-flex flex-column pt-sm-3 pt-6"><div class="d-flex align-items-center mb-3 mb-sm-6"><span class="bullet bullet-dot bg-info me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">TV Campaign</span></div><div class="d-flex align-items-center"><span class="bullet bullet-dot bg-success me-2 h-10px w-10px"></span><span class="fw-bold text-gray-600 fs-6">Radio</span></div></div></div></div></div></div></div>`);
    }
    const _sfc_setup$2S = _sfc_main$2S.setup;
    _sfc_main$2S.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget6.vue");
      return _sfc_setup$2S ? _sfc_setup$2S(props, ctx) : void 0;
    };
    const Widget6 = /* @__PURE__ */ _export_sfc(_sfc_main$2S, [["ssrRender", _sfc_ssrRender$2z]]);
    const __vite_glob_0_31 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget6
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2R = vueExports$1.defineComponent({
      name: "default-dashboard-widget-7",
      components: {
        Dropdown2
      },
      props: {
        className: { type: String, required: false }
      },
      setup() {
        const items = [
          {
            title: "SaaS",
            icon: "car",
            index: "1",
            table: [
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-3.jpg"),
                  name: "Guy Hawkins",
                  city: "Haiti"
                },
                price: "78.34",
                icon: true,
                statistics: 5,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-2.jpg"),
                  name: "Jane Cooper",
                  city: "Monaco"
                },
                price: "63.83",
                icon: false,
                statistics: 10,
                chartCcolor: "danger"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-9.jpg"),
                  name: "Jacob Jones",
                  city: "Poland"
                },
                price: "92.56",
                icon: true,
                statistics: 9,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-7.jpg"),
                  name: "Cody Fishers",
                  city: "Mexico"
                },
                price: "63.08",
                icon: false,
                statistics: 9.5,
                chartCcolor: "success"
              }
            ]
          },
          {
            title: "Crypto",
            icon: "bitcoin",
            index: "2",
            table: [
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-25.jpg"),
                  name: "Brooklyn Simmons",
                  city: "Poland"
                },
                price: "85.23",
                icon: true,
                statistics: 9.5,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-24.jpg"),
                  name: "Esther Howard",
                  city: "Mexico"
                },
                price: "74.83",
                icon: false,
                statistics: 10,
                chartCcolor: "danger"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-20.jpg"),
                  name: "Annette Black",
                  city: "Haiti"
                },
                price: "90.06",
                icon: true,
                statistics: 3,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-17.jpg"),
                  name: "Marvin McKinney",
                  city: "Monaco"
                },
                price: "54.08",
                icon: false,
                statistics: 9.5,
                chartCcolor: "success"
              }
            ]
          },
          {
            title: "Social",
            icon: "like",
            index: "3",
            table: [
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-11.jpg"),
                  name: "Jacob Jones",
                  city: "New York"
                },
                price: "52.34",
                icon: true,
                statistics: 10.5,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-23.jpg"),
                  name: "Ronald Richards",
                  city: "Madrid"
                },
                price: "77.65",
                icon: true,
                statistics: 9.5,
                chartCcolor: "danger"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-4.jpg"),
                  name: "Leslie Alexander",
                  city: "Pune"
                },
                price: "82.47",
                icon: false,
                statistics: 10.5,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-1.jpg"),
                  name: "Courtney Henry",
                  city: "Mexico"
                },
                price: "67.84",
                icon: true,
                statistics: 11.5,
                chartCcolor: "success"
              }
            ]
          },
          {
            title: "Mobile",
            icon: "tablet",
            index: "4",
            table: [
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-12.jpg"),
                  name: "Arlene McCoy",
                  city: "London"
                },
                price: "53.44",
                icon: false,
                statistics: 9.5,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-21.jpg"),
                  name: "Marvin McKinneyr",
                  city: "Monaco"
                },
                price: "74.64",
                icon: false,
                statistics: 9.5,
                chartCcolor: "danger"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-30.jpg"),
                  name: "Jacob Jones",
                  city: "PManila"
                },
                price: "88.56",
                icon: true,
                statistics: 5.5,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-14.jpg"),
                  name: "Esther Howard",
                  city: "Iceland"
                },
                price: "63.16",
                icon: false,
                statistics: 1.5,
                chartCcolor: "success"
              }
            ]
          },
          {
            title: "Others",
            icon: "send",
            index: "5",
            table: [
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-6.jpg"),
                  name: "Jane Cooper",
                  city: "Haiti"
                },
                price: "68.54",
                icon: true,
                statistics: 0.5,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-10.jpg"),
                  name: "Esther Howard",
                  city: "Kiribati"
                },
                price: "55.83",
                icon: false,
                statistics: 1.5,
                chartCcolor: "danger"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-9.jpg"),
                  name: "Jacob Jones",
                  city: "Poland"
                },
                price: "93.46",
                icon: true,
                statistics: 9.5,
                chartCcolor: "success"
              },
              {
                agent: {
                  avatar: getAssetPath("media/avatars/300-3.jpg"),
                  name: "Ralph Edwards",
                  city: "Mexico"
                },
                price: "64.48",
                icon: false,
                statistics: 9.5,
                chartCcolor: "success"
              }
            ]
          }
        ];
        return {
          items,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush", _ctx.className]
      }, _attrs))}><div class="card-header pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold text-gray-800">Authors Achievements</span><span class="text-gray-500 mt-1 fw-semibold fs-6">Avg. 69.34% Conv. Rate</span></h3><div class="card-toolbar"><button class="btn btn-icon btn-color-gray-500 btn-active-color-primary justify-content-end" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-overflow="true">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "dots-square",
        "icon-class": "fs-1 text-gray-300 me-n1"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="card-body pt-6"><ul class="nav nav-pills nav-pills-custom mb-3"><!--[-->`);
      ssrRenderList(_ctx.items, (item, i) => {
        _push(`<li class="nav-item mb-3 me-3 me-lg-6"><a class="${ssrRenderClass([[i === 0 && "active"], "nav-link btn btn-outline btn-flex btn-color-muted btn-active-color-primary flex-column overflow-hidden w-80px h-85px pt-5 pb-2"])}"${ssrRenderAttr("id", `kt_stats_widget_16_tab_link_${i}`)} data-bs-toggle="pill"${ssrRenderAttr("href", `#kt_stats_widget_16_tab_${i}`)}><div class="nav-icon mb-3">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": item.icon,
          "icon-class": "fs-1 p-0"
        }, null, _parent));
        _push(`</div><span class="nav-text text-gray-800 fw-bold fs-6 lh-1">${ssrInterpolate(item.title)}</span><span class="bullet-custom position-absolute bottom-0 w-100 h-4px bg-primary"></span></a></li>`);
      });
      _push(`<!--]--></ul><div class="tab-content"><!--[-->`);
      ssrRenderList(_ctx.items, (item, i) => {
        _push(`<div class="${ssrRenderClass([[i === 0 && "active show"], "tab-pane fade"])}"${ssrRenderAttr("id", `kt_stats_widget_16_tab_${i}`)}><div class="table-responsive"><table class="table table-row-dashed align-middle gs-0 gy-3 my-0"><thead><tr class="fs-7 fw-bold text-gray-500 border-bottom-0"><th class="p-0 pb-3 min-w-150px text-start">AUTHOR</th><th class="p-0 pb-3 min-w-100px text-end pe-13">CONV.</th><th class="p-0 pb-3 w-125px text-end pe-7">PROGRESS</th><th class="p-0 pb-3 w-50px text-end">VIEW</th></tr></thead><tbody><!--[-->`);
        ssrRenderList(item.table, (row, j) => {
          _push(`<tr><td><div class="d-flex align-items-center"><div class="symbol symbol-50px me-3"><img${ssrRenderAttr("src", row.agent.avatar)} class="" alt=""></div><div class="d-flex justify-content-start flex-column">`);
          _push(ssrRenderComponent(_component_router_link, {
            to: "/crafted/pages/profile/overview",
            class: "text-gray-800 fw-bold text-hover-primary mb-1 fs-6"
          }, {
            default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`${ssrInterpolate(row.agent.name)}`);
              } else {
                return [
                  vueExports$1.createTextVNode(vueExports$1.toDisplayString(row.agent.name), 1)
                ];
              }
            }),
            _: 2
          }, _parent));
          _push(`<span class="text-gray-500 fw-semibold d-block fs-7">${ssrInterpolate(row.agent.city)}</span></div></div></td><td class="text-end pe-13"><span class="text-gray-600 fw-bold fs-6">${ssrInterpolate(row.price)}%</span></td><td class="text-end pe-0">`);
          if (row.icon) {
            _push(`<span class="badge badge-light-success fs-base">`);
            _push(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "arrow-up",
              "icon-class": "fs-5 text-success ms-n1"
            }, null, _parent));
            _push(` ${ssrInterpolate(row.statistics)} % </span>`);
          } else {
            _push(`<span class="badge badge-light-danger fs-base">`);
            _push(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "arrow-down",
              "icon-class": "fs-5 text-danger ms-n1"
            }, null, _parent));
            _push(` ${ssrInterpolate(row.statistics)} % </span>`);
          }
          _push(`</td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary w-30px h-30px">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "black-right",
            "icon-class": "fs-5 text-gray-700"
          }, null, _parent));
          _push(`</a></td></tr>`);
        });
        _push(`<!--]--></tbody></table></div></div>`);
      });
      _push(`<!--]--></div></div></div>`);
    }
    const _sfc_setup$2R = _sfc_main$2R.setup;
    _sfc_main$2R.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget7.vue");
      return _sfc_setup$2R ? _sfc_setup$2R(props, ctx) : void 0;
    };
    const Widget7 = /* @__PURE__ */ _export_sfc(_sfc_main$2R, [["ssrRender", _sfc_ssrRender$2y]]);
    const __vite_glob_0_32 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget7
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2Q = vueExports$1.defineComponent({
      name: "default-dashboard-widget-8",
      components: {},
      props: {
        className: { type: String, required: false },
        image: { type: String, required: true }
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush", _ctx.className]
      }, _attrs))}><div class="card-body py-9"><div class="row gx-9 h-100"><div class="col-sm-6 mb-10 mb-sm-0"><div class="bgi-no-repeat bgi-position-center bgi-size-cover card-rounded min-h-400px min-h-sm-100 h-100" style="${ssrRenderStyle({
        backgroundSize: "100% 100%",
        backgroundImage: `url(${_ctx.image})`
      })}"></div></div><div class="col-sm-6"><div class="d-flex flex-column h-100"><div class="mb-7"><div class="d-flex flex-stack mb-6"><div class="flex-shrink-0 me-5"><span class="text-gray-500 fs-7 fw-bold me-2 d-block lh-1 pb-1">Featured</span><span class="text-gray-800 fs-1 fw-bold">9 Degree</span></div><span class="badge badge-light-primary flex-shrink-0 align-self-center py-3 px-4 fs-7">In Process</span></div><div class="d-flex align-items-center flex-wrap d-grid gap-2"><div class="d-flex align-items-center me-5 me-xl-13"><div class="symbol symbol-30px symbol-circle me-3"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-3.jpg"))} class="" alt=""></div><div class="m-0"><span class="fw-semibold text-gray-500 d-block fs-8">Manager</span>`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/crafted/pages/profile/overview",
        class: "fw-bold text-gray-800 text-hover-primary fs-7"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Robert Fox`);
          } else {
            return [
              vueExports$1.createTextVNode("Robert Fox")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div><div class="d-flex align-items-center"><div class="symbol symbol-30px symbol-circle me-3"><span class="symbol-label bg-success">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-41",
        "icon-class": "fs-5 text-white"
      }, null, _parent));
      _push(`</span></div><div class="m-0"><span class="fw-semibold text-gray-500 d-block fs-8">Budget</span><span class="fw-bold text-gray-800 fs-7">$64.800</span></div></div></div></div><div class="mb-6"><span class="fw-semibold text-gray-600 fs-6 mb-8 d-block"> Flat cartoony illustrations with vivid unblended colors and asymmetrical beautiful purple hair lady </span><div class="d-flex"><div class="border border-gray-300 border-dashed rounded min-w-100px w-100 py-2 px-4 me-6 mb-3"><span class="fs-6 text-gray-700 fw-bold">Feb 6, 2021 </span><div class="fw-semibold text-gray-500">Due Date</div></div><div class="border border-gray-300 border-dashed rounded min-w-100px w-100 py-2 px-4 mb-3"><span class="fs-6 text-gray-700 fw-bold">$ <span class="ms-n1">284,900</span></span><div class="fw-semibold text-gray-500">Budget</div></div></div></div><div class="d-flex flex-stack mt-auto bd-highlight"><div class="symbol-group symbol-hover flex-nowrap"><div class="symbol-group symbol-hover flex-nowrap"><div class="symbol symbol-35px symbol-circle"><img alt="Pic"${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-2.jpg"))}></div><div class="symbol symbol-35px symbol-circle"><img alt="Pic"${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-3.jpg"))}></div><div class="symbol symbol-35px symbol-circle"><span class="symbol-label bg-primary text-inverse-primary fw-bold">S</span></div></div></div><a href="#" class="d-flex align-items-center text-primary opacity-75-hover fs-6 fw-semibold"> View Project `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "exit-right-corner",
        "icon-class": "fs-4 ms-1"
      }, null, _parent));
      _push(`</a></div></div></div></div></div></div>`);
    }
    const _sfc_setup$2Q = _sfc_main$2Q.setup;
    _sfc_main$2Q.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget8.vue");
      return _sfc_setup$2Q ? _sfc_setup$2Q(props, ctx) : void 0;
    };
    const Widget8 = /* @__PURE__ */ _export_sfc(_sfc_main$2Q, [["ssrRender", _sfc_ssrRender$2x]]);
    const __vite_glob_0_33 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget8
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2P = vueExports$1.defineComponent({
      name: "default-dashboard-widget-9",
      components: {},
      props: {
        className: { type: String, required: false },
        height: { type: Number, required: true }
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Inbound Calls",
            data: [
              65,
              80,
              80,
              60,
              60,
              45,
              45,
              80,
              80,
              70,
              70,
              90,
              90,
              80,
              80,
              80,
              60,
              60,
              50
            ]
          },
          {
            name: "Outbound Calls",
            data: [
              90,
              110,
              110,
              95,
              95,
              85,
              85,
              95,
              95,
              115,
              115,
              100,
              100,
              115,
              115,
              95,
              95,
              85,
              85
            ]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onMounted(() => {
          Object.assign(chart2.value, chartOptions$k(props.height));
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$k(props.height));
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          chartRef,
          series,
          getAssetPath
        };
      }
    });
    const chartOptions$k = (height) => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-border-dashed-color");
      const baseprimaryColor = getCSSVariableValue("--bs-primary");
      const lightprimaryColor = getCSSVariableValue("--bs-primary");
      const basesuccessColor = getCSSVariableValue("--bs-success");
      const lightsuccessColor = getCSSVariableValue("--bs-success");
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          height,
          toolbar: {
            show: false
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "gradient",
          gradient: {
            shadeIntensity: 1,
            opacityFrom: 0.4,
            opacityTo: 0.2,
            stops: [15, 120, 100]
          }
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: [baseprimaryColor, basesuccessColor]
        },
        xaxis: {
          categories: [
            "",
            "8 AM",
            "81 AM",
            "9 AM",
            "10 AM",
            "11 AM",
            "12 PM",
            "13 PM",
            "14 PM",
            "15 PM",
            "16 PM",
            "17 PM",
            "18 PM",
            "18:20 PM",
            "18:20 PM",
            "19 PM",
            "20 PM",
            "21 PM",
            ""
          ],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          tickAmount: 6,
          labels: {
            rotate: 0,
            rotateAlways: true,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            position: "front",
            stroke: {
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: true,
            formatter: void 0,
            offsetY: 0,
            style: {
              fontSize: "12px"
            }
          }
        },
        yaxis: {
          max: 120,
          min: 30,
          tickAmount: 6,
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          }
        },
        colors: [lightprimaryColor, lightsuccessColor],
        grid: {
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          }
        },
        markers: {
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$2w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card card-flush", _ctx.className]
      }, _attrs))}><div class="card-header pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold text-gray-900">Performance</span><span class="text-gray-500 mt-1 fw-semibold fs-6">1,046 Inbound Calls today</span></h3><div class="card-toolbar"><div class="btn btn-sm btn-light d-flex align-items-center px-4"><div class="text-gray-600 fw-bold">1 Jul 2022 - 31 Jul 2022</div>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "calendar-8",
        "icon-class": "fs-1 ms-2 me-0"
      }, null, _parent));
      _push(`</div></div></div><div class="card-body d-flex align-items-end p-0">`);
      _push(ssrRenderComponent(_component_apexchart, {
        class: "min-h-auto w-100 ps-4 pe-6",
        ref: "chartRef",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.height
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$2P = _sfc_main$2P.setup;
    _sfc_main$2P.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dashboard-default-widgets/Widget9.vue");
      return _sfc_setup$2P ? _sfc_setup$2P(props, ctx) : void 0;
    };
    const Widget9 = /* @__PURE__ */ _export_sfc(_sfc_main$2P, [["ssrRender", _sfc_ssrRender$2w]]);
    const __vite_glob_0_34 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Widget9
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2O = vueExports$1.defineComponent({
      name: "dev-questions",
      components: {},
      setup() {
        const questions = vueExports$1.ref([
          {
            title: "How to use Metronic with Django Framework ?",
            summary: "I’ve been doing some ajax request, to populate a inside drawer, the content of that drawer has a sub menu, that you are using in list and all card toolbar.",
            author: "James Hunt",
            date: "24 minutes ago",
            avatar: void 0,
            answers: "16",
            upvotes: "23",
            icons: [
              {
                name: "information-5",
                class: "text-primary",
                tooltip: "New question"
              },
              {
                name: "sms",
                class: "text-danger",
                tooltip: "User replied"
              }
            ],
            tags: ["Metronic"]
          },
          {
            title: "When to expect new version of Laravel ?",
            summary: "When approx. is the next update for the Laravel version planned? Waiting for the CRUD, 2nd factor etc. features before starting my project. Also can we expect the Laravel + Vue version in the next update ?",
            author: "Sandra Piquet",
            date: "1 day ago",
            avatar: getAssetPath("media/avatars/300-2.jpg"),
            answers: "2",
            upvotes: "4",
            icons: [
              {
                name: "information-5",
                class: "text-warning",
                tooltip: "In-process"
              }
            ],
            tags: ["Pre-sale"]
          },
          {
            title: "Could not get Demo 7 working",
            summary: "could not get demo7 working from latest metronic version. Had a lot of issues installing, I had to downgrade my npm to 6.14.4 as someone else recommended here in the comments, this goot it to compile but when I ran it, the browser showed errors TypeErr..",
            author: "Niko Roseberg",
            date: "2 days ago",
            avatar: void 0,
            answers: "4",
            upvotes: "",
            icons: [
              {
                name: "information-5",
                class: "text-warning",
                tooltip: "In-process"
              }
            ],
            tags: ["Angular"]
          },
          {
            title: "I want to get refund",
            summary: "Your Metronic theme is so good but the reactjs version is typescript only. The description did not write any warn about it. Since I only know javascript, I can not do anything with your theme. I want to refund.",
            author: "Alex Bold",
            date: "1 day ago",
            avatar: getAssetPath("media/avatars/300-23.jpg"),
            answers: "22",
            upvotes: "11",
            icons: [
              {
                name: "check-circle",
                class: "text-success",
                tooltip: "Resolved"
              }
            ],
            tags: ["React", "Demo 1"]
          },
          {
            title: "How to integrate Metronic with Blazor Server Side ?",
            summary: "could not get demo7 working from latest metronic version. Had a lot of issues installing, I had to downgrade my npm to 6.14.4 as someone else recommended here in the comments, this goot it to compile but when I ran it, the browser showed errors TypeErr..",
            author: "Tim Nilson",
            date: "3 days ago",
            avatar: void 0,
            answers: "44",
            upvotes: "3",
            icons: [
              {
                name: "check-circle",
                class: "text-success",
                tooltip: "In-process"
              }
            ],
            tags: ["Blazor"]
          },
          {
            title: "Using Metronic with .NET multi tenant application",
            summary: "When approx. is the next update for the Laravel version planned? Waiting for the CRUD, 2nd factor etc. features before starting my project. Also can we expect the Laravel + Vue version in the next update ?",
            author: "Ana Quil",
            date: "5 days ago",
            avatar: getAssetPath("media/avatars/300-10.jpg"),
            answers: "2",
            upvotes: "4",
            icons: [
              {
                name: "check-circle",
                class: "text-success",
                tooltip: "Resolved"
              }
            ],
            tags: ["Aspdotnet"]
          }
        ]);
        return {
          questions,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "mb-10" }, _attrs))}><!--[-->`);
      ssrRenderList(_ctx.questions, (question2, i) => {
        _push(`<!--[--><div class="mb-0"><div class="d-flex align-items-center mb-4">`);
        _push(ssrRenderComponent(_component_router_link, {
          to: "/apps/devs/question",
          class: "fs-2 fw-bold text-gray-900 text-hover-primary me-1"
        }, {
          default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`${ssrInterpolate(question2.title)}`);
            } else {
              return [
                vueExports$1.createTextVNode(vueExports$1.toDisplayString(question2.title), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
        _push(`<div class="d-flex align-items-center"><!--[-->`);
        ssrRenderList(question2.icons, (icon2, i2) => {
          _push(`<span class="ms-1" data-bs-toggle="tooltip"${ssrRenderAttr("title", icon2.tooltip)}>`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": icon2.name,
            "icon-class": `fs-1 ${icon2.class}`
          }, null, _parent));
          _push(`</span>`);
        });
        _push(`<!--]--></div></div><div class="fs-base fw-normal text-gray-700 mb-4">${ssrInterpolate(question2.summary)}</div><div class="d-flex flex-stack flex-wrap"><div class="d-flex align-items-center py-1"><div class="symbol symbol-35px me-2">`);
        if (question2.avatar) {
          _push(`<img${ssrRenderAttr("src", question2.avatar)} alt="user">`);
        } else {
          _push(`<div class="symbol-label bg-light-success fs-3 fw-semibold text-success text-uppercase">${ssrInterpolate(question2.author[0])}</div>`);
        }
        _push(`</div><div class="d-flex flex-column align-items-start justify-content-center"><span class="text-gray-900 fs-7 fw-semibold lh-1 mb-2">${ssrInterpolate(question2.author)}</span><span class="text-muted fs-8 fw-semibold lh-1">${ssrInterpolate(question2.date)}</span></div></div><div class="d-flex align-items-center py-1"><a to="/apps/devs/question" class="btn btn-sm btn-outline btn-outline-dashed btn-outline-default px-4 me-2">${ssrInterpolate(question2.answers)} Answers </a><!--[-->`);
        ssrRenderList(question2.tags, (tag2, i2) => {
          _push(`<a href="#" class="btn btn-sm btn-light px-4 me-2">${ssrInterpolate(tag2)}</a>`);
        });
        _push(`<!--]--><a href="#" class="${ssrRenderClass([`${question2.upvotes ? "btn-icons" : "px-3"}`, "btn btn-sm btn-flex btn-light"])}" data-bs-toggle="tooltip" title="Upvote this question" data-bs-dismiss="click">${ssrInterpolate(question2.upvotes)} `);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "black-right",
          "icon-class": `fs-7 ${question2.upvotes ? "" : "ms-2 me-0"}`
        }, null, _parent));
        _push(`</a></div></div></div><div class="separator separator-dashed border-gray-300 my-8"></div><!--]-->`);
      });
      _push(`<!--]--><div class="d-flex flex-center mb-0"><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">1</a><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2 active">2</a><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">3</a><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">4</a><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">5</a><span class="text-muted fw-semibold fs-6 mx-2">..</span><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">19</a></div></div>`);
    }
    const _sfc_setup$2O = _sfc_main$2O.setup;
    _sfc_main$2O.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/devs/Questions.vue");
      return _sfc_setup$2O ? _sfc_setup$2O(props, ctx) : void 0;
    };
    const Questions = /* @__PURE__ */ _export_sfc(_sfc_main$2O, [["ssrRender", _sfc_ssrRender$2v]]);
    const __vite_glob_0_35 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Questions
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2N = vueExports$1.defineComponent({
      name: "dev-replies",
      components: {},
      setup() {
        const replies = vueExports$1.ref([
          {
            message: "I’ve been doing some ajax request, to populate a inside drawer, the content of that drawer has a sub menu, that you are using in list and all card toolbar.",
            author: "Sandra Piquet",
            date: "24 minutes ago",
            avatar: getAssetPath("media/avatars/300-2.jpg"),
            upvotes: "",
            indent: ""
          },
          {
            message: "I’ve been doing some ajax request, to populate a inside drawer, the content of that drawer has a sub menu, that you are using in list and all card toolbar.",
            author: "Niko Roseberg",
            date: "1 day ago",
            avatar: void 0,
            upvotes: "2",
            indent: "ms-5 ms-lg-10"
          },
          {
            message: "I’ve been doing some ajax request, to populate a inside drawer, the content of that drawer has a sub menu, that you are using in list and all card toolbar.",
            author: "Sandra Piquet",
            date: "24 minutes ago",
            avatar: getAssetPath("media/avatars/300-12.jpg"),
            upvotes: "6",
            indent: ""
          },
          {
            message: "I’ve been doing some ajax request, to populate a inside drawer, the content of that drawer has a sub menu, that you are using in list and all card toolbar.",
            author: "Sandra Piquet",
            date: "24 minutes ago",
            avatar: void 0,
            upvotes: "4",
            indent: ""
          },
          {
            message: "I’ve been doing some ajax request, to populate a inside drawer, the content of that drawer has a sub menu, that you are using in list and all card toolbar.",
            author: "Niko Roseberg",
            date: "1 day ago",
            avatar: getAssetPath("media/avatars/300-20.jpg"),
            upvotes: "",
            indent: ""
          }
        ]);
        return {
          replies,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<!--[--><a id="answers" data-kt-scroll-offset="{default: 100, lg: 125}"></a><h2 class="fw-bold text-gray-900 mb-10">Replies(14)</h2><div class="mb-10"><!--[-->`);
      ssrRenderList(_ctx.replies, (reply, i) => {
        _push(`<div class="${ssrRenderClass(`border rounded p-2 p-lg-6 mb-10 ${reply.indent}`)}"><div class="mb-0"><div class="d-flex flex-stack flex-wrap mb-5"><div class="d-flex align-items-center py-1"><div class="symbol symbol-35px me-2">`);
        if (reply.avatar) {
          _push(`<img${ssrRenderAttr("src", reply.avatar)} alt="user">`);
        } else {
          _push(`<div class="symbol-label bg-light-success fs-3 fw-semibold text-success text-uppercase">${ssrInterpolate(reply.author[0])}</div>`);
        }
        _push(`</div><div class="d-flex flex-column align-items-start justify-content-center"><span class="text-gray-800 fs-7 fw-semibold lh-1 mb-2">${ssrInterpolate(reply.author)}</span><span class="text-muted fs-8 fw-semibold lh-1">${ssrInterpolate(reply.date)}</span></div></div><div class="d-flex align-items-center py-1"><a href="#" class="btn btn-sm btn-flex btn-color-gray-500 btn-active-light me-1"> Reply </a><a href="#" class="${ssrRenderClass(`btn btn-sm btn-flex btn-light ${reply.upvotes ? "btn-icon" : "px-3"}`)}" data-bs-toggle="tooltip" title="Upvote" data-bs-dismiss="click">${ssrInterpolate(reply.upvotes)} `);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "black-right",
          "icon-class": `fs-7 ${reply.upvotes ? "" : "mx-2 me-0"}`
        }, null, _parent));
        _push(`</a></div></div><div class="fs-5 fw-normal text-gray-800">${ssrInterpolate(reply.message)}</div></div><div class="ps-10 mb-0"></div></div>`);
      });
      _push(`<!--]--><div class="d-flex flex-center mb-0"><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">1</a><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2 active">2</a><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">3</a><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">4</a><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">5</a><span class="text-muted fw-semibold fs-6 mx-2">..</span><a href="#" class="btn btn-icon btn-light btn-active-light-primary h-30px w-30px fw-semibold fs-6 mx-2">19</a></div></div><!--]-->`);
    }
    const _sfc_setup$2N = _sfc_main$2N.setup;
    _sfc_main$2N.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/devs/Replies.vue");
      return _sfc_setup$2N ? _sfc_setup$2N(props, ctx) : void 0;
    };
    const Replies = /* @__PURE__ */ _export_sfc(_sfc_main$2N, [["ssrRender", _sfc_ssrRender$2u]]);
    const __vite_glob_0_36 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Replies
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2M = vueExports$1.defineComponent({
      name: "text-formatting",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "collapse",
        id: "kt_devs_ask_formatting"
      }, _attrs))}><div class="pt-3 mb-5 fs-6"> Here&#39;s a how to add some HTML formatting to your comment: </div><ul class="list-unstyled p-0 mb-10"><li class="py-1 fs-6"><b>&lt;strong&gt;&lt;/strong&gt;</b> to make things bold </li><li class="py-1 fs-6"><b>&lt;em&gt;&lt;/em&gt;</b> to emphasize</li><li class="py-1 fs-6"><b>&lt;ul&gt;&lt;li&gt;</b> or <b>&lt;ol&gt;&lt;li&gt;</b>  to make lists </li><li class="py-1 fs-6"><b>&lt;h3&gt;</b> or <b>&lt;h4&gt;</b> to make headings </li><li class="py-1 fs-6"><b>&lt;pre&gt;&lt;/pre&gt;</b> for code blocks </li><li class="py-1 fs-6"><b>&lt;code&gt;&lt;/code&gt;</b> for a few words of code </li><li class="py-1 fs-6"><b>&lt;a&gt;&lt;/a&gt;</b> for links</li><li class="py-1 fs-6"><b>&lt;img&gt;</b> to paste in an image</li><li class="py-1 fs-6"><b>&lt;blockquote&gt;&lt;/blockquote&gt;</b> to quote somebody </li><li class="py-1 fs-6"><img alt="happy"${ssrRenderAttr("src", _ctx.getAssetPath("media/smiles/happy.png"))}>  :) </li><li class="py-1 fs-6"><img alt="shocked"${ssrRenderAttr("src", _ctx.getAssetPath("media/smiles/shocked.png"))}>  :| </li><li class="py-1 fs-6"><img alt="sad"${ssrRenderAttr("src", _ctx.getAssetPath("media/smiles/sad.png"))}>  :( </li></ul></div>`);
    }
    const _sfc_setup$2M = _sfc_main$2M.setup;
    _sfc_main$2M.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/devs/TextFormatting.vue");
      return _sfc_setup$2M ? _sfc_setup$2M(props, ctx) : void 0;
    };
    const TextFormatting = /* @__PURE__ */ _export_sfc(_sfc_main$2M, [["ssrRender", _sfc_ssrRender$2t]]);
    const __vite_glob_0_37 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TextFormatting
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2L = vueExports$1.defineComponent({
      name: "dropdown-1",
      components: {},
      setup() {
        const data2 = vueExports$1.ref({
          status: "1",
          author: true,
          customer: true,
          notifications: true
        });
        return {
          data: data2
        };
      }
    });
    function _sfc_ssrRender$2s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "menu menu-sub menu-sub-dropdown w-250px w-md-300px",
        "data-kt-menu": "true"
      }, _attrs))}><div class="px-7 py-5"><div class="fs-5 text-gray-900 fw-bold">Filter Options</div></div><div class="separator border-gray-200"></div><div class="px-7 py-5"><div class="mb-10"><label class="form-label fw-semibold">Status:</label><div><select class="form-select form-select-solid select2-hidden-accessible"><option label="Approved" value="1"${ssrIncludeBooleanAttr(Array.isArray(_ctx.data.status) ? ssrLooseContain(_ctx.data.status, "1") : ssrLooseEqual(_ctx.data.status, "1")) ? " selected" : ""}>Approved</option><option label="Pending" value="2"${ssrIncludeBooleanAttr(Array.isArray(_ctx.data.status) ? ssrLooseContain(_ctx.data.status, "2") : ssrLooseEqual(_ctx.data.status, "2")) ? " selected" : ""}>Pending</option><option label="In Process" value="3"${ssrIncludeBooleanAttr(Array.isArray(_ctx.data.status) ? ssrLooseContain(_ctx.data.status, "3") : ssrLooseEqual(_ctx.data.status, "3")) ? " selected" : ""}>In Process</option><option label="Rejected" value="4"${ssrIncludeBooleanAttr(Array.isArray(_ctx.data.status) ? ssrLooseContain(_ctx.data.status, "4") : ssrLooseEqual(_ctx.data.status, "4")) ? " selected" : ""}>Rejected</option></select></div></div><div class="mb-10"><label class="form-label fw-semibold">Member Type:</label><div class="d-flex"><label class="form-check form-check-sm form-check-custom form-check-solid me-5"><input class="form-check-input" type="checkbox" value="1"${ssrIncludeBooleanAttr(Array.isArray(_ctx.data.author) ? ssrLooseContain(_ctx.data.author, "1") : _ctx.data.author) ? " checked" : ""}><span class="form-check-label user-select-none"> Author </span></label><label class="form-check form-check-sm form-check-custom form-check-solid"><input class="form-check-input" type="checkbox" value="2"${ssrIncludeBooleanAttr(Array.isArray(_ctx.data.customer) ? ssrLooseContain(_ctx.data.customer, "2") : _ctx.data.customer) ? " checked" : ""}><span class="form-check-label user-select-none"> Customer </span></label></div></div><div class="mb-10"><label class="form-label fw-semibold">Notifications:</label><div class="form-check form-switch form-switch-sm form-check-custom form-check-solid"><label class="form-check-label"><input class="form-check-input" type="checkbox" name="notifications"${ssrIncludeBooleanAttr(Array.isArray(_ctx.data.notifications) ? ssrLooseContain(_ctx.data.notifications, null) : _ctx.data.notifications) ? " checked" : ""}><span class="form-check-label user-select-none">Enabled</span></label></div></div><div class="d-flex justify-content-end"><button type="reset" class="btn btn-sm btn-light btn-active-light-primary me-2" data-kt-menu-dismiss="true"> Reset </button><button type="submit" class="btn btn-sm btn-primary" data-kt-menu-dismiss="true"> Apply </button></div></div></div>`);
    }
    const _sfc_setup$2L = _sfc_main$2L.setup;
    _sfc_main$2L.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dropdown/Dropdown1.vue");
      return _sfc_setup$2L ? _sfc_setup$2L(props, ctx) : void 0;
    };
    const Dropdown1 = /* @__PURE__ */ _export_sfc(_sfc_main$2L, [["ssrRender", _sfc_ssrRender$2s]]);
    const __vite_glob_0_38 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Dropdown1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2K = vueExports$1.defineComponent({
      name: "dropdown-5",
      components: {}
    });
    function _sfc_ssrRender$2r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg-light-primary fw-semibold w-200px py-3",
        "data-kt-menu": "true"
      }, _attrs))}><div class="menu-item px-3"><div class="menu-content text-muted pb-2 px-3 fs-7 text-uppercase"> Contacts </div></div><div class="menu-item px-3"><a href="#" class="menu-link px-3" data-bs-toggle="modal" data-bs-target="#kt_modal_users_search"> Add Contact </a></div><div class="menu-item px-3"><a href="#" class="menu-link flex-stack px-3" data-bs-toggle="modal" data-bs-target="#kt_modal_invite_friends"> Invite Contacts <i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="tooltip" title="Specify a contact email to send an invitation"></i></a></div><div class="menu-item px-3" data-kt-menu-trigger="hover" data-kt-menu-placement="right-start" data-kt-menu-flip="left, center, top"><a href="#" class="menu-link px-3"><span class="menu-title">Groups</span><span class="menu-arrow"></span></a><div class="menu-sub menu-sub-dropdown w-175px py-4"><div class="menu-item px-3"><a href="#" class="menu-link px-3" data-bs-toggle="tooltip" title="Coming soon"> Create Group </a></div><div class="menu-item px-3"><a href="#" class="menu-link px-3" data-bs-toggle="tooltip" title="Coming soon"> Invite Members </a></div><div class="menu-item px-3"><a href="#" class="menu-link px-3" data-bs-toggle="tooltip" title="Coming soon"> Settings </a></div></div></div><div class="menu-item px-3 my-1"><a href="#" class="menu-link px-3" data-bs-toggle="tooltip" title="Coming soon"> Settings </a></div></div>`);
    }
    const _sfc_setup$2K = _sfc_main$2K.setup;
    _sfc_main$2K.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/dropdown/Dropdown4.vue");
      return _sfc_setup$2K ? _sfc_setup$2K(props, ctx) : void 0;
    };
    const Dropdown4 = /* @__PURE__ */ _export_sfc(_sfc_main$2K, [["ssrRender", _sfc_ssrRender$2r]]);
    const __vite_glob_0_41 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Dropdown4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2J = vueExports$1.defineComponent({
      name: "file-component",
      props: {
        fileTitle: String,
        createdAt: String,
        fileType: String
      },
      components: {}
    });
    function _sfc_ssrRender$2q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "col-12 col-sm-12 col-xl" }, _attrs))}><div class="card h-100"><div class="card-body d-flex justify-content-center text-center flex-column p-8"><a href="#" class="text-gray-800 text-hover-primary d-flex flex-column"><div class="symbol symbol-60px mb-6"><img${ssrRenderAttr("src", `media/svg/files/${_ctx.fileType}.svg`)} alt=""></div><div class="fs-5 fw-bold mb-2">${ssrInterpolate(_ctx.fileTitle)}</div></a><div class="fs-7 fw-semibold text-gray-400 mt-auto">${ssrInterpolate(_ctx.createdAt)}</div></div></div></div>`);
    }
    const _sfc_setup$2J = _sfc_main$2J.setup;
    _sfc_main$2J.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/files/File.vue");
      return _sfc_setup$2J ? _sfc_setup$2J(props, ctx) : void 0;
    };
    const KTFile = /* @__PURE__ */ _export_sfc(_sfc_main$2J, [["ssrRender", _sfc_ssrRender$2q]]);
    const __vite_glob_0_42 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTFile
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2I = vueExports$1.defineComponent({
      name: "files-component",
      props: {
        folderName: String,
        files: String
      },
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "col-12 col-sm-12 col-xl" }, _attrs))}><div class="card h-100"><div class="card-body d-flex justify-content-center text-center flex-column p-8"><a href="#" class="text-gray-800 text-hover-primary d-flex flex-column"><div class="symbol symbol-75px mb-6"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/files/folder-document.svg"))} alt=""></div><div class="fs-5 fw-bold mb-2">Finance</div></a><div class="fs-7 fw-semibold text-gray-400 mt-auto">7 files</div></div></div></div>`);
    }
    const _sfc_setup$2I = _sfc_main$2I.setup;
    _sfc_main$2I.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/files/Folder.vue");
      return _sfc_setup$2I ? _sfc_setup$2I(props, ctx) : void 0;
    };
    const KTFolder = /* @__PURE__ */ _export_sfc(_sfc_main$2I, [["ssrRender", _sfc_ssrRender$2p]]);
    const __vite_glob_0_43 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTFolder
    }, Symbol.toStringTag, { value: "Module" }));
    const themeName = vueExports$1.computed(() => {
      return "Laravel";
    });
    const version = vueExports$1.computed(() => {
      return {}.VITE_APP_VERSION;
    });
    vueExports$1.computed(() => {
      return {}.VITE_APP_DEMO;
    });
    const useCopyClipboard = () => {
      const _init = (element) => {
        let elements = element;
        if (typeof elements === "undefined") {
          elements = document.querySelectorAll(".highlight");
        }
        if (elements && elements.length > 0) {
          for (let i = 0; i < elements.length; ++i) {
            const highlight = elements[i];
            const copy2 = highlight.querySelector(".highlight-copy");
            if (copy2) {
              const clipboard2 = new ClipboardJS(copy2, {
                target: (trigger) => {
                  const highlight2 = trigger.closest(".highlight");
                  if (highlight2) {
                    let el = highlight2.querySelector(".tab-pane.active");
                    if (el == null) {
                      el = highlight2.querySelector(".highlight-code");
                    }
                    return el;
                  }
                  return highlight2;
                }
              });
              clipboard2.on("success", (e) => {
                const caption = e.trigger.innerHTML;
                e.trigger.innerHTML = "copied";
                e.clearSelection();
                setTimeout(function() {
                  e.trigger.innerHTML = caption;
                }, 2e3);
              });
            }
          }
        }
      };
      return {
        init: (element) => {
          _init(element);
        }
      };
    };
    const _sfc_main$2H = vueExports$1.defineComponent({
      name: "CodeHighlighter",
      props: {
        lang: String,
        fieldHeight: Number
      },
      setup(props) {
        const height = vueExports$1.ref(props.fieldHeight);
        const { init } = useCopyClipboard();
        const getHeightInPixesls = vueExports$1.computed(() => {
          return height.value + "px";
        });
        vueExports$1.onMounted(() => {
          Prism.highlightAll();
          init();
        });
        return {
          getHeightInPixesls
        };
      },
      components: {}
    });
    function _sfc_ssrRender$2o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "py-5" }, _attrs))}><div class="highlight"><button class="highlight-copy btn" data-bs-toggle="tooltip" title="" data-bs-original-title="Copy code"> copy </button><div class="highlight-code"><pre class="${ssrRenderClass(`language-${_ctx.lang}`)}" style="${ssrRenderStyle({ height: _ctx.getHeightInPixesls })}"><code class="${ssrRenderClass(`language-${_ctx.lang}`)}">
          `);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`
        </code></pre></div></div></div>`);
    }
    const _sfc_setup$2H = _sfc_main$2H.setup;
    _sfc_main$2H.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/highlighters/CodeHighlighter.vue");
      return _sfc_setup$2H ? _sfc_setup$2H(props, ctx) : void 0;
    };
    const CodeHighlighter = /* @__PURE__ */ _export_sfc(_sfc_main$2H, [["ssrRender", _sfc_ssrRender$2o]]);
    const __vite_glob_0_44 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CodeHighlighter
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2G = vueExports$1.defineComponent({
      name: "CodeHighlighter",
      props: {
        fieldHeight: Number
      },
      components: {},
      setup(props) {
        const height = vueExports$1.ref(props.fieldHeight);
        const getHeightInPixesls = vueExports$1.computed(() => {
          return height.value + "px";
        });
        const { init } = useCopyClipboard();
        vueExports$1.onMounted(() => {
          Prism.highlightAll();
          init();
        });
        const id = () => {
          return Math.random().toString(36).substr(2, 9);
        };
        const htmlId = id();
        const jsId = id();
        return {
          getHeightInPixesls,
          htmlId,
          jsId
        };
      }
    });
    function _sfc_ssrRender$2n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "py-5" }, _attrs))}><div class="highlight"><button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code"> copy </button><ul class="nav nav-pills" role="tablist"><li class="nav-item"><a class="nav-link active" data-bs-toggle="tab"${ssrRenderAttr("href", `#kt_highlight_${_ctx.htmlId}`)} role="tab" aria-selected="true">HTML</a></li><li class="nav-item"><a class="nav-link" data-bs-toggle="tab"${ssrRenderAttr("href", `#kt_highlight_${_ctx.jsId}`)} role="tab" aria-selected="false">JAVASCRIPT</a></li></ul><div class="tab-content"><div class="tab-pane fade active show"${ssrRenderAttr("id", `kt_highlight_${_ctx.htmlId}`)} role="tabpanel"><div class="highlight-code"><pre class="language-html"><code class="language-html">`);
      ssrRenderSlot(_ctx.$slots, "html", {}, null, _push, _parent);
      _push(`</code></pre></div></div><div class="tab-pane fade"${ssrRenderAttr("id", `kt_highlight_${_ctx.jsId}`)} role="tabpanel"><div class="highlight-code"><pre class="language-js"><code class="language-js">`);
      ssrRenderSlot(_ctx.$slots, "js", {}, null, _push, _parent);
      _push(`</code></pre></div></div></div></div></div>`);
    }
    const _sfc_setup$2G = _sfc_main$2G.setup;
    _sfc_main$2G.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/highlighters/CodeHighlighter2.vue");
      return _sfc_setup$2G ? _sfc_setup$2G(props, ctx) : void 0;
    };
    const CodeHighlighter2 = /* @__PURE__ */ _export_sfc(_sfc_main$2G, [["ssrRender", _sfc_ssrRender$2n]]);
    const __vite_glob_0_45 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CodeHighlighter2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2F = vueExports$1.defineComponent({
      name: "kt-menu-component",
      components: {},
      props: {
        menuSelector: { type: String, required: true }
      },
      setup(props) {
        vueExports$1.onMounted(() => {
          vueExports$1.nextTick(() => {
            MenuComponent$1.createInsance(props.menuSelector);
          });
        });
      }
    });
    function _sfc_ssrRender$2m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<!--[-->`);
      ssrRenderSlot(_ctx.$slots, "toggle", {}, null, _push, _parent);
      ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
      _push(`<!--]-->`);
    }
    const _sfc_setup$2F = _sfc_main$2F.setup;
    _sfc_main$2F.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/menu/MenuComponent.vue");
      return _sfc_setup$2F ? _sfc_setup$2F(props, ctx) : void 0;
    };
    const MenuComponent = /* @__PURE__ */ _export_sfc(_sfc_main$2F, [["ssrRender", _sfc_ssrRender$2m]]);
    const __vite_glob_0_54 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MenuComponent
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2E = vueExports$1.defineComponent({
      name: "message-out",
      props: {
        name: String,
        image: String,
        time: String,
        text: String
      }
    });
    function _sfc_ssrRender$2l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "d-flex justify-content-start mb-10" }, _attrs))}><div class="d-flex flex-column align-items-start"><div class="d-flex align-items-center mb-2"><div class="symbol symbol-35px symbol-circle"><img alt="Pic"${ssrRenderAttr("src", _ctx.image)}></div><div class="ms-3"><a href="#" class="fs-5 fw-bold text-gray-900 text-hover-primary me-1">${ssrInterpolate(_ctx.name)}</a><span class="text-muted fs-7 mb-1">${ssrInterpolate(_ctx.time)}</span></div></div><div class="p-5 rounded bg-light-info text-gray-900 fw-semibold mw-lg-400px text-start" data-kt-element="message-text">${ssrInterpolate(_ctx.text)}</div></div></div>`);
    }
    const _sfc_setup$2E = _sfc_main$2E.setup;
    _sfc_main$2E.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/messenger-parts/MessageIn.vue");
      return _sfc_setup$2E ? _sfc_setup$2E(props, ctx) : void 0;
    };
    const MessageIn = /* @__PURE__ */ _export_sfc(_sfc_main$2E, [["ssrRender", _sfc_ssrRender$2l]]);
    const __vite_glob_0_55 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MessageIn
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2D = vueExports$1.defineComponent({
      name: "message-out",
      props: {
        image: String,
        time: String,
        text: String
      }
    });
    function _sfc_ssrRender$2k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "d-flex justify-content-end mb-10" }, _attrs))}><div class="d-flex flex-column align-items-end"><div class="d-flex align-items-center mb-2"><div class="me-3"><span class="text-muted fs-7 mb-1">${ssrInterpolate(_ctx.time)}</span><a href="#" class="fs-5 fw-bold text-gray-900 text-hover-primary ms-1">You</a></div><div class="symbol symbol-35px symbol-circle"><img alt="Pic"${ssrRenderAttr("src", _ctx.image)}></div></div><div class="p-5 rounded bg-light-info text-gray-900 fw-semibold mw-lg-400px text-start" data-kt-element="message-text">${ssrInterpolate(_ctx.text)}</div></div></div>`);
    }
    const _sfc_setup$2D = _sfc_main$2D.setup;
    _sfc_main$2D.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/messenger-parts/MessageOut.vue");
      return _sfc_setup$2D ? _sfc_setup$2D(props, ctx) : void 0;
    };
    const MessageOut = /* @__PURE__ */ _export_sfc(_sfc_main$2D, [["ssrRender", _sfc_ssrRender$2k]]);
    const __vite_glob_0_56 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MessageOut
    }, Symbol.toStringTag, { value: "Module" }));
    /**
      * vee-validate v4.13.2
      * (c) 2024 Abdelrahman Awad
      * @license MIT
      */
    function isCallable(fn) {
      return typeof fn === "function";
    }
    function isNullOrUndefined(value) {
      return value === null || value === void 0;
    }
    const isObject = (obj) => obj !== null && !!obj && typeof obj === "object" && !Array.isArray(obj);
    function isIndex(value) {
      return Number(value) >= 0;
    }
    function toNumber(value) {
      const n = parseFloat(value);
      return isNaN(n) ? value : n;
    }
    function isObjectLike(value) {
      return typeof value === "object" && value !== null;
    }
    function getTag(value) {
      if (value == null) {
        return value === void 0 ? "[object Undefined]" : "[object Null]";
      }
      return Object.prototype.toString.call(value);
    }
    function isPlainObject(value) {
      if (!isObjectLike(value) || getTag(value) !== "[object Object]") {
        return false;
      }
      if (Object.getPrototypeOf(value) === null) {
        return true;
      }
      let proto = value;
      while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
      }
      return Object.getPrototypeOf(value) === proto;
    }
    function merge(target, source) {
      Object.keys(source).forEach((key2) => {
        if (isPlainObject(source[key2]) && isPlainObject(target[key2])) {
          if (!target[key2]) {
            target[key2] = {};
          }
          merge(target[key2], source[key2]);
          return;
        }
        target[key2] = source[key2];
      });
      return target;
    }
    function normalizeFormPath(path) {
      const pathArr = path.split(".");
      if (!pathArr.length) {
        return "";
      }
      let fullPath = String(pathArr[0]);
      for (let i = 1; i < pathArr.length; i++) {
        if (isIndex(pathArr[i])) {
          fullPath += `[${pathArr[i]}]`;
          continue;
        }
        fullPath += `.${pathArr[i]}`;
      }
      return fullPath;
    }
    const RULES = {};
    function resolveRule(id) {
      return RULES[id];
    }
    function set(obj, key2, val) {
      if (typeof val.value === "object")
        val.value = klona(val.value);
      if (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key2 === "__proto__") {
        Object.defineProperty(obj, key2, val);
      } else
        obj[key2] = val.value;
    }
    function klona(x) {
      if (typeof x !== "object")
        return x;
      var i = 0, k, list, tmp, str = Object.prototype.toString.call(x);
      if (str === "[object Object]") {
        tmp = Object.create(x.__proto__ || null);
      } else if (str === "[object Array]") {
        tmp = Array(x.length);
      } else if (str === "[object Set]") {
        tmp = /* @__PURE__ */ new Set();
        x.forEach(function(val) {
          tmp.add(klona(val));
        });
      } else if (str === "[object Map]") {
        tmp = /* @__PURE__ */ new Map();
        x.forEach(function(val, key2) {
          tmp.set(klona(key2), klona(val));
        });
      } else if (str === "[object Date]") {
        tmp = /* @__PURE__ */ new Date(+x);
      } else if (str === "[object RegExp]") {
        tmp = new RegExp(x.source, x.flags);
      } else if (str === "[object DataView]") {
        tmp = new x.constructor(klona(x.buffer));
      } else if (str === "[object ArrayBuffer]") {
        tmp = x.slice(0);
      } else if (str.slice(-6) === "Array]") {
        tmp = new x.constructor(x);
      }
      if (tmp) {
        for (list = Object.getOwnPropertySymbols(x); i < list.length; i++) {
          set(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));
        }
        for (i = 0, list = Object.getOwnPropertyNames(x); i < list.length; i++) {
          if (Object.hasOwnProperty.call(tmp, k = list[i]) && tmp[k] === x[k])
            continue;
          set(tmp, k, Object.getOwnPropertyDescriptor(x, k));
        }
      }
      return tmp || x;
    }
    const FormContextKey = Symbol("vee-validate-form");
    const FieldContextKey = Symbol("vee-validate-field-instance");
    const IS_ABSENT = Symbol("Default empty value");
    const isClient = typeof window !== "undefined";
    function isLocator(value) {
      return isCallable(value) && !!value.__locatorRef;
    }
    function isTypedSchema(value) {
      return !!value && isCallable(value.parse) && value.__type === "VVTypedSchema";
    }
    function isYupValidator(value) {
      return !!value && isCallable(value.validate);
    }
    function hasCheckedAttr(type) {
      return type === "checkbox" || type === "radio";
    }
    function isContainerValue(value) {
      return isObject(value) || Array.isArray(value);
    }
    function isEmptyContainer(value) {
      if (Array.isArray(value)) {
        return value.length === 0;
      }
      return isObject(value) && Object.keys(value).length === 0;
    }
    function isNotNestedPath(path) {
      return /^\[.+\]$/i.test(path);
    }
    function isNativeMultiSelect(el) {
      return isNativeSelect(el) && el.multiple;
    }
    function isNativeSelect(el) {
      return el.tagName === "SELECT";
    }
    function isNativeMultiSelectNode(tag2, attrs) {
      const hasTruthyBindingValue = ![false, null, void 0, 0].includes(attrs.multiple) && !Number.isNaN(attrs.multiple);
      return tag2 === "select" && "multiple" in attrs && hasTruthyBindingValue;
    }
    function shouldHaveValueBinding(tag2, attrs) {
      return !isNativeMultiSelectNode(tag2, attrs) && attrs.type !== "file" && !hasCheckedAttr(attrs.type);
    }
    function isFormSubmitEvent(evt) {
      return isEvent(evt) && evt.target && "submit" in evt.target;
    }
    function isEvent(evt) {
      if (!evt) {
        return false;
      }
      if (typeof Event !== "undefined" && isCallable(Event) && evt instanceof Event) {
        return true;
      }
      if (evt && evt.srcElement) {
        return true;
      }
      return false;
    }
    function isPropPresent(obj, prop) {
      return prop in obj && obj[prop] !== IS_ABSENT;
    }
    function isEqual(a, b) {
      if (a === b)
        return true;
      if (a && b && typeof a === "object" && typeof b === "object") {
        if (a.constructor !== b.constructor)
          return false;
        var length, i, keys;
        if (Array.isArray(a)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (!isEqual(a[i], b[i]))
              return false;
          return true;
        }
        if (a instanceof Map && b instanceof Map) {
          if (a.size !== b.size)
            return false;
          for (i of a.entries())
            if (!b.has(i[0]))
              return false;
          for (i of a.entries())
            if (!isEqual(i[1], b.get(i[0])))
              return false;
          return true;
        }
        if (isFile(a) && isFile(b)) {
          if (a.size !== b.size)
            return false;
          if (a.name !== b.name)
            return false;
          if (a.lastModified !== b.lastModified)
            return false;
          if (a.type !== b.type)
            return false;
          return true;
        }
        if (a instanceof Set && b instanceof Set) {
          if (a.size !== b.size)
            return false;
          for (i of a.entries())
            if (!b.has(i[0]))
              return false;
          return true;
        }
        if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (a[i] !== b[i])
              return false;
          return true;
        }
        if (a.constructor === RegExp)
          return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf)
          return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString)
          return a.toString() === b.toString();
        keys = Object.keys(a);
        length = keys.length;
        for (i = length; i-- !== 0; ) {
          var key2 = keys[i];
          if (!isEqual(a[key2], b[key2]))
            return false;
        }
        return true;
      }
      return a !== a && b !== b;
    }
    function isFile(a) {
      if (!isClient) {
        return false;
      }
      return a instanceof File;
    }
    function cleanupNonNestedPath(path) {
      if (isNotNestedPath(path)) {
        return path.replace(/\[|\]/gi, "");
      }
      return path;
    }
    function getFromPath(object, path, fallback) {
      if (!object) {
        return fallback;
      }
      if (isNotNestedPath(path)) {
        return object[cleanupNonNestedPath(path)];
      }
      const resolvedValue = (path || "").split(/\.|\[(\d+)\]/).filter(Boolean).reduce((acc, propKey) => {
        if (isContainerValue(acc) && propKey in acc) {
          return acc[propKey];
        }
        return fallback;
      }, object);
      return resolvedValue;
    }
    function setInPath(object, path, value) {
      if (isNotNestedPath(path)) {
        object[cleanupNonNestedPath(path)] = value;
        return;
      }
      const keys = path.split(/\.|\[(\d+)\]/).filter(Boolean);
      let acc = object;
      for (let i = 0; i < keys.length; i++) {
        if (i === keys.length - 1) {
          acc[keys[i]] = value;
          return;
        }
        if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {
          acc[keys[i]] = isIndex(keys[i + 1]) ? [] : {};
        }
        acc = acc[keys[i]];
      }
    }
    function unset(object, key2) {
      if (Array.isArray(object) && isIndex(key2)) {
        object.splice(Number(key2), 1);
        return;
      }
      if (isObject(object)) {
        delete object[key2];
      }
    }
    function unsetPath(object, path) {
      if (isNotNestedPath(path)) {
        delete object[cleanupNonNestedPath(path)];
        return;
      }
      const keys = path.split(/\.|\[(\d+)\]/).filter(Boolean);
      let acc = object;
      for (let i = 0; i < keys.length; i++) {
        if (i === keys.length - 1) {
          unset(acc, keys[i]);
          break;
        }
        if (!(keys[i] in acc) || isNullOrUndefined(acc[keys[i]])) {
          break;
        }
        acc = acc[keys[i]];
      }
      const pathValues = keys.map((_, idx) => {
        return getFromPath(object, keys.slice(0, idx).join("."));
      });
      for (let i = pathValues.length - 1; i >= 0; i--) {
        if (!isEmptyContainer(pathValues[i])) {
          continue;
        }
        if (i === 0) {
          unset(object, keys[0]);
          continue;
        }
        unset(pathValues[i - 1], keys[i - 1]);
      }
    }
    function keysOf(record) {
      return Object.keys(record);
    }
    function injectWithSelf(symbol, def = void 0) {
      const vm = vueExports$1.getCurrentInstance();
      return (vm === null || vm === void 0 ? void 0 : vm.provides[symbol]) || vueExports$1.inject(symbol, def);
    }
    function resolveNextCheckboxValue(currentValue, checkedValue, uncheckedValue) {
      if (Array.isArray(currentValue)) {
        const newVal = [...currentValue];
        const idx = newVal.findIndex((v) => isEqual(v, checkedValue));
        idx >= 0 ? newVal.splice(idx, 1) : newVal.push(checkedValue);
        return newVal;
      }
      return isEqual(currentValue, checkedValue) ? uncheckedValue : checkedValue;
    }
    function throttle(func, limit) {
      let inThrottle;
      let lastResult;
      return function(...args) {
        const context = this;
        if (!inThrottle) {
          inThrottle = true;
          setTimeout(() => inThrottle = false, limit);
          lastResult = func.apply(context, args);
        }
        return lastResult;
      };
    }
    function debounceAsync(inner, ms = 0) {
      let timer2 = null;
      let resolves = [];
      return function(...args) {
        if (timer2) {
          clearTimeout(timer2);
        }
        timer2 = setTimeout(() => {
          const result = inner(...args);
          resolves.forEach((r) => r(result));
          resolves = [];
        }, ms);
        return new Promise((resolve) => resolves.push(resolve));
      };
    }
    function applyModelModifiers(value, modifiers) {
      if (!isObject(modifiers)) {
        return value;
      }
      if (modifiers.number) {
        return toNumber(value);
      }
      return value;
    }
    function withLatest(fn, onDone) {
      let latestRun;
      return async function runLatest(...args) {
        const pending = fn(...args);
        latestRun = pending;
        const result = await pending;
        if (pending !== latestRun) {
          return result;
        }
        latestRun = void 0;
        return onDone(result, args);
      };
    }
    function normalizeErrorItem(message) {
      return Array.isArray(message) ? message : message ? [message] : [];
    }
    function omit(obj, keys) {
      const target = {};
      for (const key2 in obj) {
        if (!keys.includes(key2)) {
          target[key2] = obj[key2];
        }
      }
      return target;
    }
    function debounceNextTick(inner) {
      let lastTick = null;
      let resolves = [];
      return function(...args) {
        const thisTick = vueExports$1.nextTick(() => {
          if (lastTick !== thisTick) {
            return;
          }
          const result = inner(...args);
          resolves.forEach((r) => r(result));
          resolves = [];
          lastTick = null;
        });
        lastTick = thisTick;
        return new Promise((resolve) => resolves.push(resolve));
      };
    }
    function normalizeChildren(tag2, context, slotProps) {
      if (!context.slots.default) {
        return context.slots.default;
      }
      if (typeof tag2 === "string" || !tag2) {
        return context.slots.default(slotProps());
      }
      return {
        default: () => {
          var _a2, _b;
          return (_b = (_a2 = context.slots).default) === null || _b === void 0 ? void 0 : _b.call(_a2, slotProps());
        }
      };
    }
    function getBoundValue(el) {
      if (hasValueBinding(el)) {
        return el._value;
      }
      return void 0;
    }
    function hasValueBinding(el) {
      return "_value" in el;
    }
    function parseInputValue(el) {
      if (el.type === "number") {
        return Number.isNaN(el.valueAsNumber) ? el.value : el.valueAsNumber;
      }
      if (el.type === "range") {
        return Number.isNaN(el.valueAsNumber) ? el.value : el.valueAsNumber;
      }
      return el.value;
    }
    function normalizeEventValue(value) {
      if (!isEvent(value)) {
        return value;
      }
      const input = value.target;
      if (hasCheckedAttr(input.type) && hasValueBinding(input)) {
        return getBoundValue(input);
      }
      if (input.type === "file" && input.files) {
        const files = Array.from(input.files);
        return input.multiple ? files : files[0];
      }
      if (isNativeMultiSelect(input)) {
        return Array.from(input.options).filter((opt) => opt.selected && !opt.disabled).map(getBoundValue);
      }
      if (isNativeSelect(input)) {
        const selectedOption = Array.from(input.options).find((opt) => opt.selected);
        return selectedOption ? getBoundValue(selectedOption) : input.value;
      }
      return parseInputValue(input);
    }
    function normalizeRules(rules) {
      const acc = {};
      Object.defineProperty(acc, "_$$isNormalized", {
        value: true,
        writable: false,
        enumerable: false,
        configurable: false
      });
      if (!rules) {
        return acc;
      }
      if (isObject(rules) && rules._$$isNormalized) {
        return rules;
      }
      if (isObject(rules)) {
        return Object.keys(rules).reduce((prev, curr) => {
          const params = normalizeParams(rules[curr]);
          if (rules[curr] !== false) {
            prev[curr] = buildParams(params);
          }
          return prev;
        }, acc);
      }
      if (typeof rules !== "string") {
        return acc;
      }
      return rules.split("|").reduce((prev, rule) => {
        const parsedRule = parseRule(rule);
        if (!parsedRule.name) {
          return prev;
        }
        prev[parsedRule.name] = buildParams(parsedRule.params);
        return prev;
      }, acc);
    }
    function normalizeParams(params) {
      if (params === true) {
        return [];
      }
      if (Array.isArray(params)) {
        return params;
      }
      if (isObject(params)) {
        return params;
      }
      return [params];
    }
    function buildParams(provided) {
      const mapValueToLocator = (value) => {
        if (typeof value === "string" && value[0] === "@") {
          return createLocator(value.slice(1));
        }
        return value;
      };
      if (Array.isArray(provided)) {
        return provided.map(mapValueToLocator);
      }
      if (provided instanceof RegExp) {
        return [provided];
      }
      return Object.keys(provided).reduce((prev, key2) => {
        prev[key2] = mapValueToLocator(provided[key2]);
        return prev;
      }, {});
    }
    const parseRule = (rule) => {
      let params = [];
      const name = rule.split(":")[0];
      if (rule.includes(":")) {
        params = rule.split(":").slice(1).join(":").split(",");
      }
      return { name, params };
    };
    function createLocator(value) {
      const locator = (crossTable) => {
        const val = getFromPath(crossTable, value) || crossTable[value];
        return val;
      };
      locator.__locatorRef = value;
      return locator;
    }
    function extractLocators(params) {
      if (Array.isArray(params)) {
        return params.filter(isLocator);
      }
      return keysOf(params).filter((key2) => isLocator(params[key2])).map((key2) => params[key2]);
    }
    const DEFAULT_CONFIG = {
      generateMessage: ({ field }) => `${field} is not valid.`,
      bails: true,
      validateOnBlur: true,
      validateOnChange: true,
      validateOnInput: false,
      validateOnModelUpdate: true
    };
    let currentConfig = Object.assign({}, DEFAULT_CONFIG);
    const getConfig = () => currentConfig;
    async function validate(value, rules, options = {}) {
      const shouldBail = options === null || options === void 0 ? void 0 : options.bails;
      const field = {
        name: (options === null || options === void 0 ? void 0 : options.name) || "{field}",
        rules,
        label: options === null || options === void 0 ? void 0 : options.label,
        bails: shouldBail !== null && shouldBail !== void 0 ? shouldBail : true,
        formData: (options === null || options === void 0 ? void 0 : options.values) || {}
      };
      const result = await _validate(field, value);
      return Object.assign(Object.assign({}, result), { valid: !result.errors.length });
    }
    async function _validate(field, value) {
      const rules = field.rules;
      if (isTypedSchema(rules) || isYupValidator(rules)) {
        return validateFieldWithTypedSchema(value, Object.assign(Object.assign({}, field), { rules }));
      }
      if (isCallable(rules) || Array.isArray(rules)) {
        const ctx = {
          field: field.label || field.name,
          name: field.name,
          label: field.label,
          form: field.formData,
          value
        };
        const pipeline = Array.isArray(rules) ? rules : [rules];
        const length2 = pipeline.length;
        const errors2 = [];
        for (let i = 0; i < length2; i++) {
          const rule = pipeline[i];
          const result = await rule(value, ctx);
          const isValid = typeof result !== "string" && !Array.isArray(result) && result;
          if (isValid) {
            continue;
          }
          if (Array.isArray(result)) {
            errors2.push(...result);
          } else {
            const message = typeof result === "string" ? result : _generateFieldError(ctx);
            errors2.push(message);
          }
          if (field.bails) {
            return {
              errors: errors2
            };
          }
        }
        return {
          errors: errors2
        };
      }
      const normalizedContext = Object.assign(Object.assign({}, field), { rules: normalizeRules(rules) });
      const errors = [];
      const rulesKeys = Object.keys(normalizedContext.rules);
      const length = rulesKeys.length;
      for (let i = 0; i < length; i++) {
        const rule = rulesKeys[i];
        const result = await _test(normalizedContext, value, {
          name: rule,
          params: normalizedContext.rules[rule]
        });
        if (result.error) {
          errors.push(result.error);
          if (field.bails) {
            return {
              errors
            };
          }
        }
      }
      return {
        errors
      };
    }
    function isYupError(err) {
      return !!err && err.name === "ValidationError";
    }
    function yupToTypedSchema(yupSchema) {
      const schema = {
        __type: "VVTypedSchema",
        async parse(values, context) {
          var _a2;
          try {
            const output = await yupSchema.validate(values, { abortEarly: false, context: (context === null || context === void 0 ? void 0 : context.formData) || {} });
            return {
              output,
              errors: []
            };
          } catch (err) {
            if (!isYupError(err)) {
              throw err;
            }
            if (!((_a2 = err.inner) === null || _a2 === void 0 ? void 0 : _a2.length) && err.errors.length) {
              return { errors: [{ path: err.path, errors: err.errors }] };
            }
            const errors = err.inner.reduce((acc, curr) => {
              const path = curr.path || "";
              if (!acc[path]) {
                acc[path] = { errors: [], path };
              }
              acc[path].errors.push(...curr.errors);
              return acc;
            }, {});
            return { errors: Object.values(errors) };
          }
        }
      };
      return schema;
    }
    async function validateFieldWithTypedSchema(value, context) {
      const typedSchema = isTypedSchema(context.rules) ? context.rules : yupToTypedSchema(context.rules);
      const result = await typedSchema.parse(value, { formData: context.formData });
      const messages2 = [];
      for (const error of result.errors) {
        if (error.errors.length) {
          messages2.push(...error.errors);
        }
      }
      return {
        value: result.value,
        errors: messages2
      };
    }
    async function _test(field, value, rule) {
      const validator = resolveRule(rule.name);
      if (!validator) {
        throw new Error(`No such validator '${rule.name}' exists.`);
      }
      const params = fillTargetValues(rule.params, field.formData);
      const ctx = {
        field: field.label || field.name,
        name: field.name,
        label: field.label,
        value,
        form: field.formData,
        rule: Object.assign(Object.assign({}, rule), { params })
      };
      const result = await validator(value, params, ctx);
      if (typeof result === "string") {
        return {
          error: result
        };
      }
      return {
        error: result ? void 0 : _generateFieldError(ctx)
      };
    }
    function _generateFieldError(fieldCtx) {
      const message = getConfig().generateMessage;
      if (!message) {
        return "Field is invalid";
      }
      return message(fieldCtx);
    }
    function fillTargetValues(params, crossTable) {
      const normalize = (value) => {
        if (isLocator(value)) {
          return value(crossTable);
        }
        return value;
      };
      if (Array.isArray(params)) {
        return params.map(normalize);
      }
      return Object.keys(params).reduce((acc, param) => {
        acc[param] = normalize(params[param]);
        return acc;
      }, {});
    }
    async function validateTypedSchema(schema, values) {
      const typedSchema = isTypedSchema(schema) ? schema : yupToTypedSchema(schema);
      const validationResult = await typedSchema.parse(klona(values));
      const results = {};
      const errors = {};
      for (const error of validationResult.errors) {
        const messages2 = error.errors;
        const path = (error.path || "").replace(/\["(\d+)"\]/g, (_, m) => {
          return `[${m}]`;
        });
        results[path] = { valid: !messages2.length, errors: messages2 };
        if (messages2.length) {
          errors[path] = messages2[0];
        }
      }
      return {
        valid: !validationResult.errors.length,
        results,
        errors,
        values: validationResult.value,
        source: "schema"
      };
    }
    async function validateObjectSchema(schema, values, opts) {
      const paths = keysOf(schema);
      const validations = paths.map(async (path) => {
        var _a2, _b, _c;
        const strings = (_a2 = opts === null || opts === void 0 ? void 0 : opts.names) === null || _a2 === void 0 ? void 0 : _a2[path];
        const fieldResult = await validate(getFromPath(values, path), schema[path], {
          name: (strings === null || strings === void 0 ? void 0 : strings.name) || path,
          label: strings === null || strings === void 0 ? void 0 : strings.label,
          values,
          bails: (_c = (_b = opts === null || opts === void 0 ? void 0 : opts.bailsMap) === null || _b === void 0 ? void 0 : _b[path]) !== null && _c !== void 0 ? _c : true
        });
        return Object.assign(Object.assign({}, fieldResult), { path });
      });
      let isAllValid = true;
      const validationResults = await Promise.all(validations);
      const results = {};
      const errors = {};
      for (const result of validationResults) {
        results[result.path] = {
          valid: result.valid,
          errors: result.errors
        };
        if (!result.valid) {
          isAllValid = false;
          errors[result.path] = result.errors[0];
        }
      }
      return {
        valid: isAllValid,
        results,
        errors,
        source: "schema"
      };
    }
    let ID_COUNTER = 0;
    function useFieldState(path, init) {
      const { value, initialValue, setInitialValue } = _useFieldValue(path, init.modelValue, init.form);
      if (!init.form) {
        let setState2 = function(state2) {
          var _a2;
          if ("value" in state2) {
            value.value = state2.value;
          }
          if ("errors" in state2) {
            setErrors(state2.errors);
          }
          if ("touched" in state2) {
            meta.touched = (_a2 = state2.touched) !== null && _a2 !== void 0 ? _a2 : meta.touched;
          }
          if ("initialValue" in state2) {
            setInitialValue(state2.initialValue);
          }
        };
        const { errors: errors2, setErrors } = createFieldErrors();
        const id = ID_COUNTER >= Number.MAX_SAFE_INTEGER ? 0 : ++ID_COUNTER;
        const meta = createFieldMeta(value, initialValue, errors2, init.schema);
        return {
          id,
          path,
          value,
          initialValue,
          meta,
          flags: { pendingUnmount: { [id]: false }, pendingReset: false },
          errors: errors2,
          setState: setState2
        };
      }
      const state = init.form.createPathState(path, {
        bails: init.bails,
        label: init.label,
        type: init.type,
        validate: init.validate,
        schema: init.schema
      });
      const errors = vueExports$1.computed(() => state.errors);
      function setState(state2) {
        var _a2, _b, _c;
        if ("value" in state2) {
          value.value = state2.value;
        }
        if ("errors" in state2) {
          (_a2 = init.form) === null || _a2 === void 0 ? void 0 : _a2.setFieldError(vueExports$1.unref(path), state2.errors);
        }
        if ("touched" in state2) {
          (_b = init.form) === null || _b === void 0 ? void 0 : _b.setFieldTouched(vueExports$1.unref(path), (_c = state2.touched) !== null && _c !== void 0 ? _c : false);
        }
        if ("initialValue" in state2) {
          setInitialValue(state2.initialValue);
        }
      }
      return {
        id: Array.isArray(state.id) ? state.id[state.id.length - 1] : state.id,
        path,
        value,
        errors,
        meta: state,
        initialValue,
        flags: state.__flags,
        setState
      };
    }
    function _useFieldValue(path, modelValue, form) {
      const modelRef = vueExports$1.ref(vueExports$1.unref(modelValue));
      function resolveInitialValue2() {
        if (!form) {
          return vueExports$1.unref(modelRef);
        }
        return getFromPath(form.initialValues.value, vueExports$1.unref(path), vueExports$1.unref(modelRef));
      }
      function setInitialValue(value2) {
        if (!form) {
          modelRef.value = value2;
          return;
        }
        form.setFieldInitialValue(vueExports$1.unref(path), value2, true);
      }
      const initialValue = vueExports$1.computed(resolveInitialValue2);
      if (!form) {
        const value2 = vueExports$1.ref(resolveInitialValue2());
        return {
          value: value2,
          initialValue,
          setInitialValue
        };
      }
      const currentValue = resolveModelValue(modelValue, form, initialValue, path);
      form.stageInitialValue(vueExports$1.unref(path), currentValue, true);
      const value = vueExports$1.computed({
        get() {
          return getFromPath(form.values, vueExports$1.unref(path));
        },
        set(newVal) {
          form.setFieldValue(vueExports$1.unref(path), newVal, false);
        }
      });
      return {
        value,
        initialValue,
        setInitialValue
      };
    }
    function resolveModelValue(modelValue, form, initialValue, path) {
      if (vueExports$1.isRef(modelValue)) {
        return vueExports$1.unref(modelValue);
      }
      if (modelValue !== void 0) {
        return modelValue;
      }
      return getFromPath(form.values, vueExports$1.unref(path), vueExports$1.unref(initialValue));
    }
    function createFieldMeta(currentValue, initialValue, errors, schema) {
      const isRequired = vueExports$1.computed(() => {
        var _a2, _b, _c;
        return (_c = (_b = (_a2 = vueExports$1.toValue(schema)) === null || _a2 === void 0 ? void 0 : _a2.describe) === null || _b === void 0 ? void 0 : _b.call(_a2).required) !== null && _c !== void 0 ? _c : false;
      });
      const meta = vueExports$1.reactive({
        touched: false,
        pending: false,
        valid: true,
        required: isRequired,
        validated: !!vueExports$1.unref(errors).length,
        initialValue: vueExports$1.computed(() => vueExports$1.unref(initialValue)),
        dirty: vueExports$1.computed(() => {
          return !isEqual(vueExports$1.unref(currentValue), vueExports$1.unref(initialValue));
        })
      });
      vueExports$1.watch(errors, (value) => {
        meta.valid = !value.length;
      }, {
        immediate: true,
        flush: "sync"
      });
      return meta;
    }
    function createFieldErrors() {
      const errors = vueExports$1.ref([]);
      return {
        errors,
        setErrors: (messages2) => {
          errors.value = normalizeErrorItem(messages2);
        }
      };
    }
    function installDevtoolsPlugin(app) {
      if (process.env.NODE_ENV !== "production") {
        setupDevtoolsPlugin({
          id: "vee-validate-devtools-plugin",
          label: "VeeValidate Plugin",
          packageName: "vee-validate",
          homepage: "https://vee-validate.logaretm.com/v4",
          app,
          logo: "https://vee-validate.logaretm.com/v4/logo.png"
        }, setupApiHooks);
      }
    }
    const DEVTOOLS_FORMS = {};
    const DEVTOOLS_FIELDS = {};
    let API;
    const refreshInspector = throttle(() => {
      setTimeout(async () => {
        await vueExports$1.nextTick();
        API === null || API === void 0 ? void 0 : API.sendInspectorState(INSPECTOR_ID);
        API === null || API === void 0 ? void 0 : API.sendInspectorTree(INSPECTOR_ID);
      }, 100);
    }, 100);
    function registerFormWithDevTools(form) {
      const vm = vueExports$1.getCurrentInstance();
      if (!API) {
        const app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;
        if (!app) {
          return;
        }
        installDevtoolsPlugin(app);
      }
      DEVTOOLS_FORMS[form.formId] = Object.assign({}, form);
      DEVTOOLS_FORMS[form.formId]._vm = vm;
      vueExports$1.onUnmounted(() => {
        delete DEVTOOLS_FORMS[form.formId];
        refreshInspector();
      });
      refreshInspector();
    }
    function registerSingleFieldWithDevtools(field) {
      const vm = vueExports$1.getCurrentInstance();
      if (!API) {
        const app = vm === null || vm === void 0 ? void 0 : vm.appContext.app;
        if (!app) {
          return;
        }
        installDevtoolsPlugin(app);
      }
      DEVTOOLS_FIELDS[field.id] = Object.assign({}, field);
      DEVTOOLS_FIELDS[field.id]._vm = vm;
      vueExports$1.onUnmounted(() => {
        delete DEVTOOLS_FIELDS[field.id];
        refreshInspector();
      });
      refreshInspector();
    }
    const INSPECTOR_ID = "vee-validate-inspector";
    const COLORS = {
      error: 12405579,
      success: 448379,
      unknown: 5522283,
      white: 16777215,
      black: 0,
      blue: 218007,
      purple: 12157168,
      orange: 16099682,
      gray: 12304330
    };
    let SELECTED_NODE = null;
    function setupApiHooks(api) {
      API = api;
      api.addInspector({
        id: INSPECTOR_ID,
        icon: "rule",
        label: "vee-validate",
        noSelectionText: "Select a vee-validate node to inspect",
        actions: [
          {
            icon: "done_outline",
            tooltip: "Validate selected item",
            action: async () => {
              if (!SELECTED_NODE) {
                console.error("There is not a valid selected vee-validate node or component");
                return;
              }
              if (SELECTED_NODE.type === "field") {
                await SELECTED_NODE.field.validate();
                return;
              }
              if (SELECTED_NODE.type === "form") {
                await SELECTED_NODE.form.validate();
                return;
              }
              if (SELECTED_NODE.type === "pathState") {
                await SELECTED_NODE.form.validateField(SELECTED_NODE.state.path);
              }
            }
          },
          {
            icon: "delete_sweep",
            tooltip: "Clear validation state of the selected item",
            action: () => {
              if (!SELECTED_NODE) {
                console.error("There is not a valid selected vee-validate node or component");
                return;
              }
              if (SELECTED_NODE.type === "field") {
                SELECTED_NODE.field.resetField();
                return;
              }
              if (SELECTED_NODE.type === "form") {
                SELECTED_NODE.form.resetForm();
              }
              if (SELECTED_NODE.type === "pathState") {
                SELECTED_NODE.form.resetField(SELECTED_NODE.state.path);
              }
            }
          }
        ]
      });
      api.on.getInspectorTree((payload) => {
        if (payload.inspectorId !== INSPECTOR_ID) {
          return;
        }
        const forms = Object.values(DEVTOOLS_FORMS);
        const fields = Object.values(DEVTOOLS_FIELDS);
        payload.rootNodes = [
          ...forms.map(mapFormForDevtoolsInspector),
          ...fields.map((field) => mapFieldForDevtoolsInspector(field))
        ];
      });
      api.on.getInspectorState((payload, ctx) => {
        if (payload.inspectorId !== INSPECTOR_ID || ctx.currentTab !== `custom-inspector:${INSPECTOR_ID}`) {
          return;
        }
        const { form, field, state, type } = decodeNodeId(payload.nodeId);
        if (form && type === "form") {
          payload.state = buildFormState(form);
          SELECTED_NODE = { type: "form", form };
          return;
        }
        if (state && type === "pathState" && form) {
          payload.state = buildFieldState(state);
          SELECTED_NODE = { type: "pathState", state, form };
          return;
        }
        if (field && type === "field") {
          payload.state = buildFieldState({
            errors: field.errors.value,
            dirty: field.meta.dirty,
            valid: field.meta.valid,
            touched: field.meta.touched,
            value: field.value.value,
            initialValue: field.meta.initialValue
          });
          SELECTED_NODE = { field, type: "field" };
          return;
        }
        SELECTED_NODE = null;
      });
    }
    function mapFormForDevtoolsInspector(form) {
      const { textColor, bgColor } = getValidityColors(form.meta.value.valid);
      const formTreeNodes = {};
      Object.values(form.getAllPathStates()).forEach((state) => {
        setInPath(formTreeNodes, vueExports$1.unref(state.path), mapPathForDevtoolsInspector(state, form));
      });
      function buildFormTree(tree2, path = []) {
        const key2 = [...path].pop();
        if ("id" in tree2) {
          return Object.assign(Object.assign({}, tree2), { label: key2 || tree2.label });
        }
        if (isObject(tree2)) {
          return {
            id: `${path.join(".")}`,
            label: key2 || "",
            children: Object.keys(tree2).map((key3) => buildFormTree(tree2[key3], [...path, key3]))
          };
        }
        if (Array.isArray(tree2)) {
          return {
            id: `${path.join(".")}`,
            label: `${key2}[]`,
            children: tree2.map((c, idx) => buildFormTree(c, [...path, String(idx)]))
          };
        }
        return { id: "", label: "", children: [] };
      }
      const { children } = buildFormTree(formTreeNodes);
      return {
        id: encodeNodeId(form),
        label: "Form",
        children,
        tags: [
          {
            label: "Form",
            textColor,
            backgroundColor: bgColor
          },
          {
            label: `${form.getAllPathStates().length} fields`,
            textColor: COLORS.white,
            backgroundColor: COLORS.unknown
          }
        ]
      };
    }
    function mapPathForDevtoolsInspector(state, form) {
      return {
        id: encodeNodeId(form, state),
        label: vueExports$1.unref(state.path),
        tags: getFieldNodeTags(state.multiple, state.fieldsCount, state.type, state.valid, form)
      };
    }
    function mapFieldForDevtoolsInspector(field, form) {
      return {
        id: encodeNodeId(form, field),
        label: vueExports$1.unref(field.name),
        tags: getFieldNodeTags(false, 1, field.type, field.meta.valid, form)
      };
    }
    function getFieldNodeTags(multiple, fieldsCount, type, valid, form) {
      const { textColor, bgColor } = getValidityColors(valid);
      return [
        multiple ? void 0 : {
          label: "Field",
          textColor,
          backgroundColor: bgColor
        },
        !form ? {
          label: "Standalone",
          textColor: COLORS.black,
          backgroundColor: COLORS.gray
        } : void 0,
        type === "checkbox" ? {
          label: "Checkbox",
          textColor: COLORS.white,
          backgroundColor: COLORS.blue
        } : void 0,
        type === "radio" ? {
          label: "Radio",
          textColor: COLORS.white,
          backgroundColor: COLORS.purple
        } : void 0,
        multiple ? {
          label: "Multiple",
          textColor: COLORS.black,
          backgroundColor: COLORS.orange
        } : void 0
      ].filter(Boolean);
    }
    function encodeNodeId(form, stateOrField) {
      const type = stateOrField ? "path" in stateOrField ? "pathState" : "field" : "form";
      const fieldPath = stateOrField ? "path" in stateOrField ? stateOrField === null || stateOrField === void 0 ? void 0 : stateOrField.path : vueExports$1.unref(stateOrField === null || stateOrField === void 0 ? void 0 : stateOrField.name) : "";
      const idObject = { f: form === null || form === void 0 ? void 0 : form.formId, ff: fieldPath, type };
      return btoa(encodeURIComponent(JSON.stringify(idObject)));
    }
    function decodeNodeId(nodeId) {
      try {
        const idObject = JSON.parse(decodeURIComponent(atob(nodeId)));
        const form = DEVTOOLS_FORMS[idObject.f];
        if (!form && idObject.ff) {
          const field = DEVTOOLS_FIELDS[idObject.ff];
          if (!field) {
            return {};
          }
          return {
            type: idObject.type,
            field
          };
        }
        if (!form) {
          return {};
        }
        const state = form.getPathState(idObject.ff);
        return {
          type: idObject.type,
          form,
          state
        };
      } catch (err) {
      }
      return {};
    }
    function buildFieldState(state) {
      return {
        "Field state": [
          { key: "errors", value: state.errors },
          {
            key: "initialValue",
            value: state.initialValue
          },
          {
            key: "currentValue",
            value: state.value
          },
          {
            key: "touched",
            value: state.touched
          },
          {
            key: "dirty",
            value: state.dirty
          },
          {
            key: "valid",
            value: state.valid
          }
        ]
      };
    }
    function buildFormState(form) {
      const { errorBag, meta, values, isSubmitting, isValidating, submitCount } = form;
      return {
        "Form state": [
          {
            key: "submitCount",
            value: submitCount.value
          },
          {
            key: "isSubmitting",
            value: isSubmitting.value
          },
          {
            key: "isValidating",
            value: isValidating.value
          },
          {
            key: "touched",
            value: meta.value.touched
          },
          {
            key: "dirty",
            value: meta.value.dirty
          },
          {
            key: "valid",
            value: meta.value.valid
          },
          {
            key: "initialValues",
            value: meta.value.initialValues
          },
          {
            key: "currentValues",
            value: values
          },
          {
            key: "errors",
            value: keysOf(errorBag.value).reduce((acc, key2) => {
              var _a2;
              const message = (_a2 = errorBag.value[key2]) === null || _a2 === void 0 ? void 0 : _a2[0];
              if (message) {
                acc[key2] = message;
              }
              return acc;
            }, {})
          }
        ]
      };
    }
    function getValidityColors(valid) {
      return {
        bgColor: valid ? COLORS.success : COLORS.error,
        textColor: valid ? COLORS.black : COLORS.white
      };
    }
    function useField(path, rules, opts) {
      if (hasCheckedAttr(opts === null || opts === void 0 ? void 0 : opts.type)) {
        return useFieldWithChecked(path, rules, opts);
      }
      return _useField(path, rules, opts);
    }
    function _useField(path, rules, opts) {
      const { initialValue: modelValue, validateOnMount, bails, type, checkedValue, label, validateOnValueUpdate, uncheckedValue, controlled, keepValueOnUnmount, syncVModel, form: controlForm } = normalizeOptions(opts);
      const injectedForm = controlled ? injectWithSelf(FormContextKey) : void 0;
      const form = controlForm || injectedForm;
      const name = vueExports$1.computed(() => normalizeFormPath(vueExports$1.toValue(path)));
      const validator = vueExports$1.computed(() => {
        const schema = vueExports$1.toValue(form === null || form === void 0 ? void 0 : form.schema);
        if (schema) {
          return void 0;
        }
        const rulesValue = vueExports$1.unref(rules);
        if (isYupValidator(rulesValue) || isTypedSchema(rulesValue) || isCallable(rulesValue) || Array.isArray(rulesValue)) {
          return rulesValue;
        }
        return normalizeRules(rulesValue);
      });
      const isTyped = !isCallable(validator.value) && isTypedSchema(vueExports$1.toValue(rules));
      const { id, value, initialValue, meta, setState, errors, flags } = useFieldState(name, {
        modelValue,
        form,
        bails,
        label,
        type,
        validate: validator.value ? validate$1 : void 0,
        schema: isTyped ? rules : void 0
      });
      const errorMessage = vueExports$1.computed(() => errors.value[0]);
      if (syncVModel) {
        useVModel({
          value,
          prop: syncVModel,
          handleChange,
          shouldValidate: () => validateOnValueUpdate && !flags.pendingReset
        });
      }
      const handleBlur = (evt, shouldValidate = false) => {
        meta.touched = true;
        if (shouldValidate) {
          validateWithStateMutation();
        }
      };
      async function validateCurrentValue(mode) {
        var _a2, _b;
        if (form === null || form === void 0 ? void 0 : form.validateSchema) {
          const { results } = await form.validateSchema(mode);
          return (_a2 = results[vueExports$1.toValue(name)]) !== null && _a2 !== void 0 ? _a2 : { valid: true, errors: [] };
        }
        if (validator.value) {
          return validate(value.value, validator.value, {
            name: vueExports$1.toValue(name),
            label: vueExports$1.toValue(label),
            values: (_b = form === null || form === void 0 ? void 0 : form.values) !== null && _b !== void 0 ? _b : {},
            bails
          });
        }
        return { valid: true, errors: [] };
      }
      const validateWithStateMutation = withLatest(async () => {
        meta.pending = true;
        meta.validated = true;
        return validateCurrentValue("validated-only");
      }, (result) => {
        if (flags.pendingUnmount[field.id]) {
          return result;
        }
        setState({ errors: result.errors });
        meta.pending = false;
        meta.valid = result.valid;
        return result;
      });
      const validateValidStateOnly = withLatest(async () => {
        return validateCurrentValue("silent");
      }, (result) => {
        meta.valid = result.valid;
        return result;
      });
      function validate$1(opts2) {
        if ((opts2 === null || opts2 === void 0 ? void 0 : opts2.mode) === "silent") {
          return validateValidStateOnly();
        }
        return validateWithStateMutation();
      }
      function handleChange(e, shouldValidate = true) {
        const newValue = normalizeEventValue(e);
        setValue(newValue, shouldValidate);
      }
      vueExports$1.onMounted(() => {
        if (validateOnMount) {
          return validateWithStateMutation();
        }
        if (!form || !form.validateSchema) {
          validateValidStateOnly();
        }
      });
      function setTouched(isTouched) {
        meta.touched = isTouched;
      }
      function resetField(state) {
        var _a2;
        const newValue = state && "value" in state ? state.value : initialValue.value;
        setState({
          value: klona(newValue),
          initialValue: klona(newValue),
          touched: (_a2 = state === null || state === void 0 ? void 0 : state.touched) !== null && _a2 !== void 0 ? _a2 : false,
          errors: (state === null || state === void 0 ? void 0 : state.errors) || []
        });
        meta.pending = false;
        meta.validated = false;
        validateValidStateOnly();
      }
      const vm = vueExports$1.getCurrentInstance();
      function setValue(newValue, shouldValidate = true) {
        value.value = vm && syncVModel ? applyModelModifiers(newValue, vm.props.modelModifiers) : newValue;
        const validateFn = shouldValidate ? validateWithStateMutation : validateValidStateOnly;
        validateFn();
      }
      function setErrors(errors2) {
        setState({ errors: Array.isArray(errors2) ? errors2 : [errors2] });
      }
      const valueProxy = vueExports$1.computed({
        get() {
          return value.value;
        },
        set(newValue) {
          setValue(newValue, validateOnValueUpdate);
        }
      });
      const field = {
        id,
        name,
        label,
        value: valueProxy,
        meta,
        errors,
        errorMessage,
        type,
        checkedValue,
        uncheckedValue,
        bails,
        keepValueOnUnmount,
        resetField,
        handleReset: () => resetField(),
        validate: validate$1,
        handleChange,
        handleBlur,
        setState,
        setTouched,
        setErrors,
        setValue
      };
      vueExports$1.provide(FieldContextKey, field);
      if (vueExports$1.isRef(rules) && typeof vueExports$1.unref(rules) !== "function") {
        vueExports$1.watch(rules, (value2, oldValue) => {
          if (isEqual(value2, oldValue)) {
            return;
          }
          meta.validated ? validateWithStateMutation() : validateValidStateOnly();
        }, {
          deep: true
        });
      }
      if (process.env.NODE_ENV !== "production") {
        field._vm = vueExports$1.getCurrentInstance();
        vueExports$1.watch(() => Object.assign(Object.assign({ errors: errors.value }, meta), { value: value.value }), refreshInspector, {
          deep: true
        });
        if (!form) {
          registerSingleFieldWithDevtools(field);
        }
      }
      if (!form) {
        return field;
      }
      const dependencies = vueExports$1.computed(() => {
        const rulesVal = validator.value;
        if (!rulesVal || isCallable(rulesVal) || isYupValidator(rulesVal) || isTypedSchema(rulesVal) || Array.isArray(rulesVal)) {
          return {};
        }
        return Object.keys(rulesVal).reduce((acc, rule) => {
          const deps = extractLocators(rulesVal[rule]).map((dep) => dep.__locatorRef).reduce((depAcc, depName) => {
            const depValue = getFromPath(form.values, depName) || form.values[depName];
            if (depValue !== void 0) {
              depAcc[depName] = depValue;
            }
            return depAcc;
          }, {});
          Object.assign(acc, deps);
          return acc;
        }, {});
      });
      vueExports$1.watch(dependencies, (deps, oldDeps) => {
        if (!Object.keys(deps).length) {
          return;
        }
        const shouldValidate = !isEqual(deps, oldDeps);
        if (shouldValidate) {
          meta.validated ? validateWithStateMutation() : validateValidStateOnly();
        }
      });
      vueExports$1.onBeforeUnmount(() => {
        var _a2;
        const shouldKeepValue = (_a2 = vueExports$1.toValue(field.keepValueOnUnmount)) !== null && _a2 !== void 0 ? _a2 : vueExports$1.toValue(form.keepValuesOnUnmount);
        const path2 = vueExports$1.toValue(name);
        if (shouldKeepValue || !form || flags.pendingUnmount[field.id]) {
          form === null || form === void 0 ? void 0 : form.removePathState(path2, id);
          return;
        }
        flags.pendingUnmount[field.id] = true;
        const pathState = form.getPathState(path2);
        const matchesId = Array.isArray(pathState === null || pathState === void 0 ? void 0 : pathState.id) && (pathState === null || pathState === void 0 ? void 0 : pathState.multiple) ? pathState === null || pathState === void 0 ? void 0 : pathState.id.includes(field.id) : (pathState === null || pathState === void 0 ? void 0 : pathState.id) === field.id;
        if (!matchesId) {
          return;
        }
        if ((pathState === null || pathState === void 0 ? void 0 : pathState.multiple) && Array.isArray(pathState.value)) {
          const valueIdx = pathState.value.findIndex((i) => isEqual(i, vueExports$1.toValue(field.checkedValue)));
          if (valueIdx > -1) {
            const newVal = [...pathState.value];
            newVal.splice(valueIdx, 1);
            form.setFieldValue(path2, newVal);
          }
          if (Array.isArray(pathState.id)) {
            pathState.id.splice(pathState.id.indexOf(field.id), 1);
          }
        } else {
          form.unsetPathValue(vueExports$1.toValue(name));
        }
        form.removePathState(path2, id);
      });
      return field;
    }
    function normalizeOptions(opts) {
      const defaults = () => ({
        initialValue: void 0,
        validateOnMount: false,
        bails: true,
        label: void 0,
        validateOnValueUpdate: true,
        keepValueOnUnmount: void 0,
        syncVModel: false,
        controlled: true
      });
      const isVModelSynced = !!(opts === null || opts === void 0 ? void 0 : opts.syncVModel);
      const modelPropName = typeof (opts === null || opts === void 0 ? void 0 : opts.syncVModel) === "string" ? opts.syncVModel : (opts === null || opts === void 0 ? void 0 : opts.modelPropName) || "modelValue";
      const initialValue = isVModelSynced && !("initialValue" in (opts || {})) ? getCurrentModelValue(vueExports$1.getCurrentInstance(), modelPropName) : opts === null || opts === void 0 ? void 0 : opts.initialValue;
      if (!opts) {
        return Object.assign(Object.assign({}, defaults()), { initialValue });
      }
      const checkedValue = "valueProp" in opts ? opts.valueProp : opts.checkedValue;
      const controlled = "standalone" in opts ? !opts.standalone : opts.controlled;
      const syncVModel = (opts === null || opts === void 0 ? void 0 : opts.modelPropName) || (opts === null || opts === void 0 ? void 0 : opts.syncVModel) || false;
      return Object.assign(Object.assign(Object.assign({}, defaults()), opts || {}), {
        initialValue,
        controlled: controlled !== null && controlled !== void 0 ? controlled : true,
        checkedValue,
        syncVModel
      });
    }
    function useFieldWithChecked(name, rules, opts) {
      const form = !(opts === null || opts === void 0 ? void 0 : opts.standalone) ? injectWithSelf(FormContextKey) : void 0;
      const checkedValue = opts === null || opts === void 0 ? void 0 : opts.checkedValue;
      const uncheckedValue = opts === null || opts === void 0 ? void 0 : opts.uncheckedValue;
      function patchCheckedApi(field) {
        const handleChange = field.handleChange;
        const checked = vueExports$1.computed(() => {
          const currentValue = vueExports$1.toValue(field.value);
          const checkedVal = vueExports$1.toValue(checkedValue);
          return Array.isArray(currentValue) ? currentValue.findIndex((v) => isEqual(v, checkedVal)) >= 0 : isEqual(checkedVal, currentValue);
        });
        function handleCheckboxChange(e, shouldValidate = true) {
          var _a2, _b;
          if (checked.value === ((_a2 = e === null || e === void 0 ? void 0 : e.target) === null || _a2 === void 0 ? void 0 : _a2.checked)) {
            if (shouldValidate) {
              field.validate();
            }
            return;
          }
          const path = vueExports$1.toValue(name);
          const pathState = form === null || form === void 0 ? void 0 : form.getPathState(path);
          const value = normalizeEventValue(e);
          let newValue = (_b = vueExports$1.toValue(checkedValue)) !== null && _b !== void 0 ? _b : value;
          if (form && (pathState === null || pathState === void 0 ? void 0 : pathState.multiple) && pathState.type === "checkbox") {
            newValue = resolveNextCheckboxValue(getFromPath(form.values, path) || [], newValue, void 0);
          } else if ((opts === null || opts === void 0 ? void 0 : opts.type) === "checkbox") {
            newValue = resolveNextCheckboxValue(vueExports$1.toValue(field.value), newValue, vueExports$1.toValue(uncheckedValue));
          }
          handleChange(newValue, shouldValidate);
        }
        return Object.assign(Object.assign({}, field), {
          checked,
          checkedValue,
          uncheckedValue,
          handleChange: handleCheckboxChange
        });
      }
      return patchCheckedApi(_useField(name, rules, opts));
    }
    function useVModel({ prop, value, handleChange, shouldValidate }) {
      const vm = vueExports$1.getCurrentInstance();
      if (!vm || !prop) {
        if (process.env.NODE_ENV !== "production") {
          console.warn("Failed to setup model events because `useField` was not called in setup.");
        }
        return;
      }
      const propName = typeof prop === "string" ? prop : "modelValue";
      const emitName = `update:${propName}`;
      if (!(propName in vm.props)) {
        return;
      }
      vueExports$1.watch(value, (newValue) => {
        if (isEqual(newValue, getCurrentModelValue(vm, propName))) {
          return;
        }
        vm.emit(emitName, newValue);
      });
      vueExports$1.watch(() => getCurrentModelValue(vm, propName), (propValue) => {
        if (propValue === IS_ABSENT && value.value === void 0) {
          return;
        }
        const newValue = propValue === IS_ABSENT ? void 0 : propValue;
        if (isEqual(newValue, value.value)) {
          return;
        }
        handleChange(newValue, shouldValidate());
      });
    }
    function getCurrentModelValue(vm, propName) {
      if (!vm) {
        return void 0;
      }
      return vm.props[propName];
    }
    const FieldImpl = /* @__PURE__ */ vueExports$1.defineComponent({
      name: "Field",
      inheritAttrs: false,
      props: {
        as: {
          type: [String, Object],
          default: void 0
        },
        name: {
          type: String,
          required: true
        },
        rules: {
          type: [Object, String, Function],
          default: void 0
        },
        validateOnMount: {
          type: Boolean,
          default: false
        },
        validateOnBlur: {
          type: Boolean,
          default: void 0
        },
        validateOnChange: {
          type: Boolean,
          default: void 0
        },
        validateOnInput: {
          type: Boolean,
          default: void 0
        },
        validateOnModelUpdate: {
          type: Boolean,
          default: void 0
        },
        bails: {
          type: Boolean,
          default: () => getConfig().bails
        },
        label: {
          type: String,
          default: void 0
        },
        uncheckedValue: {
          type: null,
          default: void 0
        },
        modelValue: {
          type: null,
          default: IS_ABSENT
        },
        modelModifiers: {
          type: null,
          default: () => ({})
        },
        "onUpdate:modelValue": {
          type: null,
          default: void 0
        },
        standalone: {
          type: Boolean,
          default: false
        },
        keepValue: {
          type: Boolean,
          default: void 0
        }
      },
      setup(props, ctx) {
        const rules = vueExports$1.toRef(props, "rules");
        const name = vueExports$1.toRef(props, "name");
        const label = vueExports$1.toRef(props, "label");
        const uncheckedValue = vueExports$1.toRef(props, "uncheckedValue");
        const keepValue = vueExports$1.toRef(props, "keepValue");
        const { errors, value, errorMessage, validate: validateField, handleChange, handleBlur, setTouched, resetField, handleReset, meta, checked, setErrors, setValue } = useField(name, rules, {
          validateOnMount: props.validateOnMount,
          bails: props.bails,
          standalone: props.standalone,
          type: ctx.attrs.type,
          initialValue: resolveInitialValue(props, ctx),
          // Only for checkboxes and radio buttons
          checkedValue: ctx.attrs.value,
          uncheckedValue,
          label,
          validateOnValueUpdate: props.validateOnModelUpdate,
          keepValueOnUnmount: keepValue,
          syncVModel: true
        });
        const onChangeHandler = function handleChangeWithModel(e, shouldValidate = true) {
          handleChange(e, shouldValidate);
        };
        const sharedProps = vueExports$1.computed(() => {
          const { validateOnInput, validateOnChange, validateOnBlur, validateOnModelUpdate } = resolveValidationTriggers(props);
          function baseOnBlur(e) {
            handleBlur(e, validateOnBlur);
            if (isCallable(ctx.attrs.onBlur)) {
              ctx.attrs.onBlur(e);
            }
          }
          function baseOnInput(e) {
            onChangeHandler(e, validateOnInput);
            if (isCallable(ctx.attrs.onInput)) {
              ctx.attrs.onInput(e);
            }
          }
          function baseOnChange(e) {
            onChangeHandler(e, validateOnChange);
            if (isCallable(ctx.attrs.onChange)) {
              ctx.attrs.onChange(e);
            }
          }
          const attrs = {
            name: props.name,
            onBlur: baseOnBlur,
            onInput: baseOnInput,
            onChange: baseOnChange
          };
          attrs["onUpdate:modelValue"] = (e) => onChangeHandler(e, validateOnModelUpdate);
          return attrs;
        });
        const fieldProps = vueExports$1.computed(() => {
          const attrs = Object.assign({}, sharedProps.value);
          if (hasCheckedAttr(ctx.attrs.type) && checked) {
            attrs.checked = checked.value;
          }
          const tag2 = resolveTag(props, ctx);
          if (shouldHaveValueBinding(tag2, ctx.attrs)) {
            attrs.value = value.value;
          }
          return attrs;
        });
        const componentProps = vueExports$1.computed(() => {
          return Object.assign(Object.assign({}, sharedProps.value), { modelValue: value.value });
        });
        function slotProps() {
          return {
            field: fieldProps.value,
            componentField: componentProps.value,
            value: value.value,
            meta,
            errors: errors.value,
            errorMessage: errorMessage.value,
            validate: validateField,
            resetField,
            handleChange: onChangeHandler,
            handleInput: (e) => onChangeHandler(e, false),
            handleReset,
            handleBlur: sharedProps.value.onBlur,
            setTouched,
            setErrors,
            setValue
          };
        }
        ctx.expose({
          value,
          meta,
          errors,
          errorMessage,
          setErrors,
          setTouched,
          setValue,
          reset: resetField,
          validate: validateField,
          handleChange
        });
        return () => {
          const tag2 = vueExports$1.resolveDynamicComponent(resolveTag(props, ctx));
          const children = normalizeChildren(tag2, ctx, slotProps);
          if (tag2) {
            return vueExports$1.h(tag2, Object.assign(Object.assign({}, ctx.attrs), fieldProps.value), children);
          }
          return children;
        };
      }
    });
    function resolveTag(props, ctx) {
      let tag2 = props.as || "";
      if (!props.as && !ctx.slots.default) {
        tag2 = "input";
      }
      return tag2;
    }
    function resolveValidationTriggers(props) {
      var _a2, _b, _c, _d;
      const { validateOnInput, validateOnChange, validateOnBlur, validateOnModelUpdate } = getConfig();
      return {
        validateOnInput: (_a2 = props.validateOnInput) !== null && _a2 !== void 0 ? _a2 : validateOnInput,
        validateOnChange: (_b = props.validateOnChange) !== null && _b !== void 0 ? _b : validateOnChange,
        validateOnBlur: (_c = props.validateOnBlur) !== null && _c !== void 0 ? _c : validateOnBlur,
        validateOnModelUpdate: (_d = props.validateOnModelUpdate) !== null && _d !== void 0 ? _d : validateOnModelUpdate
      };
    }
    function resolveInitialValue(props, ctx) {
      if (!hasCheckedAttr(ctx.attrs.type)) {
        return isPropPresent(props, "modelValue") ? props.modelValue : ctx.attrs.value;
      }
      return isPropPresent(props, "modelValue") ? props.modelValue : void 0;
    }
    const Field = FieldImpl;
    let FORM_COUNTER = 0;
    const PRIVATE_PATH_STATE_KEYS = ["bails", "fieldsCount", "id", "multiple", "type", "validate"];
    function resolveInitialValues(opts) {
      const givenInitial = (opts === null || opts === void 0 ? void 0 : opts.initialValues) || {};
      const providedValues = Object.assign({}, vueExports$1.toValue(givenInitial));
      const schema = vueExports$1.unref(opts === null || opts === void 0 ? void 0 : opts.validationSchema);
      if (schema && isTypedSchema(schema) && isCallable(schema.cast)) {
        return klona(schema.cast(providedValues) || {});
      }
      return klona(providedValues);
    }
    function useForm(opts) {
      var _a2;
      const formId = FORM_COUNTER++;
      let FIELD_ID_COUNTER = 0;
      const isSubmitting = vueExports$1.ref(false);
      const isValidating = vueExports$1.ref(false);
      const submitCount = vueExports$1.ref(0);
      const fieldArrays = [];
      const formValues = vueExports$1.reactive(resolveInitialValues(opts));
      const pathStates = vueExports$1.ref([]);
      const extraErrorsBag = vueExports$1.ref({});
      const pathStateLookup = vueExports$1.ref({});
      const rebuildPathLookup = debounceNextTick(() => {
        pathStateLookup.value = pathStates.value.reduce((names, state) => {
          names[normalizeFormPath(vueExports$1.toValue(state.path))] = state;
          return names;
        }, {});
      });
      function setFieldError(field, message) {
        const state = findPathState(field);
        if (!state) {
          if (typeof field === "string") {
            extraErrorsBag.value[normalizeFormPath(field)] = normalizeErrorItem(message);
          }
          return;
        }
        if (typeof field === "string") {
          const normalizedPath = normalizeFormPath(field);
          if (extraErrorsBag.value[normalizedPath]) {
            delete extraErrorsBag.value[normalizedPath];
          }
        }
        state.errors = normalizeErrorItem(message);
        state.valid = !state.errors.length;
      }
      function setErrors(paths) {
        keysOf(paths).forEach((path) => {
          setFieldError(path, paths[path]);
        });
      }
      if (opts === null || opts === void 0 ? void 0 : opts.initialErrors) {
        setErrors(opts.initialErrors);
      }
      const errorBag = vueExports$1.computed(() => {
        const pathErrors = pathStates.value.reduce((acc, state) => {
          if (state.errors.length) {
            acc[state.path] = state.errors;
          }
          return acc;
        }, {});
        return Object.assign(Object.assign({}, extraErrorsBag.value), pathErrors);
      });
      const errors = vueExports$1.computed(() => {
        return keysOf(errorBag.value).reduce((acc, key2) => {
          const errors2 = errorBag.value[key2];
          if (errors2 === null || errors2 === void 0 ? void 0 : errors2.length) {
            acc[key2] = errors2[0];
          }
          return acc;
        }, {});
      });
      const fieldNames = vueExports$1.computed(() => {
        return pathStates.value.reduce((names, state) => {
          names[state.path] = { name: state.path || "", label: state.label || "" };
          return names;
        }, {});
      });
      const fieldBailsMap = vueExports$1.computed(() => {
        return pathStates.value.reduce((map2, state) => {
          var _a3;
          map2[state.path] = (_a3 = state.bails) !== null && _a3 !== void 0 ? _a3 : true;
          return map2;
        }, {});
      });
      const initialErrors = Object.assign({}, (opts === null || opts === void 0 ? void 0 : opts.initialErrors) || {});
      const keepValuesOnUnmount = (_a2 = opts === null || opts === void 0 ? void 0 : opts.keepValuesOnUnmount) !== null && _a2 !== void 0 ? _a2 : false;
      const { initialValues, originalInitialValues, setInitialValues } = useFormInitialValues(pathStates, formValues, opts);
      const meta = useFormMeta(pathStates, formValues, originalInitialValues, errors);
      const controlledValues = vueExports$1.computed(() => {
        return pathStates.value.reduce((acc, state) => {
          const value = getFromPath(formValues, state.path);
          setInPath(acc, state.path, value);
          return acc;
        }, {});
      });
      const schema = opts === null || opts === void 0 ? void 0 : opts.validationSchema;
      function createPathState(path, config2) {
        var _a3, _b;
        const initialValue = vueExports$1.computed(() => getFromPath(initialValues.value, vueExports$1.toValue(path)));
        const pathStateExists = pathStateLookup.value[vueExports$1.toValue(path)];
        const isCheckboxOrRadio = (config2 === null || config2 === void 0 ? void 0 : config2.type) === "checkbox" || (config2 === null || config2 === void 0 ? void 0 : config2.type) === "radio";
        if (pathStateExists && isCheckboxOrRadio) {
          pathStateExists.multiple = true;
          const id2 = FIELD_ID_COUNTER++;
          if (Array.isArray(pathStateExists.id)) {
            pathStateExists.id.push(id2);
          } else {
            pathStateExists.id = [pathStateExists.id, id2];
          }
          pathStateExists.fieldsCount++;
          pathStateExists.__flags.pendingUnmount[id2] = false;
          return pathStateExists;
        }
        const currentValue = vueExports$1.computed(() => getFromPath(formValues, vueExports$1.toValue(path)));
        const pathValue = vueExports$1.toValue(path);
        const unsetBatchIndex = UNSET_BATCH.findIndex((_path) => _path === pathValue);
        if (unsetBatchIndex !== -1) {
          UNSET_BATCH.splice(unsetBatchIndex, 1);
        }
        const isRequired = vueExports$1.computed(() => {
          var _a4, _b2, _c, _d;
          const schemaValue = vueExports$1.toValue(schema);
          if (isTypedSchema(schemaValue)) {
            return (_b2 = (_a4 = schemaValue.describe) === null || _a4 === void 0 ? void 0 : _a4.call(schemaValue, vueExports$1.toValue(path)).required) !== null && _b2 !== void 0 ? _b2 : false;
          }
          const configSchemaValue = vueExports$1.toValue(config2 === null || config2 === void 0 ? void 0 : config2.schema);
          if (isTypedSchema(configSchemaValue)) {
            return (_d = (_c = configSchemaValue.describe) === null || _c === void 0 ? void 0 : _c.call(configSchemaValue).required) !== null && _d !== void 0 ? _d : false;
          }
          return false;
        });
        const id = FIELD_ID_COUNTER++;
        const state = vueExports$1.reactive({
          id,
          path,
          touched: false,
          pending: false,
          valid: true,
          validated: !!((_a3 = initialErrors[pathValue]) === null || _a3 === void 0 ? void 0 : _a3.length),
          required: isRequired,
          initialValue,
          errors: vueExports$1.shallowRef([]),
          bails: (_b = config2 === null || config2 === void 0 ? void 0 : config2.bails) !== null && _b !== void 0 ? _b : false,
          label: config2 === null || config2 === void 0 ? void 0 : config2.label,
          type: (config2 === null || config2 === void 0 ? void 0 : config2.type) || "default",
          value: currentValue,
          multiple: false,
          __flags: {
            pendingUnmount: { [id]: false },
            pendingReset: false
          },
          fieldsCount: 1,
          validate: config2 === null || config2 === void 0 ? void 0 : config2.validate,
          dirty: vueExports$1.computed(() => {
            return !isEqual(vueExports$1.unref(currentValue), vueExports$1.unref(initialValue));
          })
        });
        pathStates.value.push(state);
        pathStateLookup.value[pathValue] = state;
        rebuildPathLookup();
        if (errors.value[pathValue] && !initialErrors[pathValue]) {
          vueExports$1.nextTick(() => {
            validateField(pathValue, { mode: "silent" });
          });
        }
        if (vueExports$1.isRef(path)) {
          vueExports$1.watch(path, (newPath) => {
            rebuildPathLookup();
            const nextValue = klona(currentValue.value);
            pathStateLookup.value[newPath] = state;
            vueExports$1.nextTick(() => {
              setInPath(formValues, newPath, nextValue);
            });
          });
        }
        return state;
      }
      const debouncedSilentValidation = debounceAsync(_validateSchema, 5);
      const debouncedValidation = debounceAsync(_validateSchema, 5);
      const validateSchema = withLatest(async (mode) => {
        return await (mode === "silent" ? debouncedSilentValidation() : debouncedValidation());
      }, (formResult, [mode]) => {
        const currentErrorsPaths = keysOf(formCtx.errorBag.value);
        const paths = [
          .../* @__PURE__ */ new Set([...keysOf(formResult.results), ...pathStates.value.map((p) => p.path), ...currentErrorsPaths])
        ].sort();
        const results = paths.reduce((validation, _path) => {
          var _a3;
          const expectedPath = _path;
          const pathState = findPathState(expectedPath) || findHoistedPath(expectedPath);
          const messages2 = ((_a3 = formResult.results[expectedPath]) === null || _a3 === void 0 ? void 0 : _a3.errors) || [];
          const path = vueExports$1.toValue(pathState === null || pathState === void 0 ? void 0 : pathState.path) || expectedPath;
          const fieldResult = mergeValidationResults({ errors: messages2, valid: !messages2.length }, validation.results[path]);
          validation.results[path] = fieldResult;
          if (!fieldResult.valid) {
            validation.errors[path] = fieldResult.errors[0];
          }
          if (pathState && extraErrorsBag.value[path]) {
            delete extraErrorsBag.value[path];
          }
          if (!pathState) {
            setFieldError(path, messages2);
            return validation;
          }
          pathState.valid = fieldResult.valid;
          if (mode === "silent") {
            return validation;
          }
          if (mode === "validated-only" && !pathState.validated) {
            return validation;
          }
          setFieldError(pathState, fieldResult.errors);
          return validation;
        }, {
          valid: formResult.valid,
          results: {},
          errors: {},
          source: formResult.source
        });
        if (formResult.values) {
          results.values = formResult.values;
          results.source = formResult.source;
        }
        keysOf(results.results).forEach((path) => {
          var _a3;
          const pathState = findPathState(path);
          if (!pathState) {
            return;
          }
          if (mode === "silent") {
            return;
          }
          if (mode === "validated-only" && !pathState.validated) {
            return;
          }
          setFieldError(pathState, (_a3 = results.results[path]) === null || _a3 === void 0 ? void 0 : _a3.errors);
        });
        return results;
      });
      function mutateAllPathState(mutation) {
        pathStates.value.forEach(mutation);
      }
      function findPathState(path) {
        const normalizedPath = typeof path === "string" ? normalizeFormPath(path) : path;
        const pathState = typeof normalizedPath === "string" ? pathStateLookup.value[normalizedPath] : normalizedPath;
        return pathState;
      }
      function findHoistedPath(path) {
        const candidates = pathStates.value.filter((state) => path.startsWith(state.path));
        return candidates.reduce((bestCandidate, candidate) => {
          if (!bestCandidate) {
            return candidate;
          }
          return candidate.path.length > bestCandidate.path.length ? candidate : bestCandidate;
        }, void 0);
      }
      let UNSET_BATCH = [];
      let PENDING_UNSET;
      function unsetPathValue(path) {
        UNSET_BATCH.push(path);
        if (!PENDING_UNSET) {
          PENDING_UNSET = vueExports$1.nextTick(() => {
            const sortedPaths = [...UNSET_BATCH].sort().reverse();
            sortedPaths.forEach((p) => {
              unsetPath(formValues, p);
            });
            UNSET_BATCH = [];
            PENDING_UNSET = null;
          });
        }
        return PENDING_UNSET;
      }
      function makeSubmissionFactory(onlyControlled) {
        return function submitHandlerFactory(fn, onValidationError) {
          return function submissionHandler(e) {
            if (e instanceof Event) {
              e.preventDefault();
              e.stopPropagation();
            }
            mutateAllPathState((s) => s.touched = true);
            isSubmitting.value = true;
            submitCount.value++;
            return validate2().then((result) => {
              const values = klona(formValues);
              if (result.valid && typeof fn === "function") {
                const controlled = klona(controlledValues.value);
                let submittedValues = onlyControlled ? controlled : values;
                if (result.values) {
                  submittedValues = result.source === "schema" ? result.values : Object.assign({}, submittedValues, result.values);
                }
                return fn(submittedValues, {
                  evt: e,
                  controlledValues: controlled,
                  setErrors,
                  setFieldError,
                  setTouched,
                  setFieldTouched,
                  setValues,
                  setFieldValue,
                  resetForm,
                  resetField
                });
              }
              if (!result.valid && typeof onValidationError === "function") {
                onValidationError({
                  values,
                  evt: e,
                  errors: result.errors,
                  results: result.results
                });
              }
            }).then((returnVal) => {
              isSubmitting.value = false;
              return returnVal;
            }, (err) => {
              isSubmitting.value = false;
              throw err;
            });
          };
        };
      }
      const handleSubmitImpl = makeSubmissionFactory(false);
      const handleSubmit = handleSubmitImpl;
      handleSubmit.withControlled = makeSubmissionFactory(true);
      function removePathState(path, id) {
        const idx = pathStates.value.findIndex((s) => {
          return s.path === path && (Array.isArray(s.id) ? s.id.includes(id) : s.id === id);
        });
        const pathState = pathStates.value[idx];
        if (idx === -1 || !pathState) {
          return;
        }
        vueExports$1.nextTick(() => {
          validateField(path, { mode: "silent", warn: false });
        });
        if (pathState.multiple && pathState.fieldsCount) {
          pathState.fieldsCount--;
        }
        if (Array.isArray(pathState.id)) {
          const idIndex = pathState.id.indexOf(id);
          if (idIndex >= 0) {
            pathState.id.splice(idIndex, 1);
          }
          delete pathState.__flags.pendingUnmount[id];
        }
        if (!pathState.multiple || pathState.fieldsCount <= 0) {
          pathStates.value.splice(idx, 1);
          unsetInitialValue(path);
          rebuildPathLookup();
          delete pathStateLookup.value[path];
        }
      }
      function destroyPath(path) {
        keysOf(pathStateLookup.value).forEach((key2) => {
          if (key2.startsWith(path)) {
            delete pathStateLookup.value[key2];
          }
        });
        pathStates.value = pathStates.value.filter((s) => !s.path.startsWith(path));
        vueExports$1.nextTick(() => {
          rebuildPathLookup();
        });
      }
      const formCtx = {
        formId,
        values: formValues,
        controlledValues,
        errorBag,
        errors,
        schema,
        submitCount,
        meta,
        isSubmitting,
        isValidating,
        fieldArrays,
        keepValuesOnUnmount,
        validateSchema: vueExports$1.unref(schema) ? validateSchema : void 0,
        validate: validate2,
        setFieldError,
        validateField,
        setFieldValue,
        setValues,
        setErrors,
        setFieldTouched,
        setTouched,
        resetForm,
        resetField,
        handleSubmit,
        useFieldModel,
        defineInputBinds,
        defineComponentBinds,
        defineField,
        stageInitialValue,
        unsetInitialValue,
        setFieldInitialValue,
        createPathState,
        getPathState: findPathState,
        unsetPathValue,
        removePathState,
        initialValues,
        getAllPathStates: () => pathStates.value,
        destroyPath,
        isFieldTouched,
        isFieldDirty,
        isFieldValid
      };
      function setFieldValue(field, value, shouldValidate = true) {
        const clonedValue = klona(value);
        const path = typeof field === "string" ? field : field.path;
        const pathState = findPathState(path);
        if (!pathState) {
          createPathState(path);
        }
        setInPath(formValues, path, clonedValue);
        if (shouldValidate) {
          validateField(path);
        }
      }
      function forceSetValues(fields, shouldValidate = true) {
        keysOf(formValues).forEach((key2) => {
          delete formValues[key2];
        });
        keysOf(fields).forEach((path) => {
          setFieldValue(path, fields[path], false);
        });
        if (shouldValidate) {
          validate2();
        }
      }
      function setValues(fields, shouldValidate = true) {
        merge(formValues, fields);
        fieldArrays.forEach((f) => f && f.reset());
        if (shouldValidate) {
          validate2();
        }
      }
      function createModel(path, shouldValidate) {
        const pathState = findPathState(vueExports$1.toValue(path)) || createPathState(path);
        return vueExports$1.computed({
          get() {
            return pathState.value;
          },
          set(value) {
            var _a3;
            const pathValue = vueExports$1.toValue(path);
            setFieldValue(pathValue, value, (_a3 = vueExports$1.toValue(shouldValidate)) !== null && _a3 !== void 0 ? _a3 : false);
          }
        });
      }
      function setFieldTouched(field, isTouched) {
        const pathState = findPathState(field);
        if (pathState) {
          pathState.touched = isTouched;
        }
      }
      function isFieldTouched(field) {
        const pathState = findPathState(field);
        if (pathState) {
          return pathState.touched;
        }
        return pathStates.value.filter((s) => s.path.startsWith(field)).some((s) => s.touched);
      }
      function isFieldDirty(field) {
        const pathState = findPathState(field);
        if (pathState) {
          return pathState.dirty;
        }
        return pathStates.value.filter((s) => s.path.startsWith(field)).some((s) => s.dirty);
      }
      function isFieldValid(field) {
        const pathState = findPathState(field);
        if (pathState) {
          return pathState.valid;
        }
        return pathStates.value.filter((s) => s.path.startsWith(field)).every((s) => s.valid);
      }
      function setTouched(fields) {
        if (typeof fields === "boolean") {
          mutateAllPathState((state) => {
            state.touched = fields;
          });
          return;
        }
        keysOf(fields).forEach((field) => {
          setFieldTouched(field, !!fields[field]);
        });
      }
      function resetField(field, state) {
        var _a3;
        const newValue = state && "value" in state ? state.value : getFromPath(initialValues.value, field);
        const pathState = findPathState(field);
        if (pathState) {
          pathState.__flags.pendingReset = true;
        }
        setFieldInitialValue(field, klona(newValue), true);
        setFieldValue(field, newValue, false);
        setFieldTouched(field, (_a3 = state === null || state === void 0 ? void 0 : state.touched) !== null && _a3 !== void 0 ? _a3 : false);
        setFieldError(field, (state === null || state === void 0 ? void 0 : state.errors) || []);
        vueExports$1.nextTick(() => {
          if (pathState) {
            pathState.__flags.pendingReset = false;
          }
        });
      }
      function resetForm(resetState, opts2) {
        let newValues = klona((resetState === null || resetState === void 0 ? void 0 : resetState.values) ? resetState.values : originalInitialValues.value);
        newValues = (opts2 === null || opts2 === void 0 ? void 0 : opts2.force) ? newValues : merge(originalInitialValues.value, newValues);
        newValues = isTypedSchema(schema) && isCallable(schema.cast) ? schema.cast(newValues) : newValues;
        setInitialValues(newValues, { force: opts2 === null || opts2 === void 0 ? void 0 : opts2.force });
        mutateAllPathState((state) => {
          var _a3;
          state.__flags.pendingReset = true;
          state.validated = false;
          state.touched = ((_a3 = resetState === null || resetState === void 0 ? void 0 : resetState.touched) === null || _a3 === void 0 ? void 0 : _a3[state.path]) || false;
          setFieldValue(state.path, getFromPath(newValues, state.path), false);
          setFieldError(state.path, void 0);
        });
        (opts2 === null || opts2 === void 0 ? void 0 : opts2.force) ? forceSetValues(newValues, false) : setValues(newValues, false);
        setErrors((resetState === null || resetState === void 0 ? void 0 : resetState.errors) || {});
        submitCount.value = (resetState === null || resetState === void 0 ? void 0 : resetState.submitCount) || 0;
        vueExports$1.nextTick(() => {
          validate2({ mode: "silent" });
          mutateAllPathState((state) => {
            state.__flags.pendingReset = false;
          });
        });
      }
      async function validate2(opts2) {
        const mode = (opts2 === null || opts2 === void 0 ? void 0 : opts2.mode) || "force";
        if (mode === "force") {
          mutateAllPathState((f) => f.validated = true);
        }
        if (formCtx.validateSchema) {
          return formCtx.validateSchema(mode);
        }
        isValidating.value = true;
        const validations = await Promise.all(pathStates.value.map((state) => {
          if (!state.validate) {
            return Promise.resolve({
              key: state.path,
              valid: true,
              errors: [],
              value: void 0
            });
          }
          return state.validate(opts2).then((result) => {
            return {
              key: state.path,
              valid: result.valid,
              errors: result.errors,
              value: result.value
            };
          });
        }));
        isValidating.value = false;
        const results = {};
        const errors2 = {};
        const values = {};
        for (const validation of validations) {
          results[validation.key] = {
            valid: validation.valid,
            errors: validation.errors
          };
          if (validation.value) {
            setInPath(values, validation.key, validation.value);
          }
          if (validation.errors.length) {
            errors2[validation.key] = validation.errors[0];
          }
        }
        return {
          valid: validations.every((r) => r.valid),
          results,
          errors: errors2,
          values,
          source: "fields"
        };
      }
      async function validateField(path, opts2) {
        var _a3;
        const state = findPathState(path);
        if (state && (opts2 === null || opts2 === void 0 ? void 0 : opts2.mode) !== "silent") {
          state.validated = true;
        }
        if (schema) {
          const { results } = await validateSchema((opts2 === null || opts2 === void 0 ? void 0 : opts2.mode) || "validated-only");
          return results[path] || { errors: [], valid: true };
        }
        if (state === null || state === void 0 ? void 0 : state.validate) {
          return state.validate(opts2);
        }
        const shouldWarn = !state && ((_a3 = opts2 === null || opts2 === void 0 ? void 0 : opts2.warn) !== null && _a3 !== void 0 ? _a3 : true);
        if (shouldWarn) {
          if (process.env.NODE_ENV !== "production") {
            vueExports$1.warn(`field with path ${path} was not found`);
          }
        }
        return Promise.resolve({ errors: [], valid: true });
      }
      function unsetInitialValue(path) {
        unsetPath(initialValues.value, path);
      }
      function stageInitialValue(path, value, updateOriginal = false) {
        setFieldInitialValue(path, value);
        setInPath(formValues, path, value);
        if (updateOriginal && !(opts === null || opts === void 0 ? void 0 : opts.initialValues)) {
          setInPath(originalInitialValues.value, path, klona(value));
        }
      }
      function setFieldInitialValue(path, value, updateOriginal = false) {
        setInPath(initialValues.value, path, klona(value));
        if (updateOriginal) {
          setInPath(originalInitialValues.value, path, klona(value));
        }
      }
      async function _validateSchema() {
        const schemaValue = vueExports$1.unref(schema);
        if (!schemaValue) {
          return { valid: true, results: {}, errors: {}, source: "none" };
        }
        isValidating.value = true;
        const formResult = isYupValidator(schemaValue) || isTypedSchema(schemaValue) ? await validateTypedSchema(schemaValue, formValues) : await validateObjectSchema(schemaValue, formValues, {
          names: fieldNames.value,
          bailsMap: fieldBailsMap.value
        });
        isValidating.value = false;
        return formResult;
      }
      const submitForm = handleSubmit((_, { evt }) => {
        if (isFormSubmitEvent(evt)) {
          evt.target.submit();
        }
      });
      vueExports$1.onMounted(() => {
        if (opts === null || opts === void 0 ? void 0 : opts.initialErrors) {
          setErrors(opts.initialErrors);
        }
        if (opts === null || opts === void 0 ? void 0 : opts.initialTouched) {
          setTouched(opts.initialTouched);
        }
        if (opts === null || opts === void 0 ? void 0 : opts.validateOnMount) {
          validate2();
          return;
        }
        if (formCtx.validateSchema) {
          formCtx.validateSchema("silent");
        }
      });
      if (vueExports$1.isRef(schema)) {
        vueExports$1.watch(schema, () => {
          var _a3;
          (_a3 = formCtx.validateSchema) === null || _a3 === void 0 ? void 0 : _a3.call(formCtx, "validated-only");
        });
      }
      vueExports$1.provide(FormContextKey, formCtx);
      if (process.env.NODE_ENV !== "production") {
        registerFormWithDevTools(formCtx);
        vueExports$1.watch(() => Object.assign(Object.assign({ errors: errorBag.value }, meta.value), { values: formValues, isSubmitting: isSubmitting.value, isValidating: isValidating.value, submitCount: submitCount.value }), refreshInspector, {
          deep: true
        });
      }
      function defineField(path, config2) {
        const label = isCallable(config2) ? void 0 : config2 === null || config2 === void 0 ? void 0 : config2.label;
        const pathState = findPathState(vueExports$1.toValue(path)) || createPathState(path, { label });
        const evalConfig = () => isCallable(config2) ? config2(omit(pathState, PRIVATE_PATH_STATE_KEYS)) : config2 || {};
        function onBlur() {
          var _a3;
          pathState.touched = true;
          const validateOnBlur = (_a3 = evalConfig().validateOnBlur) !== null && _a3 !== void 0 ? _a3 : getConfig().validateOnBlur;
          if (validateOnBlur) {
            validateField(pathState.path);
          }
        }
        function onInput() {
          var _a3;
          const validateOnInput = (_a3 = evalConfig().validateOnInput) !== null && _a3 !== void 0 ? _a3 : getConfig().validateOnInput;
          if (validateOnInput) {
            vueExports$1.nextTick(() => {
              validateField(pathState.path);
            });
          }
        }
        function onChange() {
          var _a3;
          const validateOnChange = (_a3 = evalConfig().validateOnChange) !== null && _a3 !== void 0 ? _a3 : getConfig().validateOnChange;
          if (validateOnChange) {
            vueExports$1.nextTick(() => {
              validateField(pathState.path);
            });
          }
        }
        const props = vueExports$1.computed(() => {
          const base = {
            onChange,
            onInput,
            onBlur
          };
          if (isCallable(config2)) {
            return Object.assign(Object.assign({}, base), config2(omit(pathState, PRIVATE_PATH_STATE_KEYS)).props || {});
          }
          if (config2 === null || config2 === void 0 ? void 0 : config2.props) {
            return Object.assign(Object.assign({}, base), config2.props(omit(pathState, PRIVATE_PATH_STATE_KEYS)));
          }
          return base;
        });
        const model = createModel(path, () => {
          var _a3, _b, _c;
          return (_c = (_a3 = evalConfig().validateOnModelUpdate) !== null && _a3 !== void 0 ? _a3 : (_b = getConfig()) === null || _b === void 0 ? void 0 : _b.validateOnModelUpdate) !== null && _c !== void 0 ? _c : true;
        });
        return [model, props];
      }
      function useFieldModel(pathOrPaths) {
        if (!Array.isArray(pathOrPaths)) {
          return createModel(pathOrPaths);
        }
        return pathOrPaths.map((p) => createModel(p, true));
      }
      function defineInputBinds(path, config2) {
        const [model, props] = defineField(path, config2);
        function onBlur() {
          props.value.onBlur();
        }
        function onInput(e) {
          const value = normalizeEventValue(e);
          setFieldValue(vueExports$1.toValue(path), value, false);
          props.value.onInput();
        }
        function onChange(e) {
          const value = normalizeEventValue(e);
          setFieldValue(vueExports$1.toValue(path), value, false);
          props.value.onChange();
        }
        return vueExports$1.computed(() => {
          return Object.assign(Object.assign({}, props.value), {
            onBlur,
            onInput,
            onChange,
            value: model.value
          });
        });
      }
      function defineComponentBinds(path, config2) {
        const [model, props] = defineField(path, config2);
        const pathState = findPathState(vueExports$1.toValue(path));
        function onUpdateModelValue(value) {
          model.value = value;
        }
        return vueExports$1.computed(() => {
          const conf = isCallable(config2) ? config2(omit(pathState, PRIVATE_PATH_STATE_KEYS)) : config2 || {};
          return Object.assign({ [conf.model || "modelValue"]: model.value, [`onUpdate:${conf.model || "modelValue"}`]: onUpdateModelValue }, props.value);
        });
      }
      return Object.assign(Object.assign({}, formCtx), { values: vueExports$1.readonly(formValues), handleReset: () => resetForm(), submitForm });
    }
    function useFormMeta(pathsState, currentValues, initialValues, errors) {
      const MERGE_STRATEGIES = {
        touched: "some",
        pending: "some",
        valid: "every"
      };
      const isDirty = vueExports$1.computed(() => {
        return !isEqual(currentValues, vueExports$1.unref(initialValues));
      });
      function calculateFlags() {
        const states = pathsState.value;
        return keysOf(MERGE_STRATEGIES).reduce((acc, flag2) => {
          const mergeMethod = MERGE_STRATEGIES[flag2];
          acc[flag2] = states[mergeMethod]((s) => s[flag2]);
          return acc;
        }, {});
      }
      const flags = vueExports$1.reactive(calculateFlags());
      vueExports$1.watchEffect(() => {
        const value = calculateFlags();
        flags.touched = value.touched;
        flags.valid = value.valid;
        flags.pending = value.pending;
      });
      return vueExports$1.computed(() => {
        return Object.assign(Object.assign({ initialValues: vueExports$1.unref(initialValues) }, flags), { valid: flags.valid && !keysOf(errors.value).length, dirty: isDirty.value });
      });
    }
    function useFormInitialValues(pathsState, formValues, opts) {
      const values = resolveInitialValues(opts);
      const initialValues = vueExports$1.ref(values);
      const originalInitialValues = vueExports$1.ref(klona(values));
      function setInitialValues(values2, opts2) {
        if (opts2 === null || opts2 === void 0 ? void 0 : opts2.force) {
          initialValues.value = klona(values2);
          originalInitialValues.value = klona(values2);
        } else {
          initialValues.value = merge(klona(initialValues.value) || {}, klona(values2));
          originalInitialValues.value = merge(klona(originalInitialValues.value) || {}, klona(values2));
        }
        if (!(opts2 === null || opts2 === void 0 ? void 0 : opts2.updateFields)) {
          return;
        }
        pathsState.value.forEach((state) => {
          const wasTouched = state.touched;
          if (wasTouched) {
            return;
          }
          const newValue = getFromPath(initialValues.value, state.path);
          setInPath(formValues, state.path, klona(newValue));
        });
      }
      return {
        initialValues,
        originalInitialValues,
        setInitialValues
      };
    }
    function mergeValidationResults(a, b) {
      if (!b) {
        return a;
      }
      return {
        valid: a.valid && b.valid,
        errors: [...a.errors, ...b.errors]
      };
    }
    const FormImpl = /* @__PURE__ */ vueExports$1.defineComponent({
      name: "Form",
      inheritAttrs: false,
      props: {
        as: {
          type: null,
          default: "form"
        },
        validationSchema: {
          type: Object,
          default: void 0
        },
        initialValues: {
          type: Object,
          default: void 0
        },
        initialErrors: {
          type: Object,
          default: void 0
        },
        initialTouched: {
          type: Object,
          default: void 0
        },
        validateOnMount: {
          type: Boolean,
          default: false
        },
        onSubmit: {
          type: Function,
          default: void 0
        },
        onInvalidSubmit: {
          type: Function,
          default: void 0
        },
        keepValues: {
          type: Boolean,
          default: false
        }
      },
      setup(props, ctx) {
        const validationSchema = vueExports$1.toRef(props, "validationSchema");
        const keepValues = vueExports$1.toRef(props, "keepValues");
        const { errors, errorBag, values, meta, isSubmitting, isValidating, submitCount, controlledValues, validate: validate2, validateField, handleReset, resetForm, handleSubmit, setErrors, setFieldError, setFieldValue, setValues, setFieldTouched, setTouched, resetField } = useForm({
          validationSchema: validationSchema.value ? validationSchema : void 0,
          initialValues: props.initialValues,
          initialErrors: props.initialErrors,
          initialTouched: props.initialTouched,
          validateOnMount: props.validateOnMount,
          keepValuesOnUnmount: keepValues
        });
        const submitForm = handleSubmit((_, { evt }) => {
          if (isFormSubmitEvent(evt)) {
            evt.target.submit();
          }
        }, props.onInvalidSubmit);
        const onSubmit = props.onSubmit ? handleSubmit(props.onSubmit, props.onInvalidSubmit) : submitForm;
        function handleFormReset(e) {
          if (isEvent(e)) {
            e.preventDefault();
          }
          handleReset();
          if (typeof ctx.attrs.onReset === "function") {
            ctx.attrs.onReset();
          }
        }
        function handleScopedSlotSubmit(evt, onSubmit2) {
          const onSuccess = typeof evt === "function" && !onSubmit2 ? evt : onSubmit2;
          return handleSubmit(onSuccess, props.onInvalidSubmit)(evt);
        }
        function getValues() {
          return klona(values);
        }
        function getMeta() {
          return klona(meta.value);
        }
        function getErrors() {
          return klona(errors.value);
        }
        function slotProps() {
          return {
            meta: meta.value,
            errors: errors.value,
            errorBag: errorBag.value,
            values,
            isSubmitting: isSubmitting.value,
            isValidating: isValidating.value,
            submitCount: submitCount.value,
            controlledValues: controlledValues.value,
            validate: validate2,
            validateField,
            handleSubmit: handleScopedSlotSubmit,
            handleReset,
            submitForm,
            setErrors,
            setFieldError,
            setFieldValue,
            setValues,
            setFieldTouched,
            setTouched,
            resetForm,
            resetField,
            getValues,
            getMeta,
            getErrors
          };
        }
        ctx.expose({
          setFieldError,
          setErrors,
          setFieldValue,
          setValues,
          setFieldTouched,
          setTouched,
          resetForm,
          validate: validate2,
          validateField,
          resetField,
          getValues,
          getMeta,
          getErrors,
          values,
          meta,
          errors
        });
        return function renderForm() {
          const tag2 = props.as === "form" ? props.as : !props.as ? null : vueExports$1.resolveDynamicComponent(props.as);
          const children = normalizeChildren(tag2, ctx, slotProps);
          if (!tag2) {
            return children;
          }
          const formAttrs = tag2 === "form" ? {
            // Disables native validation as vee-validate will handle it.
            novalidate: true
          } : {};
          return vueExports$1.h(tag2, Object.assign(Object.assign(Object.assign({}, formAttrs), ctx.attrs), { onSubmit, onReset: handleFormReset }), children);
        };
      }
    });
    const Form = FormImpl;
    const ErrorMessageImpl = /* @__PURE__ */ vueExports$1.defineComponent({
      name: "ErrorMessage",
      props: {
        as: {
          type: String,
          default: void 0
        },
        name: {
          type: String,
          required: true
        }
      },
      setup(props, ctx) {
        const form = vueExports$1.inject(FormContextKey, void 0);
        const message = vueExports$1.computed(() => {
          return form === null || form === void 0 ? void 0 : form.errors.value[props.name];
        });
        function slotProps() {
          return {
            message: message.value
          };
        }
        return () => {
          if (!message.value) {
            return void 0;
          }
          const tag2 = props.as ? vueExports$1.resolveDynamicComponent(props.as) : props.as;
          const children = normalizeChildren(tag2, ctx, slotProps);
          const attrs = Object.assign({ role: "alert" }, ctx.attrs);
          if (!tag2 && (Array.isArray(children) || !children) && (children === null || children === void 0 ? void 0 : children.length)) {
            return children;
          }
          if ((Array.isArray(children) || !children) && !(children === null || children === void 0 ? void 0 : children.length)) {
            return vueExports$1.h(tag2 || "span", attrs, message.value);
          }
          return vueExports$1.h(tag2, attrs, children);
        };
      }
    });
    const ErrorMessage = ErrorMessageImpl;
    const _sfc_main$2C = vueExports$1.defineComponent({
      name: "create-api-key-modal",
      components: {
        ErrorMessage,
        Field,
        VForm: Form
      },
      setup() {
        const submitButtonRef = vueExports$1.ref(null);
        const modalRef = vueExports$1.ref(null);
        const createAPIKeyModalRef = vueExports$1.ref(null);
        const apiData = vueExports$1.ref({
          apiName: "",
          shortDescription: "",
          category: "",
          apiMethod: ""
        });
        const validationSchema = Yup.object().shape({
          apiName: Yup.string().required().label("API name"),
          shortDescription: Yup.string().required().label("Description"),
          category: Yup.string().required().label("Category"),
          apiMethod: Yup.string().required().label("API method")
        });
        const submit = () => {
          if (!submitButtonRef.value) {
            return;
          }
          submitButtonRef.value.disabled = true;
          submitButtonRef.value.setAttribute("data-kt-indicator", "on");
          setTimeout(() => {
            var _a2;
            if (submitButtonRef.value) {
              submitButtonRef.value.disabled = false;
              (_a2 = submitButtonRef.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
            }
            Swal.fire({
              text: "Form has been successfully submitted!",
              icon: "success",
              buttonsStyling: false,
              confirmButtonText: "Ok, got it!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn btn-primary"
              }
            }).then(() => {
              hideModal(createAPIKeyModalRef.value);
            });
          }, 2e3);
        };
        return {
          apiData,
          validationSchema,
          submit,
          submitButtonRef,
          modalRef,
          createAPIKeyModalRef,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_VForm = vueExports$1.resolveComponent("VForm");
      const _component_Field = vueExports$1.resolveComponent("Field");
      const _component_ErrorMessage = vueExports$1.resolveComponent("ErrorMessage");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        id: "kt_modal_create_api_key",
        ref: "createAPIKeyModalRef",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-650px"><div class="modal-content"><div class="modal-header" id="kt_modal_create_api_key_header"><h2>Create API Key</h2><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div>`);
      _push(ssrRenderComponent(_component_VForm, {
        id: "kt_modal_create_api_key_form",
        class: "form",
        onSubmit: _ctx.submit,
        "validation-schema": _ctx.validationSchema
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="modal-body py-10 px-lg-17"${_scopeId}><div class="scroll-y me-n7 pe-7" id="kt_modal_create_api_key_scroll" data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_modal_create_api_key_header" data-kt-scroll-wrappers="#kt_modal_create_api_key_scroll" data-kt-scroll-offset="300px"${_scopeId}><div class="notice d-flex bg-light-warning rounded border-warning border border-dashed mb-10 p-6"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "information-5",
              "icon-class": "fs-2tx text-warning me-4"
            }, null, _parent2, _scopeId));
            _push2(`<div class="d-flex flex-stack flex-grow-1"${_scopeId}><div class="fw-semibold"${_scopeId}><h4 class="text-gray-800 fw-bold"${_scopeId}>Please Note!</h4><div class="fs-6 text-gray-600"${_scopeId}> Adding new API key may afftect to your <a href="#"${_scopeId}>Affiliate Income</a></div></div></div></div><div class="mb-5 fv-row"${_scopeId}><label class="required fs-5 fw-semibold mb-2"${_scopeId}>API Name</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              class: "form-control form-control-solid",
              placeholder: "Your API Name",
              name: "apiName",
              modelValue: _ctx.apiData.apiName,
              "onUpdate:modelValue": ($event) => _ctx.apiData.apiName = $event
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "apiName" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="d-flex flex-column mb-5 fv-row"${_scopeId}><label class="required fs-5 fw-semibold mb-2"${_scopeId}>Short Description</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              class: "form-control form-control-solid",
              rows: "3",
              name: "shortDescription",
              placeholder: "Describe your API",
              modelValue: _ctx.apiData.shortDescription,
              "onUpdate:modelValue": ($event) => _ctx.apiData.shortDescription = $event
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "shortDescription" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="d-flex flex-column mb-10 fv-row"${_scopeId}><label class="required fs-5 fw-semibold mb-2"${_scopeId}>Category</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              name: "category",
              "data-control": "select2",
              "data-hide-search": "true",
              "data-placeholder": "Select a Category...",
              class: "form-select form-select-solid",
              as: "select",
              modelValue: _ctx.apiData.category,
              "onUpdate:modelValue": ($event) => _ctx.apiData.category = $event
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<option value=""${_scopeId2}>Select a Category...</option><option value="1"${_scopeId2}>CRM</option><option value="2"${_scopeId2}>Project Alice</option><option value="3"${_scopeId2}>Keenthemes</option><option value="4"${_scopeId2}>General</option>`);
                } else {
                  return [
                    vueExports$1.createVNode("option", { value: "" }, "Select a Category..."),
                    vueExports$1.createVNode("option", { value: "1" }, "CRM"),
                    vueExports$1.createVNode("option", { value: "2" }, "Project Alice"),
                    vueExports$1.createVNode("option", { value: "3" }, "Keenthemes"),
                    vueExports$1.createVNode("option", { value: "4" }, "General")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "category" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="mb-10"${_scopeId}><div class="mb-3"${_scopeId}><label class="d-flex align-items-center fs-5 fw-semibold"${_scopeId}><span class="required"${_scopeId}>Specify Your API Method</span><i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="tooltip" title="Your billing numbers will be calculated based on your API method"${_scopeId}></i></label><div class="fs-7 fw-semibold text-gray-500"${_scopeId}> If you need more info, please check budget planning </div></div><div class="fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              name: "apiMethod",
              "data-control": "select2",
              "data-hide-search": "true",
              "data-placeholder": "Select a Category...",
              class: "form-select form-select-solid",
              as: "select",
              modelValue: _ctx.apiData.apiMethod,
              "onUpdate:modelValue": ($event) => _ctx.apiData.apiMethod = $event
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<option value=""${_scopeId2}>Select a API method...</option><option value="1"${_scopeId2}>Open API</option><option value="2"${_scopeId2}>SQL Call</option><option value="3"${_scopeId2}>UI/UX</option><option value="4"${_scopeId2}>Docs</option>`);
                } else {
                  return [
                    vueExports$1.createVNode("option", { value: "" }, "Select a API method..."),
                    vueExports$1.createVNode("option", { value: "1" }, "Open API"),
                    vueExports$1.createVNode("option", { value: "2" }, "SQL Call"),
                    vueExports$1.createVNode("option", { value: "3" }, "UI/UX"),
                    vueExports$1.createVNode("option", { value: "4" }, "Docs")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "apiMethod" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div></div></div><div class="modal-footer flex-center"${_scopeId}><button type="reset" id="kt_modal_create_api_key_cancel" class="btn btn-light me-3"${_scopeId}> Discard </button><button type="submit" id="kt_modal_create_api_key_submit" class="btn btn-primary"${_scopeId}><span class="indicator-label"${_scopeId}> Submit </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "modal-body py-10 px-lg-17" }, [
                vueExports$1.createVNode("div", {
                  class: "scroll-y me-n7 pe-7",
                  id: "kt_modal_create_api_key_scroll",
                  "data-kt-scroll": "true",
                  "data-kt-scroll-activate": "{default: false, lg: true}",
                  "data-kt-scroll-max-height": "auto",
                  "data-kt-scroll-dependencies": "#kt_modal_create_api_key_header",
                  "data-kt-scroll-wrappers": "#kt_modal_create_api_key_scroll",
                  "data-kt-scroll-offset": "300px"
                }, [
                  vueExports$1.createVNode("div", { class: "notice d-flex bg-light-warning rounded border-warning border border-dashed mb-10 p-6" }, [
                    vueExports$1.createVNode(_component_KTIcon, {
                      "icon-name": "information-5",
                      "icon-class": "fs-2tx text-warning me-4"
                    }),
                    vueExports$1.createVNode("div", { class: "d-flex flex-stack flex-grow-1" }, [
                      vueExports$1.createVNode("div", { class: "fw-semibold" }, [
                        vueExports$1.createVNode("h4", { class: "text-gray-800 fw-bold" }, "Please Note!"),
                        vueExports$1.createVNode("div", { class: "fs-6 text-gray-600" }, [
                          vueExports$1.createTextVNode(" Adding new API key may afftect to your "),
                          vueExports$1.createVNode("a", { href: "#" }, "Affiliate Income")
                        ])
                      ])
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "mb-5 fv-row" }, [
                    vueExports$1.createVNode("label", { class: "required fs-5 fw-semibold mb-2" }, "API Name"),
                    vueExports$1.createVNode(_component_Field, {
                      type: "text",
                      class: "form-control form-control-solid",
                      placeholder: "Your API Name",
                      name: "apiName",
                      modelValue: _ctx.apiData.apiName,
                      "onUpdate:modelValue": ($event) => _ctx.apiData.apiName = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "apiName" })
                      ])
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "d-flex flex-column mb-5 fv-row" }, [
                    vueExports$1.createVNode("label", { class: "required fs-5 fw-semibold mb-2" }, "Short Description"),
                    vueExports$1.createVNode(_component_Field, {
                      type: "text",
                      class: "form-control form-control-solid",
                      rows: "3",
                      name: "shortDescription",
                      placeholder: "Describe your API",
                      modelValue: _ctx.apiData.shortDescription,
                      "onUpdate:modelValue": ($event) => _ctx.apiData.shortDescription = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "shortDescription" })
                      ])
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "d-flex flex-column mb-10 fv-row" }, [
                    vueExports$1.createVNode("label", { class: "required fs-5 fw-semibold mb-2" }, "Category"),
                    vueExports$1.createVNode(_component_Field, {
                      name: "category",
                      "data-control": "select2",
                      "data-hide-search": "true",
                      "data-placeholder": "Select a Category...",
                      class: "form-select form-select-solid",
                      as: "select",
                      modelValue: _ctx.apiData.category,
                      "onUpdate:modelValue": ($event) => _ctx.apiData.category = $event
                    }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode("option", { value: "" }, "Select a Category..."),
                        vueExports$1.createVNode("option", { value: "1" }, "CRM"),
                        vueExports$1.createVNode("option", { value: "2" }, "Project Alice"),
                        vueExports$1.createVNode("option", { value: "3" }, "Keenthemes"),
                        vueExports$1.createVNode("option", { value: "4" }, "General")
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "category" })
                      ])
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "mb-10" }, [
                    vueExports$1.createVNode("div", { class: "mb-3" }, [
                      vueExports$1.createVNode("label", { class: "d-flex align-items-center fs-5 fw-semibold" }, [
                        vueExports$1.createVNode("span", { class: "required" }, "Specify Your API Method"),
                        vueExports$1.createVNode("i", {
                          class: "fas fa-exclamation-circle ms-2 fs-7",
                          "data-bs-toggle": "tooltip",
                          title: "Your billing numbers will be calculated based on your API method"
                        })
                      ]),
                      vueExports$1.createVNode("div", { class: "fs-7 fw-semibold text-gray-500" }, " If you need more info, please check budget planning ")
                    ]),
                    vueExports$1.createVNode("div", { class: "fv-row" }, [
                      vueExports$1.createVNode(_component_Field, {
                        name: "apiMethod",
                        "data-control": "select2",
                        "data-hide-search": "true",
                        "data-placeholder": "Select a Category...",
                        class: "form-select form-select-solid",
                        as: "select",
                        modelValue: _ctx.apiData.apiMethod,
                        "onUpdate:modelValue": ($event) => _ctx.apiData.apiMethod = $event
                      }, {
                        default: vueExports$1.withCtx(() => [
                          vueExports$1.createVNode("option", { value: "" }, "Select a API method..."),
                          vueExports$1.createVNode("option", { value: "1" }, "Open API"),
                          vueExports$1.createVNode("option", { value: "2" }, "SQL Call"),
                          vueExports$1.createVNode("option", { value: "3" }, "UI/UX"),
                          vueExports$1.createVNode("option", { value: "4" }, "Docs")
                        ]),
                        _: 1
                      }, 8, ["modelValue", "onUpdate:modelValue"]),
                      vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                        vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                          vueExports$1.createVNode(_component_ErrorMessage, { name: "apiMethod" })
                        ])
                      ])
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "modal-footer flex-center" }, [
                vueExports$1.createVNode("button", {
                  type: "reset",
                  id: "kt_modal_create_api_key_cancel",
                  class: "btn btn-light me-3"
                }, " Discard "),
                vueExports$1.createVNode("button", {
                  ref: "submitButtonRef",
                  type: "submit",
                  id: "kt_modal_create_api_key_submit",
                  class: "btn btn-primary"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Submit "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div>`);
    }
    const _sfc_setup$2C = _sfc_main$2C.setup;
    _sfc_main$2C.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/forms/CreateAPIKeyModal.vue");
      return _sfc_setup$2C ? _sfc_setup$2C(props, ctx) : void 0;
    };
    const KTCreateAPIKeyModal = /* @__PURE__ */ _export_sfc(_sfc_main$2C, [["ssrRender", _sfc_ssrRender$2j]]);
    const __vite_glob_0_58 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTCreateAPIKeyModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2B = vueExports$1.defineComponent({
      name: "new-address-modal",
      components: {
        ErrorMessage,
        Field,
        VForm: Form
      },
      setup() {
        const submitButtonRef = vueExports$1.ref(null);
        const newAddressModalRef = vueExports$1.ref(null);
        const newAddressData = vueExports$1.ref({
          firstName: "",
          lastName: "",
          country: "",
          address1: "",
          address2: "",
          town: "",
          state: "",
          postCode: ""
        });
        const validationSchema = Yup.object().shape({
          firstName: Yup.string().required().label("First name"),
          lastName: Yup.string().required().label("Last name"),
          country: Yup.string().required().label("Country"),
          address1: Yup.string().required().label("Address Line 1"),
          address2: Yup.string().required().label("Address Line 2"),
          town: Yup.string().required().label("Town"),
          state: Yup.string().required().label("State/Province"),
          postCode: Yup.string().required().label("Post code")
        });
        const submit = () => {
          if (!submitButtonRef.value) {
            return;
          }
          submitButtonRef.value.disabled = true;
          submitButtonRef.value.setAttribute("data-kt-indicator", "on");
          setTimeout(() => {
            var _a2;
            if (submitButtonRef.value) {
              submitButtonRef.value.disabled = false;
              (_a2 = submitButtonRef.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
            }
            Swal.fire({
              text: "Form has been successfully submitted!",
              icon: "success",
              buttonsStyling: false,
              confirmButtonText: "Ok, got it!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn btn-primary"
              }
            }).then(() => {
              hideModal(newAddressModalRef.value);
            });
          }, 2e3);
        };
        return {
          newAddressData,
          validationSchema,
          submit,
          submitButtonRef,
          newAddressModalRef,
          getAssetPath,
          countries
        };
      }
    });
    function _sfc_ssrRender$2i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_VForm = vueExports$1.resolveComponent("VForm");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Field = vueExports$1.resolveComponent("Field");
      const _component_ErrorMessage = vueExports$1.resolveComponent("ErrorMessage");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        ref: "newAddressModalRef",
        id: "kt_modal_new_address",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-650px"><div class="modal-content">`);
      _push(ssrRenderComponent(_component_VForm, {
        class: "form",
        id: "kt_modal_new_address_form",
        onSubmit: _ctx.submit,
        "validation-schema": _ctx.validationSchema
      }, {
        default: vueExports$1.withCtx(({ errors }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="modal-header" id="kt_modal_new_address_header"${_scopeId}><h2${_scopeId}>Add New Address</h2><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "cross",
              "icon-class": "fs-1"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="modal-body py-10 px-lg-17"${_scopeId}><div class="scroll-y me-n7 pe-7" id="kt_modal_new_address_scroll" data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_modal_new_address_header" data-kt-scroll-wrappers="#kt_modal_new_address_scroll" data-kt-scroll-offset="300px"${_scopeId}><div class="notice d-flex bg-light-warning rounded border-warning border border-dashed mb-9 p-6"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "information-5",
              "icon-class": "fs-2tx text-warning me-4"
            }, null, _parent2, _scopeId));
            _push2(`<div class="d-flex flex-stack flex-grow-1"${_scopeId}><div class="fw-semibold"${_scopeId}><h4 class="text-gray-800 fw-bold"${_scopeId}>Warning</h4><div class="fs-6 text-gray-600"${_scopeId}> Updating address may affter to your <a href="#"${_scopeId}>Tax Location</a></div></div></div></div><div class="row mb-5"${_scopeId}><div class="col-md-6 fv-row"${_scopeId}><label class="required fs-5 fw-semibold mb-2"${_scopeId}>First name</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              class: ["form-control", errors.firstName ? "is-invalid" : ""],
              placeholder: "",
              name: "firstName",
              modelValue: _ctx.newAddressData.firstName,
              "onUpdate:modelValue": ($event) => _ctx.newAddressData.firstName = $event
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_ErrorMessage, {
              class: "invalid-feedback",
              name: "firstName"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-md-6 fv-row"${_scopeId}><label class="required fs-5 fw-semibold mb-2"${_scopeId}>Last name</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              class: ["form-control", errors.lastName ? "is-invalid" : ""],
              placeholder: "",
              name: "lastName",
              modelValue: _ctx.newAddressData.lastName,
              "onUpdate:modelValue": ($event) => _ctx.newAddressData.lastName = $event
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_ErrorMessage, {
              class: "invalid-feedback",
              name: "lastName"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="d-flex flex-column mb-5 fv-row"${_scopeId}><label class="d-flex align-items-center fs-5 fw-semibold mb-2"${_scopeId}><span class="required"${_scopeId}>Country</span><i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="tooltip" title="Your payment statements may very based on selected country"${_scopeId}></i></label>`);
            _push2(ssrRenderComponent(_component_Field, {
              name: "country",
              class: ["form-select", errors.country ? "is-invalid" : ""],
              as: "select",
              modelValue: _ctx.newAddressData.country,
              "onUpdate:modelValue": ($event) => _ctx.newAddressData.country = $event
            }, {
              default: vueExports$1.withCtx((_, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<option value=""${_scopeId2}>Select a Country...</option><!--[-->`);
                  ssrRenderList(_ctx.countries, (item, i) => {
                    _push3(`<option${ssrRenderAttr("value", item.code)}${_scopeId2}>${ssrInterpolate(item.name)}</option>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    vueExports$1.createVNode("option", { value: "" }, "Select a Country..."),
                    (vueExports$1.openBlock(true), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(_ctx.countries, (item, i) => {
                      return vueExports$1.openBlock(), vueExports$1.createBlock("option", {
                        key: `countries-select-option-${i}`,
                        value: item.code
                      }, vueExports$1.toDisplayString(item.name), 9, ["value"]);
                    }), 128))
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_ErrorMessage, {
              class: "invalid-feedback",
              name: "country"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="d-flex flex-column mb-5 fv-row"${_scopeId}><label class="required fs-5 fw-semibold mb-2"${_scopeId}>Address Line 1</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: ["form-control", errors.address1 ? "is-invalid" : ""],
              placeholder: "",
              name: "address1",
              modelValue: _ctx.newAddressData.address1,
              "onUpdate:modelValue": ($event) => _ctx.newAddressData.address1 = $event
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_ErrorMessage, {
              class: "invalid-feedback",
              name: "address1"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="d-flex flex-column mb-5 fv-row"${_scopeId}><label class="required fs-5 fw-semibold mb-2"${_scopeId}>Address Line 2</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: ["form-control", errors.address2 ? "is-invalid" : ""],
              placeholder: "",
              name: "address2",
              modelValue: _ctx.newAddressData.address2,
              "onUpdate:modelValue": ($event) => _ctx.newAddressData.address2 = $event
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_ErrorMessage, {
              class: "invalid-feedback",
              name: "address2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="d-flex flex-column mb-5 fv-row"${_scopeId}><label class="fs-5 fw-semibold mb-2"${_scopeId}>Town</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: ["form-control", errors.town ? "is-invalid" : ""],
              placeholder: "",
              name: "town",
              modelValue: _ctx.newAddressData.town,
              "onUpdate:modelValue": ($event) => _ctx.newAddressData.town = $event
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_ErrorMessage, {
              class: "invalid-feedback",
              name: "town"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="row g-9 mb-5"${_scopeId}><div class="col-md-6 fv-row"${_scopeId}><label class="fs-5 fw-semibold mb-2"${_scopeId}>State / Province</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: ["form-control", errors.state ? "is-invalid" : ""],
              placeholder: "",
              name: "state",
              modelValue: _ctx.newAddressData.state,
              "onUpdate:modelValue": ($event) => _ctx.newAddressData.state = $event
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_ErrorMessage, {
              class: "invalid-feedback",
              name: "state"
            }, null, _parent2, _scopeId));
            _push2(`</div><div class="col-md-6 fv-row"${_scopeId}><label class="fs-5 fw-semibold mb-2"${_scopeId}>Post Code</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: ["form-control", errors.postCode ? "is-invalid" : ""],
              placeholder: "",
              name: "postCode",
              modelValue: _ctx.newAddressData.postCode,
              "onUpdate:modelValue": ($event) => _ctx.newAddressData.postCode = $event
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_ErrorMessage, {
              class: "invalid-feedback",
              name: "postCode"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="fv-row mb-5"${_scopeId}><div class="d-flex flex-stack"${_scopeId}><div class="me-5"${_scopeId}><label class="fs-5 fw-semibold"${_scopeId}>Use as a billing adderess?</label><div class="fs-7 fw-semibold text-gray-500"${_scopeId}> If you need more info, please check budget planning </div></div><label class="form-check form-switch form-check-custom form-check-solid"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: ["form-check-input", errors.postCode ? "is-invalid" : ""],
              name: "billing",
              type: "checkbox",
              value: "1",
              checked: ""
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_ErrorMessage, {
              class: "invalid-feedback",
              name: "billing"
            }, null, _parent2, _scopeId));
            _push2(`<span class="form-check-label fw-semibold text-gray-500"${_scopeId}> Yes </span></label></div></div></div></div><div class="modal-footer flex-center"${_scopeId}><button type="reset" id="kt_modal_new_address_cancel" class="btn btn-light me-3"${_scopeId}> Discard </button><button type="submit" id="kt_modal_new_address_submit" class="btn btn-primary"${_scopeId}><span class="indicator-label"${_scopeId}> Submit </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", {
                class: "modal-header",
                id: "kt_modal_new_address_header"
              }, [
                vueExports$1.createVNode("h2", null, "Add New Address"),
                vueExports$1.createVNode("div", {
                  class: "btn btn-sm btn-icon btn-active-color-primary",
                  "data-bs-dismiss": "modal"
                }, [
                  vueExports$1.createVNode(_component_KTIcon, {
                    "icon-name": "cross",
                    "icon-class": "fs-1"
                  })
                ])
              ]),
              vueExports$1.createVNode("div", { class: "modal-body py-10 px-lg-17" }, [
                vueExports$1.createVNode("div", {
                  class: "scroll-y me-n7 pe-7",
                  id: "kt_modal_new_address_scroll",
                  "data-kt-scroll": "true",
                  "data-kt-scroll-activate": "{default: false, lg: true}",
                  "data-kt-scroll-max-height": "auto",
                  "data-kt-scroll-dependencies": "#kt_modal_new_address_header",
                  "data-kt-scroll-wrappers": "#kt_modal_new_address_scroll",
                  "data-kt-scroll-offset": "300px"
                }, [
                  vueExports$1.createVNode("div", { class: "notice d-flex bg-light-warning rounded border-warning border border-dashed mb-9 p-6" }, [
                    vueExports$1.createVNode(_component_KTIcon, {
                      "icon-name": "information-5",
                      "icon-class": "fs-2tx text-warning me-4"
                    }),
                    vueExports$1.createVNode("div", { class: "d-flex flex-stack flex-grow-1" }, [
                      vueExports$1.createVNode("div", { class: "fw-semibold" }, [
                        vueExports$1.createVNode("h4", { class: "text-gray-800 fw-bold" }, "Warning"),
                        vueExports$1.createVNode("div", { class: "fs-6 text-gray-600" }, [
                          vueExports$1.createTextVNode(" Updating address may affter to your "),
                          vueExports$1.createVNode("a", { href: "#" }, "Tax Location")
                        ])
                      ])
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "row mb-5" }, [
                    vueExports$1.createVNode("div", { class: "col-md-6 fv-row" }, [
                      vueExports$1.createVNode("label", { class: "required fs-5 fw-semibold mb-2" }, "First name"),
                      vueExports$1.createVNode(_component_Field, {
                        type: "text",
                        class: ["form-control", errors.firstName ? "is-invalid" : ""],
                        placeholder: "",
                        name: "firstName",
                        modelValue: _ctx.newAddressData.firstName,
                        "onUpdate:modelValue": ($event) => _ctx.newAddressData.firstName = $event
                      }, null, 8, ["class", "modelValue", "onUpdate:modelValue"]),
                      vueExports$1.createVNode(_component_ErrorMessage, {
                        class: "invalid-feedback",
                        name: "firstName"
                      })
                    ]),
                    vueExports$1.createVNode("div", { class: "col-md-6 fv-row" }, [
                      vueExports$1.createVNode("label", { class: "required fs-5 fw-semibold mb-2" }, "Last name"),
                      vueExports$1.createVNode(_component_Field, {
                        type: "text",
                        class: ["form-control", errors.lastName ? "is-invalid" : ""],
                        placeholder: "",
                        name: "lastName",
                        modelValue: _ctx.newAddressData.lastName,
                        "onUpdate:modelValue": ($event) => _ctx.newAddressData.lastName = $event
                      }, null, 8, ["class", "modelValue", "onUpdate:modelValue"]),
                      vueExports$1.createVNode(_component_ErrorMessage, {
                        class: "invalid-feedback",
                        name: "lastName"
                      })
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "d-flex flex-column mb-5 fv-row" }, [
                    vueExports$1.createVNode("label", { class: "d-flex align-items-center fs-5 fw-semibold mb-2" }, [
                      vueExports$1.createVNode("span", { class: "required" }, "Country"),
                      vueExports$1.createVNode("i", {
                        class: "fas fa-exclamation-circle ms-2 fs-7",
                        "data-bs-toggle": "tooltip",
                        title: "Your payment statements may very based on selected country"
                      })
                    ]),
                    vueExports$1.createVNode(_component_Field, {
                      name: "country",
                      class: ["form-select", errors.country ? "is-invalid" : ""],
                      as: "select",
                      modelValue: _ctx.newAddressData.country,
                      "onUpdate:modelValue": ($event) => _ctx.newAddressData.country = $event
                    }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode("option", { value: "" }, "Select a Country..."),
                        (vueExports$1.openBlock(true), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(_ctx.countries, (item, i) => {
                          return vueExports$1.openBlock(), vueExports$1.createBlock("option", {
                            key: `countries-select-option-${i}`,
                            value: item.code
                          }, vueExports$1.toDisplayString(item.name), 9, ["value"]);
                        }), 128))
                      ]),
                      _: 2
                    }, 1032, ["class", "modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode(_component_ErrorMessage, {
                      class: "invalid-feedback",
                      name: "country"
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "d-flex flex-column mb-5 fv-row" }, [
                    vueExports$1.createVNode("label", { class: "required fs-5 fw-semibold mb-2" }, "Address Line 1"),
                    vueExports$1.createVNode(_component_Field, {
                      class: ["form-control", errors.address1 ? "is-invalid" : ""],
                      placeholder: "",
                      name: "address1",
                      modelValue: _ctx.newAddressData.address1,
                      "onUpdate:modelValue": ($event) => _ctx.newAddressData.address1 = $event
                    }, null, 8, ["class", "modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode(_component_ErrorMessage, {
                      class: "invalid-feedback",
                      name: "address1"
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "d-flex flex-column mb-5 fv-row" }, [
                    vueExports$1.createVNode("label", { class: "required fs-5 fw-semibold mb-2" }, "Address Line 2"),
                    vueExports$1.createVNode(_component_Field, {
                      class: ["form-control", errors.address2 ? "is-invalid" : ""],
                      placeholder: "",
                      name: "address2",
                      modelValue: _ctx.newAddressData.address2,
                      "onUpdate:modelValue": ($event) => _ctx.newAddressData.address2 = $event
                    }, null, 8, ["class", "modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode(_component_ErrorMessage, {
                      class: "invalid-feedback",
                      name: "address2"
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "d-flex flex-column mb-5 fv-row" }, [
                    vueExports$1.createVNode("label", { class: "fs-5 fw-semibold mb-2" }, "Town"),
                    vueExports$1.createVNode(_component_Field, {
                      class: ["form-control", errors.town ? "is-invalid" : ""],
                      placeholder: "",
                      name: "town",
                      modelValue: _ctx.newAddressData.town,
                      "onUpdate:modelValue": ($event) => _ctx.newAddressData.town = $event
                    }, null, 8, ["class", "modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode(_component_ErrorMessage, {
                      class: "invalid-feedback",
                      name: "town"
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "row g-9 mb-5" }, [
                    vueExports$1.createVNode("div", { class: "col-md-6 fv-row" }, [
                      vueExports$1.createVNode("label", { class: "fs-5 fw-semibold mb-2" }, "State / Province"),
                      vueExports$1.createVNode(_component_Field, {
                        class: ["form-control", errors.state ? "is-invalid" : ""],
                        placeholder: "",
                        name: "state",
                        modelValue: _ctx.newAddressData.state,
                        "onUpdate:modelValue": ($event) => _ctx.newAddressData.state = $event
                      }, null, 8, ["class", "modelValue", "onUpdate:modelValue"]),
                      vueExports$1.createVNode(_component_ErrorMessage, {
                        class: "invalid-feedback",
                        name: "state"
                      })
                    ]),
                    vueExports$1.createVNode("div", { class: "col-md-6 fv-row" }, [
                      vueExports$1.createVNode("label", { class: "fs-5 fw-semibold mb-2" }, "Post Code"),
                      vueExports$1.createVNode(_component_Field, {
                        class: ["form-control", errors.postCode ? "is-invalid" : ""],
                        placeholder: "",
                        name: "postCode",
                        modelValue: _ctx.newAddressData.postCode,
                        "onUpdate:modelValue": ($event) => _ctx.newAddressData.postCode = $event
                      }, null, 8, ["class", "modelValue", "onUpdate:modelValue"]),
                      vueExports$1.createVNode(_component_ErrorMessage, {
                        class: "invalid-feedback",
                        name: "postCode"
                      })
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "fv-row mb-5" }, [
                    vueExports$1.createVNode("div", { class: "d-flex flex-stack" }, [
                      vueExports$1.createVNode("div", { class: "me-5" }, [
                        vueExports$1.createVNode("label", { class: "fs-5 fw-semibold" }, "Use as a billing adderess?"),
                        vueExports$1.createVNode("div", { class: "fs-7 fw-semibold text-gray-500" }, " If you need more info, please check budget planning ")
                      ]),
                      vueExports$1.createVNode("label", { class: "form-check form-switch form-check-custom form-check-solid" }, [
                        vueExports$1.createVNode(_component_Field, {
                          class: ["form-check-input", errors.postCode ? "is-invalid" : ""],
                          name: "billing",
                          type: "checkbox",
                          value: "1",
                          checked: ""
                        }, null, 8, ["class"]),
                        vueExports$1.createVNode(_component_ErrorMessage, {
                          class: "invalid-feedback",
                          name: "billing"
                        }),
                        vueExports$1.createVNode("span", { class: "form-check-label fw-semibold text-gray-500" }, " Yes ")
                      ])
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "modal-footer flex-center" }, [
                vueExports$1.createVNode("button", {
                  type: "reset",
                  id: "kt_modal_new_address_cancel",
                  class: "btn btn-light me-3"
                }, " Discard "),
                vueExports$1.createVNode("button", {
                  ref: "submitButtonRef",
                  type: "submit",
                  id: "kt_modal_new_address_submit",
                  class: "btn btn-primary"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Submit "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div>`);
    }
    const _sfc_setup$2B = _sfc_main$2B.setup;
    _sfc_main$2B.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/forms/NewAddressModal.vue");
      return _sfc_setup$2B ? _sfc_setup$2B(props, ctx) : void 0;
    };
    const KTNewAddressModal = /* @__PURE__ */ _export_sfc(_sfc_main$2B, [["ssrRender", _sfc_ssrRender$2i]]);
    const __vite_glob_0_60 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTNewAddressModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2A = vueExports$1.defineComponent({
      name: "new-card-modal",
      components: {
        ErrorMessage,
        Field,
        VForm: Form
      },
      setup() {
        const submitButtonRef = vueExports$1.ref(null);
        const newCardModalRef = vueExports$1.ref(null);
        const cardData = vueExports$1.ref({
          nameOnCard: "Max Doe",
          cardNumber: "4111 1111 1111 1111",
          expirationMonth: "",
          expirationYear: "",
          cvv: ""
        });
        const validationSchema = Yup.object().shape({
          nameOnCard: Yup.string().required().label("Name"),
          cardNumber: Yup.string().required().label("Card number"),
          expirationMonth: Yup.string().required().label("Month"),
          expirationYear: Yup.string().required().label("Year"),
          cvv: Yup.string().required().label("CVV")
        });
        const submit = () => {
          if (!submitButtonRef.value) {
            return;
          }
          submitButtonRef.value.disabled = true;
          submitButtonRef.value.setAttribute("data-kt-indicator", "on");
          setTimeout(() => {
            var _a2;
            if (submitButtonRef.value) {
              submitButtonRef.value.disabled = false;
              (_a2 = submitButtonRef.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
            }
            Swal.fire({
              text: "Form has been successfully submitted!",
              icon: "success",
              buttonsStyling: false,
              confirmButtonText: "Ok, got it!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn btn-primary"
              }
            }).then(() => {
              hideModal(newCardModalRef.value);
            });
          }, 2e3);
        };
        return {
          cardData,
          validationSchema,
          submit,
          submitButtonRef,
          newCardModalRef,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_VForm = vueExports$1.resolveComponent("VForm");
      const _component_Field = vueExports$1.resolveComponent("Field");
      const _component_ErrorMessage = vueExports$1.resolveComponent("ErrorMessage");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        ref: "newCardModalRef",
        id: "kt_modal_new_card",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-650px"><div class="modal-content"><div class="modal-header"><h2>Add New Card</h2><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div><div class="modal-body scroll-y mx-5 mx-xl-15 my-7">`);
      _push(ssrRenderComponent(_component_VForm, {
        id: "kt_modal_new_card_form",
        class: "form",
        onSubmit: _ctx.submit,
        "validation-schema": _ctx.validationSchema
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="d-flex flex-column mb-7 fv-row"${_scopeId}><label class="d-flex align-items-center fs-6 fw-semibold form-label mb-2"${_scopeId}><span class="required"${_scopeId}>Name On Card</span><i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="tooltip" title="Specify a card holder&#39;s name"${_scopeId}></i></label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              class: "form-control form-control-solid",
              placeholder: "",
              name: "nameOnCard",
              modelValue: _ctx.cardData.nameOnCard,
              "onUpdate:modelValue": ($event) => _ctx.cardData.nameOnCard = $event
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "nameOnCard" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="d-flex flex-column mb-7 fv-row"${_scopeId}><label class="required fs-6 fw-semibold form-label mb-2"${_scopeId}>Card Number</label><div class="position-relative"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              class: "form-control form-control-solid",
              placeholder: "Enter card number",
              name: "cardNumber",
              modelValue: _ctx.cardData.cardNumber,
              "onUpdate:modelValue": ($event) => _ctx.cardData.cardNumber = $event
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "cardNumber" }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="position-absolute translate-middle-y top-50 end-0 me-5"${_scopeId}><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/visa.svg"))} alt="" class="h-25px"${_scopeId}><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/mastercard.svg"))} alt="" class="h-25px"${_scopeId}><img${ssrRenderAttr(
              "src",
              _ctx.getAssetPath("media/svg/card-logos/american-express.svg")
            )} alt="" class="h-25px"${_scopeId}></div></div></div><div class="row mb-10"${_scopeId}><div class="col-md-8 fv-row"${_scopeId}><label class="required fs-6 fw-semibold form-label mb-2"${_scopeId}>Expiration Date</label><div class="row fv-row"${_scopeId}><div class="col-6"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              modelValue: _ctx.cardData.expirationMonth,
              "onUpdate:modelValue": ($event) => _ctx.cardData.expirationMonth = $event,
              name: "expirationMonth",
              class: "form-select form-select-solid",
              "data-control": "select2",
              "data-hide-search": "true",
              "data-placeholder": "Month",
              as: "select"
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<option${_scopeId2}></option><!--[-->`);
                  ssrRenderList(12, (i) => {
                    _push3(`<option${ssrRenderAttr("value", i)}${_scopeId2}>${ssrInterpolate(i)}</option>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    vueExports$1.createVNode("option"),
                    (vueExports$1.openBlock(), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(12, (i) => {
                      return vueExports$1.createVNode("option", {
                        key: i,
                        value: i
                      }, vueExports$1.toDisplayString(i), 9, ["value"]);
                    }), 64))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "expirationMonth" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="col-6"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              modelValue: _ctx.cardData.expirationYear,
              "onUpdate:modelValue": ($event) => _ctx.cardData.expirationYear = $event,
              name: "expirationYear",
              class: "form-select form-select-solid",
              "data-control": "select2",
              "data-hide-search": "true",
              "data-placeholder": "Year",
              as: "select"
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<option${_scopeId2}></option><!--[-->`);
                  ssrRenderList(10, (i) => {
                    _push3(`<option${ssrRenderAttr("value", (/* @__PURE__ */ new Date()).getFullYear() + i)}${_scopeId2}>${ssrInterpolate((/* @__PURE__ */ new Date()).getFullYear() + i)}</option>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    vueExports$1.createVNode("option"),
                    (vueExports$1.openBlock(), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(10, (i) => {
                      return vueExports$1.createVNode("option", {
                        key: i,
                        value: (/* @__PURE__ */ new Date()).getFullYear() + i
                      }, vueExports$1.toDisplayString((/* @__PURE__ */ new Date()).getFullYear() + i), 9, ["value"]);
                    }), 64))
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "expirationYear" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div></div><div class="col-md-4 fv-row"${_scopeId}><label class="d-flex align-items-center fs-6 fw-semibold form-label mb-2"${_scopeId}><span class="required"${_scopeId}>CVV</span><i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="tooltip" title="Enter a card CVV code"${_scopeId}></i></label><div class="position-relative"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              modelValue: _ctx.cardData.cvv,
              "onUpdate:modelValue": ($event) => _ctx.cardData.cvv = $event,
              type: "text",
              class: "form-control form-control-solid",
              minlength: "3",
              maxlength: "4",
              placeholder: "CVV",
              name: "cvv"
            }, null, _parent2, _scopeId));
            _push2(`<div class="position-absolute translate-middle-y top-50 end-0 me-3"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "credit-cart",
              "icon-class": "fs-2hx"
            }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "cvv" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="d-flex flex-stack"${_scopeId}><div class="me-5"${_scopeId}><label class="fs-6 fw-semibold form-label"${_scopeId}>Save Card for further billing?</label><div class="fs-7 fw-semibold text-gray-500"${_scopeId}> If you need more info, please check budget planning </div></div><label class="form-check form-switch form-check-custom form-check-solid"${_scopeId}><input class="form-check-input" type="checkbox" value="1" checked${_scopeId}><span class="form-check-label fw-semibold text-gray-500"${_scopeId}> Save Card </span></label></div><div class="text-center pt-15"${_scopeId}><button type="reset" id="kt_modal_new_card_cancel" class="btn btn-light me-3"${_scopeId}> Discard </button><button type="submit" id="kt_modal_new_card_submit" class="btn btn-primary"${_scopeId}><span class="indicator-label"${_scopeId}> Submit </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "d-flex flex-column mb-7 fv-row" }, [
                vueExports$1.createVNode("label", { class: "d-flex align-items-center fs-6 fw-semibold form-label mb-2" }, [
                  vueExports$1.createVNode("span", { class: "required" }, "Name On Card"),
                  vueExports$1.createVNode("i", {
                    class: "fas fa-exclamation-circle ms-2 fs-7",
                    "data-bs-toggle": "tooltip",
                    title: "Specify a card holder's name"
                  })
                ]),
                vueExports$1.createVNode(_component_Field, {
                  type: "text",
                  class: "form-control form-control-solid",
                  placeholder: "",
                  name: "nameOnCard",
                  modelValue: _ctx.cardData.nameOnCard,
                  "onUpdate:modelValue": ($event) => _ctx.cardData.nameOnCard = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                  vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                    vueExports$1.createVNode(_component_ErrorMessage, { name: "nameOnCard" })
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "d-flex flex-column mb-7 fv-row" }, [
                vueExports$1.createVNode("label", { class: "required fs-6 fw-semibold form-label mb-2" }, "Card Number"),
                vueExports$1.createVNode("div", { class: "position-relative" }, [
                  vueExports$1.createVNode(_component_Field, {
                    type: "text",
                    class: "form-control form-control-solid",
                    placeholder: "Enter card number",
                    name: "cardNumber",
                    modelValue: _ctx.cardData.cardNumber,
                    "onUpdate:modelValue": ($event) => _ctx.cardData.cardNumber = $event
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                  vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                    vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                      vueExports$1.createVNode(_component_ErrorMessage, { name: "cardNumber" })
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "position-absolute translate-middle-y top-50 end-0 me-5" }, [
                    vueExports$1.createVNode("img", {
                      src: _ctx.getAssetPath("media/svg/card-logos/visa.svg"),
                      alt: "",
                      class: "h-25px"
                    }, null, 8, ["src"]),
                    vueExports$1.createVNode("img", {
                      src: _ctx.getAssetPath("media/svg/card-logos/mastercard.svg"),
                      alt: "",
                      class: "h-25px"
                    }, null, 8, ["src"]),
                    vueExports$1.createVNode("img", {
                      src: _ctx.getAssetPath("media/svg/card-logos/american-express.svg"),
                      alt: "",
                      class: "h-25px"
                    }, null, 8, ["src"])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "row mb-10" }, [
                vueExports$1.createVNode("div", { class: "col-md-8 fv-row" }, [
                  vueExports$1.createVNode("label", { class: "required fs-6 fw-semibold form-label mb-2" }, "Expiration Date"),
                  vueExports$1.createVNode("div", { class: "row fv-row" }, [
                    vueExports$1.createVNode("div", { class: "col-6" }, [
                      vueExports$1.createVNode(_component_Field, {
                        modelValue: _ctx.cardData.expirationMonth,
                        "onUpdate:modelValue": ($event) => _ctx.cardData.expirationMonth = $event,
                        name: "expirationMonth",
                        class: "form-select form-select-solid",
                        "data-control": "select2",
                        "data-hide-search": "true",
                        "data-placeholder": "Month",
                        as: "select"
                      }, {
                        default: vueExports$1.withCtx(() => [
                          vueExports$1.createVNode("option"),
                          (vueExports$1.openBlock(), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(12, (i) => {
                            return vueExports$1.createVNode("option", {
                              key: i,
                              value: i
                            }, vueExports$1.toDisplayString(i), 9, ["value"]);
                          }), 64))
                        ]),
                        _: 1
                      }, 8, ["modelValue", "onUpdate:modelValue"]),
                      vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                        vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                          vueExports$1.createVNode(_component_ErrorMessage, { name: "expirationMonth" })
                        ])
                      ])
                    ]),
                    vueExports$1.createVNode("div", { class: "col-6" }, [
                      vueExports$1.createVNode(_component_Field, {
                        modelValue: _ctx.cardData.expirationYear,
                        "onUpdate:modelValue": ($event) => _ctx.cardData.expirationYear = $event,
                        name: "expirationYear",
                        class: "form-select form-select-solid",
                        "data-control": "select2",
                        "data-hide-search": "true",
                        "data-placeholder": "Year",
                        as: "select"
                      }, {
                        default: vueExports$1.withCtx(() => [
                          vueExports$1.createVNode("option"),
                          (vueExports$1.openBlock(), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(10, (i) => {
                            return vueExports$1.createVNode("option", {
                              key: i,
                              value: (/* @__PURE__ */ new Date()).getFullYear() + i
                            }, vueExports$1.toDisplayString((/* @__PURE__ */ new Date()).getFullYear() + i), 9, ["value"]);
                          }), 64))
                        ]),
                        _: 1
                      }, 8, ["modelValue", "onUpdate:modelValue"]),
                      vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                        vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                          vueExports$1.createVNode(_component_ErrorMessage, { name: "expirationYear" })
                        ])
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "col-md-4 fv-row" }, [
                  vueExports$1.createVNode("label", { class: "d-flex align-items-center fs-6 fw-semibold form-label mb-2" }, [
                    vueExports$1.createVNode("span", { class: "required" }, "CVV"),
                    vueExports$1.createVNode("i", {
                      class: "fas fa-exclamation-circle ms-2 fs-7",
                      "data-bs-toggle": "tooltip",
                      title: "Enter a card CVV code"
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "position-relative" }, [
                    vueExports$1.createVNode(_component_Field, {
                      modelValue: _ctx.cardData.cvv,
                      "onUpdate:modelValue": ($event) => _ctx.cardData.cvv = $event,
                      type: "text",
                      class: "form-control form-control-solid",
                      minlength: "3",
                      maxlength: "4",
                      placeholder: "CVV",
                      name: "cvv"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "position-absolute translate-middle-y top-50 end-0 me-3" }, [
                      vueExports$1.createVNode(_component_KTIcon, {
                        "icon-name": "credit-cart",
                        "icon-class": "fs-2hx"
                      })
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                    vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                      vueExports$1.createVNode(_component_ErrorMessage, { name: "cvv" })
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "d-flex flex-stack" }, [
                vueExports$1.createVNode("div", { class: "me-5" }, [
                  vueExports$1.createVNode("label", { class: "fs-6 fw-semibold form-label" }, "Save Card for further billing?"),
                  vueExports$1.createVNode("div", { class: "fs-7 fw-semibold text-gray-500" }, " If you need more info, please check budget planning ")
                ]),
                vueExports$1.createVNode("label", { class: "form-check form-switch form-check-custom form-check-solid" }, [
                  vueExports$1.createVNode("input", {
                    class: "form-check-input",
                    type: "checkbox",
                    value: "1",
                    checked: ""
                  }),
                  vueExports$1.createVNode("span", { class: "form-check-label fw-semibold text-gray-500" }, " Save Card ")
                ])
              ]),
              vueExports$1.createVNode("div", { class: "text-center pt-15" }, [
                vueExports$1.createVNode("button", {
                  type: "reset",
                  id: "kt_modal_new_card_cancel",
                  class: "btn btn-light me-3"
                }, " Discard "),
                vueExports$1.createVNode("button", {
                  ref: "submitButtonRef",
                  type: "submit",
                  id: "kt_modal_new_card_submit",
                  class: "btn btn-primary"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Submit "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div>`);
    }
    const _sfc_setup$2A = _sfc_main$2A.setup;
    _sfc_main$2A.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/forms/NewCardModal.vue");
      return _sfc_setup$2A ? _sfc_setup$2A(props, ctx) : void 0;
    };
    const KTNewCardModal = /* @__PURE__ */ _export_sfc(_sfc_main$2A, [["ssrRender", _sfc_ssrRender$2h]]);
    const __vite_glob_0_61 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTNewCardModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2z = vueExports$1.defineComponent({
      name: "new-target-modal",
      components: {},
      setup() {
        const formRef = vueExports$1.ref(null);
        const newTargetModalRef = vueExports$1.ref(null);
        const loading2 = vueExports$1.ref(false);
        const targetData = vueExports$1.ref({
          targetTitle: "",
          assign: "",
          dueDate: "",
          targetDetails: "",
          tags: ["important", "urgent"]
        });
        const rules = vueExports$1.ref({
          targetTitle: [
            {
              required: true,
              message: "Please input Activity name",
              trigger: "blur"
            }
          ],
          assign: [
            {
              required: true,
              message: "Please select Activity zone",
              trigger: "change"
            }
          ],
          dueDate: [
            {
              required: true,
              message: "Please select Activity zone",
              trigger: "change"
            }
          ],
          tags: [
            {
              required: true,
              message: "Please select Activity zone",
              trigger: "change"
            }
          ]
        });
        const submit = () => {
          if (!formRef.value) {
            return;
          }
          formRef.value.validate((valid) => {
            if (valid) {
              loading2.value = true;
              setTimeout(() => {
                loading2.value = false;
                Swal.fire({
                  text: "Form has been successfully submitted!",
                  icon: "success",
                  buttonsStyling: false,
                  confirmButtonText: "Ok, got it!",
                  heightAuto: false,
                  customClass: {
                    confirmButton: "btn btn-primary"
                  }
                }).then(() => {
                  hideModal(newTargetModalRef.value);
                });
              }, 2e3);
            } else {
              Swal.fire({
                text: "Sorry, looks like there are some errors detected, please try again.",
                icon: "error",
                buttonsStyling: false,
                confirmButtonText: "Ok, got it!",
                heightAuto: false,
                customClass: {
                  confirmButton: "btn btn-primary"
                }
              });
              return false;
            }
          });
        };
        return {
          targetData,
          submit,
          loading: loading2,
          formRef,
          rules,
          newTargetModalRef,
          getAssetPath
        };
      }
    });
    const NewTargetModal_vue_vue_type_style_index_0_lang = "";
    const NewTargetModal_vue_vue_type_style_index_1_lang = "";
    function _sfc_ssrRender$2g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_el_form = vueExports$1.resolveComponent("el-form");
      const _component_el_form_item = vueExports$1.resolveComponent("el-form-item");
      const _component_el_input = vueExports$1.resolveComponent("el-input");
      const _component_el_select = vueExports$1.resolveComponent("el-select");
      const _component_el_option = vueExports$1.resolveComponent("el-option");
      const _component_el_date_picker = vueExports$1.resolveComponent("el-date-picker");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        id: "kt_modal_new_target",
        ref: "newTargetModalRef",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-650px"><div class="modal-content rounded"><div class="modal-header pb-0 border-0 justify-content-end"><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div><div class="modal-body scroll-y px-10 px-lg-15 pt-0 pb-15">`);
      _push(ssrRenderComponent(_component_el_form, {
        id: "kt_modal_new_target_form",
        onSubmit: ($event) => _ctx.submit(),
        model: _ctx.targetData,
        rules: _ctx.rules,
        ref: "formRef",
        class: "form"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="mb-13 text-center"${_scopeId}><h1 class="mb-3"${_scopeId}>Set First Target</h1><div class="text-gray-500 fw-semibold fs-5"${_scopeId}> If you need more info, please check <a href="#" class="fw-bold link-primary"${_scopeId}>Project Guidelines</a>. </div></div><div class="d-flex flex-column mb-8 fv-row"${_scopeId}><label class="d-flex align-items-center fs-6 fw-semibold mb-2"${_scopeId}><span class="required"${_scopeId}>Target Title</span><i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="tooltip" title="Specify a target name for future usage and reference"${_scopeId}></i></label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "targetTitle" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.targetData.targetTitle,
                    "onUpdate:modelValue": ($event) => _ctx.targetData.targetTitle = $event,
                    placeholder: "Enter Target Title",
                    name: "targetTitle"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.targetData.targetTitle,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.targetTitle = $event,
                      placeholder: "Enter Target Title",
                      name: "targetTitle"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="row g-9 mb-8"${_scopeId}><div class="col-md-6 fv-row"${_scopeId}><label class="required fs-6 fw-semibold mb-2"${_scopeId}>Assign</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "assign" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_select, {
                    modelValue: _ctx.targetData.assign,
                    "onUpdate:modelValue": ($event) => _ctx.targetData.assign = $event,
                    placeholder: "Select a Team Member",
                    name: "assign",
                    as: "select"
                  }, {
                    default: vueExports$1.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(_component_el_option, { value: "" }, {
                          default: vueExports$1.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Select user...`);
                            } else {
                              return [
                                vueExports$1.createTextVNode("Select user...")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "Karina Clark",
                          value: "1"
                        }, {
                          default: vueExports$1.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Karina Clark`);
                            } else {
                              return [
                                vueExports$1.createTextVNode("Karina Clark")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "Robert Doe",
                          value: "2"
                        }, {
                          default: vueExports$1.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Robert Doe`);
                            } else {
                              return [
                                vueExports$1.createTextVNode("Robert Doe")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "Niel Owen",
                          value: "3"
                        }, {
                          default: vueExports$1.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Niel Owen`);
                            } else {
                              return [
                                vueExports$1.createTextVNode("Niel Owen")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "Olivia Wild",
                          value: "4"
                        }, {
                          default: vueExports$1.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Olivia Wild`);
                            } else {
                              return [
                                vueExports$1.createTextVNode("Olivia Wild")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "Sean Bean",
                          value: "5"
                        }, {
                          default: vueExports$1.withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`Sean Bean`);
                            } else {
                              return [
                                vueExports$1.createTextVNode("Sean Bean")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        return [
                          vueExports$1.createVNode(_component_el_option, { value: "" }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Select user...")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Karina Clark",
                            value: "1"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Karina Clark")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Robert Doe",
                            value: "2"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Robert Doe")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Niel Owen",
                            value: "3"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Niel Owen")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Olivia Wild",
                            value: "4"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Olivia Wild")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Sean Bean",
                            value: "5"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Sean Bean")
                            ]),
                            _: 1
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_select, {
                      modelValue: _ctx.targetData.assign,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.assign = $event,
                      placeholder: "Select a Team Member",
                      name: "assign",
                      as: "select"
                    }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode(_component_el_option, { value: "" }, {
                          default: vueExports$1.withCtx(() => [
                            vueExports$1.createTextVNode("Select user...")
                          ]),
                          _: 1
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Karina Clark",
                          value: "1"
                        }, {
                          default: vueExports$1.withCtx(() => [
                            vueExports$1.createTextVNode("Karina Clark")
                          ]),
                          _: 1
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Robert Doe",
                          value: "2"
                        }, {
                          default: vueExports$1.withCtx(() => [
                            vueExports$1.createTextVNode("Robert Doe")
                          ]),
                          _: 1
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Niel Owen",
                          value: "3"
                        }, {
                          default: vueExports$1.withCtx(() => [
                            vueExports$1.createTextVNode("Niel Owen")
                          ]),
                          _: 1
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Olivia Wild",
                          value: "4"
                        }, {
                          default: vueExports$1.withCtx(() => [
                            vueExports$1.createTextVNode("Olivia Wild")
                          ]),
                          _: 1
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Sean Bean",
                          value: "5"
                        }, {
                          default: vueExports$1.withCtx(() => [
                            vueExports$1.createTextVNode("Sean Bean")
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="col-md-6 fv-row"${_scopeId}><label class="required fs-6 fw-semibold mb-2"${_scopeId}>Due Date</label><div class="position-relative align-items-center"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "dueDate" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_date_picker, {
                    modelValue: _ctx.targetData.dueDate,
                    "onUpdate:modelValue": ($event) => _ctx.targetData.dueDate = $event,
                    type: "date",
                    placeholder: "Select a date",
                    teleported: false,
                    "popper-class": "override-styles",
                    name: "dueDate"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_date_picker, {
                      modelValue: _ctx.targetData.dueDate,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.dueDate = $event,
                      type: "date",
                      placeholder: "Select a date",
                      teleported: false,
                      "popper-class": "override-styles",
                      name: "dueDate"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div></div><div class="d-flex flex-column mb-8"${_scopeId}><label class="fs-6 fw-semibold mb-2"${_scopeId}>Target Details</label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "targetDetails" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_input, {
                    modelValue: _ctx.targetData.targetDetails,
                    "onUpdate:modelValue": ($event) => _ctx.targetData.targetDetails = $event,
                    type: "textarea",
                    rows: "3",
                    name: "targetDetails",
                    placeholder: "Type Target Details"
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.targetData.targetDetails,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.targetDetails = $event,
                      type: "textarea",
                      rows: "3",
                      name: "targetDetails",
                      placeholder: "Type Target Details"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="d-flex flex-column mb-8 fv-row"${_scopeId}><label class="d-flex align-items-center fs-6 fw-semibold mb-2"${_scopeId}><span class="required"${_scopeId}>Tags</span><i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="tooltip" title="Specify a target priorty"${_scopeId}></i></label>`);
            _push2(ssrRenderComponent(_component_el_form_item, { prop: "tags" }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_el_select, {
                    modelValue: _ctx.targetData.tags,
                    "onUpdate:modelValue": ($event) => _ctx.targetData.tags = $event,
                    multiple: "",
                    filterable: "",
                    "allow-create": "",
                    "default-first-option": "",
                    placeholder: "Choose tags for your target"
                  }, {
                    default: vueExports$1.withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "Important",
                          value: "important"
                        }, null, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "Urgent",
                          value: "urgent"
                        }, null, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "High",
                          value: "high"
                        }, null, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "Low",
                          value: "low"
                        }, null, _parent4, _scopeId3));
                        _push4(ssrRenderComponent(_component_el_option, {
                          label: "Medium",
                          value: "medium"
                        }, null, _parent4, _scopeId3));
                      } else {
                        return [
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Important",
                            value: "important"
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Urgent",
                            value: "urgent"
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "High",
                            value: "high"
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Low",
                            value: "low"
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Medium",
                            value: "medium"
                          })
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    vueExports$1.createVNode(_component_el_select, {
                      modelValue: _ctx.targetData.tags,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.tags = $event,
                      multiple: "",
                      filterable: "",
                      "allow-create": "",
                      "default-first-option": "",
                      placeholder: "Choose tags for your target"
                    }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Important",
                          value: "important"
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Urgent",
                          value: "urgent"
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "High",
                          value: "high"
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Low",
                          value: "low"
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Medium",
                          value: "medium"
                        })
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue"])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div><div class="d-flex flex-stack mb-8"${_scopeId}><div class="me-5"${_scopeId}><label class="fs-6 fw-semibold"${_scopeId}>Adding Users by Team Members</label><div class="fs-7 fw-semibold text-gray-500"${_scopeId}> If you need more info, please check budget planning </div></div><label class="form-check form-switch form-check-custom form-check-solid"${_scopeId}><input class="form-check-input" type="checkbox" value="1" checked${_scopeId}><span class="form-check-label fw-semibold text-gray-500"${_scopeId}> Allowed </span></label></div><div class="mb-15 fv-row"${_scopeId}><div class="d-flex flex-stack"${_scopeId}><div class="fw-semibold me-5"${_scopeId}><label class="fs-6"${_scopeId}>Notifications</label><div class="fs-7 text-gray-500"${_scopeId}> Allow Notifications by Phone or Email </div></div><div class="d-flex align-items-center"${_scopeId}><label class="form-check form-check-custom form-check-solid me-10"${_scopeId}><input class="form-check-input h-20px w-20px" type="checkbox" name="communication[]" value="email" checked${_scopeId}><span class="form-check-label fw-semibold"${_scopeId}> Email </span></label><label class="form-check form-check-custom form-check-solid"${_scopeId}><input class="form-check-input h-20px w-20px" type="checkbox" name="communication[]" value="phone"${_scopeId}><span class="form-check-label fw-semibold"${_scopeId}> Phone </span></label></div></div></div><div class="text-center"${_scopeId}><button type="reset" id="kt_modal_new_target_cancel" class="btn btn-light me-3"${_scopeId}> Cancel </button><button${ssrRenderAttr("data-kt-indicator", _ctx.loading ? "on" : null)} class="btn btn-lg btn-primary" type="submit"${_scopeId}>`);
            if (!_ctx.loading) {
              _push2(`<span class="indicator-label"${_scopeId}> Submit `);
              _push2(ssrRenderComponent(_component_KTIcon, {
                "icon-name": "arrow-right",
                "icon-class": "fs-3 ms-2 me-0"
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.loading) {
              _push2(`<span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "mb-13 text-center" }, [
                vueExports$1.createVNode("h1", { class: "mb-3" }, "Set First Target"),
                vueExports$1.createVNode("div", { class: "text-gray-500 fw-semibold fs-5" }, [
                  vueExports$1.createTextVNode(" If you need more info, please check "),
                  vueExports$1.createVNode("a", {
                    href: "#",
                    class: "fw-bold link-primary"
                  }, "Project Guidelines"),
                  vueExports$1.createTextVNode(". ")
                ])
              ]),
              vueExports$1.createVNode("div", { class: "d-flex flex-column mb-8 fv-row" }, [
                vueExports$1.createVNode("label", { class: "d-flex align-items-center fs-6 fw-semibold mb-2" }, [
                  vueExports$1.createVNode("span", { class: "required" }, "Target Title"),
                  vueExports$1.createVNode("i", {
                    class: "fas fa-exclamation-circle ms-2 fs-7",
                    "data-bs-toggle": "tooltip",
                    title: "Specify a target name for future usage and reference"
                  })
                ]),
                vueExports$1.createVNode(_component_el_form_item, { prop: "targetTitle" }, {
                  default: vueExports$1.withCtx(() => [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.targetData.targetTitle,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.targetTitle = $event,
                      placeholder: "Enter Target Title",
                      name: "targetTitle"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ]),
                  _: 1
                })
              ]),
              vueExports$1.createVNode("div", { class: "row g-9 mb-8" }, [
                vueExports$1.createVNode("div", { class: "col-md-6 fv-row" }, [
                  vueExports$1.createVNode("label", { class: "required fs-6 fw-semibold mb-2" }, "Assign"),
                  vueExports$1.createVNode(_component_el_form_item, { prop: "assign" }, {
                    default: vueExports$1.withCtx(() => [
                      vueExports$1.createVNode(_component_el_select, {
                        modelValue: _ctx.targetData.assign,
                        "onUpdate:modelValue": ($event) => _ctx.targetData.assign = $event,
                        placeholder: "Select a Team Member",
                        name: "assign",
                        as: "select"
                      }, {
                        default: vueExports$1.withCtx(() => [
                          vueExports$1.createVNode(_component_el_option, { value: "" }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Select user...")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Karina Clark",
                            value: "1"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Karina Clark")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Robert Doe",
                            value: "2"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Robert Doe")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Niel Owen",
                            value: "3"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Niel Owen")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Olivia Wild",
                            value: "4"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Olivia Wild")
                            ]),
                            _: 1
                          }),
                          vueExports$1.createVNode(_component_el_option, {
                            label: "Sean Bean",
                            value: "5"
                          }, {
                            default: vueExports$1.withCtx(() => [
                              vueExports$1.createTextVNode("Sean Bean")
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }, 8, ["modelValue", "onUpdate:modelValue"])
                    ]),
                    _: 1
                  })
                ]),
                vueExports$1.createVNode("div", { class: "col-md-6 fv-row" }, [
                  vueExports$1.createVNode("label", { class: "required fs-6 fw-semibold mb-2" }, "Due Date"),
                  vueExports$1.createVNode("div", { class: "position-relative align-items-center" }, [
                    vueExports$1.createVNode(_component_el_form_item, { prop: "dueDate" }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode(_component_el_date_picker, {
                          modelValue: _ctx.targetData.dueDate,
                          "onUpdate:modelValue": ($event) => _ctx.targetData.dueDate = $event,
                          type: "date",
                          placeholder: "Select a date",
                          teleported: false,
                          "popper-class": "override-styles",
                          name: "dueDate"
                        }, null, 8, ["modelValue", "onUpdate:modelValue"])
                      ]),
                      _: 1
                    })
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "d-flex flex-column mb-8" }, [
                vueExports$1.createVNode("label", { class: "fs-6 fw-semibold mb-2" }, "Target Details"),
                vueExports$1.createVNode(_component_el_form_item, { prop: "targetDetails" }, {
                  default: vueExports$1.withCtx(() => [
                    vueExports$1.createVNode(_component_el_input, {
                      modelValue: _ctx.targetData.targetDetails,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.targetDetails = $event,
                      type: "textarea",
                      rows: "3",
                      name: "targetDetails",
                      placeholder: "Type Target Details"
                    }, null, 8, ["modelValue", "onUpdate:modelValue"])
                  ]),
                  _: 1
                })
              ]),
              vueExports$1.createVNode("div", { class: "d-flex flex-column mb-8 fv-row" }, [
                vueExports$1.createVNode("label", { class: "d-flex align-items-center fs-6 fw-semibold mb-2" }, [
                  vueExports$1.createVNode("span", { class: "required" }, "Tags"),
                  vueExports$1.createVNode("i", {
                    class: "fas fa-exclamation-circle ms-2 fs-7",
                    "data-bs-toggle": "tooltip",
                    title: "Specify a target priorty"
                  })
                ]),
                vueExports$1.createVNode(_component_el_form_item, { prop: "tags" }, {
                  default: vueExports$1.withCtx(() => [
                    vueExports$1.createVNode(_component_el_select, {
                      modelValue: _ctx.targetData.tags,
                      "onUpdate:modelValue": ($event) => _ctx.targetData.tags = $event,
                      multiple: "",
                      filterable: "",
                      "allow-create": "",
                      "default-first-option": "",
                      placeholder: "Choose tags for your target"
                    }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Important",
                          value: "important"
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Urgent",
                          value: "urgent"
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "High",
                          value: "high"
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Low",
                          value: "low"
                        }),
                        vueExports$1.createVNode(_component_el_option, {
                          label: "Medium",
                          value: "medium"
                        })
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue"])
                  ]),
                  _: 1
                })
              ]),
              vueExports$1.createVNode("div", { class: "d-flex flex-stack mb-8" }, [
                vueExports$1.createVNode("div", { class: "me-5" }, [
                  vueExports$1.createVNode("label", { class: "fs-6 fw-semibold" }, "Adding Users by Team Members"),
                  vueExports$1.createVNode("div", { class: "fs-7 fw-semibold text-gray-500" }, " If you need more info, please check budget planning ")
                ]),
                vueExports$1.createVNode("label", { class: "form-check form-switch form-check-custom form-check-solid" }, [
                  vueExports$1.createVNode("input", {
                    class: "form-check-input",
                    type: "checkbox",
                    value: "1",
                    checked: ""
                  }),
                  vueExports$1.createVNode("span", { class: "form-check-label fw-semibold text-gray-500" }, " Allowed ")
                ])
              ]),
              vueExports$1.createVNode("div", { class: "mb-15 fv-row" }, [
                vueExports$1.createVNode("div", { class: "d-flex flex-stack" }, [
                  vueExports$1.createVNode("div", { class: "fw-semibold me-5" }, [
                    vueExports$1.createVNode("label", { class: "fs-6" }, "Notifications"),
                    vueExports$1.createVNode("div", { class: "fs-7 text-gray-500" }, " Allow Notifications by Phone or Email ")
                  ]),
                  vueExports$1.createVNode("div", { class: "d-flex align-items-center" }, [
                    vueExports$1.createVNode("label", { class: "form-check form-check-custom form-check-solid me-10" }, [
                      vueExports$1.createVNode("input", {
                        class: "form-check-input h-20px w-20px",
                        type: "checkbox",
                        name: "communication[]",
                        value: "email",
                        checked: ""
                      }),
                      vueExports$1.createVNode("span", { class: "form-check-label fw-semibold" }, " Email ")
                    ]),
                    vueExports$1.createVNode("label", { class: "form-check form-check-custom form-check-solid" }, [
                      vueExports$1.createVNode("input", {
                        class: "form-check-input h-20px w-20px",
                        type: "checkbox",
                        name: "communication[]",
                        value: "phone"
                      }),
                      vueExports$1.createVNode("span", { class: "form-check-label fw-semibold" }, " Phone ")
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "text-center" }, [
                vueExports$1.createVNode("button", {
                  type: "reset",
                  id: "kt_modal_new_target_cancel",
                  class: "btn btn-light me-3"
                }, " Cancel "),
                vueExports$1.createVNode("button", {
                  "data-kt-indicator": _ctx.loading ? "on" : null,
                  class: "btn btn-lg btn-primary",
                  type: "submit"
                }, [
                  !_ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                    key: 0,
                    class: "indicator-label"
                  }, [
                    vueExports$1.createTextVNode(" Submit "),
                    vueExports$1.createVNode(_component_KTIcon, {
                      "icon-name": "arrow-right",
                      "icon-class": "fs-3 ms-2 me-0"
                    })
                  ])) : vueExports$1.createCommentVNode("", true),
                  _ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                    key: 1,
                    class: "indicator-progress"
                  }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])) : vueExports$1.createCommentVNode("", true)
                ], 8, ["data-kt-indicator"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div>`);
    }
    const _sfc_setup$2z = _sfc_main$2z.setup;
    _sfc_main$2z.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/forms/NewTargetModal.vue");
      return _sfc_setup$2z ? _sfc_setup$2z(props, ctx) : void 0;
    };
    const KTNewTargetModal = /* @__PURE__ */ _export_sfc(_sfc_main$2z, [["ssrRender", _sfc_ssrRender$2g]]);
    const __vite_glob_0_63 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTNewTargetModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2y = vueExports$1.defineComponent({
      name: "invite-friends-modal",
      components: {},
      setup() {
        const users = [
          {
            avatar: getAssetPath("media/avatars/300-6.jpg"),
            name: "Emma Smith",
            email: "e.smith@kpmg.com.au",
            access: "1"
          },
          {
            state: "danger",
            name: "Melody Macy",
            email: "melody@altbox.com",
            access: "1"
          },
          {
            avatar: getAssetPath("media/avatars/300-1.jpg"),
            name: "Max Smith",
            email: "max@kt.com",
            access: "3"
          },
          {
            avatar: getAssetPath("media/avatars/300-1.jpg"),
            name: "Sean Bean",
            email: "sean@dellito.com",
            access: "2"
          },
          {
            avatar: getAssetPath("media/avatars/300-25.jpg"),
            name: "Brian Cox",
            email: "brian@exchange.com",
            access: "3"
          },
          {
            state: "warning",
            name: "Mikaela Collins",
            email: "mikaela@pexcom.com",
            access: "2"
          },
          {
            avatar: getAssetPath("media/avatars/300-9.jpg"),
            name: "Francis Mitcham",
            email: "f.mitcham@kpmg.com.au",
            access: "3"
          },
          {
            state: "danger",
            name: "Olivia Wild",
            email: "olivia@corpmail.com",
            access: "2"
          },
          {
            state: "info",
            name: "Neil Owen",
            email: "owen.neil@gmail.com",
            access: "1"
          },
          {
            avatar: getAssetPath("media/avatars/300-23.jpg"),
            name: "Dan Wilson",
            email: "dam@consilting.com",
            access: "3"
          },
          {
            state: "danger",
            name: "Emma Bold",
            email: "emma@intenso.com",
            access: "2"
          },
          {
            avatar: getAssetPath("media/avatars/300-12.jpg"),
            name: "Ana Crown",
            email: "ana.cf@limtel.com",
            access: "1"
          },
          {
            state: "primary",
            name: "Robert Doe",
            email: "robert@benko.com",
            access: "3"
          },
          {
            avatar: getAssetPath("media/avatars/300-13.jpg"),
            name: "John Miller",
            email: "miller@mapple.com",
            access: "3"
          },
          {
            state: "success",
            name: "Lucy Kunic",
            email: "lucy.m@fentech.com",
            access: "2"
          },
          {
            state: getAssetPath("media/avatars/300-21.jpg"),
            name: "Ethan Wilder",
            email: "ethan@loop.com.au",
            access: "1"
          },
          {
            state: getAssetPath("media/avatars/300-12.jpg"),
            name: "Ana Crown",
            email: "ana.cf@limtel.com",
            access: "3"
          }
        ];
        return {
          users,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        id: "kt_modal_invite_friends",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog mw-650px"><div class="modal-content"><div class="modal-header pb-0 border-0 justify-content-end"><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div><div class="modal-body scroll-y mx-5 mx-xl-18 pt-0 pb-15"><div class="text-center mb-13"><h1 class="mb-3">Invite a Friend</h1><div class="text-gray-500 fw-semibold fs-5"> If you need more info, please check out <a href="#" class="link-primary fw-bold">FAQ Page</a>. </div></div><div class="btn btn-light-primary fw-bold w-100 mb-8"><img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/google-icon.svg"))} class="h-20px me-3"> Invite Gmail Contacts </div><div class="separator d-flex flex-center mb-8"><span class="text-uppercase bg-body fs-7 fw-semibold text-gray-400 px-3">or</span></div><textarea class="form-control form-control-solid mb-8" rows="3" placeholder="Type or paste emails here">
          </textarea><div class="mb-10"><div class="fs-6 fw-semibold mb-2">Your Invitations</div><div class="mh-300px scroll-y me-n7 pe-7"><!--[-->`);
      ssrRenderList(_ctx.users, (user2, index) => {
        _push(`<div class="d-flex flex-stack py-4 border-bottom border-gray-300 border-bottom-dashed"><div class="d-flex align-items-center"><div class="symbol symbol-35px symbol-circle">`);
        if (user2.avatar) {
          _push(`<img alt="Pic"${ssrRenderAttr("src", user2.avatar)}>`);
        } else {
          _push(`<span class="${ssrRenderClass([`bg-light-${user2.state} text-${user2.state}`, "symbol-label fw-semibold"])}">${ssrInterpolate(user2.name.charAt(0))}</span>`);
        }
        _push(`</div><div class="ms-5"><a href="#" class="fs-5 fw-bold text-gray-900 text-hover-primary mb-2">${ssrInterpolate(user2.name)}</a><div class="fw-semibold text-gray-500">${ssrInterpolate(user2.email)}</div></div></div><div class="ms-2 w-100px"><select class="form-select form-select-solid form-select-sm" data-control="select2" data-hide-search="true"><option value="1"${ssrIncludeBooleanAttr(Array.isArray(user2.access) ? ssrLooseContain(user2.access, "1") : ssrLooseEqual(user2.access, "1")) ? " selected" : ""}>Guest</option><option value="2"${ssrIncludeBooleanAttr(Array.isArray(user2.access) ? ssrLooseContain(user2.access, "2") : ssrLooseEqual(user2.access, "2")) ? " selected" : ""}>Owner</option><option value="3"${ssrIncludeBooleanAttr(Array.isArray(user2.access) ? ssrLooseContain(user2.access, "3") : ssrLooseEqual(user2.access, "3")) ? " selected" : ""}>Can Edit</option></select></div></div>`);
      });
      _push(`<!--]--></div></div><div class="d-flex flex-stack"><div class="me-5 fw-semibold"><label class="fs-6">Adding Users by Team Members</label><div class="fs-7 text-gray-500"> If you need more info, please check budget planning </div></div><label class="form-check form-switch form-check-custom form-check-solid"><input class="form-check-input" type="checkbox" value="1" checked><span class="form-check-label fw-semibold text-gray-500"> Allowed </span></label></div></div></div></div></div>`);
    }
    const _sfc_setup$2y = _sfc_main$2y.setup;
    _sfc_main$2y.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/general/InviteFriendsModal.vue");
      return _sfc_setup$2y ? _sfc_setup$2y(props, ctx) : void 0;
    };
    const KTInviteFriendsModal = /* @__PURE__ */ _export_sfc(_sfc_main$2y, [["ssrRender", _sfc_ssrRender$2f]]);
    const __vite_glob_0_64 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTInviteFriendsModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2x = vueExports$1.defineComponent({
      name: "share-and-earn-modal",
      components: {},
      setup() {
        const copyButtonRef = vueExports$1.ref(null);
        const inputRef = vueExports$1.ref(null);
        vueExports$1.onMounted(() => {
          const clipboard2 = new ClipboardJS(copyButtonRef.value);
          clipboard2.on("success", function(e) {
            var _a2, _b, _c;
            const buttonCaption = (_a2 = copyButtonRef.value) == null ? void 0 : _a2.innerHTML;
            (_b = inputRef.value) == null ? void 0 : _b.classList.add("bg-success");
            (_c = inputRef.value) == null ? void 0 : _c.classList.add("text-inverse-success");
            if (copyButtonRef.value) {
              copyButtonRef.value.innerHTML = "Copied!";
            }
            setTimeout(function() {
              var _a3, _b2;
              if (copyButtonRef.value && buttonCaption) {
                copyButtonRef.value.innerHTML = buttonCaption;
              }
              (_a3 = inputRef.value) == null ? void 0 : _a3.classList.remove("bg-success");
              (_b2 = inputRef.value) == null ? void 0 : _b2.classList.remove("text-inverse-success");
            }, 3e3);
            e.clearSelection();
          });
        });
        return {
          copyButtonRef,
          inputRef,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        id: "kt_modal_share_earn",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-800px"><div class="modal-content"><div class="modal-header pb-0 border-0 justify-content-end"><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div><div class="modal-body scroll-y pt-0 pb-15"><div class="mw-lg-600px mx-auto"><div class="mb-13 text-center"><h1 class="mb-3">Share &amp; Earn</h1><div class="text-gray-500 fw-semibold fs-5"> If you need more info, please check <a href="#" class="link-primary fw-bold">Author Commision</a>. </div></div><div class="mb-10"><h4 class="fs-5 fw-semibold text-gray-800"> Share my referral link with friends </h4><div class="d-flex"><input id="kt_share_earn_link_input" type="text" class="form-control form-control-solid me-3 flex-grow-1" name="search" value="https://keenthemes.com/?ref=skitechnology"><button id="kt_share_earn_link_copy_button" class="btn btn-light fw-bold flex-shrink-0" data-clipboard-target="#kt_share_earn_link_input"> Copy Link </button></div></div><div class="d-flex"><a href="#" class="btn btn-light-primary w-100"><img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/google-icon.svg"))} class="h-15px me-3"> Import Contacts </a><a href="#" class="btn btn-icon btn-facebook w-100 mx-6"><img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/facebook-2.svg"))} class="h-20px me-3"> Facebook </a><a href="#" class="btn btn-icon btn-twitter w-100"><img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/twitter.svg"))} class="h-20px me-3"> Twitter </a></div><div class="d-flex align-items-center mt-10"><div class="flex-grow-1"><span class="fs-6 fw-semibold text-gray-800 d-block">Adding Users by Team Members</span><span class="fs-7 fw-semibold text-gray-500">If you need more info, please check budget planning</span></div><label class="form-check form-switch form-check-custom form-check-solid"><input class="form-check-input" type="checkbox" value="1" checked><span class="form-check-label"> Allowed </span></label></div></div></div></div></div></div>`);
    }
    const _sfc_setup$2x = _sfc_main$2x.setup;
    _sfc_main$2x.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/general/ShareAndEarnModal.vue");
      return _sfc_setup$2x ? _sfc_setup$2x(props, ctx) : void 0;
    };
    const KTShareAndEarnModal = /* @__PURE__ */ _export_sfc(_sfc_main$2x, [["ssrRender", _sfc_ssrRender$2e]]);
    const __vite_glob_0_65 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTShareAndEarnModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2w = vueExports$1.defineComponent({
      name: "upgrade-plan-modal",
      components: {},
      setup() {
        const current = vueExports$1.ref("month");
        const selected = vueExports$1.ref("Startup");
        const plans = [
          {
            title: "Startup",
            subTitle: "Best for startups",
            description: "Optimal for 10+ team size and new startup",
            priceMonth: "39",
            priceAnnual: "399",
            default: true,
            custom: false,
            features: [
              {
                title: "Up to 10 Active Users",
                supported: true
              },
              {
                title: "Up to 30 Project Integrations",
                supported: true
              },
              {
                title: "Analytics Module",
                supported: true
              },
              {
                title: "Finance Module",
                supported: false
              },
              {
                title: "Accounting Module",
                supported: false
              },
              {
                title: "Network Platform",
                supported: false
              },
              {
                title: "Unlimited Cloud Space",
                supported: false
              }
            ]
          },
          {
            title: "Advanced",
            subTitle: "Best for 100+ team size",
            description: "Optimal for 100+ team size and grown company",
            priceMonth: "339",
            priceAnnual: "3399",
            default: false,
            custom: false,
            features: [
              {
                title: "Up to 10 Active Users",
                supported: true
              },
              {
                title: "Up to 30 Project Integrations",
                supported: true
              },
              {
                title: "Analytics Module",
                supported: true
              },
              {
                title: "Finance Module",
                supported: true
              },
              {
                title: "Accounting Module",
                supported: true
              },
              {
                title: "Network Platform",
                supported: false
              },
              {
                title: "Unlimited Cloud Space",
                supported: false
              }
            ]
          },
          {
            title: "Enterprise",
            subTitle: "Best value for 1000+ team",
            description: "Optimal for 1000+ team and enterpise",
            priceMonth: "999",
            priceAnnual: "9999",
            label: "Most popular",
            default: false,
            custom: false,
            features: [
              {
                title: "Up to 10 Active Users",
                supported: true
              },
              {
                title: "Up to 30 Project Integrations",
                supported: true
              },
              {
                title: "Analytics Module",
                supported: true
              },
              {
                title: "Finance Module",
                supported: true
              },
              {
                title: "Accounting Module",
                supported: true
              },
              {
                title: "Network Platform",
                supported: true
              },
              {
                title: "Unlimited Cloud Space",
                supported: true
              }
            ]
          },
          {
            title: "Custom",
            subTitle: "Requet a custom license",
            default: false,
            custom: true
          }
        ];
        return {
          plans,
          current,
          selected,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        id: "kt_modal_upgrade_plan",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog modal-xl"><div class="modal-content rounded"><div class="modal-header justify-content-end border-0 pb-0"><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div><div class="modal-body pt-0 pb-15 px-5 px-xl-20"><div class="mb-13 text-center"><h1 class="mb-3">Upgrade a Plan</h1><div class="text-gray-500 fw-semibold fs-5"> If you need more info, please check <a href="#" class="link-primary fw-bold">Pricing Guidelines</a>. </div></div><div class="d-flex flex-column"><div class="nav-group nav-group-outline mx-auto" data-kt-buttons="true"><button class="${ssrRenderClass([[_ctx.current === "month" && "active"], "btn btn-color-gray-500 btn-active btn-active-secondary px-6 py-3 me-2"])}"> Monthly </button><button class="${ssrRenderClass([[_ctx.current === "annual" && "active"], "btn btn-color-gray-500 btn-active btn-active-secondary px-6 py-3"])}"> Annual </button></div><div class="row mt-10"><div class="col-lg-6 mb-10 mb-lg-0"><div class="nav flex-column"><!--[-->`);
      ssrRenderList(_ctx.plans, (plan, index) => {
        _push(`<div class="${ssrRenderClass([[
          index !== _ctx.plans.length - 1 && "mb-6",
          plan.default && "active",
          !plan.custom && "btn-active btn-active-primary"
        ], "nav-link btn btn-outline btn-outline-dashed btn-color-dark d-flex flex-stack text-start p-6"])}" data-bs-toggle="tab"${ssrRenderAttr("data-bs-target", `#kt_upgrade_plan_${index}`)}><div class="d-flex align-items-center me-2"><div class="form-check form-check-custom form-check-solid form-check-success me-6"><input class="form-check-input" type="radio" name="plan"${ssrRenderAttr("value", plan.title)}${ssrIncludeBooleanAttr(_ctx.selected === plan.title) ? " checked" : ""}></div><div class="flex-grow-1"><h2 class="d-flex align-items-center fs-2 fw-bold flex-wrap">${ssrInterpolate(plan.title)} `);
        if (plan.label) {
          _push(`<span class="badge badge-light-success ms-2 fs-7">${ssrInterpolate(plan.label)}</span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</h2><div class="fw-semibold opacity-50">${ssrInterpolate(plan.subTitle)}</div></div></div><div class="ms-5">`);
        if (plan.custom) {
          _push(`<button class="btn btn-sm btn-primary"> Contact Us </button>`);
        } else {
          _push(`<!--[--><span class="mb-2">$</span><span class="fs-3x fw-bold">${ssrInterpolate(_ctx.current === "month" ? plan.priceMonth : plan.priceAnnual)}</span><span class="fs-7 opacity-50">/ <span data-kt-element="period">Mon</span></span><!--]-->`);
        }
        _push(`</div></div>`);
      });
      _push(`<!--]--></div></div><div class="col-lg-6"><div class="tab-content rounded h-100 bg-light p-10"><!--[-->`);
      ssrRenderList(_ctx.plans, (plan, index) => {
        _push(`<!--[-->`);
        if (!plan.custom) {
          _push(`<div class="${ssrRenderClass([[plan.default && "show active"], "tab-pane fade"])}"${ssrRenderAttr("id", `kt_upgrade_plan_${index}`)}><div class="pb-5"><h2 class="fw-bold text-gray-900"> What’s in Startup Plan? </h2><div class="text-gray-500 fw-semibold">${ssrInterpolate(plan.description)}</div></div><div class="pt-1"><!--[-->`);
          ssrRenderList(plan.features, (feature, i) => {
            _push(`<!--[-->`);
            if (plan.features) {
              _push(`<div class="${ssrRenderClass([{
                "mb-7": i !== plan.features.length - 1
              }, "d-flex align-items-center"])}">`);
              if (feature.supported) {
                _push(`<!--[--><span class="fw-semibold fs-5 text-gray-700 flex-grow-1">${ssrInterpolate(feature.title)}</span>`);
                _push(ssrRenderComponent(_component_KTIcon, {
                  "icon-name": "check-circle",
                  "icon-class": "fs-1 text-success"
                }, null, _parent));
                _push(`<!--]-->`);
              } else {
                _push(`<!--[--><span class="fw-semibold fs-5 text-gray-400 flex-grow-1">${ssrInterpolate(feature.title)}</span>`);
                _push(ssrRenderComponent(_component_KTIcon, {
                  "icon-name": "cross-circle",
                  "icon-class": "fs-1"
                }, null, _parent));
                _push(`<!--]-->`);
              }
              _push(`</div>`);
            } else {
              _push(`<!---->`);
            }
            _push(`<!--]-->`);
          });
          _push(`<!--]--></div></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div></div></div></div><div class="d-flex flex-center flex-row-fluid pt-12"><button type="reset" class="btn btn-light me-3" data-bs-dismiss="modal"> Cancel </button><button type="submit" class="btn btn-primary">Upgrade Plan</button></div></div></div></div></div>`);
    }
    const _sfc_setup$2w = _sfc_main$2w.setup;
    _sfc_main$2w.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/general/UpgradePlanModal.vue");
      return _sfc_setup$2w ? _sfc_setup$2w(props, ctx) : void 0;
    };
    const KTUpgradePlanModal = /* @__PURE__ */ _export_sfc(_sfc_main$2w, [["ssrRender", _sfc_ssrRender$2d]]);
    const __vite_glob_0_66 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTUpgradePlanModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2v = vueExports$1.defineComponent({
      name: "view-users-modal",
      components: {},
      setup() {
        const users = [
          {
            avatar: getAssetPath("media/avatars/300-6.jpg"),
            name: "Emma Smith",
            email: "e.smith@kpmg.com.au",
            position: "Art Director",
            sales: "23,000"
          },
          {
            state: "danger",
            name: "Melody Macy",
            email: "melody@altbox.com",
            position: "Marketing Analytic",
            sales: "50,500"
          },
          {
            avatar: getAssetPath("media/avatars/300-1.jpg"),
            name: "Max Smith",
            email: "max@kt.com",
            position: "Software Enginer",
            sales: "75,900"
          },
          {
            avatar: getAssetPath("media/avatars/300-1.jpg"),
            name: "Sean Bean",
            email: "sean@dellito.com",
            position: "Web Developer",
            sales: "10,500"
          },
          {
            avatar: getAssetPath("media/avatars/300-25.jpg"),
            name: "Brian Cox",
            email: "brian@exchange.com",
            position: "UI/UX Designer",
            sales: "20,000"
          },
          {
            state: "warning",
            name: "Mikaela Collins",
            email: "mikaela@pexcom.com",
            position: "Head Of Marketing",
            sales: "9,300"
          },
          {
            avatar: getAssetPath("media/avatars/300-9.jpg"),
            name: "Francis Mitcham",
            email: "f.mitcham@kpmg.com.au",
            position: "Software Arcitect",
            sales: "15,000"
          },
          {
            state: "danger",
            name: "Olivia Wild",
            email: "olivia@corpmail.com",
            position: "System Admin",
            sales: "23,000"
          },
          {
            state: "info",
            name: "Neil Owen",
            email: "owen.neil@gmail.com",
            position: "Account Manager",
            sales: "45,000"
          },
          {
            avatar: getAssetPath("media/avatars/300-23.jpg"),
            name: "Dan Wilson",
            email: "dam@consilting.com",
            position: "Web Desinger",
            sales: "90,500"
          },
          {
            state: "danger",
            name: "Emma Bold",
            email: "emma@intenso.com",
            position: "Corporate Finance",
            sales: "5,000"
          },
          {
            avatar: getAssetPath("media/avatars/300-12.jpg"),
            name: "Ana Crown",
            email: "ana.cf@limtel.com",
            position: "Customer Relationship",
            sales: "70,000"
          },
          {
            state: "primary",
            name: "Robert Doe",
            email: "robert@benko.com",
            position: "Marketing Executive",
            sales: "45,500"
          }
        ];
        return {
          users,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        id: "kt_modal_view_users",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog mw-650px"><div class="modal-content"><div class="modal-header pb-0 border-0 justify-content-end"><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div><div class="modal-body scroll-y mx-5 mx-xl-18 pt-0 pb-15"><div class="text-center mb-13"><h1 class="mb-3">Browse Users</h1><div class="text-gray-500 fw-semibold fs-5"> If you need more info, please check out our <a href="#" class="link-primary fw-bold">Users Directory</a>. </div></div><div class="mb-15"><div class="mh-375px scroll-y me-n7 pe-7"><!--[-->`);
      ssrRenderList(_ctx.users, (user2, index) => {
        _push(`<div class="d-flex flex-stack py-5 border-bottom border-gray-300 border-bottom-dashed"><div class="d-flex align-items-center"><div class="symbol symbol-35px symbol-circle">`);
        if (user2.avatar) {
          _push(`<img alt="Pic"${ssrRenderAttr("src", user2.avatar)}>`);
        } else {
          _push(`<span class="${ssrRenderClass([`bg-light-${user2.state} text-${user2.state}`, "symbol-label fw-semibold"])}">${ssrInterpolate(user2.name.charAt(0))}</span>`);
        }
        _push(`</div><div class="ms-6"><a href="#" class="d-flex align-items-center fs-5 fw-bold text-gray-900 text-hover-primary">${ssrInterpolate(user2.name)} <span class="badge badge-light fs-8 fw-semibold ms-2">${ssrInterpolate(user2.position)}</span></a><div class="fw-semibold text-gray-500">${ssrInterpolate(user2.email)}</div></div></div><div class="d-flex"><div class="text-end"><div class="fs-5 fw-bold text-gray-900"> $${ssrInterpolate(user2.sales)}</div><div class="fs-7 text-muted">Sales</div></div></div></div>`);
      });
      _push(`<!--]--></div></div><div class="d-flex justify-content-between"><div class="fw-semibold"><label class="fs-6">Adding Users by Team Members</label><div class="fs-7 text-gray-500"> If you need more info, please check budget planning </div></div><label class="form-check form-switch form-check-custom form-check-solid"><input class="form-check-input" type="checkbox" value="" checked><span class="form-check-label fw-semibold text-gray-500"> Allowed </span></label></div></div></div></div></div>`);
    }
    const _sfc_setup$2v = _sfc_main$2v.setup;
    _sfc_main$2v.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/general/ViewUsersModal.vue");
      return _sfc_setup$2v ? _sfc_setup$2v(props, ctx) : void 0;
    };
    const KTViewUsersModal = /* @__PURE__ */ _export_sfc(_sfc_main$2v, [["ssrRender", _sfc_ssrRender$2c]]);
    const __vite_glob_0_67 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTViewUsersModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2u = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAccountStep1",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          const _directive_tooltip = vueExports$1.resolveDirective("tooltip");
          let _temp0;
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "current",
            "data-kt-stepper-element": "content"
          }, _attrs))}><div class="w-100"><div class="pb-10 pb-lg-15"><h2 class="fw-bold d-flex align-items-center text-gray-900"> Choose Account Type <i${ssrRenderAttrs(_temp0 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Billing is issued based on your selected account type"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp0 ? ssrInterpolate(_temp0.textContent) : _temp0.innerHTML ?? ""}</i></h2><div class="text-gray-500 fw-semibold fs-6"> If you need more info, please check out <a href="#" class="link-primary fw-bold">Help Page</a>. </div></div><div class="fv-row"><div class="row"><div class="col-lg-6">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "radio",
            class: "btn-check",
            name: "accountType",
            value: "personal",
            id: "kt_create_account_form_account_type_personal"
          }, null, _parent));
          _push(`<label class="btn btn-outline btn-outline-dashed btn-outline-default p-7 d-flex align-items-center mb-10" for="kt_create_account_form_account_type_personal">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "address-book",
            "icon-class": "fs-3x me-5"
          }, null, _parent));
          _push(`<span class="d-block fw-semibold text-start"><span class="text-gray-900 fw-bold d-block fs-4 mb-2"> Personal Account </span><span class="text-gray-500 fw-semibold fs-6">If you need more info, please check it out</span></span></label></div><div class="col-lg-6">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "radio",
            class: "btn-check",
            name: "accountType",
            value: "corporate",
            id: "kt_create_account_form_account_type_corporate"
          }, null, _parent));
          _push(`<label class="btn btn-outline btn-outline-dashed btn-outline-default p-7 d-flex align-items-center" for="kt_create_account_form_account_type_corporate">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "briefcase",
            "icon-class": "fs-3x me-5"
          }, null, _parent));
          _push(`<span class="d-block fw-semibold text-start"><span class="text-gray-900 fw-bold d-block fs-4 mb-2">Corporate Account</span><span class="text-gray-500 fw-semibold fs-6">Create corporate account to mane users</span></span></label></div>`);
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            name: "accountType",
            class: "fv-plugins-message-container invalid-feedback"
          }, null, _parent));
          _push(`</div></div></div></div>`);
        };
      }
    });
    const _sfc_setup$2u = _sfc_main$2u.setup;
    _sfc_main$2u.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep1.vue");
      return _sfc_setup$2u ? _sfc_setup$2u(props, ctx) : void 0;
    };
    const __vite_glob_0_140 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2u
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2t = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAccountStep2",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          const _directive_tooltip = vueExports$1.resolveDirective("tooltip");
          let _temp0, _temp1;
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ "data-kt-stepper-element": "content" }, _attrs))}><div class="w-100"><div class="pb-10 pb-lg-15"><h2 class="fw-bold text-gray-900">Account Info</h2><div class="text-gray-500 fw-semibold fs-6"> If you need more info, please check out <a href="#" class="link-primary fw-bold">Help Page</a>. </div></div><div class="mb-10 fv-row"><label class="d-flex align-items-center form-label mb-3"> Specify Team Size <i${ssrRenderAttrs(_temp0 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Provide your team size to help us setup your billing"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp0 ? ssrInterpolate(_temp0.textContent) : _temp0.innerHTML ?? ""}</i></label><div class="row mb-2" data-kt-buttons="true"><div class="col">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "radio",
            class: "btn-check",
            id: "accountTeamSize1",
            name: "accountTeamSize",
            value: "1-1"
          }, null, _parent));
          _push(`<label class="btn btn-outline btn-outline-dashed btn-outline-default w-100 p-4" for="accountTeamSize1"><span class="fw-bold fs-3">1-1</span></label></div><div class="col">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "radio",
            class: "btn-check",
            name: "accountTeamSize",
            id: "accountTeamSize2",
            value: "2-10"
          }, null, _parent));
          _push(`<label class="btn btn-outline btn-outline-dashed btn-outline-default w-100 p-4" for="accountTeamSize2"><span class="fw-bold fs-3">2-10</span></label></div><div class="col">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "radio",
            class: "btn-check",
            name: "accountTeamSize",
            id: "accountTeamSize3",
            value: "10-50"
          }, null, _parent));
          _push(`<label class="btn btn-outline btn-outline-dashed btn-outline-default w-100 p-4" for="accountTeamSize3"><span class="fw-bold fs-3">10-50</span></label></div><div class="col">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "radio",
            class: "btn-check",
            name: "accountTeamSize",
            id: "accountTeamSize4",
            checked: "",
            value: "50+"
          }, null, _parent));
          _push(`<label class="btn btn-outline btn-outline-dashed btn-outline-default w-100 p-4" for="accountTeamSize4"><span class="fw-bold fs-3">50+</span></label></div></div><div class="form-text"> Customers will see this shortened version of your statement descriptor </div></div><div class="mb-10 fv-row"><label class="form-label mb-3">Team Account Name</label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            class: "form-control form-control-lg form-control-solid",
            name: "accountName"
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            name: "accountName",
            class: "fv-plugins-message-container invalid-feedback"
          }, null, _parent));
          _push(`</div><div class="mb-0 fv-row"><label class="d-flex align-items-center form-label mb-5"> Select Account Plan <i${ssrRenderAttrs(_temp1 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Monthly billing will be based on your account plan"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp1 ? ssrInterpolate(_temp1.textContent) : _temp1.innerHTML ?? ""}</i></label><div class="mb-0"><label class="d-flex flex-stack mb-5 cursor-pointer"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "bank",
            "icon-class": "fs-1 text-gray-600"
          }, null, _parent));
          _push(`</span></span><span class="d-flex flex-column"><span class="fw-bold text-gray-800 text-hover-primary fs-5">Company Account</span><span class="fs-6 fw-semibold text-gray-500">Use images to enhance your post flow</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "accountPlan",
            value: "1"
          }, null, _parent));
          _push(`</span></label><label class="d-flex flex-stack mb-5 cursor-pointer"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "chart",
            "icon-class": "fs-1 text-gray-600"
          }, null, _parent));
          _push(`</span></span><span class="d-flex flex-column"><span class="fw-bold text-gray-800 text-hover-primary fs-5">Developer Account</span><span class="fs-6 fw-semibold text-gray-500">Use images to your post time</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            checked: "",
            name: "accountPlan",
            value: "2"
          }, null, _parent));
          _push(`</span></label><label class="d-flex flex-stack mb-0 cursor-pointer"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "chart-pie-4",
            "icon-class": "fs-1 text-gray-600"
          }, null, _parent));
          _push(`</span></span><span class="d-flex flex-column"><span class="fw-bold text-gray-800 text-hover-primary fs-5">Testing Account</span><span class="fs-6 fw-semibold text-gray-500">Use images to enhance time travel rivers</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "accountPlan",
            value: "3"
          }, null, _parent));
          _push(`</span></label></div></div></div></div>`);
        };
      }
    });
    const _sfc_setup$2t = _sfc_main$2t.setup;
    _sfc_main$2t.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep2.vue");
      return _sfc_setup$2t ? _sfc_setup$2t(props, ctx) : void 0;
    };
    const __vite_glob_0_141 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2t
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2s = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAccountStep3",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ "data-kt-stepper-element": "content" }, _attrs))}><div class="w-100"><div class="pb-10 pb-lg-12"><h2 class="fw-bold text-gray-900">Business Details</h2><div class="text-gray-500 fw-semibold fs-6"> If you need more info, please check out <a href="#" class="link-primary fw-bold">Help Page</a>. </div></div><div class="fv-row mb-10"><label class="form-label required">Business Name</label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            name: "businessName",
            class: "form-control form-control-lg form-control-solid",
            value: "Keenthemes Inc."
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            name: "businessName",
            class: "fv-plugins-message-container invalid-feedback"
          }, null, _parent));
          _push(`</div><div class="fv-row mb-10"><label class="d-flex align-items-center form-label"><span class="required">Shortened Descriptor</span><i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="popover" data-bs-trigger="hover" data-bs-html="true"></i></label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            name: "businessDescriptor",
            class: "form-control form-control-lg form-control-solid",
            value: "KEENTHEMES"
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            name: "businessDescriptor",
            class: "fv-plugins-message-container invalid-feedback"
          }, null, _parent));
          _push(`<div class="form-text"> Customers will see this shortened version of your statement descriptor </div></div><div class="fv-row mb-10"><label class="form-label required">Corporation Type</label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            name: "businessType",
            class: "form-select form-select-lg form-select-solid",
            "data-control": "select2",
            "data-placeholder": "Select...",
            "data-allow-clear": "true",
            "data-hide-search": "true",
            as: "select"
          }, {
            default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`<option${_scopeId}></option><option value="1"${_scopeId}>S Corporation</option><option value="1"${_scopeId}>C Corporation</option><option value="2"${_scopeId}>Sole Proprietorship</option><option value="3"${_scopeId}>Non-profit</option><option value="4"${_scopeId}>Limited Liability</option><option value="5"${_scopeId}>General Partnership</option>`);
              } else {
                return [
                  vueExports$1.createVNode("option"),
                  vueExports$1.createVNode("option", { value: "1" }, "S Corporation"),
                  vueExports$1.createVNode("option", { value: "1" }, "C Corporation"),
                  vueExports$1.createVNode("option", { value: "2" }, "Sole Proprietorship"),
                  vueExports$1.createVNode("option", { value: "3" }, "Non-profit"),
                  vueExports$1.createVNode("option", { value: "4" }, "Limited Liability"),
                  vueExports$1.createVNode("option", { value: "5" }, "General Partnership")
                ];
              }
            }),
            _: 1
          }, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            name: "businessType",
            class: "fv-plugins-message-container invalid-feedback"
          }, null, _parent));
          _push(`</div><div class="fv-row mb-10"><label class="form-label">Business Description</label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            name: "businessDescription",
            class: "form-control form-control-lg form-control-solid",
            rows: "3"
          }, null, _parent));
          _push(`</div><div class="fv-row mb-0"><label class="fs-6 fw-semibold form-label required">Contact Email</label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            name: "businessEmail",
            class: "form-control form-control-lg form-control-solid",
            value: "corp@support.com"
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            name: "businessEmail",
            class: "fv-plugins-message-container invalid-feedback"
          }, null, _parent));
          _push(`</div></div></div>`);
        };
      }
    });
    const _sfc_setup$2s = _sfc_main$2s.setup;
    _sfc_main$2s.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep3.vue");
      return _sfc_setup$2s ? _sfc_setup$2s(props, ctx) : void 0;
    };
    const __vite_glob_0_142 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2s
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2r = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAccountStep4",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          const _directive_tooltip = vueExports$1.resolveDirective("tooltip");
          let _temp0, _temp1;
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ "data-kt-stepper-element": "content" }, _attrs))}><div class="w-100"><div class="pb-10 pb-lg-15"><h2 class="fw-bold text-gray-900">Billing Details</h2><div class="text-gray-500 fw-semibold fs-6"> If you need more info, please check out <a href="#" class="text-primary fw-bold">Help Page</a>. </div></div><div class="w-100"><div class="d-flex flex-column mb-7 fv-row"><label class="d-flex align-items-center fs-6 fw-semibold form-label mb-2"><span class="required">Name On Card</span><i${ssrRenderAttrs(_temp0 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Specify a card holder's name"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp0 ? ssrInterpolate(_temp0.textContent) : _temp0.innerHTML ?? ""}</i></label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            class: "form-control form-control-solid",
            placeholder: "",
            name: "nameOnCard"
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "nameOnCard"
          }, null, _parent));
          _push(`</div><div class="d-flex flex-column mb-7 fv-row"><label class="required fs-6 fw-semibold form-label mb-2">Card Number</label><div class="position-relative">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            class: "form-control form-control-solid",
            placeholder: "Enter card number",
            name: "cardNumber"
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "cardNumber"
          }, null, _parent));
          _push(`<div class="position-absolute translate-middle-y top-50 end-0 me-5"><img${ssrRenderAttr("src", vueExports$1.unref(getAssetPath)("media/svg/card-logos/visa.svg"))} alt="" class="h-25px"><img${ssrRenderAttr("src", vueExports$1.unref(getAssetPath)("media/svg/card-logos/mastercard.svg"))} alt="" class="h-25px"><img${ssrRenderAttr("src", vueExports$1.unref(getAssetPath)("media/svg/card-logos/american-express.svg"))} alt="" class="h-25px"></div></div></div><div class="row mb-10"><div class="col-md-8 fv-row"><label class="required fs-6 fw-semibold form-label mb-2">Expiration Date</label><div class="row fv-row"><div class="col-6">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            name: "cardExpiryMonth",
            class: "form-select form-select-solid select2-hidden-accessible",
            placeholder: "Month",
            as: "select"
          }, {
            default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`<!--[-->`);
                ssrRenderList(12, (i) => {
                  _push2(`<option${ssrRenderAttr("label", i.toString())}${ssrRenderAttr("value", i)}${_scopeId}></option>`);
                });
                _push2(`<!--]-->`);
              } else {
                return [
                  (vueExports$1.openBlock(), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(12, (i) => {
                    return vueExports$1.createVNode("option", {
                      key: i,
                      label: i.toString(),
                      value: i
                    }, null, 8, ["label", "value"]);
                  }), 64))
                ];
              }
            }),
            _: 1
          }, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "cardExpiryMonth"
          }, null, _parent));
          _push(`</div><div class="col-6">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            name: "cardExpiryYear",
            class: "form-select form-select-solid select2-hidden-accessible",
            placeholder: "Year",
            as: "select"
          }, {
            default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`<!--[-->`);
                ssrRenderList(10, (i) => {
                  _push2(`<option${ssrRenderAttr("label", (i + ((/* @__PURE__ */ new Date()).getFullYear() - 1)).toString())}${ssrRenderAttr("value", i)}${_scopeId}></option>`);
                });
                _push2(`<!--]-->`);
              } else {
                return [
                  (vueExports$1.openBlock(), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(10, (i) => {
                    return vueExports$1.createVNode("option", {
                      key: i,
                      label: (i + ((/* @__PURE__ */ new Date()).getFullYear() - 1)).toString(),
                      value: i
                    }, null, 8, ["label", "value"]);
                  }), 64))
                ];
              }
            }),
            _: 1
          }, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "cardExpiryYear"
          }, null, _parent));
          _push(`</div></div></div><div class="col-md-4 fv-row"><label class="d-flex align-items-center fs-6 fw-semibold form-label mb-2"><span class="required">CVV</span><i${ssrRenderAttrs(_temp1 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Enter a card CVV code"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp1 ? ssrInterpolate(_temp1.textContent) : _temp1.innerHTML ?? ""}</i></label><div class="position-relative">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            class: "form-control form-control-solid",
            minlength: "3",
            maxlength: "4",
            placeholder: "CVV",
            name: "cardCvv"
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "cardCvv"
          }, null, _parent));
          _push(`<div class="position-absolute translate-middle-y top-50 end-0 me-3">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "credit-cart",
            "icon-class": "fs-2hx"
          }, null, _parent));
          _push(`</div></div></div></div><div class="d-flex flex-stack"><div class="me-5"><label class="fs-6 fw-semibold form-label">Save Card for further billing?</label><div class="fs-7 fw-semibold text-gray-500"> If you need more info, please check budget planning </div></div><label class="form-check form-switch form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "checkbox",
            class: "form-check-input",
            name: "saveCard",
            value: "1"
          }, null, _parent));
          _push(`<span class="form-check-label fw-semibold text-gray-500"> Save Card </span></label></div></div></div></div>`);
        };
      }
    });
    const _sfc_setup$2r = _sfc_main$2r.setup;
    _sfc_main$2r.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep4.vue");
      return _sfc_setup$2r ? _sfc_setup$2r(props, ctx) : void 0;
    };
    const __vite_glob_0_143 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2r
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2q = {};
    function _sfc_ssrRender$2b(_ctx, _push, _parent, _attrs) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ "data-kt-stepper-element": "content" }, _attrs))}><div class="w-100"><div class="pb-8 pb-lg-10"><h2 class="fw-bold text-gray-900">Your Are Done!</h2><div class="text-gray-500 fw-semibold fs-6"> If you need more info, please `);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/sign-in",
        class: "link-primary fw-bold"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Sign In`);
          } else {
            return [
              vueExports$1.createTextVNode("Sign In")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`. </div></div><div class="mb-0"><div class="fs-6 text-gray-600 mb-5"> Writing headlines for blog posts is as much an art as it is a science and probably warrants its own post, but for all advise is with what works for your great &amp; amazing audience. </div><div class="notice d-flex bg-light-warning rounded border-warning border border-dashed p-6">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "information-5",
        "icon-class": "fs-2tx text-warning me-4"
      }, null, _parent));
      _push(`<div class="d-flex flex-stack flex-grow-1"><div class="fw-semibold"><h4 class="text-gray-800 fw-bold">We need your attention!</h4><div class="fs-6 text-gray-600"> To start using great tools, please, please <a href="#" class="fw-bold">Create Team Platform</a></div></div></div></div></div></div></div>`);
    }
    const _sfc_setup$2q = _sfc_main$2q.setup;
    _sfc_main$2q.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep5.vue");
      return _sfc_setup$2q ? _sfc_setup$2q(props, ctx) : void 0;
    };
    const CreateAccountStep5 = /* @__PURE__ */ _export_sfc(_sfc_main$2q, [["ssrRender", _sfc_ssrRender$2b]]);
    const __vite_glob_0_144 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CreateAccountStep5
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2p = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAccountWizardForm",
      __ssrInlineRender: true,
      props: {
        stepperEl: {},
        closeHadler: { type: Function }
      },
      setup(__props) {
        const props = __props;
        const stepperObj = vueExports$1.ref(null);
        const currentStepIndex = vueExports$1.ref(0);
        const formData = vueExports$1.ref({
          accountType: "personal",
          accountTeamSize: "50+",
          accountName: "",
          accountPlan: "1",
          businessName: "Keenthemes Inc.",
          businessDescriptor: "KEENTHEMES",
          businessType: "1",
          businessDescription: "",
          businessEmail: "corp@support.com",
          nameOnCard: "Max Doe",
          cardNumber: "4111 1111 1111 1111",
          cardExpiryMonth: "1",
          cardExpiryYear: "2",
          cardCvv: "123",
          saveCard: "1"
        });
        vueExports$1.ref(formData.value);
        vueExports$1.onMounted(() => {
          vueExports$1.nextTick(() => {
            if (props.stepperEl) {
              stepperObj.value = StepperComponent.createInsance(props.stepperEl);
            }
          });
        });
        const createAccountSchema = [
          Yup.object({
            accountType: Yup.string().required().label("Account Type")
          }),
          Yup.object({
            accountName: Yup.string().required().label("Account Name")
          }),
          Yup.object({
            businessName: Yup.string().required().label("Business Name"),
            businessDescriptor: Yup.string().required().label("Shortened Descriptor"),
            businessType: Yup.string().required().label("Corporation Type"),
            businessEmail: Yup.string().required().label("Contact Email")
          }),
          Yup.object({
            nameOnCard: Yup.string().required().label("Name On Card"),
            cardNumber: Yup.string().required().label("Card Number"),
            cardExpiryMonth: Yup.string().required().label("Expiration Month"),
            cardExpiryYear: Yup.string().required().label("Expiration Year"),
            cardCvv: Yup.string().required().label("CVV")
          })
        ];
        const currentSchema = vueExports$1.computed(() => {
          return createAccountSchema[currentStepIndex.value];
        });
        const totalSteps = vueExports$1.computed(() => {
          if (stepperObj.value) {
            return stepperObj.value.totalStepsNumber;
          } else {
            return 1;
          }
        });
        const { resetForm, handleSubmit } = useForm({
          validationSchema: currentSchema,
          initialValues: formData.value
        });
        handleSubmit((values) => {
          console.log(values);
          formData.value = {
            ...formData.value,
            ...values
          };
          resetForm({
            values: {
              ...formData.value
            }
          });
          currentStepIndex.value++;
          if (!stepperObj.value) {
            return;
          }
          stepperObj.value.goNext();
        });
        return (_ctx, _push, _parent, _attrs) => {
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          _push(`<form${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "mx-auto mw-600px w-100 pt-15 pb-10",
            novalidate: "",
            id: "kt_create_account_form"
          }, _attrs))}>`);
          _push(ssrRenderComponent(_sfc_main$2u, null, null, _parent));
          _push(ssrRenderComponent(_sfc_main$2t, null, null, _parent));
          _push(ssrRenderComponent(_sfc_main$2s, null, null, _parent));
          _push(ssrRenderComponent(_sfc_main$2r, null, null, _parent));
          _push(ssrRenderComponent(CreateAccountStep5, null, null, _parent));
          _push(`<div class="d-flex flex-stack pt-15"><div class="mr-2"><button type="button" class="btn btn-lg btn-light-primary me-3" data-kt-stepper-action="previous">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "arrow-left",
            "icon-class": "fs-4 me-1"
          }, null, _parent));
          _push(` Back </button></div><div>`);
          if (currentStepIndex.value === totalSteps.value - 1) {
            _push(`<button type="button" class="btn btn-lg btn-primary me-3" data-kt-stepper-action="submit"><span class="indicator-label"> Submit `);
            _push(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "arrow-right",
              "icon-class": "fs-3 ms-2 me-0"
            }, null, _parent));
            _push(`</span><span class="indicator-progress"> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span></button>`);
          } else {
            _push(`<button type="submit" class="btn btn-lg btn-primary"> Continue `);
            _push(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "arrow-right",
              "icon-class": "fs-4 ms-2 me-0"
            }, null, _parent));
            _push(`</button>`);
          }
          _push(`</div></div></form>`);
        };
      }
    });
    const _sfc_setup$2p = _sfc_main$2p.setup;
    _sfc_main$2p.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-account-wizard/CreateAccountWizardForm.vue");
      return _sfc_setup$2p ? _sfc_setup$2p(props, ctx) : void 0;
    };
    const __vite_glob_0_139 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2p
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2o = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAccountHorizontalWizardStepper",
      __ssrInlineRender: true,
      props: {
        closeHadler: { type: Function }
      },
      setup(__props) {
        const props = __props;
        const createAccountStepperRef = vueExports$1.ref(null);
        return (_ctx, _push, _parent, _attrs) => {
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "stepper stepper-links d-flex flex-column",
            id: "kt_create_account_stepper",
            ref_key: "createAccountStepperRef",
            ref: createAccountStepperRef
          }, _attrs))}><div class="stepper-nav py-5 mt-5"><div class="stepper-item current" data-kt-stepper-element="nav"><h3 class="stepper-title">Account Type</h3></div><div class="stepper-item" data-kt-stepper-element="nav"><h3 class="stepper-title">Account Info</h3></div><div class="stepper-item" data-kt-stepper-element="nav"><h3 class="stepper-title">Business Info</h3></div><div class="stepper-item" data-kt-stepper-element="nav"><h3 class="stepper-title">Billing Details</h3></div><div class="stepper-item" data-kt-stepper-element="nav"><h3 class="stepper-title">Completed</h3></div></div>`);
          _push(ssrRenderComponent(_sfc_main$2p, {
            "stepper-el": createAccountStepperRef.value,
            "close-hadler": props.closeHadler
          }, null, _parent));
          _push(`</div>`);
        };
      }
    });
    const _sfc_setup$2o = _sfc_main$2o.setup;
    _sfc_main$2o.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-account-wizard/CreateAccountHorizontalWizardStepper.vue");
      return _sfc_setup$2o ? _sfc_setup$2o(props, ctx) : void 0;
    };
    const __vite_glob_0_137 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2o
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2n = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAccountModal",
      __ssrInlineRender: true,
      setup(__props) {
        const modalRef = vueExports$1.ref(null);
        const closeModal = () => {
          hideModal(modalRef.value);
        };
        return (_ctx, _push, _parent, _attrs) => {
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "modal fade",
            id: "kt_modal_create_account",
            ref_key: "modalRef",
            ref: modalRef,
            tabindex: "-1",
            "aria-hidden": "true"
          }, _attrs))}><div class="modal-dialog mw-1000px"><div class="modal-content"><div class="modal-header"><h2>Create Account</h2><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "cross",
            "icon-class": "fs-1"
          }, null, _parent));
          _push(`</div></div><div class="modal-body scroll-y m-5">`);
          _push(ssrRenderComponent(_sfc_main$2o, { "close-hadler": closeModal }, null, _parent));
          _push(`</div></div></div></div>`);
        };
      }
    });
    const _sfc_setup$2n = _sfc_main$2n.setup;
    _sfc_main$2n.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/wizards/CreateAccountModal.vue");
      return _sfc_setup$2n ? _sfc_setup$2n(props, ctx) : void 0;
    };
    const __vite_glob_0_68 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2n
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2m = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAppStep1",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          const _directive_tooltip = vueExports$1.resolveDirective("tooltip");
          let _temp0, _temp1;
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "current",
            "data-kt-stepper-element": "content"
          }, _attrs))}><div class="w-100"><div class="fv-row mb-10"><label class="d-flex align-items-center fs-5 fw-semibold mb-2"><span class="required">App Name</span><i${ssrRenderAttrs(_temp0 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Specify your unique app name"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp0 ? ssrInterpolate(_temp0.textContent) : _temp0.innerHTML ?? ""}</i></label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            class: "form-control form-control-lg form-control-solid",
            name: "appName",
            placeholder: ""
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "appName"
          }, null, _parent));
          _push(`</div><div class="fv-row"><label class="d-flex align-items-center fs-5 fw-semibold mb-4"><span class="required">Category</span><i${ssrRenderAttrs(_temp1 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Select your app category"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp1 ? ssrInterpolate(_temp1.textContent) : _temp1.innerHTML ?? ""}</i></label><div class="fv-row"><label class="d-flex flex-stack mb-5 cursor-pointer"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-primary">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "compass",
            "icon-class": "fs-1 text-primary"
          }, null, _parent));
          _push(`</span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">Quick Online Courses</span><span class="fs-7 text-muted">Creating a clear text structure is just one SEO</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "category",
            value: "1"
          }, null, _parent));
          _push(`</span></label><label class="d-flex flex-stack mb-5 cursor-pointer"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-danger">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "category",
            "icon-class": "fs-1 text-danger"
          }, null, _parent));
          _push(`</span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">Face to Face Discussions</span><span class="fs-7 text-muted">Creating a clear text structure is just one aspect</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "category",
            value: "2"
          }, null, _parent));
          _push(`</span></label><label class="d-flex flex-stack cursor-pointer"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-success">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "timer",
            "icon-class": "fs-1 text-success"
          }, null, _parent));
          _push(`</span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">Full Intro Training</span><span class="fs-7 text-muted">Creating a clear text structure copywriting</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "category",
            value: "3"
          }, null, _parent));
          _push(`</span></label>`);
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "category"
          }, null, _parent));
          _push(`</div></div></div></div>`);
        };
      }
    });
    const _sfc_setup$2m = _sfc_main$2m.setup;
    _sfc_main$2m.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep1.vue");
      return _sfc_setup$2m ? _sfc_setup$2m(props, ctx) : void 0;
    };
    const __vite_glob_0_147 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2m
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2l = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAppStep2",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          const _directive_tooltip = vueExports$1.resolveDirective("tooltip");
          let _temp0;
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ "data-kt-stepper-element": "content" }, _attrs))}><div class="w-100"><div class="fv-row"><label class="d-flex align-items-center fs-5 fw-semibold mb-4"><span class="required">Select Framework</span><i${ssrRenderAttrs(_temp0 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Specify your apps framework"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp0 ? ssrInterpolate(_temp0.textContent) : _temp0.innerHTML ?? ""}</i></label><label class="d-flex flex-stack cursor-pointer mb-5"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-warning"><i class="fab fa-html5 text-warning fs-2x"></i></span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">HTML5</span><span class="fs-7 text-muted">Base Web Projec</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "framework",
            value: "1"
          }, null, _parent));
          _push(`</span></label><label class="d-flex flex-stack cursor-pointer mb-5"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-success"><i class="fab fa-react text-success fs-2x"></i></span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">ReactJS</span><span class="fs-7 text-muted">Robust and flexible app framework</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "framework",
            value: "2"
          }, null, _parent));
          _push(`</span></label><label class="d-flex flex-stack cursor-pointer mb-5"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-danger"><i class="fab fa-angular text-danger fs-2x"></i></span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">Angular</span><span class="fs-7 text-muted">Powerful data mangement</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "framework",
            value: "3"
          }, null, _parent));
          _push(`</span></label><label class="d-flex flex-stack cursor-pointer"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-primary"><i class="fab fa-vuejs text-primary fs-2x"></i></span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">Vue</span><span class="fs-7 text-muted">Lightweight and responsive framework</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "framework",
            value: "4"
          }, null, _parent));
          _push(`</span></label>`);
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "framework"
          }, null, _parent));
          _push(`</div></div></div>`);
        };
      }
    });
    const _sfc_setup$2l = _sfc_main$2l.setup;
    _sfc_main$2l.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep2.vue");
      return _sfc_setup$2l ? _sfc_setup$2l(props, ctx) : void 0;
    };
    const __vite_glob_0_148 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2l
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2k = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAppStep3",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          const _directive_tooltip = vueExports$1.resolveDirective("tooltip");
          let _temp0;
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ "data-kt-stepper-element": "content" }, _attrs))}><div class="w-100"><div class="fv-row mb-10"><label class="required fs-5 fw-semibold mb-2"> Database Name </label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            class: "form-control form-control-lg form-control-solid",
            name: "dbName",
            placeholder: ""
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "dbName"
          }, null, _parent));
          _push(`</div><div class="fv-row"><label class="d-flex align-items-center fs-5 fw-semibold mb-4"><span class="required">Select Database Engine</span><i${ssrRenderAttrs(_temp0 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Select your app database engine"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp0 ? ssrInterpolate(_temp0.textContent) : _temp0.innerHTML ?? ""}</i></label><label class="d-flex flex-stack cursor-pointer mb-5"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-success"><i class="fas fa-database text-success fs-2x"></i></span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">MySQL</span><span class="fs-7 text-muted">Basic MySQL database</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "dbType",
            value: "1"
          }, null, _parent));
          _push(`</span></label><label class="d-flex flex-stack cursor-pointer mb-5"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-danger"><i class="fab fa-google text-danger fs-2x"></i></span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">Firebase</span><span class="fs-7 text-muted">Google based app data management</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "dbType",
            value: "2"
          }, null, _parent));
          _push(`</span></label><label class="d-flex flex-stack cursor-pointer"><span class="d-flex align-items-center me-2"><span class="symbol symbol-50px me-6"><span class="symbol-label bg-light-warning"><i class="fab fa-amazon text-warning fs-2x"></i></span></span><span class="d-flex flex-column"><span class="fw-bold fs-6">DynamoDB</span><span class="fs-7 text-muted">Amazon Fast NoSQL Database</span></span></span><span class="form-check form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            class: "form-check-input",
            type: "radio",
            name: "dbType",
            value: "3"
          }, null, _parent));
          _push(`</span></label>`);
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "dbType"
          }, null, _parent));
          _push(`</div></div></div>`);
        };
      }
    });
    const _sfc_setup$2k = _sfc_main$2k.setup;
    _sfc_main$2k.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep3.vue");
      return _sfc_setup$2k ? _sfc_setup$2k(props, ctx) : void 0;
    };
    const __vite_glob_0_149 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2k
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2j = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAppStep4",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          const _directive_tooltip = vueExports$1.resolveDirective("tooltip");
          let _temp0, _temp1;
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ "data-kt-stepper-element": "content" }, _attrs))}><div class="w-100"><div class="d-flex flex-column mb-7 fv-row"><label class="d-flex align-items-center fs-6 fw-semibold form-label mb-2"><span class="required">Name On Card</span><i${ssrRenderAttrs(_temp0 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Specify a card holder's name"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp0 ? ssrInterpolate(_temp0.textContent) : _temp0.innerHTML ?? ""}</i></label>`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            class: "form-control form-control-solid",
            placeholder: "",
            name: "nameOnCard"
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "nameOnCard"
          }, null, _parent));
          _push(`</div><div class="d-flex flex-column mb-7 fv-row"><label class="required fs-6 fw-semibold form-label mb-2">Card Number</label><div class="position-relative">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            class: "form-control form-control-solid",
            placeholder: "Enter card number",
            name: "cardNumber"
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "cardNumber"
          }, null, _parent));
          _push(`<div class="position-absolute translate-middle-y top-50 end-0 me-5"><img${ssrRenderAttr("src", vueExports$1.unref(getAssetPath)("media/svg/card-logos/visa.svg"))} alt="" class="h-25px"><img${ssrRenderAttr("src", vueExports$1.unref(getAssetPath)("media/svg/card-logos/mastercard.svg"))} alt="" class="h-25px"><img${ssrRenderAttr("src", vueExports$1.unref(getAssetPath)("media/svg/card-logos/american-express.svg"))} alt="" class="h-25px"></div></div></div><div class="row mb-10"><div class="col-md-8 fv-row"><label class="required fs-6 fw-semibold form-label mb-2">Expiration Date</label><div class="row fv-row"><div class="col-6">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            name: "cardExpiryMonth",
            class: "form-select form-select-solid select2-hidden-accessible",
            placeholder: "Month",
            as: "select"
          }, {
            default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`<!--[-->`);
                ssrRenderList(12, (i) => {
                  _push2(`<option${ssrRenderAttr("label", i.toString())}${ssrRenderAttr("value", i)}${_scopeId}></option>`);
                });
                _push2(`<!--]-->`);
              } else {
                return [
                  (vueExports$1.openBlock(), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(12, (i) => {
                    return vueExports$1.createVNode("option", {
                      key: i,
                      label: i.toString(),
                      value: i
                    }, null, 8, ["label", "value"]);
                  }), 64))
                ];
              }
            }),
            _: 1
          }, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "cardExpiryMonth"
          }, null, _parent));
          _push(`</div><div class="col-6">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            name: "cardExpiryYear",
            class: "form-select form-select-solid select2-hidden-accessible",
            placeholder: "Year",
            as: "select"
          }, {
            default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`<!--[-->`);
                ssrRenderList(10, (i) => {
                  _push2(`<option${ssrRenderAttr("label", (i + ((/* @__PURE__ */ new Date()).getFullYear() - 1)).toString())}${ssrRenderAttr("value", i)}${_scopeId}></option>`);
                });
                _push2(`<!--]-->`);
              } else {
                return [
                  (vueExports$1.openBlock(), vueExports$1.createBlock(vueExports$1.Fragment, null, vueExports$1.renderList(10, (i) => {
                    return vueExports$1.createVNode("option", {
                      key: i,
                      label: (i + ((/* @__PURE__ */ new Date()).getFullYear() - 1)).toString(),
                      value: i
                    }, null, 8, ["label", "value"]);
                  }), 64))
                ];
              }
            }),
            _: 1
          }, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "cardExpiryYear"
          }, null, _parent));
          _push(`</div></div></div><div class="col-md-4 fv-row"><label class="d-flex align-items-center fs-6 fw-semibold form-label mb-2"><span class="required">CVV</span><i${ssrRenderAttrs(_temp1 = vueExports$1.mergeProps({
            class: "fas fa-exclamation-circle ms-2 fs-7",
            title: "Enter a card CVV code"
          }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp1 ? ssrInterpolate(_temp1.textContent) : _temp1.innerHTML ?? ""}</i></label><div class="position-relative">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "text",
            class: "form-control form-control-solid",
            minlength: "3",
            maxlength: "4",
            placeholder: "CVV",
            name: "cardCvv"
          }, null, _parent));
          _push(ssrRenderComponent(vueExports$1.unref(ErrorMessage), {
            class: "fv-plugins-message-container invalid-feedback",
            name: "cardCvv"
          }, null, _parent));
          _push(`<div class="position-absolute translate-middle-y top-50 end-0 me-3">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "credit-cart",
            "icon-class": "fs-2hx"
          }, null, _parent));
          _push(`</div></div></div></div><div class="d-flex flex-stack"><div class="me-5"><label class="fs-6 fw-semibold form-label">Save Card for further billing?</label><div class="fs-7 fw-semibold text-gray-500"> If you need more info, please check budget planning </div></div><label class="form-check form-switch form-check-custom form-check-solid">`);
          _push(ssrRenderComponent(vueExports$1.unref(Field), {
            type: "checkbox",
            class: "form-check-input",
            name: "saveCard",
            value: "1"
          }, null, _parent));
          _push(`<span class="form-check-label fw-semibold text-gray-500"> Save Card </span></label></div></div></div>`);
        };
      }
    });
    const _sfc_setup$2j = _sfc_main$2j.setup;
    _sfc_main$2j.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep4.vue");
      return _sfc_setup$2j ? _sfc_setup$2j(props, ctx) : void 0;
    };
    const __vite_glob_0_150 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2j
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2i = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAppStep5",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ "data-kt-stepper-element": "content" }, _attrs))}><div class="w-100 text-center"><h1 class="fw-bold text-gray-900 mb-3">Release!</h1><div class="text-muted fw-semibold fs-3"> Submit your app to kickstart your project. </div><div class="text-center px-4 py-15"><img${ssrRenderAttr("src", vueExports$1.unref(getIllustrationsPath)("9.png"))} alt="" class="mw-100 mh-300px"></div></div></div>`);
        };
      }
    });
    const _sfc_setup$2i = _sfc_main$2i.setup;
    _sfc_main$2i.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep5.vue");
      return _sfc_setup$2i ? _sfc_setup$2i(props, ctx) : void 0;
    };
    const __vite_glob_0_151 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2i
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2h = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAppWizardForm",
      __ssrInlineRender: true,
      props: {
        stepperEl: {},
        closeHadler: { type: Function }
      },
      setup(__props) {
        const props = __props;
        const currentStepIndex = vueExports$1.ref(0);
        const stepperObj = vueExports$1.ref(null);
        vueExports$1.onMounted(() => {
          vueExports$1.nextTick(() => {
            if (props.stepperEl) {
              stepperObj.value = StepperComponent.createInsance(props.stepperEl);
            }
          });
        });
        const formData = vueExports$1.ref({
          appName: "",
          category: "1",
          framework: "1",
          dbName: "",
          dbType: "1",
          nameOnCard: "Max Doe",
          cardNumber: "4111 1111 1111 1111",
          cardExpiryMonth: "1",
          cardExpiryYear: "2",
          cardCvv: "123",
          saveCard: "1"
        });
        vueExports$1.ref(formData.value);
        const createAppSchema = [
          Yup.object({
            appName: Yup.string().required().label("App name"),
            category: Yup.string().required().label("Category")
          }),
          Yup.object({
            framework: Yup.string().required().label("Framework")
          }),
          Yup.object({
            dbName: Yup.string().required().label("Database name"),
            dbType: Yup.string().required().label("Database engine")
          }),
          Yup.object({
            nameOnCard: Yup.string().required().label("Name"),
            cardNumber: Yup.string().required().label("Card Number"),
            cardExpiryMonth: Yup.string().required().label("Expiration Month"),
            cardExpiryYear: Yup.string().required().label("Expiration Year"),
            cardCvv: Yup.string().required().label("CVV")
          })
        ];
        const currentSchema = vueExports$1.computed(() => {
          return createAppSchema[currentStepIndex.value];
        });
        const totalSteps = vueExports$1.computed(() => {
          if (stepperObj.value) {
            return stepperObj.value.totalStepsNumber;
          } else {
            return 1;
          }
        });
        const { resetForm, handleSubmit } = useForm({
          validationSchema: currentSchema,
          initialValues: formData.value
        });
        handleSubmit((values) => {
          console.log(values);
          formData.value = {
            ...formData.value,
            ...values
          };
          resetForm({
            values: {
              ...formData.value
            }
          });
          currentStepIndex.value++;
          if (!stepperObj.value) {
            return;
          }
          stepperObj.value.goNext();
        });
        return (_ctx, _push, _parent, _attrs) => {
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          _push(`<form${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "form",
            id: "kt_create_app_form"
          }, _attrs))}>`);
          _push(ssrRenderComponent(_sfc_main$2m, null, null, _parent));
          _push(ssrRenderComponent(_sfc_main$2l, null, null, _parent));
          _push(ssrRenderComponent(_sfc_main$2k, null, null, _parent));
          _push(ssrRenderComponent(_sfc_main$2j, null, null, _parent));
          _push(ssrRenderComponent(_sfc_main$2i, null, null, _parent));
          _push(`<div class="d-flex flex-stack pt-10"><div class="me-2"><button type="button" class="btn btn-lg btn-light-primary me-3" data-kt-stepper-action="previous">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "arrow-left",
            "icon-class": "fs-3 me-1"
          }, null, _parent));
          _push(` Back </button></div><div>`);
          if (currentStepIndex.value === totalSteps.value - 1) {
            _push(`<button type="submit" class="btn btn-lg btn-primary"><span class="indicator-label"> Submit `);
            _push(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "arrow-right",
              "icon-class": "fs-3 ms-2 me-0"
            }, null, _parent));
            _push(`</span><span class="indicator-progress"> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span></button>`);
          } else {
            _push(`<button type="submit" class="btn btn-lg btn-primary"> Continue `);
            _push(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "arrow-right",
              "icon-class": "fs-3 ms-1 me-0"
            }, null, _parent));
            _push(`</button>`);
          }
          _push(`</div></div></form>`);
        };
      }
    });
    const _sfc_setup$2h = _sfc_main$2h.setup;
    _sfc_main$2h.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-app-wizard/CreateAppWizardForm.vue");
      return _sfc_setup$2h ? _sfc_setup$2h(props, ctx) : void 0;
    };
    const __vite_glob_0_145 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2h
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2g = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAppWizardStepper",
      __ssrInlineRender: true,
      props: {
        closeHadler: { type: Function }
      },
      setup(__props) {
        const props = __props;
        const createAppStepperRef = vueExports$1.ref(null);
        return (_ctx, _push, _parent, _attrs) => {
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "stepper stepper-pills stepper-column d-flex flex-column flex-xl-row flex-row-fluid",
            id: "kt_modal_create_app_stepper",
            ref_key: "createAppStepperRef",
            ref: createAppStepperRef
          }, _attrs))}><div class="d-flex justify-content-center justify-content-xl-start flex-row-auto w-100 w-xl-300px"><div class="stepper-nav ps-lg-10"><div class="stepper-item current" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">1</span></div><div class="stepper-label"><h3 class="stepper-title">Details</h3><div class="stepper-desc">Name your App</div></div></div><div class="stepper-line h-40px"></div></div><div class="stepper-item" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">2</span></div><div class="stepper-label"><h3 class="stepper-title">Frameworks</h3><div class="stepper-desc">Define your app framework</div></div></div><div class="stepper-line h-40px"></div></div><div class="stepper-item" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">3</span></div><div class="stepper-label"><h3 class="stepper-title">Database</h3><div class="stepper-desc">Select the app database type</div></div></div><div class="stepper-line h-40px"></div></div><div class="stepper-item" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">4</span></div><div class="stepper-label"><h3 class="stepper-title">Billing</h3><div class="stepper-desc">Provide payment details</div></div></div><div class="stepper-line h-40px"></div></div><div class="stepper-item" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">5</span></div><div class="stepper-label"><h3 class="stepper-title">Release</h3><div class="stepper-desc">Review and Submit</div></div></div></div></div></div><div class="flex-row-fluid py-lg-5 px-lg-15">`);
          _push(ssrRenderComponent(_sfc_main$2h, {
            stepperEl: createAppStepperRef.value,
            "close-hadler": props.closeHadler
          }, null, _parent));
          _push(`</div></div>`);
        };
      }
    });
    const _sfc_setup$2g = _sfc_main$2g.setup;
    _sfc_main$2g.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-app-wizard/CreateAppWizardStepper.vue");
      return _sfc_setup$2g ? _sfc_setup$2g(props, ctx) : void 0;
    };
    const __vite_glob_0_146 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2g
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2f = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAppModal",
      __ssrInlineRender: true,
      setup(__props) {
        const modalRef = vueExports$1.ref(null);
        const closeModal = () => {
          hideModal(modalRef.value);
        };
        return (_ctx, _push, _parent, _attrs) => {
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "modal fade",
            id: "kt_modal_create_app",
            tabindex: "-1",
            "aria-hidden": "true",
            ref_key: "modalRef",
            ref: modalRef
          }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-900px"><div class="modal-content"><div class="modal-header"><h2>Create App</h2><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "cross",
            "icon-class": "fs-1"
          }, null, _parent));
          _push(`</div></div><div class="modal-body py-lg-10 px-lg-10">`);
          _push(ssrRenderComponent(_sfc_main$2g, { "close-hadler": closeModal }, null, _parent));
          _push(`</div></div></div></div>`);
        };
      }
    });
    const _sfc_setup$2f = _sfc_main$2f.setup;
    _sfc_main$2f.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/wizards/CreateAppModal.vue");
      return _sfc_setup$2f ? _sfc_setup$2f(props, ctx) : void 0;
    };
    const __vite_glob_0_69 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$2f
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2e = vueExports$1.defineComponent({
      name: "two-factor-auth-modal",
      components: {
        ErrorMessage,
        Field,
        VForm: Form
      },
      setup() {
        const value = vueExports$1.ref("apps");
        const state = vueExports$1.ref("");
        const submitAuthCodeButtonRef = vueExports$1.ref(null);
        const submitMobileButtonRef = vueExports$1.ref(null);
        const schema1 = Yup.object().shape({
          mobile: Yup.string().required().label("Mobile")
        });
        const schema2 = Yup.object().shape({
          code: Yup.string().required().label("Code")
        });
        const submitAuthCodeForm = () => {
          if (submitAuthCodeButtonRef.value) {
            submitAuthCodeButtonRef.value.setAttribute("data-kt-indicator", "on");
            setTimeout(() => {
              var _a2;
              (_a2 = submitAuthCodeButtonRef.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
              Swal.fire({
                text: "Form has been successfully submitted!",
                icon: "success",
                buttonsStyling: false,
                confirmButtonText: "Ok, got it!",
                heightAuto: false,
                customClass: {
                  confirmButton: "btn btn-primary"
                }
              }).then(() => {
                state.value = "";
              });
            }, 2e3);
          }
        };
        const submitMobileForm = () => {
          if (!submitMobileButtonRef.value) {
            return;
          }
          submitMobileButtonRef.value.disabled = true;
          submitMobileButtonRef.value.setAttribute("data-kt-indicator", "on");
          setTimeout(() => {
            var _a2;
            if (submitMobileButtonRef.value) {
              submitMobileButtonRef.value.disabled = false;
              (_a2 = submitMobileButtonRef.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
            }
            Swal.fire({
              text: "Form has been successfully submitted!",
              icon: "success",
              buttonsStyling: false,
              confirmButtonText: "Ok, got it!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn btn-primary"
              }
            }).then(() => {
              state.value = "";
            });
          }, 2e3);
        };
        return {
          value,
          state,
          schema1,
          schema2,
          submitAuthCodeForm,
          submitMobileForm,
          submitAuthCodeButtonRef,
          submitMobileButtonRef,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_VForm = vueExports$1.resolveComponent("VForm");
      const _component_Field = vueExports$1.resolveComponent("Field");
      const _component_ErrorMessage = vueExports$1.resolveComponent("ErrorMessage");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "modal fade",
        id: "kt_modal_two_factor_authentication",
        tabindex: "-1",
        "aria-hidden": "true"
      }, _attrs))}><div class="modal-dialog modal-dialog-centered mw-650px"><div class="modal-content"><div class="modal-header flex-stack"><h2>Choose An Authentication Method</h2><div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</div></div><div class="modal-body scroll-y pt-10 pb-15 px-lg-17"><div class="${ssrRenderClass([_ctx.state !== "" && "d-none"])}"><p class="text-gray-500 fs-5 fw-semibold mb-10"> In addition to your username and password, you’ll have to enter a code (delivered via app or SMS) to log into your account. </p><div class="pb-10"><input type="radio" class="btn-check" name="auth_option" value="apps" checked id="kt_modal_two_factor_authentication_option_1"${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.value, "apps")) ? " checked" : ""}><label class="btn btn-outline btn-outline-dashed btn-outline-default p-7 d-flex align-items-center mb-5" for="kt_modal_two_factor_authentication_option_1">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "setting-2",
        "icon-class": "fs-4x me-4"
      }, null, _parent));
      _push(`<span class="d-block fw-semibold text-start"><span class="text-gray-900 fw-bold d-block fs-3">Authenticator Apps</span><span class="text-gray-500 fw-semibold fs-6"> Get codes from an app like Google Authenticator, Microsoft Authenticator, Authy or 1Password. </span></span></label><input type="radio" class="btn-check" name="auth_option" value="sms" id="kt_modal_two_factor_authentication_option_2"${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.value, "sms")) ? " checked" : ""}><label class="btn btn-outline btn-outline-dashed btn-outline-default p-7 d-flex align-items-center" for="kt_modal_two_factor_authentication_option_2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "message-text-2",
        "icon-class": "fs-4x me-4"
      }, null, _parent));
      _push(`<span class="d-block fw-semibold text-start"><span class="text-gray-900 fw-bold d-block fs-3">SMS</span><span class="text-gray-500 fw-semibold fs-6">We will send a code via SMS if you need to use your backup login method.</span></span></label></div><button class="btn btn-primary w-100"> Continue </button></div><div class="${ssrRenderClass([_ctx.state !== "apps" && "d-none"])}" data-kt-element="apps"><h3 class="text-gray-900 fw-bold mb-7">Authenticator Apps</h3><div class="text-gray-500 fw-semibold fs-6 mb-10"> Using an authenticator app like <a href="https://support.google.com/accounts/answer/1066447?hl=en" target="_blank">Google Authenticator</a>, <a href="https://www.microsoft.com/en-us/account/authenticator" target="_blank">Microsoft Authenticator</a>, <a href="https://authy.com/download/" target="_blank">Authy</a>, or <a href="https://support.1password.com/one-time-passwords/" target="_blank">1Password</a>, scan the QR code. It will generate a 6 digit code for you to enter below. <div class="pt-5 text-center"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/misc/qr.png"))} alt="" class="mw-150px"></div></div><div class="notice d-flex bg-light-warning rounded border-warning border border-dashed mb-10 p-6">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "formation-5",
        "icon-class": "fs-2tx text-warning me-4"
      }, null, _parent));
      _push(`<div class="d-flex flex-stack flex-grow-1"><div class="fw-semibold"><div class="fs-6 text-gray-600"> If you having trouble using the QR code, select manual entry on your app, and enter your username and the code: <div class="fw-bold text-gray-900 pt-2"> KBSS3QDAAFUMCBY63YCKI5WSSVACUMPN </div></div></div></div></div>`);
      _push(ssrRenderComponent(_component_VForm, {
        class: "form",
        onSubmit: ($event) => _ctx.submitAuthCodeForm(),
        "validation-schema": _ctx.schema2
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="mb-10 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              class: "form-control form-control-lg form-control-solid",
              placeholder: "Enter authentication code",
              name: "code"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "code" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="d-flex flex-center"${_scopeId}><button type="reset" class="btn btn-light me-3"${_scopeId}> Cancel </button><button type="submit" data-kt-element="apps-submit" class="btn btn-primary"${_scopeId}><span class="indicator-label"${_scopeId}> Submit </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "mb-10 fv-row" }, [
                vueExports$1.createVNode(_component_Field, {
                  type: "text",
                  class: "form-control form-control-lg form-control-solid",
                  placeholder: "Enter authentication code",
                  name: "code"
                }),
                vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                  vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                    vueExports$1.createVNode(_component_ErrorMessage, { name: "code" })
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "d-flex flex-center" }, [
                vueExports$1.createVNode("button", {
                  type: "reset",
                  onClick: ($event) => _ctx.state = "",
                  class: "btn btn-light me-3"
                }, " Cancel ", 8, ["onClick"]),
                vueExports$1.createVNode("button", {
                  ref: "submitAuthCodeButtonRef",
                  type: "submit",
                  "data-kt-element": "apps-submit",
                  class: "btn btn-primary"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Submit "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="${ssrRenderClass([_ctx.state !== "sms" && "d-none"])}" data-kt-element="sms"><h3 class="text-gray-900 fw-bold fs-3 mb-5"> SMS: Verify Your Mobile Number </h3><div class="text-gray-500 fw-semibold mb-10"> Enter your mobile phone number with country code and we will send you a verification code upon request. </div>`);
      _push(ssrRenderComponent(_component_VForm, {
        class: "form",
        onSubmit: ($event) => _ctx.submitMobileForm(),
        "validation-schema": _ctx.schema1
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="mb-10 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              class: "form-control form-control-lg form-control-solid",
              placeholder: "Mobile number with country code...",
              name: "mobile"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "mobile" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="d-flex flex-center"${_scopeId}><button class="btn btn-light me-3"${_scopeId}> Cancel </button><button type="submit" data-kt-element="sms-submit" class="btn btn-primary"${_scopeId}><span class="indicator-label"${_scopeId}> Submit </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "mb-10 fv-row" }, [
                vueExports$1.createVNode(_component_Field, {
                  type: "text",
                  class: "form-control form-control-lg form-control-solid",
                  placeholder: "Mobile number with country code...",
                  name: "mobile"
                }),
                vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                  vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                    vueExports$1.createVNode(_component_ErrorMessage, { name: "mobile" })
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "d-flex flex-center" }, [
                vueExports$1.createVNode("button", {
                  onClick: ($event) => _ctx.state = "",
                  class: "btn btn-light me-3"
                }, " Cancel ", 8, ["onClick"]),
                vueExports$1.createVNode("button", {
                  ref: "submitMobileButtonRef",
                  type: "submit",
                  "data-kt-element": "sms-submit",
                  class: "btn btn-primary"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Submit "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div></div>`);
    }
    const _sfc_setup$2e = _sfc_main$2e.setup;
    _sfc_main$2e.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/modals/wizards/TwoFactorAuthModal.vue");
      return _sfc_setup$2e ? _sfc_setup$2e(props, ctx) : void 0;
    };
    const KTTwoFactorAuthModal = /* @__PURE__ */ _export_sfc(_sfc_main$2e, [["ssrRender", _sfc_ssrRender$2a]]);
    const __vite_glob_0_70 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTTwoFactorAuthModal
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2d = vueExports$1.defineComponent({
      name: "profile-page-layout",
      components: {
        Dropdown3
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$29(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_router_view = vueExports$1.resolveComponent("router-view");
      _push(`<!--[--><div class="card mb-5 mb-xxl-8"><div class="card-body pt-9 pb-0"><div class="d-flex flex-wrap flex-sm-nowrap mb-3"><div class="me-7 mb-4"><div class="symbol symbol-100px symbol-lg-160px symbol-fixed position-relative"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-1.jpg"))} alt="image"><div class="position-absolute translate-middle bottom-0 start-100 mb-6 bg-success rounded-circle border border-4 border-white h-20px w-20px"></div></div></div><div class="flex-grow-1"><div class="d-flex justify-content-between align-items-start flex-wrap mb-2"><div class="d-flex flex-column"><div class="d-flex align-items-center mb-2"><a href="#" class="text-gray-800 text-hover-primary fs-2 fw-bold me-1">Max Smith</a><a href="#">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "verify",
        "icon-class": "fs-1 text-primary"
      }, null, _parent));
      _push(`</a></div><div class="d-flex flex-wrap fw-semibold fs-6 mb-4 pe-2"><a href="#" class="d-flex align-items-center text-gray-500 text-hover-primary me-5 mb-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "profile-circle",
        "icon-class": "fs-4 me-1"
      }, null, _parent));
      _push(` Developer </a><a href="#" class="d-flex align-items-center text-gray-500 text-hover-primary me-5 mb-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "geolocation",
        "icon-class": "fs-4 me-1"
      }, null, _parent));
      _push(` SF, Bay Area </a><a href="#" class="d-flex align-items-center text-gray-500 text-hover-primary mb-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "sms",
        "icon-class": "fs-4 me-1"
      }, null, _parent));
      _push(` max@kt.com </a></div></div><div class="d-flex my-4"><a href="#" class="btn btn-sm btn-light me-2" id="kt_user_follow_button">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "check",
        "icon-class": "fs-3 d-none"
      }, null, _parent));
      _push(` Follow </a><a href="#" class="btn btn-sm btn-primary me-3" data-bs-toggle="modal" data-bs-target="#kt_modal_offer_a_deal">Hire Me</a><div class="me-0"><button class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end"><i class="bi bi-three-dots fs-3"></i></button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div></div><div class="d-flex flex-wrap flex-stack"><div class="d-flex flex-column flex-grow-1 pe-8"><div class="d-flex flex-wrap"><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 px-4 me-6 mb-3"><div class="d-flex align-items-center">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-3 text-success me-2"
      }, null, _parent));
      _push(`<div class="fs-2 fw-bold" data-kt-countup="true" data-kt-countup-value="4500" data-kt-countup-prefix="$"> 4,500$ </div></div><div class="fw-semibold fs-6 text-gray-500">Earnings</div></div><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 px-4 me-6 mb-3"><div class="d-flex align-items-center">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-down",
        "icon-class": "fs-3 text-danger me-2"
      }, null, _parent));
      _push(`<div class="fs-2 fw-bold" data-kt-countup="true" data-kt-countup-value="75"> 75 </div></div><div class="fw-semibold fs-6 text-gray-500">Projects</div></div><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 px-4 me-6 mb-3"><div class="d-flex align-items-center">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-3 text-success me-2"
      }, null, _parent));
      _push(`<div class="fs-2 fw-bold" data-kt-countup="true" data-kt-countup-value="60" data-kt-countup-prefix="%"> 60% </div></div><div class="fw-semibold fs-6 text-gray-500">Success Rate</div></div></div></div><div class="d-flex align-items-center w-200px w-sm-300px flex-column mt-3"><div class="d-flex justify-content-between w-100 mt-auto mb-2"><span class="fw-semibold fs-6 text-gray-500">Profile Compleation</span><span class="fw-bold fs-6">50%</span></div><div class="h-5px mx-3 w-100 bg-light mb-3"><div class="bg-success rounded h-5px" role="progressbar" style="${ssrRenderStyle({ "width": "50%" })}" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div></div></div></div></div></div><div class="d-flex overflow-auto h-55px"><ul class="nav nav-stretch nav-line-tabs nav-line-tabs-2x border-transparent fs-5 fw-bold flex-nowrap"><li class="nav-item">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/crafted/pages/profile/overview",
        class: "nav-link text-active-primary me-6",
        "active-class": "active"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Overview `);
          } else {
            return [
              vueExports$1.createTextVNode(" Overview ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="nav-item">`);
      _push(ssrRenderComponent(_component_router_link, {
        class: "nav-link text-active-primary me-6",
        to: "/crafted/pages/profile/projects",
        "active-class": "active"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Projects `);
          } else {
            return [
              vueExports$1.createTextVNode(" Projects ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="nav-item">`);
      _push(ssrRenderComponent(_component_router_link, {
        class: "nav-link text-active-primary me-6",
        to: "/crafted/pages/profile/campaigns",
        "active-class": "active"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Campaigns `);
          } else {
            return [
              vueExports$1.createTextVNode(" Campaigns ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="nav-item">`);
      _push(ssrRenderComponent(_component_router_link, {
        class: "nav-link text-active-primary me-6",
        to: "/crafted/pages/profile/documents",
        "active-class": "active"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Documents `);
          } else {
            return [
              vueExports$1.createTextVNode(" Documents ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="nav-item">`);
      _push(ssrRenderComponent(_component_router_link, {
        class: "nav-link text-active-primary me-6",
        to: "/crafted/pages/profile/connections",
        "active-class": "active"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Connections `);
          } else {
            return [
              vueExports$1.createTextVNode(" Connections ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="nav-item">`);
      _push(ssrRenderComponent(_component_router_link, {
        class: "nav-link text-active-primary me-6",
        to: "/crafted/pages/profile/activity",
        "active-class": "active"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Activity `);
          } else {
            return [
              vueExports$1.createTextVNode(" Activity ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li></ul></div></div></div>`);
      _push(ssrRenderComponent(_component_router_view, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$2d = _sfc_main$2d.setup;
    _sfc_main$2d.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/page-layouts/Profile.vue");
      return _sfc_setup$2d ? _sfc_setup$2d(props, ctx) : void 0;
    };
    const Profile = /* @__PURE__ */ _export_sfc(_sfc_main$2d, [["ssrRender", _sfc_ssrRender$29]]);
    const __vite_glob_0_71 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Profile
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2c = vueExports$1.defineComponent({
      name: "kt-advanced",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$28(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card card-flush pt-3 mb-5 mb-lg-10" }, _attrs))}><div class="card-header"><div class="card-title"><h2 class="fw-bold">Advanced Options</h2></div></div><div class="card-body pt-0"><div class="d-flex flex-column mb-15 fv-row"><div class="fs-5 fw-bold form-label mb-3"> Custom fields <i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="popover" data-bs-trigger="hover" data-bs-html="true" data-bs-content="Add custom fields to the billing invoice."></i></div><div class="table-responsive"><table id="kt_create_new_custom_fields" class="table align-middle table-row-dashed fw-semibold fs-6 gy-5"><thead><tr class="text-start text-muted fw-bold fs-7 text-uppercase gs-0"><th class="pt-0">Field Name</th><th class="pt-0">Field Value</th><th class="pt-0 text-end">Remove</th></tr></thead><tbody><tr><td><input type="text" class="form-control form-control-solid" name="row-name" value=""></td><td><input type="text" class="form-control form-control-solid" name="row-value" value=""></td><td class="text-end"><button type="button" class="btn btn-icon btn-flex btn-active-light-primary w-30px h-30px me-3" data-kt-action="field_remove">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "trash",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</button></td></tr></tbody></table></div><button type="button" class="btn btn-light-primary me-auto" id="kt_create_new_custom_fields_add"> Add custom field </button></div><div class="d-flex flex-column mb-10 fv-row"><div class="fs-5 fw-bold form-label mb-3"> Invoice footer <i tabindex="0" class="cursor-pointer fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-html="true" data-bs-content="Add an addition invoice footer note."></i></div><textarea class="form-control form-control-solid rounded-3" rows="4"></textarea></div><div class="d-flex flex-column mb-5 fv-row rounded-3 p-7 border border-dashed border-gray-300"><div class="fs-5 fw-bold form-label mb-3"> Usage treshold <i tabindex="0" class="cursor-pointer fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-html="true" data-bs-delay-hide="1000" data-bs-content="Thresholds help manage risk by limiting the unpaid usage balance a customer can accrue. Thresholds only measure and bill for metered usage (including discounts but excluding tax). &lt;a href=&#39;#&#39;&gt;Learn more&lt;/a&gt;."></i></div><label class="form-check form-check-custom form-check-solid"><input class="form-check-input" type="checkbox" checked value="1"><span class="form-check-label text-gray-600"> Bill immediately if usage treshold reaches 80%. </span></label></div><div class="d-flex flex-column fv-row rounded-3 p-7 border border-dashed border-gray-300"><div class="fs-5 fw-bold form-label mb-3"> Pro-rate billing <i tabindex="0" class="cursor-pointer fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-html="true" data-bs-delay-hide="1000" data-bs-content="Pro-rated billing dynamically calculates the remainder amount leftover per billing cycle that is owed. &lt;a href=&#39;#&#39;&gt;Learn more&lt;/a&gt;."></i></div><label class="form-check form-check-custom form-check-solid"><input class="form-check-input" type="checkbox" value="1"><span class="form-check-label text-gray-600"> Allow pro-rated billing when treshold usage is paid before end of billing cycle. </span></label></div></div></div>`);
    }
    const _sfc_setup$2c = _sfc_main$2c.setup;
    _sfc_main$2c.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/subscriptions/add/Advanced.vue");
      return _sfc_setup$2c ? _sfc_setup$2c(props, ctx) : void 0;
    };
    const Advanced = /* @__PURE__ */ _export_sfc(_sfc_main$2c, [["ssrRender", _sfc_ssrRender$28]]);
    const __vite_glob_0_72 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Advanced
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2b = vueExports$1.defineComponent({
      name: "kt-customer",
      components: {
        Notice
      },
      setup() {
        const body = vueExports$1.ref(
          `Writing headlines for blog posts is much science and probably cool audience. <a href="#" class="fw-bold">Learn more</a>.`
        );
        return {
          body,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$27(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_Notice = vueExports$1.resolveComponent("Notice");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card card-flush pt-3 mb-5 mb-lg-10" }, _attrs))}><div class="card-header"><div class="card-title"><h2 class="fw-bold">Customer</h2></div></div><div class="card-body pt-0"><div class="text-gray-500 fw-semibold fs-5 mb-5"> Select or add a customer to a subscription: </div><div class="d-flex align-items-center p-3 mb-2"><div class="symbol symbol-60px symbol-circle me-3"><img alt="Pic"${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-5.jpg"))}></div><div class="d-flex flex-column"><a href="#" class="fs-4 fw-bold text-gray-900 text-hover-primary me-2">Sean Bean</a><a href="#" class="fw-semibold text-gray-600 text-hover-primary">sean@dellito.com</a></div></div><div class="mb-7 d-none"><a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_customer_search">Select Customer</a><span class="fw-bold text-gray-500 mx-2">or</span>`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/customers/list",
        class: "btn btn-light-primary",
        "data-bs-toggle": "modal",
        "data-bs-target": "#kt_modal_users_search"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Add New Customer`);
          } else {
            return [
              vueExports$1.createTextVNode("Add New Customer")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="mb-10"><a href="#" class="btn btn-light-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_customer_search">Change Customer</a></div>`);
      _push(ssrRenderComponent(_component_Notice, {
        classes: "rounded-3",
        color: "primary",
        title: "This is a very important privacy notice!",
        body: _ctx.body
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$2b = _sfc_main$2b.setup;
    _sfc_main$2b.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/subscriptions/add/Customer.vue");
      return _sfc_setup$2b ? _sfc_setup$2b(props, ctx) : void 0;
    };
    const Customer = /* @__PURE__ */ _export_sfc(_sfc_main$2b, [["ssrRender", _sfc_ssrRender$27]]);
    const __vite_glob_0_73 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Customer
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2a = vueExports$1.defineComponent({
      name: "kt-payment-method",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$26(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "card card-flush pt-3 mb-5 mb-lg-10",
        "data-kt-subscriptions-form": "pricing"
      }, _attrs))}><div class="card-header"><div class="card-title"><h2 class="fw-bold">Payment Method</h2></div><div class="card-toolbar"><a href="#" class="btn btn-light-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_new_card">New Method</a></div></div><div class="card-body pt-0"><div id="kt_create_new_payment_method"><div class="py-1"><div class="py-3 d-flex flex-stack flex-wrap"><div class="d-flex align-items-center collapsible toggle collapsed" data-bs-toggle="collapse" data-bs-target="#kt_create_new_payment_method_1" aria-expanded="false"><div class="btn btn-sm btn-icon btn-active-color-primary ms-n3 me-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "minus-square",
        "icon-class": "toggle-on text-primary fs-2"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "plus-square",
        "icon-class": "toggle-off fs-2"
      }, null, _parent));
      _push(`</div><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/mastercard.svg"))} class="w-40px me-3" alt=""><div class="me-3"><div class="d-flex align-items-center fw-bold"> Mastercard <div class="badge badge-light-primary ms-5">Primary</div></div><div class="text-muted">Expires Dec 2024</div></div></div><div class="d-flex my-3 ms-9"><label class="form-check form-check-custom form-check-solid me-5"><input class="form-check-input" type="radio" name="payment_method" checked></label></div></div><div id="kt_create_new_payment_method_1" class="fs-6 ps-10 collapse" style="${ssrRenderStyle({})}"><div class="d-flex flex-wrap py-5"><div class="flex-equal me-5"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px">Name</td><td class="text-gray-800">Emma Smith</td></tr><tr><td class="text-muted min-w-125px w-125px">Number</td><td class="text-gray-800">**** 6129</td></tr><tr><td class="text-muted min-w-125px w-125px">Expires</td><td class="text-gray-800">12/2024</td></tr><tr><td class="text-muted min-w-125px w-125px">Type</td><td class="text-gray-800">Mastercard credit card</td></tr><tr><td class="text-muted min-w-125px w-125px">Issuer</td><td class="text-gray-800">VICBANK</td></tr><tr><td class="text-muted min-w-125px w-125px">ID</td><td class="text-gray-800">id_4325df90sdf8</td></tr></tbody></table></div><div class="flex-equal"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px"> Billing address </td><td class="text-gray-800">AU</td></tr><tr><td class="text-muted min-w-125px w-125px">Phone</td><td class="text-gray-800">No phone provided</td></tr><tr><td class="text-muted min-w-125px w-125px">Email</td><td class="text-gray-800"><a href="#" class="text-gray-900 text-hover-primary">e.smith@kpmg.com.au</a></td></tr><tr><td class="text-muted min-w-125px w-125px">Origin</td><td class="text-gray-800"> Australia <div class="symbol symbol-20px symbol-circle ms-2"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/australia.svg"))}></div></td></tr><tr><td class="text-muted min-w-125px w-125px">CVC check</td><td class="text-gray-800"> Passed `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "check-circle",
        "icon-class": "fs-2 text-success"
      }, null, _parent));
      _push(`</td></tr></tbody></table></div></div></div></div><div class="separator separator-dashed"></div><div class="py-1"><div class="py-3 d-flex flex-stack flex-wrap"><div class="d-flex align-items-center collapsible toggle collapsed" data-bs-toggle="collapse" data-bs-target="#kt_create_new_payment_method_2"><div class="btn btn-sm btn-icon btn-active-color-primary ms-n3 me-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "minus-square",
        "icon-class": "toggle-on text-primary fs-2"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "plus-square",
        "icon-class": "toggle-off fs-2"
      }, null, _parent));
      _push(`</div><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/visa.svg"))} class="w-40px me-3" alt=""><div class="me-3"><div class="d-flex align-items-center fw-bold">Visa</div><div class="text-muted">Expires Feb 2022</div></div></div><div class="d-flex my-3 ms-9"><label class="form-check form-check-custom form-check-solid me-5"><input class="form-check-input" type="radio" name="payment_method"></label></div></div><div id="kt_create_new_payment_method_2" class="collapse fs-6 ps-10"><div class="d-flex flex-wrap py-5"><div class="flex-equal me-5"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px">Name</td><td class="text-gray-800">Melody Macy</td></tr><tr><td class="text-muted min-w-125px w-125px">Number</td><td class="text-gray-800">**** 1141</td></tr><tr><td class="text-muted min-w-125px w-125px">Expires</td><td class="text-gray-800">02/2022</td></tr><tr><td class="text-muted min-w-125px w-125px">Type</td><td class="text-gray-800">Visa credit card</td></tr><tr><td class="text-muted min-w-125px w-125px">Issuer</td><td class="text-gray-800">ENBANK</td></tr><tr><td class="text-muted min-w-125px w-125px">ID</td><td class="text-gray-800">id_w2r84jdy723</td></tr></tbody></table></div><div class="flex-equal"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px"> Billing address </td><td class="text-gray-800">UK</td></tr><tr><td class="text-muted min-w-125px w-125px">Phone</td><td class="text-gray-800">No phone provided</td></tr><tr><td class="text-muted min-w-125px w-125px">Email</td><td class="text-gray-800"><a href="#" class="text-gray-900 text-hover-primary">melody@altbox.com</a></td></tr><tr><td class="text-muted min-w-125px w-125px">Origin</td><td class="text-gray-800"> United Kingdom <div class="symbol symbol-20px symbol-circle ms-2"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/flags/united-kingdom.svg")
      )}></div></td></tr><tr><td class="text-muted min-w-125px w-125px">CVC check</td><td class="text-gray-800"> Passed `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "check",
        "icon-class": "fs-2 text-success"
      }, null, _parent));
      _push(`</td></tr></tbody></table></div></div></div></div><div class="separator separator-dashed"></div><div class="py-1"><div class="py-3 d-flex flex-stack flex-wrap"><div class="d-flex align-items-center collapsible toggle collapsed" data-bs-toggle="collapse" data-bs-target="#kt_create_new_payment_method_3"><div class="btn btn-sm btn-icon btn-active-color-primary ms-n3 me-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "minus-square",
        "icon-class": "toggle-on text-primary fs-2"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "plus-square",
        "icon-class": "toggle-off fs-2"
      }, null, _parent));
      _push(`</div><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/american-express.svg"))} class="w-40px me-3" alt=""><div class="me-3"><div class="d-flex align-items-center fw-bold"> American Express <div class="badge badge-light-danger ms-5">Expired</div></div><div class="text-muted">Expires Aug 2021</div></div></div><div class="d-flex my-3 ms-9"><label class="form-check form-check-custom form-check-solid me-5"><input class="form-check-input" type="radio" name="payment_method"></label></div></div><div id="kt_create_new_payment_method_3" class="collapse fs-6 ps-10"><div class="d-flex flex-wrap py-5"><div class="flex-equal me-5"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px">Name</td><td class="text-gray-800">Max Smith</td></tr><tr><td class="text-muted min-w-125px w-125px">Number</td><td class="text-gray-800">**** 4625</td></tr><tr><td class="text-muted min-w-125px w-125px">Expires</td><td class="text-gray-800">08/2021</td></tr><tr><td class="text-muted min-w-125px w-125px">Type</td><td class="text-gray-800"> American express credit card </td></tr><tr><td class="text-muted min-w-125px w-125px">Issuer</td><td class="text-gray-800">USABANK</td></tr><tr><td class="text-muted min-w-125px w-125px">ID</td><td class="text-gray-800">id_89457jcje63</td></tr></tbody></table></div><div class="flex-equal"><table class="table table-flush fw-semibold gy-1"><tbody><tr><td class="text-muted min-w-125px w-125px"> Billing address </td><td class="text-gray-800">US</td></tr><tr><td class="text-muted min-w-125px w-125px">Phone</td><td class="text-gray-800">No phone provided</td></tr><tr><td class="text-muted min-w-125px w-125px">Email</td><td class="text-gray-800"><a href="#" class="text-gray-900 text-hover-primary">max@kt.com</a></td></tr><tr><td class="text-muted min-w-125px w-125px">Origin</td><td class="text-gray-800"> United States of America <div class="symbol symbol-20px symbol-circle ms-2"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/united-states.svg"))}></div></td></tr><tr><td class="text-muted min-w-125px w-125px">CVC check</td><td class="text-gray-800"> Failed `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-2 text-danger"
      }, null, _parent));
      _push(`</td></tr></tbody></table></div></div></div></div></div></div></div>`);
    }
    const _sfc_setup$2a = _sfc_main$2a.setup;
    _sfc_main$2a.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/subscriptions/add/PaymentMethod.vue");
      return _sfc_setup$2a ? _sfc_setup$2a(props, ctx) : void 0;
    };
    const PaymentMethod = /* @__PURE__ */ _export_sfc(_sfc_main$2a, [["ssrRender", _sfc_ssrRender$26]]);
    const __vite_glob_0_74 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: PaymentMethod
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$29 = vueExports$1.defineComponent({
      name: "kt-products",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$25(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card card-flush pt-3 mb-5 mb-lg-10" }, _attrs))}><div class="card-header"><div class="card-title"><h2 class="fw-bold">Products</h2></div><div class="card-toolbar"><button type="button" class="btn btn-light-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_add_product"> Add Product </button></div></div><div class="card-body pt-0"><div class="table-responsive"><table class="table align-middle table-row-dashed fs-6 fw-semibold gy-4" id="kt_subscription_products_table"><thead><tr class="text-start text-muted fw-bold fs-7 text-uppercase gs-0"><th class="min-w-300px">Product</th><th class="min-w-100px">Qty</th><th class="min-w-150px">Total</th><th class="min-w-70px text-end">Remove</th></tr></thead><tbody class="text-gray-600"><tr class="odd"><td>Beginner Plan</td><td>1</td><td>149.99 / Month</td><td class="text-end"><a href="#" class="btn btn-icon btn-flex btn-active-light-primary w-30px h-30px me-3" data-bs-toggle="tooltip" title="" data-kt-action="product_remove" data-bs-original-title="Delete">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "trash",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a></td></tr><tr class="even"><td>Pro Plan</td><td>1</td><td>499.99 / Month</td><td class="text-end"><a href="#" class="btn btn-icon btn-flex btn-active-light-primary w-30px h-30px me-3" data-bs-toggle="tooltip" title="" data-kt-action="product_remove" data-bs-original-title="Delete">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "trash",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a></td></tr><tr class="odd"><td>Team Plan</td><td>1</td><td>999.99 / Month</td><td class="text-end"><a href="#" class="btn btn-icon btn-flex btn-active-light-primary w-30px h-30px me-3" data-bs-toggle="tooltip" title="" data-kt-action="product_remove" data-bs-original-title="Delete">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "trash",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a></td></tr></tbody></table></div></div></div>`);
    }
    const _sfc_setup$29 = _sfc_main$29.setup;
    _sfc_main$29.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/subscriptions/add/Products.vue");
      return _sfc_setup$29 ? _sfc_setup$29(props, ctx) : void 0;
    };
    const Products = /* @__PURE__ */ _export_sfc(_sfc_main$29, [["ssrRender", _sfc_ssrRender$25]]);
    const __vite_glob_0_75 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Products
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$28 = vueExports$1.defineComponent({
      name: "kt-summary",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$24(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "card card-flush pt-3 mb-0",
        id: "kt_add_summary",
        "data-kt-sticky": "true",
        "data-kt-sticky-name": "add-subscription-summary",
        "data-kt-sticky-offset": "{default: false, lg: '200px'}",
        "data-kt-sticky-width": "{lg: '250px', xl: '300px'}",
        "data-kt-sticky-left": "auto",
        "data-kt-sticky-top": "150px",
        "data-kt-sticky-animation": "false",
        "data-kt-sticky-zindex": "95"
      }, _attrs))}><div class="card-header"><div class="card-title"><h2>Summary</h2></div></div><div class="card-body pt-0 fs-6"><div class="mb-7"><h5 class="mb-3">Customer details</h5><div class="d-flex align-items-center mb-1">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/apps/subscriptions/view-subscription",
        class: "fw-bold text-gray-800 text-hover-primary me-2"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Sean Bean `);
          } else {
            return [
              vueExports$1.createTextVNode(" Sean Bean ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<span class="badge badge-light-success">Active</span></div><a href="#" class="fw-semibold text-gray-600 text-hover-primary">sean@dellito.com</a></div><div class="separator separator-dashed mb-7"></div><div class="mb-7"><h5 class="mb-3">Product details</h5><div class="mb-0"><span class="badge badge-light-info me-2">Basic Bundle</span><span class="fw-semibold text-gray-600">$149.99 / Year</span></div></div><div class="separator separator-dashed mb-7"></div><div class="mb-10"><h5 class="mb-3">Payment Details</h5><div class="mb-0"><div class="fw-semibold text-gray-600 d-flex align-items-center"> Mastercard <img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/mastercard.svg"))} class="w-35px ms-2" alt=""></div><div class="fw-semibold text-gray-600">Expires Dec 2024</div></div></div><div class="mb-0"><button type="submit" class="btn btn-primary" id="kt_subscriptions_create_button"><span class="indicator-label">Create Subscription</span><span class="indicator-progress">Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span></button></div></div></div>`);
    }
    const _sfc_setup$28 = _sfc_main$28.setup;
    _sfc_main$28.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/subscriptions/add/Summary.vue");
      return _sfc_setup$28 ? _sfc_setup$28(props, ctx) : void 0;
    };
    const AddSummary = /* @__PURE__ */ _export_sfc(_sfc_main$28, [["ssrRender", _sfc_ssrRender$24]]);
    const __vite_glob_0_76 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: AddSummary
    }, Symbol.toStringTag, { value: "Module" }));
    const useAuthStore = pinia_prod.defineStore("auth", () => {
      const errors = vueExports$1.ref({});
      const user2 = vueExports$1.ref({});
      const isAuthenticated = vueExports$1.ref(!!JwtService.getToken());
      function setAuth(authUser) {
        isAuthenticated.value = true;
        user2.value = authUser;
        errors.value = {};
        JwtService.saveToken(user2.value.api_token);
      }
      function setError(error) {
        errors.value = { ...error };
      }
      function purgeAuth() {
        isAuthenticated.value = false;
        user2.value = {};
        errors.value = [];
        JwtService.destroyToken();
      }
      function login(credentials) {
        return ApiService.post("login", credentials).then(({ data: data2 }) => {
          setAuth(data2);
        }).catch(({ response }) => {
          setError(response.data.errors);
        });
      }
      function logout() {
        purgeAuth();
      }
      function register(credentials) {
        return ApiService.post("register", credentials).then(({ data: data2 }) => {
          setAuth(data2);
        }).catch(({ response }) => {
          setError(response.data.errors);
        });
      }
      function forgotPassword(email) {
        return ApiService.post("forgot_password", email).then(() => {
          setError({});
        }).catch(({ response }) => {
          setError(response.data.errors);
        });
      }
      function verifyAuth() {
        if (JwtService.getToken()) {
          ApiService.setHeader();
          ApiService.post("verify_token", { api_token: JwtService.getToken() }).then(({ data: data2 }) => {
            setAuth(data2);
          }).catch(({ response }) => {
            setError(response.data.errors);
            purgeAuth();
          });
        } else {
          purgeAuth();
        }
      }
      return {
        errors,
        user: user2,
        isAuthenticated,
        login,
        logout,
        register,
        forgotPassword,
        verifyAuth
      };
    });
    const _sfc_main$27 = vueExports$1.defineComponent({
      name: "kt-user-menu",
      components: {},
      setup() {
        const router2 = useRouter();
        const i18n = useI18n();
        const store = useAuthStore();
        i18n.locale.value = localStorage.getItem("lang") ? localStorage.getItem("lang") : "en";
        const countries2 = {
          en: {
            flag: getAssetPath("media/flags/united-states.svg"),
            name: "English"
          },
          es: {
            flag: getAssetPath("media/flags/spain.svg"),
            name: "Spanish"
          },
          de: {
            flag: getAssetPath("media/flags/germany.svg"),
            name: "German"
          },
          ja: {
            flag: getAssetPath("media/flags/japan.svg"),
            name: "Japanese"
          },
          fr: {
            flag: getAssetPath("media/flags/france.svg"),
            name: "French"
          }
        };
        const signOut = () => {
          store.logout();
          router2.push({ name: "sign-in" });
        };
        const setLang = (lang) => {
          localStorage.setItem("lang", lang);
          i18n.locale.value = lang;
        };
        const currentLanguage = vueExports$1.computed(() => {
          return i18n.locale.value;
        });
        const currentLangugeLocale = vueExports$1.computed(() => {
          return countries2[i18n.locale.value];
        });
        return {
          signOut,
          setLang,
          currentLanguage,
          currentLangugeLocale,
          countries: countries2,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$23(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold py-4 fs-6 w-275px",
        "data-kt-menu": "true"
      }, _attrs))}><div class="menu-item px-3"><div class="menu-content d-flex align-items-center px-3"><div class="symbol symbol-50px me-5"><img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-3.jpg"))}></div><div class="d-flex flex-column"><div class="fw-bold d-flex align-items-center fs-5"> Max Smith <span class="badge badge-light-success fw-bold fs-8 px-2 py-1 ms-2">Pro</span></div><a href="#" class="fw-semibold text-muted text-hover-primary fs-7">max@kt.com</a></div></div></div><div class="separator my-2"></div><div class="menu-item px-5">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` My Profile `);
          } else {
            return [
              vueExports$1.createTextVNode(" My Profile ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="menu-item px-5">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="menu-text"${_scopeId}>My Projects</span><span class="menu-badge"${_scopeId}><span class="badge badge-light-danger badge-circle fw-bold fs-7"${_scopeId}>3</span></span>`);
          } else {
            return [
              vueExports$1.createVNode("span", { class: "menu-text" }, "My Projects"),
              vueExports$1.createVNode("span", { class: "menu-badge" }, [
                vueExports$1.createVNode("span", { class: "badge badge-light-danger badge-circle fw-bold fs-7" }, "3")
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="menu-item px-5" data-kt-menu-trigger="hover" data-kt-menu-placement="left-start" data-kt-menu-flip="center, top">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="menu-title"${_scopeId}>My Subscription</span><span class="menu-arrow"${_scopeId}></span>`);
          } else {
            return [
              vueExports$1.createVNode("span", { class: "menu-title" }, "My Subscription"),
              vueExports$1.createVNode("span", { class: "menu-arrow" })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="menu-sub menu-sub-dropdown w-175px py-4"><div class="menu-item px-3">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Referrals `);
          } else {
            return [
              vueExports$1.createTextVNode(" Referrals ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="menu-item px-3">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Billing `);
          } else {
            return [
              vueExports$1.createTextVNode(" Billing ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="menu-item px-3">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Payments `);
          } else {
            return [
              vueExports$1.createTextVNode(" Payments ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="menu-item px-3">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link d-flex flex-stack px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Statements <i class="fas fa-exclamation-circle ms-2 fs-7" data-bs-toggle="tooltip" title="View your statements"${_scopeId}></i>`);
          } else {
            return [
              vueExports$1.createTextVNode(" Statements "),
              vueExports$1.createVNode("i", {
                class: "fas fa-exclamation-circle ms-2 fs-7",
                "data-bs-toggle": "tooltip",
                title: "View your statements"
              })
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="separator my-2"></div><div class="menu-item px-3"><div class="menu-content px-3"><label class="form-check form-switch form-check-custom form-check-solid"><input class="form-check-input w-30px h-20px" type="checkbox" value="1" checked name="notifications"><span class="form-check-label text-muted fs-7"> Notifications </span></label></div></div></div></div><div class="menu-item px-5">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` My Statements `);
          } else {
            return [
              vueExports$1.createTextVNode(" My Statements ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="separator my-2"></div><div class="menu-item px-5" data-kt-menu-trigger="hover" data-kt-menu-placement="left-start" data-kt-menu-flip="center, top">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="menu-title position-relative"${_scopeId}> Language <span class="fs-8 rounded bg-light px-3 py-2 position-absolute translate-middle-y top-50 end-0"${_scopeId}>${ssrInterpolate(_ctx.currentLangugeLocale.name)} <img class="w-15px h-15px rounded-1 ms-2"${ssrRenderAttr("src", _ctx.currentLangugeLocale.flag)} alt="metronic"${_scopeId}></span></span>`);
          } else {
            return [
              vueExports$1.createVNode("span", { class: "menu-title position-relative" }, [
                vueExports$1.createTextVNode(" Language "),
                vueExports$1.createVNode("span", { class: "fs-8 rounded bg-light px-3 py-2 position-absolute translate-middle-y top-50 end-0" }, [
                  vueExports$1.createTextVNode(vueExports$1.toDisplayString(_ctx.currentLangugeLocale.name) + " ", 1),
                  vueExports$1.createVNode("img", {
                    class: "w-15px h-15px rounded-1 ms-2",
                    src: _ctx.currentLangugeLocale.flag,
                    alt: "metronic"
                  }, null, 8, ["src"])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="menu-sub menu-sub-dropdown w-175px py-4"><div class="menu-item px-3"><a href="#" class="${ssrRenderClass([{ active: _ctx.currentLanguage === "en" }, "menu-link d-flex px-5"])}"><span class="symbol symbol-20px me-4"><img class="rounded-1"${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/united-states.svg"))} alt="metronic"></span> English </a></div><div class="menu-item px-3"><a href="#" class="${ssrRenderClass([{ active: _ctx.currentLanguage === "es" }, "menu-link d-flex px-5"])}"><span class="symbol symbol-20px me-4"><img class="rounded-1"${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/spain.svg"))} alt="metronic"></span> Spanish </a></div><div class="menu-item px-3"><a href="#" class="${ssrRenderClass([{ active: _ctx.currentLanguage === "de" }, "menu-link d-flex px-5"])}"><span class="symbol symbol-20px me-4"><img class="rounded-1"${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/germany.svg"))} alt="metronic"></span> German </a></div><div class="menu-item px-3"><a href="#" class="${ssrRenderClass([{ active: _ctx.currentLanguage === "ja" }, "menu-link d-flex px-5"])}"><span class="symbol symbol-20px me-4"><img class="rounded-1"${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/japan.svg"))} alt="metronic"></span> Japanese </a></div><div class="menu-item px-3"><a href="#" class="${ssrRenderClass([{ active: _ctx.currentLanguage === "fr" }, "menu-link d-flex px-5"])}"><span class="symbol symbol-20px me-4"><img class="rounded-1"${ssrRenderAttr("src", _ctx.getAssetPath("media/flags/france.svg"))} alt="metronic"></span> French </a></div></div></div><div class="menu-item px-5 my-1">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/pages/profile/overview",
        class: "menu-link px-5"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Account Settings `);
          } else {
            return [
              vueExports$1.createTextVNode(" Account Settings ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="menu-item px-5"><a class="menu-link px-5"> Sign Out </a></div></div>`);
    }
    const _sfc_setup$27 = _sfc_main$27.setup;
    _sfc_main$27.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/menus/UserAccountMenu.vue");
      return _sfc_setup$27 ? _sfc_setup$27(props, ctx) : void 0;
    };
    const KTUserMenu = /* @__PURE__ */ _export_sfc(_sfc_main$27, [["ssrRender", _sfc_ssrRender$23]]);
    const __vite_glob_0_171 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTUserMenu
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$26 = vueExports$1.defineComponent({
      name: "kt-details",
      components: {
        UserMenu: KTUserMenu
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$22(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_UserMenu = vueExports$1.resolveComponent("UserMenu");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card card-flush pt-3 mb-5 mb-xl-10" }, _attrs))}><div class="card-header"><div class="card-title"><h2 class="fw-bold">Product Details</h2></div><div class="card-toolbar">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/subscriptions/add",
        class: "btn btn-light-primary"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Update Product`);
          } else {
            return [
              vueExports$1.createTextVNode("Update Product")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div><div class="card-body pt-3"><div class="mb-10"><h5 class="mb-4">Billing Address:</h5><div class="d-flex flex-wrap py-5"><div class="flex-equal me-5"><table class="table fs-6 fw-semibold gs-0 gy-2 gx-2 m-0"><tr><td class="text-gray-500 min-w-175px w-175px">Bill to:</td><td class="text-gray-800 min-w-200px">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/subscriptions/view",
        class: "text-gray-800 text-hover-primary"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` e.smith@kpmg.com.au`);
          } else {
            return [
              vueExports$1.createTextVNode(" e.smith@kpmg.com.au")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</td></tr><tr><td class="text-gray-500">Customer Name:</td><td class="text-gray-800">Emma Smith</td></tr><tr><td class="text-gray-500">Address:</td><td class="text-gray-800"> Floor 10, 101 Avenue of the Light Square, New York, NY, 10050. </td></tr><tr><td class="text-gray-500">Phone:</td><td class="text-gray-800">(555) 555-1234</td></tr></table></div><div class="flex-equal"><table class="table fs-6 fw-semibold gs-0 gy-2 gx-2 m-0"><tr><td class="text-gray-500 min-w-175px w-175px"> Subscribed Product: </td><td class="text-gray-800 min-w-200px"><a href="#" class="text-gray-800 text-hover-primary">Basic Bundle</a></td></tr><tr><td class="text-gray-500">Subscription Fees:</td><td class="text-gray-800">$149.99 / Year</td></tr><tr><td class="text-gray-500">Billing method:</td><td class="text-gray-800">Annually</td></tr><tr><td class="text-gray-500">Currency:</td><td class="text-gray-800">USD - US Dollar</td></tr></table></div></div></div><div class="mb-0"><h5 class="mb-4">Subscribed Products:</h5><div class="table-responsive"><table class="table align-middle table-row-dashed fs-6 gy-4 mb-0"><thead><tr class="border-bottom border-gray-200 text-start text-gray-500 fw-bold fs-7 text-uppercase gs-0"><th class="min-w-150px">Product</th><th class="min-w-125px">Subscription ID</th><th class="min-w-125px">Qty</th><th class="min-w-125px">Total</th><th class="text-end min-w-70px">Actions</th></tr></thead><tbody class="fw-semibold text-gray-800"><tr><td><label class="w-150px">Basic Bundle</label><div class="fw-normal text-gray-600">Basic yearly bundle</div></td><td><span class="badge badge-light-danger">sub_4567_8765</span></td><td>1</td><td>$149.99 / Year</td><td class="text-end"><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "switch",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a>`);
      _push(ssrRenderComponent(_component_UserMenu, null, null, _parent));
      _push(`</td></tr><tr><td><label class="w-150px">Pro Bundle</label><div class="fw-normal text-gray-500">Basic yearly bundle</div></td><td><span class="badge badge-light-danger">sub_4567_3433</span></td><td>5</td><td>$949.99 / Year</td><td class="text-end"><a href="#" class="btn btn-icon btn-active-light-primary w-30px h-30px" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "switch",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a>`);
      _push(ssrRenderComponent(_component_UserMenu, null, null, _parent));
      _push(`</td></tr></tbody></table></div></div></div></div>`);
    }
    const _sfc_setup$26 = _sfc_main$26.setup;
    _sfc_main$26.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/subscriptions/view/Details.vue");
      return _sfc_setup$26 ? _sfc_setup$26(props, ctx) : void 0;
    };
    const ViewDetails = /* @__PURE__ */ _export_sfc(_sfc_main$26, [["ssrRender", _sfc_ssrRender$22]]);
    const __vite_glob_0_77 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ViewDetails
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$25 = vueExports$1.defineComponent({
      name: "kt-events",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$21(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card card-flush pt-3 mb-5 mb-xl-10" }, _attrs))}><div class="card-header"><div class="card-title"><h2>Recent Events</h2></div><div class="card-toolbar"><a href="#" class="btn btn-light-primary">View All Events</a></div></div><div class="card-body pt-0"><div class="table-responsive"><table class="table align-middle table-row-dashed fs-6 text-gray-600 fw-semibold gy-5" id="kt_table_customers_events"><tbody><tr><td class="min-w-400px"> Invoice <a href="#" class="fw-bold text-gray-800 text-hover-primary me-1">7786-3830</a>status has changed from <span class="badge badge-light-primary me-1">In Transit</span>to <span class="badge badge-light-success">Approved</span></td><td class="pe-0 text-gray-600 text-end min-w-200px"> 25 Oct 2021, 9:23 pm </td></tr><tr><td class="min-w-400px"> Invoice <a href="#" class="fw-bold text-gray-800 text-hover-primary me-1">9357-7929</a>status has changed from <span class="badge badge-light-info me-1">In Progress</span>to <span class="badge badge-light-primary">In Transit</span></td><td class="pe-0 text-gray-600 text-end min-w-200px"> 10 Mar 2021, 5:20 pm </td></tr><tr><td class="min-w-400px"><a href="#" class="fw-bold text-gray-800 text-hover-primary me-1">Brian Cox</a>has made payment to <a href="#" class="fw-bold text-gray-800 text-hover-primary">7277-8716</a></td><td class="pe-0 text-gray-600 text-end min-w-200px"> 10 Mar 2021, 5:20 pm </td></tr><tr><td class="min-w-400px"><a href="#" class="fw-bold text-gray-800 text-hover-primary me-1">Melody Macy</a>has made payment to <a href="#" class="fw-bold text-gray-800 text-hover-primary">2516-2975</a></td><td class="pe-0 text-gray-600 text-end min-w-200px"> 24 Jun 2021, 5:30 pm </td></tr><tr><td class="min-w-400px"> Invoice <a href="#" class="fw-bold text-gray-800 text-hover-primary me-1">4464-4371</a>is <span class="badge badge-light-info">In Progress</span></td><td class="pe-0 text-gray-600 text-end min-w-200px"> 21 Feb 2021, 5:30 pm </td></tr></tbody></table></div></div></div>`);
    }
    const _sfc_setup$25 = _sfc_main$25.setup;
    _sfc_main$25.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/subscriptions/view/Events.vue");
      return _sfc_setup$25 ? _sfc_setup$25(props, ctx) : void 0;
    };
    const Events = /* @__PURE__ */ _export_sfc(_sfc_main$25, [["ssrRender", _sfc_ssrRender$21]]);
    const __vite_glob_0_78 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Events
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$24 = vueExports$1.defineComponent({
      name: "kt-invoices",
      props: {
        cardClasses: String
      },
      components: {
        Datatable: KTDatatable
      },
      setup() {
        const tableHeader = vueExports$1.ref([
          {
            columnName: "Order id",
            columnLabel: "order",
            sortEnabled: false
          },
          {
            columnName: "Amount",
            columnLabel: "amount",
            sortEnabled: false
          },
          {
            columnName: "Status",
            columnLabel: "status",
            sortEnabled: false
          },
          {
            columnName: "Date",
            columnLabel: "date",
            sortEnabled: false
          },
          {
            columnName: "Invoice",
            columnLabel: "invoice",
            sortEnabled: false
          }
        ]);
        const tableData1 = vueExports$1.ref([
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Sep 15, 2020",
            order: "312445984",
            details: "Iphone 12 Pro Mockup  Mega Bundle",
            color: "success",
            amount: "$5.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "May 30, 2020",
            order: "523445943",
            details: "Seller Fee",
            color: "danger",
            amount: "$-1.30",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Apr 22, 2020",
            order: "231445943",
            details: "Parcel Shipping / Delivery Service App",
            color: "success",
            amount: "$204.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        const tableData2 = vueExports$1.ref([
          {
            date: "May 30, 2020",
            order: "523445943",
            details: "Seller Fee",
            color: "danger",
            amount: "$-1.30",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Apr 22, 2020",
            order: "231445943",
            details: "Parcel Shipping / Delivery Service App",
            color: "success",
            amount: "$204.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Sep 15, 2020",
            order: "312445984",
            details: "Iphone 12 Pro Mockup  Mega Bundle",
            color: "success",
            amount: "$5.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        const tableData3 = vueExports$1.ref([
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Successful",
              state: "success"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Sep 15, 2020",
            order: "312445984",
            details: "Iphone 12 Pro Mockup  Mega Bundle",
            color: "success",
            amount: "$5.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "May 30, 2020",
            order: "523445943",
            details: "Seller Fee",
            color: "danger",
            amount: "$-1.30",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Apr 22, 2020",
            order: "231445943",
            details: "Parcel Shipping / Delivery Service App",
            color: "success",
            amount: "$204.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        const tableData4 = vueExports$1.ref([
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "102445788",
            details: "Darknight transparency  36 Icons Pack",
            color: "success",
            amount: "$38.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 24, 2020",
            order: "423445721",
            details: "Seller Fee",
            color: "danger",
            amount: "$-2.60",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Feb 09, 2020",
            order: "426445943",
            details: "Visual Design Illustration",
            color: "success",
            amount: "$31.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Nov 01, 2020",
            order: "984445943",
            details: "Abstract Vusial Pack",
            color: "success",
            amount: "$52.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Jan 04, 2020",
            order: "324442313",
            details: "Seller Fee",
            color: "danger",
            amount: "$-0.80",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          },
          {
            date: "Oct 08, 2020",
            order: "312445984",
            details: "Cartoon Mobile Emoji Phone Pack",
            color: "success",
            amount: "$76.00",
            status: {
              label: "Pending",
              state: "warning"
            }
          }
        ]);
        return { tableHeader, tableData1, tableData2, tableData3, tableData4 };
      }
    });
    function _sfc_ssrRender$20(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_Datatable = vueExports$1.resolveComponent("Datatable");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: `card pt-2 ${_ctx.cardClasses}`
      }, _attrs))}><div class="card-header border-0"><div class="card-title"><h2>Invoices</h2></div><div class="card-toolbar m-0"><ul class="nav nav-stretch fs-5 fw-semibold nav-line-tabs nav-line-tabs-2x border-transparent" role="tablist"><li class="nav-item" role="presentation"><a id="kt_referrals_year_tab" class="nav-link text-active-primary active" data-bs-toggle="tab" role="tab" href="#kt_customer_details_invoices_1"> This Year </a></li><li class="nav-item" role="presentation"><a id="kt_referrals_2019_tab" class="nav-link text-active-primary ms-3" data-bs-toggle="tab" role="tab" href="#kt_customer_details_invoices_2"> 2020 </a></li><li class="nav-item" role="presentation"><a id="kt_referrals_2018_tab" class="nav-link text-active-primary ms-3" data-bs-toggle="tab" role="tab" href="#kt_customer_details_invoices_3"> 2019 </a></li><li class="nav-item" role="presentation"><a id="kt_referrals_2017_tab" class="nav-link text-active-primary ms-3" data-bs-toggle="tab" role="tab" href="#kt_customer_details_invoices_4"> 2018 </a></li></ul></div></div><div class="card-body pt-0"><div id="kt_referred_users_tab_content" class="tab-content"><div id="kt_customer_details_invoices_1" class="py-0 tab-pane fade active show" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData1,
        "items-per-page": 5,
        "items-per-page-dropdown-enabled": false
      }, {
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`badge badge-light-${invoice.status.state}`)}"${_scopeId}>${ssrInterpolate(invoice.status.label)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `badge badge-light-${invoice.status.state}`
              }, vueExports$1.toDisplayString(invoice.status.label), 3)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_customer_details_invoices_2" class="py-0 tab-pane fade" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData2,
        "items-per-page": 5,
        "items-per-page-dropdown-enabled": false
      }, {
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`badge badge-light-${invoice.status.state}`)}"${_scopeId}>${ssrInterpolate(invoice.status.label)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `badge badge-light-${invoice.status.state}`
              }, vueExports$1.toDisplayString(invoice.status.label), 3)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_customer_details_invoices_3" class="py-0 tab-pane fade" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData3,
        "items-per-page": 5,
        "items-per-page-dropdown-enabled": false
      }, {
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`badge badge-light-${invoice.status.state}`)}"${_scopeId}>${ssrInterpolate(invoice.status.label)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `badge badge-light-${invoice.status.state}`
              }, vueExports$1.toDisplayString(invoice.status.label), 3)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_customer_details_invoices_4" class="py-0 tab-pane fade" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Datatable, {
        header: _ctx.tableHeader,
        data: _ctx.tableData4,
        "items-per-page": 5,
        "items-per-page-dropdown-enabled": false
      }, {
        order: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.order)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.order), 1)
            ];
          }
        }),
        amount: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`text-${invoice.color}`)}"${_scopeId}>${ssrInterpolate(invoice.amount)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `text-${invoice.color}`
              }, vueExports$1.toDisplayString(invoice.amount), 3)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="${ssrRenderClass(`badge badge-light-${invoice.status.state}`)}"${_scopeId}>${ssrInterpolate(invoice.status.label)}</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: `badge badge-light-${invoice.status.state}`
              }, vueExports$1.toDisplayString(invoice.status.label), 3)
            ];
          }
        }),
        date: vueExports$1.withCtx(({ row: invoice }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(invoice.date)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(invoice.date), 1)
            ];
          }
        }),
        invoice: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<button class="btn btn-sm btn-light btn-active-light-primary"${_scopeId}> Download </button>`);
          } else {
            return [
              vueExports$1.createVNode("button", { class: "btn btn-sm btn-light btn-active-light-primary" }, " Download ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div>`);
    }
    const _sfc_setup$24 = _sfc_main$24.setup;
    _sfc_main$24.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/subscriptions/view/Invoices.vue");
      return _sfc_setup$24 ? _sfc_setup$24(props, ctx) : void 0;
    };
    const Invoices = /* @__PURE__ */ _export_sfc(_sfc_main$24, [["ssrRender", _sfc_ssrRender$20]]);
    const __vite_glob_0_79 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Invoices
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$23 = vueExports$1.defineComponent({
      name: "kt-summary",
      components: {
        UserMenu: KTUserMenu
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1$(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_UserMenu = vueExports$1.resolveComponent("UserMenu");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "card card-flush mb-0",
        id: "kt_view_summary",
        "data-kt-sticky": "true",
        "data-kt-sticky-name": "view-subscription-summary",
        "data-kt-sticky-offset": "{default: false, lg: '200px'}",
        "data-kt-sticky-width": "{lg: '250px', xl: '300px'}",
        "data-kt-sticky-left": "auto",
        "data-kt-sticky-top": "150px",
        "data-kt-sticky-animation": "false",
        "data-kt-sticky-zindex": "95"
      }, _attrs))}><div class="card-header"><div class="card-title"><h2>Summary</h2></div><div class="card-toolbar"><a href="#" class="btn btn-sm btn-light btn-icon" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "dots-horizontal",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</a>`);
      _push(ssrRenderComponent(_component_UserMenu, null, null, _parent));
      _push(`</div></div><div class="card-body pt-0 fs-6"><div class="mb-7"><div class="d-flex align-items-center"><div class="symbol symbol-60px symbol-circle me-3"><img alt="Pic"${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-5.jpg"))}></div><div class="d-flex flex-column"><a href="#" class="fs-4 fw-bold text-gray-900 text-hover-primary me-2">Sean Bean</a><a href="#" class="fw-semibold text-gray-600 text-hover-primary">sean@dellito.com</a></div></div></div><div class="separator separator-dashed mb-7"></div><div class="mb-7"><h5 class="mb-4">Product details</h5><div class="mb-0"><span class="badge badge-light-info me-2">Basic Bundle</span><span class="fw-semibold text-gray-600">$149.99 / Year</span></div></div><div class="separator separator-dashed mb-7"></div><div class="mb-10"><h5 class="mb-4">Payment Details</h5><div class="mb-0"><div class="fw-semibold text-gray-600 d-flex align-items-center"> Mastercard <img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/card-logos/mastercard.svg"))} class="w-35px ms-2" alt=""></div><div class="fw-semibold text-gray-600">Expires Dec 2024</div></div></div><div class="separator separator-dashed mb-7"></div><div class="mb-10"><h5 class="mb-4">Subscription Details</h5><table class="table fs-6 fw-semibold gs-0 gy-2 gx-2"><tr class=""><td class="text-gray-500">Subscription ID:</td><td class="text-gray-800">sub_4567_8765</td></tr><tr class=""><td class="text-gray-500">Started:</td><td class="text-gray-800">15 Apr 2021</td></tr><tr class=""><td class="text-gray-500">Status:</td><td><span class="badge badge-light-success">Active</span></td></tr><tr class=""><td class="text-gray-500">Next Invoice:</td><td class="text-gray-800">15 Apr 2022</td></tr></table></div><div class="mb-0">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/subscriptions/add",
        class: "btn btn-primary",
        id: "kt_subscriptions_create_button"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Edit Subscription `);
          } else {
            return [
              vueExports$1.createTextVNode(" Edit Subscription ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div>`);
    }
    const _sfc_setup$23 = _sfc_main$23.setup;
    _sfc_main$23.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/subscriptions/view/Summary.vue");
      return _sfc_setup$23 ? _sfc_setup$23(props, ctx) : void 0;
    };
    const ViewSummary = /* @__PURE__ */ _export_sfc(_sfc_main$23, [["ssrRender", _sfc_ssrRender$1$]]);
    const __vite_glob_0_80 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ViewSummary
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$22 = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String,
        height: Number
      },
      components: {
        Dropdown1
      },
      setup() {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [44, 55, 57, 56, 61, 58]
          },
          {
            name: "Revenue",
            data: [76, 85, 101, 98, 87, 105]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$j());
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$j());
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          getAssetPath
        };
      }
    });
    const chartOptions$j = () => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const baseColor = getCSSVariableValue("--bs-primary");
      const secondaryColor = getCSSVariableValue("--bs-gray-300");
      return {
        chart: {
          fontFamily: "inherit",
          type: "bar",
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          bar: {
            horizontal: false,
            columnWidth: "30%",
            borderRadius: 5
          }
        },
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          show: true,
          width: 2,
          colors: ["transparent"]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        yaxis: {
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        fill: {
          opacity: 1
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [baseColor, secondaryColor],
        grid: {
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          }
        }
      };
    };
    function _sfc_ssrRender$1_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown1 = vueExports$1.resolveComponent("Dropdown1");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Recent Statistics</span><span class="text-muted fw-semibold fs-7">More than 400 new members</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown1, null, null, _parent));
      _push(`</div></div><div class="card-body">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        type: "bar",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.height
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$22 = _sfc_main$22.setup;
    _sfc_main$22.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/charts/Widget1.vue");
      return _sfc_setup$22 ? _sfc_setup$22(props, ctx) : void 0;
    };
    const ChartsWidget1 = /* @__PURE__ */ _export_sfc(_sfc_main$22, [["ssrRender", _sfc_ssrRender$1_]]);
    const __vite_glob_0_81 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ChartsWidget1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$21 = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String,
        height: Number
      },
      components: {},
      setup() {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [44, 55, 57, 56, 61, 58]
          },
          {
            name: "Revenue",
            data: [76, 85, 101, 98, 87, 105]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$i());
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$i());
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef
        };
      }
    });
    const chartOptions$i = () => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const baseColor = getCSSVariableValue("--bs-warning");
      const secondaryColor = getCSSVariableValue("--bs-gray-300");
      return {
        chart: {
          fontFamily: "inherit",
          type: "bar",
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          bar: {
            horizontal: false,
            columnWidth: "30%",
            borderRadius: 5
          }
        },
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          show: true,
          width: 2,
          colors: ["transparent"]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        yaxis: {
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        fill: {
          opacity: 1
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [baseColor, secondaryColor],
        grid: {
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          }
        }
      };
    };
    function _sfc_ssrRender$1Z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Recent Orders</span><span class="text-muted fw-semibold fs-7">More than 500 new orders</span></h3><div class="card-toolbar" data-kt-buttons="true"><a class="btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1" id="kt_charts_widget_2_year_btn">Year</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1" id="kt_charts_widget_2_month_btn">Month</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4" id="kt_charts_widget_2_week_btn">Week</a></div></div><div class="card-body">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        type: "bar",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.height
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$21 = _sfc_main$21.setup;
    _sfc_main$21.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/charts/Widget2.vue");
      return _sfc_setup$21 ? _sfc_setup$21(props, ctx) : void 0;
    };
    const ChartsWidget2 = /* @__PURE__ */ _export_sfc(_sfc_main$21, [["ssrRender", _sfc_ssrRender$1Z]]);
    const __vite_glob_0_82 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ChartsWidget2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$20 = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String
      },
      components: {},
      setup() {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [30, 40, 40, 90, 90, 70, 70]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$h());
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$h());
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef
        };
      }
    });
    const chartOptions$h = () => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const baseColor = getCSSVariableValue("--bs-info");
      const lightColor = getCSSVariableValue("--bs-info-light");
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          height: 350,
          toolbar: {
            show: false
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "solid",
          opacity: 1
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: [baseColor]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            position: "front",
            stroke: {
              color: baseColor,
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [lightColor],
        grid: {
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          }
        },
        markers: {
          strokeColors: baseColor,
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Recent Transactions</span><span class="text-muted fw-semibold fs-7">More than 1000 new records</span></h3><div class="card-toolbar" data-kt-buttons="true"><a class="btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1" id="kt_charts_widget_3_year_btn">Year</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1" id="kt_charts_widget_3_month_btn">Month</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4" id="kt_charts_widget_3_week_btn">Week</a></div></div><div class="card-body">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        type: "area",
        options: _ctx.chart,
        series: _ctx.series
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$20 = _sfc_main$20.setup;
    _sfc_main$20.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/charts/Widget3.vue");
      return _sfc_setup$20 ? _sfc_setup$20(props, ctx) : void 0;
    };
    const ChartsWidget3 = /* @__PURE__ */ _export_sfc(_sfc_main$20, [["ssrRender", _sfc_ssrRender$1Y]]);
    const __vite_glob_0_83 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ChartsWidget3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1$ = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String
      },
      components: {},
      setup() {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [60, 50, 80, 40, 100, 60]
          },
          {
            name: "Revenue",
            data: [70, 60, 110, 40, 50, 70]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$g());
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$g());
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef
        };
      }
    });
    const chartOptions$g = () => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const baseColor = getCSSVariableValue("--bs-success");
      const baseLightColor = getCSSVariableValue("--bs-success-light");
      const secondaryColor = getCSSVariableValue("--bs-warning");
      const secondaryLightColor = getCSSVariableValue("--bs-warning-light");
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          height: 350,
          toolbar: {
            show: false
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "solid",
          opacity: 1
        },
        stroke: {
          curve: "smooth"
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            position: "front",
            stroke: {
              color: labelColor,
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [baseColor, secondaryColor],
        grid: {
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          }
        },
        markers: {
          colors: [baseLightColor, secondaryLightColor],
          strokeColors: [baseLightColor, secondaryLightColor],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Recent Customers</span><span class="text-muted fw-semibold fs-7">More than 500 new customers</span></h3><div class="card-toolbar" data-kt-buttons="true"><a class="btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1" id="kt_charts_widget_4_year_btn">Year</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1" id="kt_charts_widget_4_month_btn">Month</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4" id="kt_charts_widget_4_week_btn">Week</a></div></div><div class="card-body">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        type: "area",
        options: _ctx.chart,
        series: _ctx.series
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1$ = _sfc_main$1$.setup;
    _sfc_main$1$.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/charts/Widget4.vue");
      return _sfc_setup$1$ ? _sfc_setup$1$(props, ctx) : void 0;
    };
    const ChartsWidget4 = /* @__PURE__ */ _export_sfc(_sfc_main$1$, [["ssrRender", _sfc_ssrRender$1X]]);
    const __vite_glob_0_84 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ChartsWidget4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1_ = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String
      },
      components: {},
      setup() {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [40, 50, 65, 70, 50, 30]
          },
          {
            name: "Revenue",
            data: [-30, -40, -55, -60, -40, -20]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$f());
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$f());
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef
        };
      }
    });
    const chartOptions$f = () => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const baseColor = getCSSVariableValue("--bs-primary");
      const secondaryColor = getCSSVariableValue("--bs-info");
      return {
        chart: {
          fontFamily: "inherit",
          type: "bar",
          stacked: true,
          height: 350,
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          bar: {
            horizontal: false,
            columnWidth: "12%",
            borderRadius: 5
          }
        },
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          show: true,
          width: 2,
          colors: ["transparent"]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        yaxis: {
          min: -80,
          max: 80,
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        fill: {
          opacity: 1
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [baseColor, secondaryColor],
        grid: {
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          }
        }
      };
    };
    function _sfc_ssrRender$1W(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Recent Customers</span><span class="text-muted fw-semibold fs-7">More than 500 new customers</span></h3><div class="card-toolbar" data-kt-buttons="true"><a class="btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1" id="kt_charts_widget_5_year_btn">Year</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1" id="kt_charts_widget_5_month_btn">Month</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4" id="kt_charts_widget_5_week_btn">Week</a></div></div><div class="card-body">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        type: "bar",
        options: _ctx.chart,
        series: _ctx.series
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1_ = _sfc_main$1_.setup;
    _sfc_main$1_.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/charts/Widget5.vue");
      return _sfc_setup$1_ ? _sfc_setup$1_(props, ctx) : void 0;
    };
    const ChartsWidget5 = /* @__PURE__ */ _export_sfc(_sfc_main$1_, [["ssrRender", _sfc_ssrRender$1W]]);
    const __vite_glob_0_85 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ChartsWidget5
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1Z = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String
      },
      components: {},
      setup() {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            type: "bar",
            stacked: true,
            data: [40, 50, 65, 70, 50, 30]
          },
          {
            name: "Revenue",
            type: "bar",
            stacked: true,
            data: [20, 20, 25, 30, 30, 20]
          },
          {
            name: "Expenses",
            type: "area",
            data: [50, 80, 60, 90, 50, 70]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$e());
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$e());
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef
        };
      }
    });
    const chartOptions$e = () => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const baseColor = getCSSVariableValue("--bs-primary");
      const baseLightColor = getCSSVariableValue("--bs-primary-light");
      const secondaryColor = getCSSVariableValue("--bs-info");
      return {
        chart: {
          fontFamily: "inherit",
          stacked: true,
          height: 350,
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          bar: {
            horizontal: false,
            borderRadius: 5,
            columnWidth: "12%"
          }
        },
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 2,
          colors: ["transparent"]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        yaxis: {
          max: 120,
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        fill: {
          opacity: 1
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [baseColor, secondaryColor, baseLightColor],
        grid: {
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          },
          padding: {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
          }
        }
      };
    };
    function _sfc_ssrRender$1V(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Recent Orders</span><span class="text-muted fw-semibold fs-7">More than 500+ new orders</span></h3><div class="card-toolbar" data-kt-buttons="true"><a class="btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1" id="kt_charts_widget_6_sales_btn">Sales</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1" id="kt_charts_widget_6_expenses_btn">Expenses</a></div></div><div class="card-body">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        type: "bar",
        options: _ctx.chart,
        series: _ctx.series
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1Z = _sfc_main$1Z.setup;
    _sfc_main$1Z.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/charts/Widget6.vue");
      return _sfc_setup$1Z ? _sfc_setup$1Z(props, ctx) : void 0;
    };
    const ChartsWidget6 = /* @__PURE__ */ _export_sfc(_sfc_main$1Z, [["ssrRender", _sfc_ssrRender$1V]]);
    const __vite_glob_0_86 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ChartsWidget6
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1Y = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String
      },
      components: {},
      setup() {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [30, 30, 50, 50, 35, 35]
          },
          {
            name: "Revenue",
            data: [55, 20, 20, 20, 70, 70]
          },
          {
            name: "Expenses",
            data: [60, 60, 40, 40, 30, 30]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$d());
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$d());
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef
        };
      }
    });
    const chartOptions$d = () => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const strokeColor = getCSSVariableValue("--bs-gray-300");
      const color1 = getCSSVariableValue("--bs-warning");
      const color1Light = getCSSVariableValue("--bs-warning-light");
      const color2 = getCSSVariableValue("--bs-success");
      const color2Light = getCSSVariableValue("--bs-success-light");
      const color3 = getCSSVariableValue("--bs-primary");
      const color3Light = getCSSVariableValue("--bs-primary-light");
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "solid",
          opacity: 1
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 2,
          colors: [color1, "transparent", "transparent"]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: strokeColor,
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [color1, color2, color3],
        grid: {
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          }
        },
        markers: {
          colors: [color1Light, color2Light, color3Light],
          strokeColors: [color1, color2, color3],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Recent Users</span><span class="text-muted fw-semibold fs-7">More than 500 new users</span></h3><div class="card-toolbar" data-kt-buttons="true"><a class="btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1" id="kt_charts_widget_7_year_btn">Year</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1" id="kt_charts_widget_7_month_btn">Month</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4" id="kt_charts_widget_7_week_btn">Week</a></div></div><div class="card-body">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        type: "area",
        options: _ctx.chart,
        series: _ctx.series
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1Y = _sfc_main$1Y.setup;
    _sfc_main$1Y.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/charts/Widget7.vue");
      return _sfc_setup$1Y ? _sfc_setup$1Y(props, ctx) : void 0;
    };
    const ChartsWidget7 = /* @__PURE__ */ _export_sfc(_sfc_main$1Y, [["ssrRender", _sfc_ssrRender$1U]]);
    const __vite_glob_0_87 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ChartsWidget7
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1X = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String
      },
      components: {},
      setup() {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [30, 30, 50, 50, 35, 35]
          },
          {
            name: "Revenue",
            data: [55, 20, 20, 20, 70, 70]
          },
          {
            name: "Expenses",
            data: [60, 60, 40, 40, 30, 30]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$c());
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$c());
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef
        };
      }
    });
    const chartOptions$c = () => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const strokeColor = getCSSVariableValue("--bs-gray-300");
      const color1 = getCSSVariableValue("--bs-warning");
      const color1Light = getCSSVariableValue("--bs-warning-light");
      const color2 = getCSSVariableValue("--bs-success");
      const color2Light = getCSSVariableValue("--bs-success-light");
      const color3 = getCSSVariableValue("--bs-primary");
      const color3Light = getCSSVariableValue("--bs-primary-light");
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "solid",
          opacity: 1
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 2,
          colors: [color1, color2, color3]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: strokeColor,
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [color1Light, color2Light, color3Light],
        grid: {
          borderColor,
          strokeDashArray: 4,
          padding: {
            top: 0,
            bottom: 0,
            left: 0,
            right: 0
          }
        },
        markers: {
          colors: [color1, color2, color3],
          strokeColors: [color1, color2, color3],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Recent Orders</span><span class="text-muted fw-semibold fs-7">More than 500 new orders</span></h3><div class="card-toolbar" data-kt-buttons="true"><a class="btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1" id="kt_charts_widget_8_year_btn">Year</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1" id="kt_charts_widget_8_month_btn">Month</a><a class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4" id="kt_charts_widget_8_week_btn">Week</a></div></div><div class="card-body">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        type: "area",
        options: _ctx.chart,
        series: _ctx.series
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1X = _sfc_main$1X.setup;
    _sfc_main$1X.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/charts/Widget8.vue");
      return _sfc_setup$1X ? _sfc_setup$1X(props, ctx) : void 0;
    };
    const ChartsWidget8 = /* @__PURE__ */ _export_sfc(_sfc_main$1X, [["ssrRender", _sfc_ssrRender$1T]]);
    const __vite_glob_0_88 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ChartsWidget8
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1W = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String
      },
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$1S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-body pb-0"><div class="d-flex flex-column justify-content-between h-100"><div class="pt-15 mb-10"><h3 class="text-gray-900 text-center fs-1 fw-bold lh-lg"> Upgrade to Pro<br> For Limitless Features </h3><div class="text-center text-gray-600 fs-6 fw-semibold pt-4 pb-1"> They stoping you from amazing poorly about drive.<br> Outlines keep you honest. </div><div class="text-center py-7"><a href="#" class="btn btn-primary fs-6 px-6" data-bs-toggle="modal" data-bs-target="#kt_modal_create_app">Get Started</a></div></div><div class="flex-grow-1 bgi-no-repeat bgi-size-contain bgi-position-x-center bgi-position-y-bottom card-rounded-bottom h-200px" style="${ssrRenderStyle({
        backgroundImage: "url(" + _ctx.getIllustrationsPath("8.png") + ")"
      })}"></div></div></div></div>`);
    }
    const _sfc_setup$1W = _sfc_main$1W.setup;
    _sfc_main$1W.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/engage/Widget1.vue");
      return _sfc_setup$1W ? _sfc_setup$1W(props, ctx) : void 0;
    };
    const KTEngageWidget1 = /* @__PURE__ */ _export_sfc(_sfc_main$1W, [["ssrRender", _sfc_ssrRender$1S]]);
    const __vite_glob_0_89 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTEngageWidget1
    }, Symbol.toStringTag, { value: "Module" }));
    var quill = { exports: {} };
    /*!
     * Quill Editor v1.3.7
     * https://quilljs.com/
     * Copyright (c) 2014, Jason Chen
     * Copyright (c) 2013, salesforce.com
     */
    (function(module2, exports2) {
      (function webpackUniversalModuleDefinition(root, factory) {
        module2.exports = factory();
      })(typeof self !== "undefined" ? self : commonjsGlobal, function() {
        return (
          /******/
          function(modules) {
            var installedModules = {};
            function __webpack_require__(moduleId) {
              if (installedModules[moduleId]) {
                return installedModules[moduleId].exports;
              }
              var module3 = installedModules[moduleId] = {
                /******/
                i: moduleId,
                /******/
                l: false,
                /******/
                exports: {}
                /******/
              };
              modules[moduleId].call(module3.exports, module3, module3.exports, __webpack_require__);
              module3.l = true;
              return module3.exports;
            }
            __webpack_require__.m = modules;
            __webpack_require__.c = installedModules;
            __webpack_require__.d = function(exports3, name, getter) {
              if (!__webpack_require__.o(exports3, name)) {
                Object.defineProperty(exports3, name, {
                  /******/
                  configurable: false,
                  /******/
                  enumerable: true,
                  /******/
                  get: getter
                  /******/
                });
              }
            };
            __webpack_require__.n = function(module3) {
              var getter = module3 && module3.__esModule ? (
                /******/
                function getDefault() {
                  return module3["default"];
                }
              ) : (
                /******/
                function getModuleExports() {
                  return module3;
                }
              );
              __webpack_require__.d(getter, "a", getter);
              return getter;
            };
            __webpack_require__.o = function(object, property) {
              return Object.prototype.hasOwnProperty.call(object, property);
            };
            __webpack_require__.p = "";
            return __webpack_require__(__webpack_require__.s = 109);
          }([
            /* 0 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", { value: true });
              var container_1 = __webpack_require__(17);
              var format_1 = __webpack_require__(18);
              var leaf_1 = __webpack_require__(19);
              var scroll_1 = __webpack_require__(45);
              var inline_1 = __webpack_require__(46);
              var block_1 = __webpack_require__(47);
              var embed_1 = __webpack_require__(48);
              var text_1 = __webpack_require__(49);
              var attributor_1 = __webpack_require__(12);
              var class_1 = __webpack_require__(32);
              var style_1 = __webpack_require__(33);
              var store_1 = __webpack_require__(31);
              var Registry = __webpack_require__(1);
              var Parchment = {
                Scope: Registry.Scope,
                create: Registry.create,
                find: Registry.find,
                query: Registry.query,
                register: Registry.register,
                Container: container_1.default,
                Format: format_1.default,
                Leaf: leaf_1.default,
                Embed: embed_1.default,
                Scroll: scroll_1.default,
                Block: block_1.default,
                Inline: inline_1.default,
                Text: text_1.default,
                Attributor: {
                  Attribute: attributor_1.default,
                  Class: class_1.default,
                  Style: style_1.default,
                  Store: store_1.default
                }
              };
              exports3.default = Parchment;
            },
            /* 1 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var ParchmentError = (
                /** @class */
                function(_super) {
                  __extends(ParchmentError2, _super);
                  function ParchmentError2(message) {
                    var _this = this;
                    message = "[Parchment] " + message;
                    _this = _super.call(this, message) || this;
                    _this.message = message;
                    _this.name = _this.constructor.name;
                    return _this;
                  }
                  return ParchmentError2;
                }(Error)
              );
              exports3.ParchmentError = ParchmentError;
              var attributes = {};
              var classes = {};
              var tags = {};
              var types = {};
              exports3.DATA_KEY = "__blot";
              var Scope;
              (function(Scope2) {
                Scope2[Scope2["TYPE"] = 3] = "TYPE";
                Scope2[Scope2["LEVEL"] = 12] = "LEVEL";
                Scope2[Scope2["ATTRIBUTE"] = 13] = "ATTRIBUTE";
                Scope2[Scope2["BLOT"] = 14] = "BLOT";
                Scope2[Scope2["INLINE"] = 7] = "INLINE";
                Scope2[Scope2["BLOCK"] = 11] = "BLOCK";
                Scope2[Scope2["BLOCK_BLOT"] = 10] = "BLOCK_BLOT";
                Scope2[Scope2["INLINE_BLOT"] = 6] = "INLINE_BLOT";
                Scope2[Scope2["BLOCK_ATTRIBUTE"] = 9] = "BLOCK_ATTRIBUTE";
                Scope2[Scope2["INLINE_ATTRIBUTE"] = 5] = "INLINE_ATTRIBUTE";
                Scope2[Scope2["ANY"] = 15] = "ANY";
              })(Scope = exports3.Scope || (exports3.Scope = {}));
              function create(input, value) {
                var match = query(input);
                if (match == null) {
                  throw new ParchmentError("Unable to create " + input + " blot");
                }
                var BlotClass = match;
                var node = (
                  // @ts-ignore
                  input instanceof Node || input["nodeType"] === Node.TEXT_NODE ? input : BlotClass.create(value)
                );
                return new BlotClass(node, value);
              }
              exports3.create = create;
              function find(node, bubble) {
                if (bubble === void 0) {
                  bubble = false;
                }
                if (node == null)
                  return null;
                if (node[exports3.DATA_KEY] != null)
                  return node[exports3.DATA_KEY].blot;
                if (bubble)
                  return find(node.parentNode, bubble);
                return null;
              }
              exports3.find = find;
              function query(query2, scope) {
                if (scope === void 0) {
                  scope = Scope.ANY;
                }
                var match;
                if (typeof query2 === "string") {
                  match = types[query2] || attributes[query2];
                } else if (query2 instanceof Text || query2["nodeType"] === Node.TEXT_NODE) {
                  match = types["text"];
                } else if (typeof query2 === "number") {
                  if (query2 & Scope.LEVEL & Scope.BLOCK) {
                    match = types["block"];
                  } else if (query2 & Scope.LEVEL & Scope.INLINE) {
                    match = types["inline"];
                  }
                } else if (query2 instanceof HTMLElement) {
                  var names = (query2.getAttribute("class") || "").split(/\s+/);
                  for (var i in names) {
                    match = classes[names[i]];
                    if (match)
                      break;
                  }
                  match = match || tags[query2.tagName];
                }
                if (match == null)
                  return null;
                if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope)
                  return match;
                return null;
              }
              exports3.query = query;
              function register() {
                var Definitions = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                  Definitions[_i] = arguments[_i];
                }
                if (Definitions.length > 1) {
                  return Definitions.map(function(d) {
                    return register(d);
                  });
                }
                var Definition = Definitions[0];
                if (typeof Definition.blotName !== "string" && typeof Definition.attrName !== "string") {
                  throw new ParchmentError("Invalid definition");
                } else if (Definition.blotName === "abstract") {
                  throw new ParchmentError("Cannot register abstract class");
                }
                types[Definition.blotName || Definition.attrName] = Definition;
                if (typeof Definition.keyName === "string") {
                  attributes[Definition.keyName] = Definition;
                } else {
                  if (Definition.className != null) {
                    classes[Definition.className] = Definition;
                  }
                  if (Definition.tagName != null) {
                    if (Array.isArray(Definition.tagName)) {
                      Definition.tagName = Definition.tagName.map(function(tagName) {
                        return tagName.toUpperCase();
                      });
                    } else {
                      Definition.tagName = Definition.tagName.toUpperCase();
                    }
                    var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];
                    tagNames.forEach(function(tag2) {
                      if (tags[tag2] == null || Definition.className == null) {
                        tags[tag2] = Definition;
                      }
                    });
                  }
                }
                return Definition;
              }
              exports3.register = register;
            },
            /* 2 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var diff = __webpack_require__(51);
              var equal = __webpack_require__(11);
              var extend = __webpack_require__(3);
              var op = __webpack_require__(20);
              var NULL_CHARACTER = String.fromCharCode(0);
              var Delta = function(ops) {
                if (Array.isArray(ops)) {
                  this.ops = ops;
                } else if (ops != null && Array.isArray(ops.ops)) {
                  this.ops = ops.ops;
                } else {
                  this.ops = [];
                }
              };
              Delta.prototype.insert = function(text2, attributes) {
                var newOp = {};
                if (text2.length === 0)
                  return this;
                newOp.insert = text2;
                if (attributes != null && typeof attributes === "object" && Object.keys(attributes).length > 0) {
                  newOp.attributes = attributes;
                }
                return this.push(newOp);
              };
              Delta.prototype["delete"] = function(length) {
                if (length <= 0)
                  return this;
                return this.push({ "delete": length });
              };
              Delta.prototype.retain = function(length, attributes) {
                if (length <= 0)
                  return this;
                var newOp = { retain: length };
                if (attributes != null && typeof attributes === "object" && Object.keys(attributes).length > 0) {
                  newOp.attributes = attributes;
                }
                return this.push(newOp);
              };
              Delta.prototype.push = function(newOp) {
                var index = this.ops.length;
                var lastOp = this.ops[index - 1];
                newOp = extend(true, {}, newOp);
                if (typeof lastOp === "object") {
                  if (typeof newOp["delete"] === "number" && typeof lastOp["delete"] === "number") {
                    this.ops[index - 1] = { "delete": lastOp["delete"] + newOp["delete"] };
                    return this;
                  }
                  if (typeof lastOp["delete"] === "number" && newOp.insert != null) {
                    index -= 1;
                    lastOp = this.ops[index - 1];
                    if (typeof lastOp !== "object") {
                      this.ops.unshift(newOp);
                      return this;
                    }
                  }
                  if (equal(newOp.attributes, lastOp.attributes)) {
                    if (typeof newOp.insert === "string" && typeof lastOp.insert === "string") {
                      this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };
                      if (typeof newOp.attributes === "object")
                        this.ops[index - 1].attributes = newOp.attributes;
                      return this;
                    } else if (typeof newOp.retain === "number" && typeof lastOp.retain === "number") {
                      this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };
                      if (typeof newOp.attributes === "object")
                        this.ops[index - 1].attributes = newOp.attributes;
                      return this;
                    }
                  }
                }
                if (index === this.ops.length) {
                  this.ops.push(newOp);
                } else {
                  this.ops.splice(index, 0, newOp);
                }
                return this;
              };
              Delta.prototype.chop = function() {
                var lastOp = this.ops[this.ops.length - 1];
                if (lastOp && lastOp.retain && !lastOp.attributes) {
                  this.ops.pop();
                }
                return this;
              };
              Delta.prototype.filter = function(predicate) {
                return this.ops.filter(predicate);
              };
              Delta.prototype.forEach = function(predicate) {
                this.ops.forEach(predicate);
              };
              Delta.prototype.map = function(predicate) {
                return this.ops.map(predicate);
              };
              Delta.prototype.partition = function(predicate) {
                var passed = [], failed = [];
                this.forEach(function(op2) {
                  var target = predicate(op2) ? passed : failed;
                  target.push(op2);
                });
                return [passed, failed];
              };
              Delta.prototype.reduce = function(predicate, initial) {
                return this.ops.reduce(predicate, initial);
              };
              Delta.prototype.changeLength = function() {
                return this.reduce(function(length, elem) {
                  if (elem.insert) {
                    return length + op.length(elem);
                  } else if (elem.delete) {
                    return length - elem.delete;
                  }
                  return length;
                }, 0);
              };
              Delta.prototype.length = function() {
                return this.reduce(function(length, elem) {
                  return length + op.length(elem);
                }, 0);
              };
              Delta.prototype.slice = function(start2, end2) {
                start2 = start2 || 0;
                if (typeof end2 !== "number")
                  end2 = Infinity;
                var ops = [];
                var iter = op.iterator(this.ops);
                var index = 0;
                while (index < end2 && iter.hasNext()) {
                  var nextOp;
                  if (index < start2) {
                    nextOp = iter.next(start2 - index);
                  } else {
                    nextOp = iter.next(end2 - index);
                    ops.push(nextOp);
                  }
                  index += op.length(nextOp);
                }
                return new Delta(ops);
              };
              Delta.prototype.compose = function(other) {
                var thisIter = op.iterator(this.ops);
                var otherIter = op.iterator(other.ops);
                var ops = [];
                var firstOther = otherIter.peek();
                if (firstOther != null && typeof firstOther.retain === "number" && firstOther.attributes == null) {
                  var firstLeft = firstOther.retain;
                  while (thisIter.peekType() === "insert" && thisIter.peekLength() <= firstLeft) {
                    firstLeft -= thisIter.peekLength();
                    ops.push(thisIter.next());
                  }
                  if (firstOther.retain - firstLeft > 0) {
                    otherIter.next(firstOther.retain - firstLeft);
                  }
                }
                var delta = new Delta(ops);
                while (thisIter.hasNext() || otherIter.hasNext()) {
                  if (otherIter.peekType() === "insert") {
                    delta.push(otherIter.next());
                  } else if (thisIter.peekType() === "delete") {
                    delta.push(thisIter.next());
                  } else {
                    var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
                    var thisOp = thisIter.next(length);
                    var otherOp = otherIter.next(length);
                    if (typeof otherOp.retain === "number") {
                      var newOp = {};
                      if (typeof thisOp.retain === "number") {
                        newOp.retain = length;
                      } else {
                        newOp.insert = thisOp.insert;
                      }
                      var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === "number");
                      if (attributes)
                        newOp.attributes = attributes;
                      delta.push(newOp);
                      if (!otherIter.hasNext() && equal(delta.ops[delta.ops.length - 1], newOp)) {
                        var rest = new Delta(thisIter.rest());
                        return delta.concat(rest).chop();
                      }
                    } else if (typeof otherOp["delete"] === "number" && typeof thisOp.retain === "number") {
                      delta.push(otherOp);
                    }
                  }
                }
                return delta.chop();
              };
              Delta.prototype.concat = function(other) {
                var delta = new Delta(this.ops.slice());
                if (other.ops.length > 0) {
                  delta.push(other.ops[0]);
                  delta.ops = delta.ops.concat(other.ops.slice(1));
                }
                return delta;
              };
              Delta.prototype.diff = function(other, index) {
                if (this.ops === other.ops) {
                  return new Delta();
                }
                var strings = [this, other].map(function(delta2) {
                  return delta2.map(function(op2) {
                    if (op2.insert != null) {
                      return typeof op2.insert === "string" ? op2.insert : NULL_CHARACTER;
                    }
                    var prep = delta2 === other ? "on" : "with";
                    throw new Error("diff() called " + prep + " non-document");
                  }).join("");
                });
                var delta = new Delta();
                var diffResult = diff(strings[0], strings[1], index);
                var thisIter = op.iterator(this.ops);
                var otherIter = op.iterator(other.ops);
                diffResult.forEach(function(component) {
                  var length = component[1].length;
                  while (length > 0) {
                    var opLength = 0;
                    switch (component[0]) {
                      case diff.INSERT:
                        opLength = Math.min(otherIter.peekLength(), length);
                        delta.push(otherIter.next(opLength));
                        break;
                      case diff.DELETE:
                        opLength = Math.min(length, thisIter.peekLength());
                        thisIter.next(opLength);
                        delta["delete"](opLength);
                        break;
                      case diff.EQUAL:
                        opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);
                        var thisOp = thisIter.next(opLength);
                        var otherOp = otherIter.next(opLength);
                        if (equal(thisOp.insert, otherOp.insert)) {
                          delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));
                        } else {
                          delta.push(otherOp)["delete"](opLength);
                        }
                        break;
                    }
                    length -= opLength;
                  }
                });
                return delta.chop();
              };
              Delta.prototype.eachLine = function(predicate, newline) {
                newline = newline || "\n";
                var iter = op.iterator(this.ops);
                var line = new Delta();
                var i = 0;
                while (iter.hasNext()) {
                  if (iter.peekType() !== "insert")
                    return;
                  var thisOp = iter.peek();
                  var start2 = op.length(thisOp) - iter.peekLength();
                  var index = typeof thisOp.insert === "string" ? thisOp.insert.indexOf(newline, start2) - start2 : -1;
                  if (index < 0) {
                    line.push(iter.next());
                  } else if (index > 0) {
                    line.push(iter.next(index));
                  } else {
                    if (predicate(line, iter.next(1).attributes || {}, i) === false) {
                      return;
                    }
                    i += 1;
                    line = new Delta();
                  }
                }
                if (line.length() > 0) {
                  predicate(line, {}, i);
                }
              };
              Delta.prototype.transform = function(other, priority) {
                priority = !!priority;
                if (typeof other === "number") {
                  return this.transformPosition(other, priority);
                }
                var thisIter = op.iterator(this.ops);
                var otherIter = op.iterator(other.ops);
                var delta = new Delta();
                while (thisIter.hasNext() || otherIter.hasNext()) {
                  if (thisIter.peekType() === "insert" && (priority || otherIter.peekType() !== "insert")) {
                    delta.retain(op.length(thisIter.next()));
                  } else if (otherIter.peekType() === "insert") {
                    delta.push(otherIter.next());
                  } else {
                    var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
                    var thisOp = thisIter.next(length);
                    var otherOp = otherIter.next(length);
                    if (thisOp["delete"]) {
                      continue;
                    } else if (otherOp["delete"]) {
                      delta.push(otherOp);
                    } else {
                      delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));
                    }
                  }
                }
                return delta.chop();
              };
              Delta.prototype.transformPosition = function(index, priority) {
                priority = !!priority;
                var thisIter = op.iterator(this.ops);
                var offset2 = 0;
                while (thisIter.hasNext() && offset2 <= index) {
                  var length = thisIter.peekLength();
                  var nextType = thisIter.peekType();
                  thisIter.next();
                  if (nextType === "delete") {
                    index -= Math.min(length, index - offset2);
                    continue;
                  } else if (nextType === "insert" && (offset2 < index || !priority)) {
                    index += length;
                  }
                  offset2 += length;
                }
                return index;
              };
              module3.exports = Delta;
            },
            /* 3 */
            /***/
            function(module3, exports3) {
              var hasOwn = Object.prototype.hasOwnProperty;
              var toStr = Object.prototype.toString;
              var defineProperty = Object.defineProperty;
              var gOPD = Object.getOwnPropertyDescriptor;
              var isArray = function isArray2(arr) {
                if (typeof Array.isArray === "function") {
                  return Array.isArray(arr);
                }
                return toStr.call(arr) === "[object Array]";
              };
              var isPlainObject2 = function isPlainObject3(obj) {
                if (!obj || toStr.call(obj) !== "[object Object]") {
                  return false;
                }
                var hasOwnConstructor = hasOwn.call(obj, "constructor");
                var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, "isPrototypeOf");
                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
                  return false;
                }
                var key2;
                for (key2 in obj) {
                }
                return typeof key2 === "undefined" || hasOwn.call(obj, key2);
              };
              var setProperty = function setProperty2(target, options) {
                if (defineProperty && options.name === "__proto__") {
                  defineProperty(target, options.name, {
                    enumerable: true,
                    configurable: true,
                    value: options.newValue,
                    writable: true
                  });
                } else {
                  target[options.name] = options.newValue;
                }
              };
              var getProperty = function getProperty2(obj, name) {
                if (name === "__proto__") {
                  if (!hasOwn.call(obj, name)) {
                    return void 0;
                  } else if (gOPD) {
                    return gOPD(obj, name).value;
                  }
                }
                return obj[name];
              };
              module3.exports = function extend() {
                var options, name, src, copy2, copyIsArray, clone;
                var target = arguments[0];
                var i = 1;
                var length = arguments.length;
                var deep = false;
                if (typeof target === "boolean") {
                  deep = target;
                  target = arguments[1] || {};
                  i = 2;
                }
                if (target == null || typeof target !== "object" && typeof target !== "function") {
                  target = {};
                }
                for (; i < length; ++i) {
                  options = arguments[i];
                  if (options != null) {
                    for (name in options) {
                      src = getProperty(target, name);
                      copy2 = getProperty(options, name);
                      if (target !== copy2) {
                        if (deep && copy2 && (isPlainObject2(copy2) || (copyIsArray = isArray(copy2)))) {
                          if (copyIsArray) {
                            copyIsArray = false;
                            clone = src && isArray(src) ? src : [];
                          } else {
                            clone = src && isPlainObject2(src) ? src : {};
                          }
                          setProperty(target, { name, newValue: extend(deep, clone, copy2) });
                        } else if (typeof copy2 !== "undefined") {
                          setProperty(target, { name, newValue: copy2 });
                        }
                      }
                    }
                  }
                }
                return target;
              };
            },
            /* 4 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.default = exports3.BlockEmbed = exports3.bubbleFormats = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _extend = __webpack_require__(3);
              var _extend2 = _interopRequireDefault(_extend);
              var _quillDelta = __webpack_require__(2);
              var _quillDelta2 = _interopRequireDefault(_quillDelta);
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _break = __webpack_require__(16);
              var _break2 = _interopRequireDefault(_break);
              var _inline = __webpack_require__(6);
              var _inline2 = _interopRequireDefault(_inline);
              var _text = __webpack_require__(7);
              var _text2 = _interopRequireDefault(_text);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var NEWLINE_LENGTH = 1;
              var BlockEmbed = function(_Parchment$Embed) {
                _inherits(BlockEmbed2, _Parchment$Embed);
                function BlockEmbed2() {
                  _classCallCheck(this, BlockEmbed2);
                  return _possibleConstructorReturn(this, (BlockEmbed2.__proto__ || Object.getPrototypeOf(BlockEmbed2)).apply(this, arguments));
                }
                _createClass(BlockEmbed2, [{
                  key: "attach",
                  value: function attach() {
                    _get(BlockEmbed2.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed2.prototype), "attach", this).call(this);
                    this.attributes = new _parchment2.default.Attributor.Store(this.domNode);
                  }
                }, {
                  key: "delta",
                  value: function delta() {
                    return new _quillDelta2.default().insert(this.value(), (0, _extend2.default)(this.formats(), this.attributes.values()));
                  }
                }, {
                  key: "format",
                  value: function format(name, value) {
                    var attribute = _parchment2.default.query(name, _parchment2.default.Scope.BLOCK_ATTRIBUTE);
                    if (attribute != null) {
                      this.attributes.attribute(attribute, value);
                    }
                  }
                }, {
                  key: "formatAt",
                  value: function formatAt(index, length, name, value) {
                    this.format(name, value);
                  }
                }, {
                  key: "insertAt",
                  value: function insertAt(index, value, def) {
                    if (typeof value === "string" && value.endsWith("\n")) {
                      var block = _parchment2.default.create(Block.blotName);
                      this.parent.insertBefore(block, index === 0 ? this : this.next);
                      block.insertAt(0, value.slice(0, -1));
                    } else {
                      _get(BlockEmbed2.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed2.prototype), "insertAt", this).call(this, index, value, def);
                    }
                  }
                }]);
                return BlockEmbed2;
              }(_parchment2.default.Embed);
              BlockEmbed.scope = _parchment2.default.Scope.BLOCK_BLOT;
              var Block = function(_Parchment$Block) {
                _inherits(Block2, _Parchment$Block);
                function Block2(domNode) {
                  _classCallCheck(this, Block2);
                  var _this2 = _possibleConstructorReturn(this, (Block2.__proto__ || Object.getPrototypeOf(Block2)).call(this, domNode));
                  _this2.cache = {};
                  return _this2;
                }
                _createClass(Block2, [{
                  key: "delta",
                  value: function delta() {
                    if (this.cache.delta == null) {
                      this.cache.delta = this.descendants(_parchment2.default.Leaf).reduce(function(delta2, leaf) {
                        if (leaf.length() === 0) {
                          return delta2;
                        } else {
                          return delta2.insert(leaf.value(), bubbleFormats(leaf));
                        }
                      }, new _quillDelta2.default()).insert("\n", bubbleFormats(this));
                    }
                    return this.cache.delta;
                  }
                }, {
                  key: "deleteAt",
                  value: function deleteAt(index, length) {
                    _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "deleteAt", this).call(this, index, length);
                    this.cache = {};
                  }
                }, {
                  key: "formatAt",
                  value: function formatAt(index, length, name, value) {
                    if (length <= 0)
                      return;
                    if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
                      if (index + length === this.length()) {
                        this.format(name, value);
                      }
                    } else {
                      _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "formatAt", this).call(this, index, Math.min(length, this.length() - index - 1), name, value);
                    }
                    this.cache = {};
                  }
                }, {
                  key: "insertAt",
                  value: function insertAt(index, value, def) {
                    if (def != null)
                      return _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "insertAt", this).call(this, index, value, def);
                    if (value.length === 0)
                      return;
                    var lines = value.split("\n");
                    var text2 = lines.shift();
                    if (text2.length > 0) {
                      if (index < this.length() - 1 || this.children.tail == null) {
                        _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "insertAt", this).call(this, Math.min(index, this.length() - 1), text2);
                      } else {
                        this.children.tail.insertAt(this.children.tail.length(), text2);
                      }
                      this.cache = {};
                    }
                    var block = this;
                    lines.reduce(function(index2, line) {
                      block = block.split(index2, true);
                      block.insertAt(0, line);
                      return line.length;
                    }, index + text2.length);
                  }
                }, {
                  key: "insertBefore",
                  value: function insertBefore(blot, ref) {
                    var head = this.children.head;
                    _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "insertBefore", this).call(this, blot, ref);
                    if (head instanceof _break2.default) {
                      head.remove();
                    }
                    this.cache = {};
                  }
                }, {
                  key: "length",
                  value: function length() {
                    if (this.cache.length == null) {
                      this.cache.length = _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "length", this).call(this) + NEWLINE_LENGTH;
                    }
                    return this.cache.length;
                  }
                }, {
                  key: "moveChildren",
                  value: function moveChildren(target, ref) {
                    _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "moveChildren", this).call(this, target, ref);
                    this.cache = {};
                  }
                }, {
                  key: "optimize",
                  value: function optimize(context) {
                    _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "optimize", this).call(this, context);
                    this.cache = {};
                  }
                }, {
                  key: "path",
                  value: function path(index) {
                    return _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "path", this).call(this, index, true);
                  }
                }, {
                  key: "removeChild",
                  value: function removeChild(child) {
                    _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "removeChild", this).call(this, child);
                    this.cache = {};
                  }
                }, {
                  key: "split",
                  value: function split(index) {
                    var force = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {
                      var clone = this.clone();
                      if (index === 0) {
                        this.parent.insertBefore(clone, this);
                        return this;
                      } else {
                        this.parent.insertBefore(clone, this.next);
                        return clone;
                      }
                    } else {
                      var next = _get(Block2.prototype.__proto__ || Object.getPrototypeOf(Block2.prototype), "split", this).call(this, index, force);
                      this.cache = {};
                      return next;
                    }
                  }
                }]);
                return Block2;
              }(_parchment2.default.Block);
              Block.blotName = "block";
              Block.tagName = "P";
              Block.defaultChild = "break";
              Block.allowedChildren = [_inline2.default, _parchment2.default.Embed, _text2.default];
              function bubbleFormats(blot) {
                var formats = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                if (blot == null)
                  return formats;
                if (typeof blot.formats === "function") {
                  formats = (0, _extend2.default)(formats, blot.formats());
                }
                if (blot.parent == null || blot.parent.blotName == "scroll" || blot.parent.statics.scope !== blot.statics.scope) {
                  return formats;
                }
                return bubbleFormats(blot.parent, formats);
              }
              exports3.bubbleFormats = bubbleFormats;
              exports3.BlockEmbed = BlockEmbed;
              exports3.default = Block;
            },
            /* 5 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.default = exports3.overload = exports3.expandConfig = void 0;
              var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
                return typeof obj;
              } : function(obj) {
                return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
              };
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              __webpack_require__(50);
              var _quillDelta = __webpack_require__(2);
              var _quillDelta2 = _interopRequireDefault(_quillDelta);
              var _editor = __webpack_require__(14);
              var _editor2 = _interopRequireDefault(_editor);
              var _emitter3 = __webpack_require__(8);
              var _emitter4 = _interopRequireDefault(_emitter3);
              var _module = __webpack_require__(9);
              var _module2 = _interopRequireDefault(_module);
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _selection = __webpack_require__(15);
              var _selection2 = _interopRequireDefault(_selection);
              var _extend = __webpack_require__(3);
              var _extend2 = _interopRequireDefault(_extend);
              var _logger = __webpack_require__(10);
              var _logger2 = _interopRequireDefault(_logger);
              var _theme = __webpack_require__(34);
              var _theme2 = _interopRequireDefault(_theme);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _defineProperty(obj, key2, value) {
                if (key2 in obj) {
                  Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
                } else {
                  obj[key2] = value;
                }
                return obj;
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              var debug = (0, _logger2.default)("quill");
              var Quill2 = function() {
                _createClass(Quill3, null, [{
                  key: "debug",
                  value: function debug2(limit) {
                    if (limit === true) {
                      limit = "log";
                    }
                    _logger2.default.level(limit);
                  }
                }, {
                  key: "find",
                  value: function find(node) {
                    return node.__quill || _parchment2.default.find(node);
                  }
                }, {
                  key: "import",
                  value: function _import(name) {
                    if (this.imports[name] == null) {
                      debug.error("Cannot import " + name + ". Are you sure it was registered?");
                    }
                    return this.imports[name];
                  }
                }, {
                  key: "register",
                  value: function register(path, target) {
                    var _this = this;
                    var overwrite = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
                    if (typeof path !== "string") {
                      var name = path.attrName || path.blotName;
                      if (typeof name === "string") {
                        this.register("formats/" + name, path, target);
                      } else {
                        Object.keys(path).forEach(function(key2) {
                          _this.register(key2, path[key2], target);
                        });
                      }
                    } else {
                      if (this.imports[path] != null && !overwrite) {
                        debug.warn("Overwriting " + path + " with", target);
                      }
                      this.imports[path] = target;
                      if ((path.startsWith("blots/") || path.startsWith("formats/")) && target.blotName !== "abstract") {
                        _parchment2.default.register(target);
                      } else if (path.startsWith("modules") && typeof target.register === "function") {
                        target.register();
                      }
                    }
                  }
                }]);
                function Quill3(container) {
                  var _this2 = this;
                  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  _classCallCheck(this, Quill3);
                  this.options = expandConfig(container, options);
                  this.container = this.options.container;
                  if (this.container == null) {
                    return debug.error("Invalid Quill container", container);
                  }
                  if (this.options.debug) {
                    Quill3.debug(this.options.debug);
                  }
                  var html2 = this.container.innerHTML.trim();
                  this.container.classList.add("ql-container");
                  this.container.innerHTML = "";
                  this.container.__quill = this;
                  this.root = this.addContainer("ql-editor");
                  this.root.classList.add("ql-blank");
                  this.root.setAttribute("data-gramm", false);
                  this.scrollingContainer = this.options.scrollingContainer || this.root;
                  this.emitter = new _emitter4.default();
                  this.scroll = _parchment2.default.create(this.root, {
                    emitter: this.emitter,
                    whitelist: this.options.formats
                  });
                  this.editor = new _editor2.default(this.scroll);
                  this.selection = new _selection2.default(this.scroll, this.emitter);
                  this.theme = new this.options.theme(this, this.options);
                  this.keyboard = this.theme.addModule("keyboard");
                  this.clipboard = this.theme.addModule("clipboard");
                  this.history = this.theme.addModule("history");
                  this.theme.init();
                  this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function(type) {
                    if (type === _emitter4.default.events.TEXT_CHANGE) {
                      _this2.root.classList.toggle("ql-blank", _this2.editor.isBlank());
                    }
                  });
                  this.emitter.on(_emitter4.default.events.SCROLL_UPDATE, function(source, mutations) {
                    var range = _this2.selection.lastRange;
                    var index = range && range.length === 0 ? range.index : void 0;
                    modify.call(_this2, function() {
                      return _this2.editor.update(null, mutations, index);
                    }, source);
                  });
                  var contents = this.clipboard.convert(`<div class='ql-editor' style="white-space: normal;">` + html2 + "<p><br></p></div>");
                  this.setContents(contents);
                  this.history.clear();
                  if (this.options.placeholder) {
                    this.root.setAttribute("data-placeholder", this.options.placeholder);
                  }
                  if (this.options.readOnly) {
                    this.disable();
                  }
                }
                _createClass(Quill3, [{
                  key: "addContainer",
                  value: function addContainer(container) {
                    var refNode = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                    if (typeof container === "string") {
                      var className = container;
                      container = document.createElement("div");
                      container.classList.add(className);
                    }
                    this.container.insertBefore(container, refNode);
                    return container;
                  }
                }, {
                  key: "blur",
                  value: function blur() {
                    this.selection.setRange(null);
                  }
                }, {
                  key: "deleteText",
                  value: function deleteText(index, length, source) {
                    var _this3 = this;
                    var _overload = overload(index, length, source);
                    var _overload2 = _slicedToArray(_overload, 4);
                    index = _overload2[0];
                    length = _overload2[1];
                    source = _overload2[3];
                    return modify.call(this, function() {
                      return _this3.editor.deleteText(index, length);
                    }, source, index, -1 * length);
                  }
                }, {
                  key: "disable",
                  value: function disable() {
                    this.enable(false);
                  }
                }, {
                  key: "enable",
                  value: function enable() {
                    var enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
                    this.scroll.enable(enabled);
                    this.container.classList.toggle("ql-disabled", !enabled);
                  }
                }, {
                  key: "focus",
                  value: function focus2() {
                    var scrollTop = this.scrollingContainer.scrollTop;
                    this.selection.focus();
                    this.scrollingContainer.scrollTop = scrollTop;
                    this.scrollIntoView();
                  }
                }, {
                  key: "format",
                  value: function format(name, value) {
                    var _this4 = this;
                    var source = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _emitter4.default.sources.API;
                    return modify.call(this, function() {
                      var range = _this4.getSelection(true);
                      var change = new _quillDelta2.default();
                      if (range == null) {
                        return change;
                      } else if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
                        change = _this4.editor.formatLine(range.index, range.length, _defineProperty({}, name, value));
                      } else if (range.length === 0) {
                        _this4.selection.format(name, value);
                        return change;
                      } else {
                        change = _this4.editor.formatText(range.index, range.length, _defineProperty({}, name, value));
                      }
                      _this4.setSelection(range, _emitter4.default.sources.SILENT);
                      return change;
                    }, source);
                  }
                }, {
                  key: "formatLine",
                  value: function formatLine(index, length, name, value, source) {
                    var _this5 = this;
                    var formats = void 0;
                    var _overload3 = overload(index, length, name, value, source);
                    var _overload4 = _slicedToArray(_overload3, 4);
                    index = _overload4[0];
                    length = _overload4[1];
                    formats = _overload4[2];
                    source = _overload4[3];
                    return modify.call(this, function() {
                      return _this5.editor.formatLine(index, length, formats);
                    }, source, index, 0);
                  }
                }, {
                  key: "formatText",
                  value: function formatText(index, length, name, value, source) {
                    var _this6 = this;
                    var formats = void 0;
                    var _overload5 = overload(index, length, name, value, source);
                    var _overload6 = _slicedToArray(_overload5, 4);
                    index = _overload6[0];
                    length = _overload6[1];
                    formats = _overload6[2];
                    source = _overload6[3];
                    return modify.call(this, function() {
                      return _this6.editor.formatText(index, length, formats);
                    }, source, index, 0);
                  }
                }, {
                  key: "getBounds",
                  value: function getBounds(index) {
                    var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                    var bounds = void 0;
                    if (typeof index === "number") {
                      bounds = this.selection.getBounds(index, length);
                    } else {
                      bounds = this.selection.getBounds(index.index, index.length);
                    }
                    var containerBounds = this.container.getBoundingClientRect();
                    return {
                      bottom: bounds.bottom - containerBounds.top,
                      height: bounds.height,
                      left: bounds.left - containerBounds.left,
                      right: bounds.right - containerBounds.left,
                      top: bounds.top - containerBounds.top,
                      width: bounds.width
                    };
                  }
                }, {
                  key: "getContents",
                  value: function getContents() {
                    var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.getLength() - index;
                    var _overload7 = overload(index, length);
                    var _overload8 = _slicedToArray(_overload7, 2);
                    index = _overload8[0];
                    length = _overload8[1];
                    return this.editor.getContents(index, length);
                  }
                }, {
                  key: "getFormat",
                  value: function getFormat() {
                    var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.getSelection(true);
                    var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                    if (typeof index === "number") {
                      return this.editor.getFormat(index, length);
                    } else {
                      return this.editor.getFormat(index.index, index.length);
                    }
                  }
                }, {
                  key: "getIndex",
                  value: function getIndex(blot) {
                    return blot.offset(this.scroll);
                  }
                }, {
                  key: "getLength",
                  value: function getLength() {
                    return this.scroll.length();
                  }
                }, {
                  key: "getLeaf",
                  value: function getLeaf(index) {
                    return this.scroll.leaf(index);
                  }
                }, {
                  key: "getLine",
                  value: function getLine(index) {
                    return this.scroll.line(index);
                  }
                }, {
                  key: "getLines",
                  value: function getLines() {
                    var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Number.MAX_VALUE;
                    if (typeof index !== "number") {
                      return this.scroll.lines(index.index, index.length);
                    } else {
                      return this.scroll.lines(index, length);
                    }
                  }
                }, {
                  key: "getModule",
                  value: function getModule(name) {
                    return this.theme.modules[name];
                  }
                }, {
                  key: "getSelection",
                  value: function getSelection() {
                    var focus2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
                    if (focus2)
                      this.focus();
                    this.update();
                    return this.selection.getRange()[0];
                  }
                }, {
                  key: "getText",
                  value: function getText() {
                    var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.getLength() - index;
                    var _overload9 = overload(index, length);
                    var _overload10 = _slicedToArray(_overload9, 2);
                    index = _overload10[0];
                    length = _overload10[1];
                    return this.editor.getText(index, length);
                  }
                }, {
                  key: "hasFocus",
                  value: function hasFocus() {
                    return this.selection.hasFocus();
                  }
                }, {
                  key: "insertEmbed",
                  value: function insertEmbed(index, embed, value) {
                    var _this7 = this;
                    var source = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : Quill3.sources.API;
                    return modify.call(this, function() {
                      return _this7.editor.insertEmbed(index, embed, value);
                    }, source, index);
                  }
                }, {
                  key: "insertText",
                  value: function insertText(index, text2, name, value, source) {
                    var _this8 = this;
                    var formats = void 0;
                    var _overload11 = overload(index, 0, name, value, source);
                    var _overload12 = _slicedToArray(_overload11, 4);
                    index = _overload12[0];
                    formats = _overload12[2];
                    source = _overload12[3];
                    return modify.call(this, function() {
                      return _this8.editor.insertText(index, text2, formats);
                    }, source, index, text2.length);
                  }
                }, {
                  key: "isEnabled",
                  value: function isEnabled() {
                    return !this.container.classList.contains("ql-disabled");
                  }
                }, {
                  key: "off",
                  value: function off() {
                    return this.emitter.off.apply(this.emitter, arguments);
                  }
                }, {
                  key: "on",
                  value: function on() {
                    return this.emitter.on.apply(this.emitter, arguments);
                  }
                }, {
                  key: "once",
                  value: function once() {
                    return this.emitter.once.apply(this.emitter, arguments);
                  }
                }, {
                  key: "pasteHTML",
                  value: function pasteHTML(index, html2, source) {
                    this.clipboard.dangerouslyPasteHTML(index, html2, source);
                  }
                }, {
                  key: "removeFormat",
                  value: function removeFormat(index, length, source) {
                    var _this9 = this;
                    var _overload13 = overload(index, length, source);
                    var _overload14 = _slicedToArray(_overload13, 4);
                    index = _overload14[0];
                    length = _overload14[1];
                    source = _overload14[3];
                    return modify.call(this, function() {
                      return _this9.editor.removeFormat(index, length);
                    }, source, index);
                  }
                }, {
                  key: "scrollIntoView",
                  value: function scrollIntoView() {
                    this.selection.scrollIntoView(this.scrollingContainer);
                  }
                }, {
                  key: "setContents",
                  value: function setContents(delta) {
                    var _this10 = this;
                    var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _emitter4.default.sources.API;
                    return modify.call(this, function() {
                      delta = new _quillDelta2.default(delta);
                      var length = _this10.getLength();
                      var deleted = _this10.editor.deleteText(0, length);
                      var applied = _this10.editor.applyDelta(delta);
                      var lastOp = applied.ops[applied.ops.length - 1];
                      if (lastOp != null && typeof lastOp.insert === "string" && lastOp.insert[lastOp.insert.length - 1] === "\n") {
                        _this10.editor.deleteText(_this10.getLength() - 1, 1);
                        applied.delete(1);
                      }
                      var ret = deleted.compose(applied);
                      return ret;
                    }, source);
                  }
                }, {
                  key: "setSelection",
                  value: function setSelection(index, length, source) {
                    if (index == null) {
                      this.selection.setRange(null, length || Quill3.sources.API);
                    } else {
                      var _overload15 = overload(index, length, source);
                      var _overload16 = _slicedToArray(_overload15, 4);
                      index = _overload16[0];
                      length = _overload16[1];
                      source = _overload16[3];
                      this.selection.setRange(new _selection.Range(index, length), source);
                      if (source !== _emitter4.default.sources.SILENT) {
                        this.selection.scrollIntoView(this.scrollingContainer);
                      }
                    }
                  }
                }, {
                  key: "setText",
                  value: function setText(text2) {
                    var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _emitter4.default.sources.API;
                    var delta = new _quillDelta2.default().insert(text2);
                    return this.setContents(delta, source);
                  }
                }, {
                  key: "update",
                  value: function update() {
                    var source = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _emitter4.default.sources.USER;
                    var change = this.scroll.update(source);
                    this.selection.update(source);
                    return change;
                  }
                }, {
                  key: "updateContents",
                  value: function updateContents(delta) {
                    var _this11 = this;
                    var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _emitter4.default.sources.API;
                    return modify.call(this, function() {
                      delta = new _quillDelta2.default(delta);
                      return _this11.editor.applyDelta(delta, source);
                    }, source, true);
                  }
                }]);
                return Quill3;
              }();
              Quill2.DEFAULTS = {
                bounds: null,
                formats: null,
                modules: {},
                placeholder: "",
                readOnly: false,
                scrollingContainer: null,
                strict: true,
                theme: "default"
              };
              Quill2.events = _emitter4.default.events;
              Quill2.sources = _emitter4.default.sources;
              Quill2.version = "1.3.7";
              Quill2.imports = {
                "delta": _quillDelta2.default,
                "parchment": _parchment2.default,
                "core/module": _module2.default,
                "core/theme": _theme2.default
              };
              function expandConfig(container, userConfig) {
                userConfig = (0, _extend2.default)(true, {
                  container,
                  modules: {
                    clipboard: true,
                    keyboard: true,
                    history: true
                  }
                }, userConfig);
                if (!userConfig.theme || userConfig.theme === Quill2.DEFAULTS.theme) {
                  userConfig.theme = _theme2.default;
                } else {
                  userConfig.theme = Quill2.import("themes/" + userConfig.theme);
                  if (userConfig.theme == null) {
                    throw new Error("Invalid theme " + userConfig.theme + ". Did you register it?");
                  }
                }
                var themeConfig = (0, _extend2.default)(true, {}, userConfig.theme.DEFAULTS);
                [themeConfig, userConfig].forEach(function(config2) {
                  config2.modules = config2.modules || {};
                  Object.keys(config2.modules).forEach(function(module4) {
                    if (config2.modules[module4] === true) {
                      config2.modules[module4] = {};
                    }
                  });
                });
                var moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));
                var moduleConfig = moduleNames.reduce(function(config2, name) {
                  var moduleClass = Quill2.import("modules/" + name);
                  if (moduleClass == null) {
                    debug.error("Cannot load " + name + " module. Are you sure you registered it?");
                  } else {
                    config2[name] = moduleClass.DEFAULTS || {};
                  }
                  return config2;
                }, {});
                if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {
                  userConfig.modules.toolbar = {
                    container: userConfig.modules.toolbar
                  };
                }
                userConfig = (0, _extend2.default)(true, {}, Quill2.DEFAULTS, { modules: moduleConfig }, themeConfig, userConfig);
                ["bounds", "container", "scrollingContainer"].forEach(function(key2) {
                  if (typeof userConfig[key2] === "string") {
                    userConfig[key2] = document.querySelector(userConfig[key2]);
                  }
                });
                userConfig.modules = Object.keys(userConfig.modules).reduce(function(config2, name) {
                  if (userConfig.modules[name]) {
                    config2[name] = userConfig.modules[name];
                  }
                  return config2;
                }, {});
                return userConfig;
              }
              function modify(modifier, source, index, shift) {
                if (this.options.strict && !this.isEnabled() && source === _emitter4.default.sources.USER) {
                  return new _quillDelta2.default();
                }
                var range = index == null ? null : this.getSelection();
                var oldDelta = this.editor.delta;
                var change = modifier();
                if (range != null) {
                  if (index === true)
                    index = range.index;
                  if (shift == null) {
                    range = shiftRange(range, change, source);
                  } else if (shift !== 0) {
                    range = shiftRange(range, index, shift, source);
                  }
                  this.setSelection(range, _emitter4.default.sources.SILENT);
                }
                if (change.length() > 0) {
                  var _emitter;
                  var args = [_emitter4.default.events.TEXT_CHANGE, change, oldDelta, source];
                  (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
                  if (source !== _emitter4.default.sources.SILENT) {
                    var _emitter2;
                    (_emitter2 = this.emitter).emit.apply(_emitter2, args);
                  }
                }
                return change;
              }
              function overload(index, length, name, value, source) {
                var formats = {};
                if (typeof index.index === "number" && typeof index.length === "number") {
                  if (typeof length !== "number") {
                    source = value, value = name, name = length, length = index.length, index = index.index;
                  } else {
                    length = index.length, index = index.index;
                  }
                } else if (typeof length !== "number") {
                  source = value, value = name, name = length, length = 0;
                }
                if ((typeof name === "undefined" ? "undefined" : _typeof2(name)) === "object") {
                  formats = name;
                  source = value;
                } else if (typeof name === "string") {
                  if (value != null) {
                    formats[name] = value;
                  } else {
                    source = name;
                  }
                }
                source = source || _emitter4.default.sources.API;
                return [index, length, formats, source];
              }
              function shiftRange(range, index, length, source) {
                if (range == null)
                  return null;
                var start2 = void 0, end2 = void 0;
                if (index instanceof _quillDelta2.default) {
                  var _map = [range.index, range.index + range.length].map(function(pos) {
                    return index.transformPosition(pos, source !== _emitter4.default.sources.USER);
                  });
                  var _map2 = _slicedToArray(_map, 2);
                  start2 = _map2[0];
                  end2 = _map2[1];
                } else {
                  var _map3 = [range.index, range.index + range.length].map(function(pos) {
                    if (pos < index || pos === index && source === _emitter4.default.sources.USER)
                      return pos;
                    if (length >= 0) {
                      return pos + length;
                    } else {
                      return Math.max(index, pos + length);
                    }
                  });
                  var _map4 = _slicedToArray(_map3, 2);
                  start2 = _map4[0];
                  end2 = _map4[1];
                }
                return new _selection.Range(start2, end2 - start2);
              }
              exports3.expandConfig = expandConfig;
              exports3.overload = overload;
              exports3.default = Quill2;
            },
            /* 6 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _text = __webpack_require__(7);
              var _text2 = _interopRequireDefault(_text);
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Inline = function(_Parchment$Inline) {
                _inherits(Inline2, _Parchment$Inline);
                function Inline2() {
                  _classCallCheck(this, Inline2);
                  return _possibleConstructorReturn(this, (Inline2.__proto__ || Object.getPrototypeOf(Inline2)).apply(this, arguments));
                }
                _createClass(Inline2, [{
                  key: "formatAt",
                  value: function formatAt(index, length, name, value) {
                    if (Inline2.compare(this.statics.blotName, name) < 0 && _parchment2.default.query(name, _parchment2.default.Scope.BLOT)) {
                      var blot = this.isolate(index, length);
                      if (value) {
                        blot.wrap(name, value);
                      }
                    } else {
                      _get(Inline2.prototype.__proto__ || Object.getPrototypeOf(Inline2.prototype), "formatAt", this).call(this, index, length, name, value);
                    }
                  }
                }, {
                  key: "optimize",
                  value: function optimize(context) {
                    _get(Inline2.prototype.__proto__ || Object.getPrototypeOf(Inline2.prototype), "optimize", this).call(this, context);
                    if (this.parent instanceof Inline2 && Inline2.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {
                      var parent = this.parent.isolate(this.offset(), this.length());
                      this.moveChildren(parent);
                      parent.wrap(this);
                    }
                  }
                }], [{
                  key: "compare",
                  value: function compare(self2, other) {
                    var selfIndex = Inline2.order.indexOf(self2);
                    var otherIndex = Inline2.order.indexOf(other);
                    if (selfIndex >= 0 || otherIndex >= 0) {
                      return selfIndex - otherIndex;
                    } else if (self2 === other) {
                      return 0;
                    } else if (self2 < other) {
                      return -1;
                    } else {
                      return 1;
                    }
                  }
                }]);
                return Inline2;
              }(_parchment2.default.Inline);
              Inline.allowedChildren = [Inline, _parchment2.default.Embed, _text2.default];
              Inline.order = [
                "cursor",
                "inline",
                // Must be lower
                "underline",
                "strike",
                "italic",
                "bold",
                "script",
                "link",
                "code"
                // Must be higher
              ];
              exports3.default = Inline;
            },
            /* 7 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var TextBlot = function(_Parchment$Text) {
                _inherits(TextBlot2, _Parchment$Text);
                function TextBlot2() {
                  _classCallCheck(this, TextBlot2);
                  return _possibleConstructorReturn(this, (TextBlot2.__proto__ || Object.getPrototypeOf(TextBlot2)).apply(this, arguments));
                }
                return TextBlot2;
              }(_parchment2.default.Text);
              exports3.default = TextBlot;
            },
            /* 8 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _eventemitter = __webpack_require__(54);
              var _eventemitter2 = _interopRequireDefault(_eventemitter);
              var _logger = __webpack_require__(10);
              var _logger2 = _interopRequireDefault(_logger);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var debug = (0, _logger2.default)("quill:events");
              var EVENTS = ["selectionchange", "mousedown", "mouseup", "click"];
              EVENTS.forEach(function(eventName) {
                document.addEventListener(eventName, function() {
                  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                  }
                  [].slice.call(document.querySelectorAll(".ql-container")).forEach(function(node) {
                    if (node.__quill && node.__quill.emitter) {
                      var _node$__quill$emitter;
                      (_node$__quill$emitter = node.__quill.emitter).handleDOM.apply(_node$__quill$emitter, args);
                    }
                  });
                });
              });
              var Emitter = function(_EventEmitter) {
                _inherits(Emitter2, _EventEmitter);
                function Emitter2() {
                  _classCallCheck(this, Emitter2);
                  var _this = _possibleConstructorReturn(this, (Emitter2.__proto__ || Object.getPrototypeOf(Emitter2)).call(this));
                  _this.listeners = {};
                  _this.on("error", debug.error);
                  return _this;
                }
                _createClass(Emitter2, [{
                  key: "emit",
                  value: function emit() {
                    debug.log.apply(debug, arguments);
                    _get(Emitter2.prototype.__proto__ || Object.getPrototypeOf(Emitter2.prototype), "emit", this).apply(this, arguments);
                  }
                }, {
                  key: "handleDOM",
                  value: function handleDOM(event) {
                    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                      args[_key2 - 1] = arguments[_key2];
                    }
                    (this.listeners[event.type] || []).forEach(function(_ref) {
                      var node = _ref.node, handler = _ref.handler;
                      if (event.target === node || node.contains(event.target)) {
                        handler.apply(void 0, [event].concat(args));
                      }
                    });
                  }
                }, {
                  key: "listenDOM",
                  value: function listenDOM(eventName, node, handler) {
                    if (!this.listeners[eventName]) {
                      this.listeners[eventName] = [];
                    }
                    this.listeners[eventName].push({ node, handler });
                  }
                }]);
                return Emitter2;
              }(_eventemitter2.default);
              Emitter.events = {
                EDITOR_CHANGE: "editor-change",
                SCROLL_BEFORE_UPDATE: "scroll-before-update",
                SCROLL_OPTIMIZE: "scroll-optimize",
                SCROLL_UPDATE: "scroll-update",
                SELECTION_CHANGE: "selection-change",
                TEXT_CHANGE: "text-change"
              };
              Emitter.sources = {
                API: "api",
                SILENT: "silent",
                USER: "user"
              };
              exports3.default = Emitter;
            },
            /* 9 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              var Module = function Module2(quill2) {
                var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                _classCallCheck(this, Module2);
                this.quill = quill2;
                this.options = options;
              };
              Module.DEFAULTS = {};
              exports3.default = Module;
            },
            /* 10 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var levels = ["error", "warn", "log", "info"];
              var level = "warn";
              function debug(method) {
                if (levels.indexOf(method) <= levels.indexOf(level)) {
                  var _console;
                  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    args[_key - 1] = arguments[_key];
                  }
                  (_console = console)[method].apply(_console, args);
                }
              }
              function namespace(ns) {
                return levels.reduce(function(logger, method) {
                  logger[method] = debug.bind(console, method, ns);
                  return logger;
                }, {});
              }
              debug.level = namespace.level = function(newLevel) {
                level = newLevel;
              };
              exports3.default = namespace;
            },
            /* 11 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var pSlice = Array.prototype.slice;
              var objectKeys = __webpack_require__(52);
              var isArguments = __webpack_require__(53);
              var deepEqual = module3.exports = function(actual, expected, opts) {
                if (!opts)
                  opts = {};
                if (actual === expected) {
                  return true;
                } else if (actual instanceof Date && expected instanceof Date) {
                  return actual.getTime() === expected.getTime();
                } else if (!actual || !expected || typeof actual != "object" && typeof expected != "object") {
                  return opts.strict ? actual === expected : actual == expected;
                } else {
                  return objEquiv(actual, expected, opts);
                }
              };
              function isUndefinedOrNull(value) {
                return value === null || value === void 0;
              }
              function isBuffer(x) {
                if (!x || typeof x !== "object" || typeof x.length !== "number")
                  return false;
                if (typeof x.copy !== "function" || typeof x.slice !== "function") {
                  return false;
                }
                if (x.length > 0 && typeof x[0] !== "number")
                  return false;
                return true;
              }
              function objEquiv(a, b, opts) {
                var i, key2;
                if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
                  return false;
                if (a.prototype !== b.prototype)
                  return false;
                if (isArguments(a)) {
                  if (!isArguments(b)) {
                    return false;
                  }
                  a = pSlice.call(a);
                  b = pSlice.call(b);
                  return deepEqual(a, b, opts);
                }
                if (isBuffer(a)) {
                  if (!isBuffer(b)) {
                    return false;
                  }
                  if (a.length !== b.length)
                    return false;
                  for (i = 0; i < a.length; i++) {
                    if (a[i] !== b[i])
                      return false;
                  }
                  return true;
                }
                try {
                  var ka = objectKeys(a), kb = objectKeys(b);
                } catch (e) {
                  return false;
                }
                if (ka.length != kb.length)
                  return false;
                ka.sort();
                kb.sort();
                for (i = ka.length - 1; i >= 0; i--) {
                  if (ka[i] != kb[i])
                    return false;
                }
                for (i = ka.length - 1; i >= 0; i--) {
                  key2 = ka[i];
                  if (!deepEqual(a[key2], b[key2], opts))
                    return false;
                }
                return typeof a === typeof b;
              }
            },
            /* 12 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", { value: true });
              var Registry = __webpack_require__(1);
              var Attributor = (
                /** @class */
                function() {
                  function Attributor2(attrName, keyName, options) {
                    if (options === void 0) {
                      options = {};
                    }
                    this.attrName = attrName;
                    this.keyName = keyName;
                    var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;
                    if (options.scope != null) {
                      this.scope = options.scope & Registry.Scope.LEVEL | attributeBit;
                    } else {
                      this.scope = Registry.Scope.ATTRIBUTE;
                    }
                    if (options.whitelist != null)
                      this.whitelist = options.whitelist;
                  }
                  Attributor2.keys = function(node) {
                    return [].map.call(node.attributes, function(item) {
                      return item.name;
                    });
                  };
                  Attributor2.prototype.add = function(node, value) {
                    if (!this.canAdd(node, value))
                      return false;
                    node.setAttribute(this.keyName, value);
                    return true;
                  };
                  Attributor2.prototype.canAdd = function(node, value) {
                    var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));
                    if (match == null)
                      return false;
                    if (this.whitelist == null)
                      return true;
                    if (typeof value === "string") {
                      return this.whitelist.indexOf(value.replace(/["']/g, "")) > -1;
                    } else {
                      return this.whitelist.indexOf(value) > -1;
                    }
                  };
                  Attributor2.prototype.remove = function(node) {
                    node.removeAttribute(this.keyName);
                  };
                  Attributor2.prototype.value = function(node) {
                    var value = node.getAttribute(this.keyName);
                    if (this.canAdd(node, value) && value) {
                      return value;
                    }
                    return "";
                  };
                  return Attributor2;
                }()
              );
              exports3.default = Attributor;
            },
            /* 13 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.default = exports3.Code = void 0;
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _quillDelta = __webpack_require__(2);
              var _quillDelta2 = _interopRequireDefault(_quillDelta);
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _block = __webpack_require__(4);
              var _block2 = _interopRequireDefault(_block);
              var _inline = __webpack_require__(6);
              var _inline2 = _interopRequireDefault(_inline);
              var _text = __webpack_require__(7);
              var _text2 = _interopRequireDefault(_text);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Code = function(_Inline) {
                _inherits(Code2, _Inline);
                function Code2() {
                  _classCallCheck(this, Code2);
                  return _possibleConstructorReturn(this, (Code2.__proto__ || Object.getPrototypeOf(Code2)).apply(this, arguments));
                }
                return Code2;
              }(_inline2.default);
              Code.blotName = "code";
              Code.tagName = "CODE";
              var CodeBlock = function(_Block) {
                _inherits(CodeBlock2, _Block);
                function CodeBlock2() {
                  _classCallCheck(this, CodeBlock2);
                  return _possibleConstructorReturn(this, (CodeBlock2.__proto__ || Object.getPrototypeOf(CodeBlock2)).apply(this, arguments));
                }
                _createClass(CodeBlock2, [{
                  key: "delta",
                  value: function delta() {
                    var _this3 = this;
                    var text2 = this.domNode.textContent;
                    if (text2.endsWith("\n")) {
                      text2 = text2.slice(0, -1);
                    }
                    return text2.split("\n").reduce(function(delta2, frag) {
                      return delta2.insert(frag).insert("\n", _this3.formats());
                    }, new _quillDelta2.default());
                  }
                }, {
                  key: "format",
                  value: function format(name, value) {
                    if (name === this.statics.blotName && value)
                      return;
                    var _descendant = this.descendant(_text2.default, this.length() - 1), _descendant2 = _slicedToArray(_descendant, 1), text2 = _descendant2[0];
                    if (text2 != null) {
                      text2.deleteAt(text2.length() - 1, 1);
                    }
                    _get(CodeBlock2.prototype.__proto__ || Object.getPrototypeOf(CodeBlock2.prototype), "format", this).call(this, name, value);
                  }
                }, {
                  key: "formatAt",
                  value: function formatAt(index, length, name, value) {
                    if (length === 0)
                      return;
                    if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK) == null || name === this.statics.blotName && value === this.statics.formats(this.domNode)) {
                      return;
                    }
                    var nextNewline = this.newlineIndex(index);
                    if (nextNewline < 0 || nextNewline >= index + length)
                      return;
                    var prevNewline = this.newlineIndex(index, true) + 1;
                    var isolateLength = nextNewline - prevNewline + 1;
                    var blot = this.isolate(prevNewline, isolateLength);
                    var next = blot.next;
                    blot.format(name, value);
                    if (next instanceof CodeBlock2) {
                      next.formatAt(0, index - prevNewline + length - isolateLength, name, value);
                    }
                  }
                }, {
                  key: "insertAt",
                  value: function insertAt(index, value, def) {
                    if (def != null)
                      return;
                    var _descendant3 = this.descendant(_text2.default, index), _descendant4 = _slicedToArray(_descendant3, 2), text2 = _descendant4[0], offset2 = _descendant4[1];
                    text2.insertAt(offset2, value);
                  }
                }, {
                  key: "length",
                  value: function length() {
                    var length2 = this.domNode.textContent.length;
                    if (!this.domNode.textContent.endsWith("\n")) {
                      return length2 + 1;
                    }
                    return length2;
                  }
                }, {
                  key: "newlineIndex",
                  value: function newlineIndex(searchIndex) {
                    var reverse = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                    if (!reverse) {
                      var offset2 = this.domNode.textContent.slice(searchIndex).indexOf("\n");
                      return offset2 > -1 ? searchIndex + offset2 : -1;
                    } else {
                      return this.domNode.textContent.slice(0, searchIndex).lastIndexOf("\n");
                    }
                  }
                }, {
                  key: "optimize",
                  value: function optimize(context) {
                    if (!this.domNode.textContent.endsWith("\n")) {
                      this.appendChild(_parchment2.default.create("text", "\n"));
                    }
                    _get(CodeBlock2.prototype.__proto__ || Object.getPrototypeOf(CodeBlock2.prototype), "optimize", this).call(this, context);
                    var next = this.next;
                    if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && this.statics.formats(this.domNode) === next.statics.formats(next.domNode)) {
                      next.optimize(context);
                      next.moveChildren(this);
                      next.remove();
                    }
                  }
                }, {
                  key: "replace",
                  value: function replace(target) {
                    _get(CodeBlock2.prototype.__proto__ || Object.getPrototypeOf(CodeBlock2.prototype), "replace", this).call(this, target);
                    [].slice.call(this.domNode.querySelectorAll("*")).forEach(function(node) {
                      var blot = _parchment2.default.find(node);
                      if (blot == null) {
                        node.parentNode.removeChild(node);
                      } else if (blot instanceof _parchment2.default.Embed) {
                        blot.remove();
                      } else {
                        blot.unwrap();
                      }
                    });
                  }
                }], [{
                  key: "create",
                  value: function create(value) {
                    var domNode = _get(CodeBlock2.__proto__ || Object.getPrototypeOf(CodeBlock2), "create", this).call(this, value);
                    domNode.setAttribute("spellcheck", false);
                    return domNode;
                  }
                }, {
                  key: "formats",
                  value: function formats() {
                    return true;
                  }
                }]);
                return CodeBlock2;
              }(_block2.default);
              CodeBlock.blotName = "code-block";
              CodeBlock.tagName = "PRE";
              CodeBlock.TAB = "  ";
              exports3.Code = Code;
              exports3.default = CodeBlock;
            },
            /* 14 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
                return typeof obj;
              } : function(obj) {
                return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
              };
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _quillDelta = __webpack_require__(2);
              var _quillDelta2 = _interopRequireDefault(_quillDelta);
              var _op = __webpack_require__(20);
              var _op2 = _interopRequireDefault(_op);
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _code = __webpack_require__(13);
              var _code2 = _interopRequireDefault(_code);
              var _cursor = __webpack_require__(24);
              var _cursor2 = _interopRequireDefault(_cursor);
              var _block = __webpack_require__(4);
              var _block2 = _interopRequireDefault(_block);
              var _break = __webpack_require__(16);
              var _break2 = _interopRequireDefault(_break);
              var _clone = __webpack_require__(21);
              var _clone2 = _interopRequireDefault(_clone);
              var _deepEqual = __webpack_require__(11);
              var _deepEqual2 = _interopRequireDefault(_deepEqual);
              var _extend = __webpack_require__(3);
              var _extend2 = _interopRequireDefault(_extend);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _defineProperty(obj, key2, value) {
                if (key2 in obj) {
                  Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
                } else {
                  obj[key2] = value;
                }
                return obj;
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              var ASCII = /^[ -~]*$/;
              var Editor = function() {
                function Editor2(scroll2) {
                  _classCallCheck(this, Editor2);
                  this.scroll = scroll2;
                  this.delta = this.getDelta();
                }
                _createClass(Editor2, [{
                  key: "applyDelta",
                  value: function applyDelta(delta) {
                    var _this = this;
                    var consumeNextNewline = false;
                    this.scroll.update();
                    var scrollLength = this.scroll.length();
                    this.scroll.batchStart();
                    delta = normalizeDelta(delta);
                    delta.reduce(function(index, op) {
                      var length = op.retain || op.delete || op.insert.length || 1;
                      var attributes = op.attributes || {};
                      if (op.insert != null) {
                        if (typeof op.insert === "string") {
                          var text2 = op.insert;
                          if (text2.endsWith("\n") && consumeNextNewline) {
                            consumeNextNewline = false;
                            text2 = text2.slice(0, -1);
                          }
                          if (index >= scrollLength && !text2.endsWith("\n")) {
                            consumeNextNewline = true;
                          }
                          _this.scroll.insertAt(index, text2);
                          var _scroll$line = _this.scroll.line(index), _scroll$line2 = _slicedToArray(_scroll$line, 2), line = _scroll$line2[0], offset2 = _scroll$line2[1];
                          var formats = (0, _extend2.default)({}, (0, _block.bubbleFormats)(line));
                          if (line instanceof _block2.default) {
                            var _line$descendant = line.descendant(_parchment2.default.Leaf, offset2), _line$descendant2 = _slicedToArray(_line$descendant, 1), leaf = _line$descendant2[0];
                            formats = (0, _extend2.default)(formats, (0, _block.bubbleFormats)(leaf));
                          }
                          attributes = _op2.default.attributes.diff(formats, attributes) || {};
                        } else if (_typeof2(op.insert) === "object") {
                          var key2 = Object.keys(op.insert)[0];
                          if (key2 == null)
                            return index;
                          _this.scroll.insertAt(index, key2, op.insert[key2]);
                        }
                        scrollLength += length;
                      }
                      Object.keys(attributes).forEach(function(name) {
                        _this.scroll.formatAt(index, length, name, attributes[name]);
                      });
                      return index + length;
                    }, 0);
                    delta.reduce(function(index, op) {
                      if (typeof op.delete === "number") {
                        _this.scroll.deleteAt(index, op.delete);
                        return index;
                      }
                      return index + (op.retain || op.insert.length || 1);
                    }, 0);
                    this.scroll.batchEnd();
                    return this.update(delta);
                  }
                }, {
                  key: "deleteText",
                  value: function deleteText(index, length) {
                    this.scroll.deleteAt(index, length);
                    return this.update(new _quillDelta2.default().retain(index).delete(length));
                  }
                }, {
                  key: "formatLine",
                  value: function formatLine(index, length) {
                    var _this2 = this;
                    var formats = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                    this.scroll.update();
                    Object.keys(formats).forEach(function(format) {
                      if (_this2.scroll.whitelist != null && !_this2.scroll.whitelist[format])
                        return;
                      var lines = _this2.scroll.lines(index, Math.max(length, 1));
                      var lengthRemaining = length;
                      lines.forEach(function(line) {
                        var lineLength = line.length();
                        if (!(line instanceof _code2.default)) {
                          line.format(format, formats[format]);
                        } else {
                          var codeIndex = index - line.offset(_this2.scroll);
                          var codeLength = line.newlineIndex(codeIndex + lengthRemaining) - codeIndex + 1;
                          line.formatAt(codeIndex, codeLength, format, formats[format]);
                        }
                        lengthRemaining -= lineLength;
                      });
                    });
                    this.scroll.optimize();
                    return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));
                  }
                }, {
                  key: "formatText",
                  value: function formatText(index, length) {
                    var _this3 = this;
                    var formats = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                    Object.keys(formats).forEach(function(format) {
                      _this3.scroll.formatAt(index, length, format, formats[format]);
                    });
                    return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));
                  }
                }, {
                  key: "getContents",
                  value: function getContents(index, length) {
                    return this.delta.slice(index, index + length);
                  }
                }, {
                  key: "getDelta",
                  value: function getDelta() {
                    return this.scroll.lines().reduce(function(delta, line) {
                      return delta.concat(line.delta());
                    }, new _quillDelta2.default());
                  }
                }, {
                  key: "getFormat",
                  value: function getFormat(index) {
                    var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                    var lines = [], leaves = [];
                    if (length === 0) {
                      this.scroll.path(index).forEach(function(path) {
                        var _path = _slicedToArray(path, 1), blot = _path[0];
                        if (blot instanceof _block2.default) {
                          lines.push(blot);
                        } else if (blot instanceof _parchment2.default.Leaf) {
                          leaves.push(blot);
                        }
                      });
                    } else {
                      lines = this.scroll.lines(index, length);
                      leaves = this.scroll.descendants(_parchment2.default.Leaf, index, length);
                    }
                    var formatsArr = [lines, leaves].map(function(blots) {
                      if (blots.length === 0)
                        return {};
                      var formats = (0, _block.bubbleFormats)(blots.shift());
                      while (Object.keys(formats).length > 0) {
                        var blot = blots.shift();
                        if (blot == null)
                          return formats;
                        formats = combineFormats((0, _block.bubbleFormats)(blot), formats);
                      }
                      return formats;
                    });
                    return _extend2.default.apply(_extend2.default, formatsArr);
                  }
                }, {
                  key: "getText",
                  value: function getText(index, length) {
                    return this.getContents(index, length).filter(function(op) {
                      return typeof op.insert === "string";
                    }).map(function(op) {
                      return op.insert;
                    }).join("");
                  }
                }, {
                  key: "insertEmbed",
                  value: function insertEmbed(index, embed, value) {
                    this.scroll.insertAt(index, embed, value);
                    return this.update(new _quillDelta2.default().retain(index).insert(_defineProperty({}, embed, value)));
                  }
                }, {
                  key: "insertText",
                  value: function insertText(index, text2) {
                    var _this4 = this;
                    var formats = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                    text2 = text2.replace(/\r\n/g, "\n").replace(/\r/g, "\n");
                    this.scroll.insertAt(index, text2);
                    Object.keys(formats).forEach(function(format) {
                      _this4.scroll.formatAt(index, text2.length, format, formats[format]);
                    });
                    return this.update(new _quillDelta2.default().retain(index).insert(text2, (0, _clone2.default)(formats)));
                  }
                }, {
                  key: "isBlank",
                  value: function isBlank() {
                    if (this.scroll.children.length == 0)
                      return true;
                    if (this.scroll.children.length > 1)
                      return false;
                    var block = this.scroll.children.head;
                    if (block.statics.blotName !== _block2.default.blotName)
                      return false;
                    if (block.children.length > 1)
                      return false;
                    return block.children.head instanceof _break2.default;
                  }
                }, {
                  key: "removeFormat",
                  value: function removeFormat(index, length) {
                    var text2 = this.getText(index, length);
                    var _scroll$line3 = this.scroll.line(index + length), _scroll$line4 = _slicedToArray(_scroll$line3, 2), line = _scroll$line4[0], offset2 = _scroll$line4[1];
                    var suffixLength = 0, suffix = new _quillDelta2.default();
                    if (line != null) {
                      if (!(line instanceof _code2.default)) {
                        suffixLength = line.length() - offset2;
                      } else {
                        suffixLength = line.newlineIndex(offset2) - offset2 + 1;
                      }
                      suffix = line.delta().slice(offset2, offset2 + suffixLength - 1).insert("\n");
                    }
                    var contents = this.getContents(index, length + suffixLength);
                    var diff = contents.diff(new _quillDelta2.default().insert(text2).concat(suffix));
                    var delta = new _quillDelta2.default().retain(index).concat(diff);
                    return this.applyDelta(delta);
                  }
                }, {
                  key: "update",
                  value: function update(change) {
                    var mutations = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
                    var cursorIndex = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0;
                    var oldDelta = this.delta;
                    if (mutations.length === 1 && mutations[0].type === "characterData" && mutations[0].target.data.match(ASCII) && _parchment2.default.find(mutations[0].target)) {
                      var textBlot = _parchment2.default.find(mutations[0].target);
                      var formats = (0, _block.bubbleFormats)(textBlot);
                      var index = textBlot.offset(this.scroll);
                      var oldValue = mutations[0].oldValue.replace(_cursor2.default.CONTENTS, "");
                      var oldText = new _quillDelta2.default().insert(oldValue);
                      var newText = new _quillDelta2.default().insert(textBlot.value());
                      var diffDelta = new _quillDelta2.default().retain(index).concat(oldText.diff(newText, cursorIndex));
                      change = diffDelta.reduce(function(delta, op) {
                        if (op.insert) {
                          return delta.insert(op.insert, formats);
                        } else {
                          return delta.push(op);
                        }
                      }, new _quillDelta2.default());
                      this.delta = oldDelta.compose(change);
                    } else {
                      this.delta = this.getDelta();
                      if (!change || !(0, _deepEqual2.default)(oldDelta.compose(change), this.delta)) {
                        change = oldDelta.diff(this.delta, cursorIndex);
                      }
                    }
                    return change;
                  }
                }]);
                return Editor2;
              }();
              function combineFormats(formats, combined) {
                return Object.keys(combined).reduce(function(merged, name) {
                  if (formats[name] == null)
                    return merged;
                  if (combined[name] === formats[name]) {
                    merged[name] = combined[name];
                  } else if (Array.isArray(combined[name])) {
                    if (combined[name].indexOf(formats[name]) < 0) {
                      merged[name] = combined[name].concat([formats[name]]);
                    }
                  } else {
                    merged[name] = [combined[name], formats[name]];
                  }
                  return merged;
                }, {});
              }
              function normalizeDelta(delta) {
                return delta.reduce(function(delta2, op) {
                  if (op.insert === 1) {
                    var attributes = (0, _clone2.default)(op.attributes);
                    delete attributes["image"];
                    return delta2.insert({ image: op.attributes.image }, attributes);
                  }
                  if (op.attributes != null && (op.attributes.list === true || op.attributes.bullet === true)) {
                    op = (0, _clone2.default)(op);
                    if (op.attributes.list) {
                      op.attributes.list = "ordered";
                    } else {
                      op.attributes.list = "bullet";
                      delete op.attributes.bullet;
                    }
                  }
                  if (typeof op.insert === "string") {
                    var text2 = op.insert.replace(/\r\n/g, "\n").replace(/\r/g, "\n");
                    return delta2.insert(text2, op.attributes);
                  }
                  return delta2.push(op);
                }, new _quillDelta2.default());
              }
              exports3.default = Editor;
            },
            /* 15 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.default = exports3.Range = void 0;
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _clone = __webpack_require__(21);
              var _clone2 = _interopRequireDefault(_clone);
              var _deepEqual = __webpack_require__(11);
              var _deepEqual2 = _interopRequireDefault(_deepEqual);
              var _emitter3 = __webpack_require__(8);
              var _emitter4 = _interopRequireDefault(_emitter3);
              var _logger = __webpack_require__(10);
              var _logger2 = _interopRequireDefault(_logger);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _toConsumableArray(arr) {
                if (Array.isArray(arr)) {
                  for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                  }
                  return arr2;
                } else {
                  return Array.from(arr);
                }
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              var debug = (0, _logger2.default)("quill:selection");
              var Range = function Range2(index) {
                var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                _classCallCheck(this, Range2);
                this.index = index;
                this.length = length;
              };
              var Selection = function() {
                function Selection2(scroll2, emitter) {
                  var _this = this;
                  _classCallCheck(this, Selection2);
                  this.emitter = emitter;
                  this.scroll = scroll2;
                  this.composing = false;
                  this.mouseDown = false;
                  this.root = this.scroll.domNode;
                  this.cursor = _parchment2.default.create("cursor", this);
                  this.lastRange = this.savedRange = new Range(0, 0);
                  this.handleComposition();
                  this.handleDragging();
                  this.emitter.listenDOM("selectionchange", document, function() {
                    if (!_this.mouseDown) {
                      setTimeout(_this.update.bind(_this, _emitter4.default.sources.USER), 1);
                    }
                  });
                  this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function(type, delta) {
                    if (type === _emitter4.default.events.TEXT_CHANGE && delta.length() > 0) {
                      _this.update(_emitter4.default.sources.SILENT);
                    }
                  });
                  this.emitter.on(_emitter4.default.events.SCROLL_BEFORE_UPDATE, function() {
                    if (!_this.hasFocus())
                      return;
                    var native = _this.getNativeRange();
                    if (native == null)
                      return;
                    if (native.start.node === _this.cursor.textNode)
                      return;
                    _this.emitter.once(_emitter4.default.events.SCROLL_UPDATE, function() {
                      try {
                        _this.setNativeRange(native.start.node, native.start.offset, native.end.node, native.end.offset);
                      } catch (ignored) {
                      }
                    });
                  });
                  this.emitter.on(_emitter4.default.events.SCROLL_OPTIMIZE, function(mutations, context) {
                    if (context.range) {
                      var _context$range = context.range, startNode = _context$range.startNode, startOffset = _context$range.startOffset, endNode = _context$range.endNode, endOffset = _context$range.endOffset;
                      _this.setNativeRange(startNode, startOffset, endNode, endOffset);
                    }
                  });
                  this.update(_emitter4.default.sources.SILENT);
                }
                _createClass(Selection2, [{
                  key: "handleComposition",
                  value: function handleComposition() {
                    var _this2 = this;
                    this.root.addEventListener("compositionstart", function() {
                      _this2.composing = true;
                    });
                    this.root.addEventListener("compositionend", function() {
                      _this2.composing = false;
                      if (_this2.cursor.parent) {
                        var range = _this2.cursor.restore();
                        if (!range)
                          return;
                        setTimeout(function() {
                          _this2.setNativeRange(range.startNode, range.startOffset, range.endNode, range.endOffset);
                        }, 1);
                      }
                    });
                  }
                }, {
                  key: "handleDragging",
                  value: function handleDragging() {
                    var _this3 = this;
                    this.emitter.listenDOM("mousedown", document.body, function() {
                      _this3.mouseDown = true;
                    });
                    this.emitter.listenDOM("mouseup", document.body, function() {
                      _this3.mouseDown = false;
                      _this3.update(_emitter4.default.sources.USER);
                    });
                  }
                }, {
                  key: "focus",
                  value: function focus2() {
                    if (this.hasFocus())
                      return;
                    this.root.focus();
                    this.setRange(this.savedRange);
                  }
                }, {
                  key: "format",
                  value: function format(_format, value) {
                    if (this.scroll.whitelist != null && !this.scroll.whitelist[_format])
                      return;
                    this.scroll.update();
                    var nativeRange = this.getNativeRange();
                    if (nativeRange == null || !nativeRange.native.collapsed || _parchment2.default.query(_format, _parchment2.default.Scope.BLOCK))
                      return;
                    if (nativeRange.start.node !== this.cursor.textNode) {
                      var blot = _parchment2.default.find(nativeRange.start.node, false);
                      if (blot == null)
                        return;
                      if (blot instanceof _parchment2.default.Leaf) {
                        var after = blot.split(nativeRange.start.offset);
                        blot.parent.insertBefore(this.cursor, after);
                      } else {
                        blot.insertBefore(this.cursor, nativeRange.start.node);
                      }
                      this.cursor.attach();
                    }
                    this.cursor.format(_format, value);
                    this.scroll.optimize();
                    this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);
                    this.update();
                  }
                }, {
                  key: "getBounds",
                  value: function getBounds(index) {
                    var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                    var scrollLength = this.scroll.length();
                    index = Math.min(index, scrollLength - 1);
                    length = Math.min(index + length, scrollLength - 1) - index;
                    var node = void 0, _scroll$leaf = this.scroll.leaf(index), _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2), leaf = _scroll$leaf2[0], offset2 = _scroll$leaf2[1];
                    if (leaf == null)
                      return null;
                    var _leaf$position = leaf.position(offset2, true);
                    var _leaf$position2 = _slicedToArray(_leaf$position, 2);
                    node = _leaf$position2[0];
                    offset2 = _leaf$position2[1];
                    var range = document.createRange();
                    if (length > 0) {
                      range.setStart(node, offset2);
                      var _scroll$leaf3 = this.scroll.leaf(index + length);
                      var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);
                      leaf = _scroll$leaf4[0];
                      offset2 = _scroll$leaf4[1];
                      if (leaf == null)
                        return null;
                      var _leaf$position3 = leaf.position(offset2, true);
                      var _leaf$position4 = _slicedToArray(_leaf$position3, 2);
                      node = _leaf$position4[0];
                      offset2 = _leaf$position4[1];
                      range.setEnd(node, offset2);
                      return range.getBoundingClientRect();
                    } else {
                      var side = "left";
                      var rect = void 0;
                      if (node instanceof Text) {
                        if (offset2 < node.data.length) {
                          range.setStart(node, offset2);
                          range.setEnd(node, offset2 + 1);
                        } else {
                          range.setStart(node, offset2 - 1);
                          range.setEnd(node, offset2);
                          side = "right";
                        }
                        rect = range.getBoundingClientRect();
                      } else {
                        rect = leaf.domNode.getBoundingClientRect();
                        if (offset2 > 0)
                          side = "right";
                      }
                      return {
                        bottom: rect.top + rect.height,
                        height: rect.height,
                        left: rect[side],
                        right: rect[side],
                        top: rect.top,
                        width: 0
                      };
                    }
                  }
                }, {
                  key: "getNativeRange",
                  value: function getNativeRange() {
                    var selection = document.getSelection();
                    if (selection == null || selection.rangeCount <= 0)
                      return null;
                    var nativeRange = selection.getRangeAt(0);
                    if (nativeRange == null)
                      return null;
                    var range = this.normalizeNative(nativeRange);
                    debug.info("getNativeRange", range);
                    return range;
                  }
                }, {
                  key: "getRange",
                  value: function getRange() {
                    var normalized = this.getNativeRange();
                    if (normalized == null)
                      return [null, null];
                    var range = this.normalizedToRange(normalized);
                    return [range, normalized];
                  }
                }, {
                  key: "hasFocus",
                  value: function hasFocus() {
                    return document.activeElement === this.root;
                  }
                }, {
                  key: "normalizedToRange",
                  value: function normalizedToRange(range) {
                    var _this4 = this;
                    var positions = [[range.start.node, range.start.offset]];
                    if (!range.native.collapsed) {
                      positions.push([range.end.node, range.end.offset]);
                    }
                    var indexes = positions.map(function(position) {
                      var _position = _slicedToArray(position, 2), node = _position[0], offset2 = _position[1];
                      var blot = _parchment2.default.find(node, true);
                      var index = blot.offset(_this4.scroll);
                      if (offset2 === 0) {
                        return index;
                      } else if (blot instanceof _parchment2.default.Container) {
                        return index + blot.length();
                      } else {
                        return index + blot.index(node, offset2);
                      }
                    });
                    var end2 = Math.min(Math.max.apply(Math, _toConsumableArray(indexes)), this.scroll.length() - 1);
                    var start2 = Math.min.apply(Math, [end2].concat(_toConsumableArray(indexes)));
                    return new Range(start2, end2 - start2);
                  }
                }, {
                  key: "normalizeNative",
                  value: function normalizeNative(nativeRange) {
                    if (!contains2(this.root, nativeRange.startContainer) || !nativeRange.collapsed && !contains2(this.root, nativeRange.endContainer)) {
                      return null;
                    }
                    var range = {
                      start: { node: nativeRange.startContainer, offset: nativeRange.startOffset },
                      end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },
                      native: nativeRange
                    };
                    [range.start, range.end].forEach(function(position) {
                      var node = position.node, offset2 = position.offset;
                      while (!(node instanceof Text) && node.childNodes.length > 0) {
                        if (node.childNodes.length > offset2) {
                          node = node.childNodes[offset2];
                          offset2 = 0;
                        } else if (node.childNodes.length === offset2) {
                          node = node.lastChild;
                          offset2 = node instanceof Text ? node.data.length : node.childNodes.length + 1;
                        } else {
                          break;
                        }
                      }
                      position.node = node, position.offset = offset2;
                    });
                    return range;
                  }
                }, {
                  key: "rangeToNative",
                  value: function rangeToNative(range) {
                    var _this5 = this;
                    var indexes = range.collapsed ? [range.index] : [range.index, range.index + range.length];
                    var args = [];
                    var scrollLength = this.scroll.length();
                    indexes.forEach(function(index, i) {
                      index = Math.min(scrollLength - 1, index);
                      var node = void 0, _scroll$leaf5 = _this5.scroll.leaf(index), _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2), leaf = _scroll$leaf6[0], offset2 = _scroll$leaf6[1];
                      var _leaf$position5 = leaf.position(offset2, i !== 0);
                      var _leaf$position6 = _slicedToArray(_leaf$position5, 2);
                      node = _leaf$position6[0];
                      offset2 = _leaf$position6[1];
                      args.push(node, offset2);
                    });
                    if (args.length < 2) {
                      args = args.concat(args);
                    }
                    return args;
                  }
                }, {
                  key: "scrollIntoView",
                  value: function scrollIntoView(scrollingContainer) {
                    var range = this.lastRange;
                    if (range == null)
                      return;
                    var bounds = this.getBounds(range.index, range.length);
                    if (bounds == null)
                      return;
                    var limit = this.scroll.length() - 1;
                    var _scroll$line = this.scroll.line(Math.min(range.index, limit)), _scroll$line2 = _slicedToArray(_scroll$line, 1), first = _scroll$line2[0];
                    var last = first;
                    if (range.length > 0) {
                      var _scroll$line3 = this.scroll.line(Math.min(range.index + range.length, limit));
                      var _scroll$line4 = _slicedToArray(_scroll$line3, 1);
                      last = _scroll$line4[0];
                    }
                    if (first == null || last == null)
                      return;
                    var scrollBounds = scrollingContainer.getBoundingClientRect();
                    if (bounds.top < scrollBounds.top) {
                      scrollingContainer.scrollTop -= scrollBounds.top - bounds.top;
                    } else if (bounds.bottom > scrollBounds.bottom) {
                      scrollingContainer.scrollTop += bounds.bottom - scrollBounds.bottom;
                    }
                  }
                }, {
                  key: "setNativeRange",
                  value: function setNativeRange(startNode, startOffset) {
                    var endNode = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : startNode;
                    var endOffset = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : startOffset;
                    var force = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
                    debug.info("setNativeRange", startNode, startOffset, endNode, endOffset);
                    if (startNode != null && (this.root.parentNode == null || startNode.parentNode == null || endNode.parentNode == null)) {
                      return;
                    }
                    var selection = document.getSelection();
                    if (selection == null)
                      return;
                    if (startNode != null) {
                      if (!this.hasFocus())
                        this.root.focus();
                      var native = (this.getNativeRange() || {}).native;
                      if (native == null || force || startNode !== native.startContainer || startOffset !== native.startOffset || endNode !== native.endContainer || endOffset !== native.endOffset) {
                        if (startNode.tagName == "BR") {
                          startOffset = [].indexOf.call(startNode.parentNode.childNodes, startNode);
                          startNode = startNode.parentNode;
                        }
                        if (endNode.tagName == "BR") {
                          endOffset = [].indexOf.call(endNode.parentNode.childNodes, endNode);
                          endNode = endNode.parentNode;
                        }
                        var range = document.createRange();
                        range.setStart(startNode, startOffset);
                        range.setEnd(endNode, endOffset);
                        selection.removeAllRanges();
                        selection.addRange(range);
                      }
                    } else {
                      selection.removeAllRanges();
                      this.root.blur();
                      document.body.focus();
                    }
                  }
                }, {
                  key: "setRange",
                  value: function setRange(range) {
                    var force = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                    var source = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _emitter4.default.sources.API;
                    if (typeof force === "string") {
                      source = force;
                      force = false;
                    }
                    debug.info("setRange", range);
                    if (range != null) {
                      var args = this.rangeToNative(range);
                      this.setNativeRange.apply(this, _toConsumableArray(args).concat([force]));
                    } else {
                      this.setNativeRange(null);
                    }
                    this.update(source);
                  }
                }, {
                  key: "update",
                  value: function update() {
                    var source = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _emitter4.default.sources.USER;
                    var oldRange = this.lastRange;
                    var _getRange = this.getRange(), _getRange2 = _slicedToArray(_getRange, 2), lastRange = _getRange2[0], nativeRange = _getRange2[1];
                    this.lastRange = lastRange;
                    if (this.lastRange != null) {
                      this.savedRange = this.lastRange;
                    }
                    if (!(0, _deepEqual2.default)(oldRange, this.lastRange)) {
                      var _emitter;
                      if (!this.composing && nativeRange != null && nativeRange.native.collapsed && nativeRange.start.node !== this.cursor.textNode) {
                        this.cursor.restore();
                      }
                      var args = [_emitter4.default.events.SELECTION_CHANGE, (0, _clone2.default)(this.lastRange), (0, _clone2.default)(oldRange), source];
                      (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
                      if (source !== _emitter4.default.sources.SILENT) {
                        var _emitter2;
                        (_emitter2 = this.emitter).emit.apply(_emitter2, args);
                      }
                    }
                  }
                }]);
                return Selection2;
              }();
              function contains2(parent, descendant) {
                try {
                  descendant.parentNode;
                } catch (e) {
                  return false;
                }
                if (descendant instanceof Text) {
                  descendant = descendant.parentNode;
                }
                return parent.contains(descendant);
              }
              exports3.Range = Range;
              exports3.default = Selection;
            },
            /* 16 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Break = function(_Parchment$Embed) {
                _inherits(Break2, _Parchment$Embed);
                function Break2() {
                  _classCallCheck(this, Break2);
                  return _possibleConstructorReturn(this, (Break2.__proto__ || Object.getPrototypeOf(Break2)).apply(this, arguments));
                }
                _createClass(Break2, [{
                  key: "insertInto",
                  value: function insertInto(parent, ref) {
                    if (parent.children.length === 0) {
                      _get(Break2.prototype.__proto__ || Object.getPrototypeOf(Break2.prototype), "insertInto", this).call(this, parent, ref);
                    } else {
                      this.remove();
                    }
                  }
                }, {
                  key: "length",
                  value: function length() {
                    return 0;
                  }
                }, {
                  key: "value",
                  value: function value() {
                    return "";
                  }
                }], [{
                  key: "value",
                  value: function value() {
                    return void 0;
                  }
                }]);
                return Break2;
              }(_parchment2.default.Embed);
              Break.blotName = "break";
              Break.tagName = "BR";
              exports3.default = Break;
            },
            /* 17 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var linked_list_1 = __webpack_require__(44);
              var shadow_1 = __webpack_require__(30);
              var Registry = __webpack_require__(1);
              var ContainerBlot = (
                /** @class */
                function(_super) {
                  __extends(ContainerBlot2, _super);
                  function ContainerBlot2(domNode) {
                    var _this = _super.call(this, domNode) || this;
                    _this.build();
                    return _this;
                  }
                  ContainerBlot2.prototype.appendChild = function(other) {
                    this.insertBefore(other);
                  };
                  ContainerBlot2.prototype.attach = function() {
                    _super.prototype.attach.call(this);
                    this.children.forEach(function(child) {
                      child.attach();
                    });
                  };
                  ContainerBlot2.prototype.build = function() {
                    var _this = this;
                    this.children = new linked_list_1.default();
                    [].slice.call(this.domNode.childNodes).reverse().forEach(function(node) {
                      try {
                        var child = makeBlot(node);
                        _this.insertBefore(child, _this.children.head || void 0);
                      } catch (err) {
                        if (err instanceof Registry.ParchmentError)
                          return;
                        else
                          throw err;
                      }
                    });
                  };
                  ContainerBlot2.prototype.deleteAt = function(index, length) {
                    if (index === 0 && length === this.length()) {
                      return this.remove();
                    }
                    this.children.forEachAt(index, length, function(child, offset2, length2) {
                      child.deleteAt(offset2, length2);
                    });
                  };
                  ContainerBlot2.prototype.descendant = function(criteria, index) {
                    var _a2 = this.children.find(index), child = _a2[0], offset2 = _a2[1];
                    if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {
                      return [child, offset2];
                    } else if (child instanceof ContainerBlot2) {
                      return child.descendant(criteria, offset2);
                    } else {
                      return [null, -1];
                    }
                  };
                  ContainerBlot2.prototype.descendants = function(criteria, index, length) {
                    if (index === void 0) {
                      index = 0;
                    }
                    if (length === void 0) {
                      length = Number.MAX_VALUE;
                    }
                    var descendants = [];
                    var lengthLeft = length;
                    this.children.forEachAt(index, length, function(child, index2, length2) {
                      if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {
                        descendants.push(child);
                      }
                      if (child instanceof ContainerBlot2) {
                        descendants = descendants.concat(child.descendants(criteria, index2, lengthLeft));
                      }
                      lengthLeft -= length2;
                    });
                    return descendants;
                  };
                  ContainerBlot2.prototype.detach = function() {
                    this.children.forEach(function(child) {
                      child.detach();
                    });
                    _super.prototype.detach.call(this);
                  };
                  ContainerBlot2.prototype.formatAt = function(index, length, name, value) {
                    this.children.forEachAt(index, length, function(child, offset2, length2) {
                      child.formatAt(offset2, length2, name, value);
                    });
                  };
                  ContainerBlot2.prototype.insertAt = function(index, value, def) {
                    var _a2 = this.children.find(index), child = _a2[0], offset2 = _a2[1];
                    if (child) {
                      child.insertAt(offset2, value, def);
                    } else {
                      var blot = def == null ? Registry.create("text", value) : Registry.create(value, def);
                      this.appendChild(blot);
                    }
                  };
                  ContainerBlot2.prototype.insertBefore = function(childBlot, refBlot) {
                    if (this.statics.allowedChildren != null && !this.statics.allowedChildren.some(function(child) {
                      return childBlot instanceof child;
                    })) {
                      throw new Registry.ParchmentError("Cannot insert " + childBlot.statics.blotName + " into " + this.statics.blotName);
                    }
                    childBlot.insertInto(this, refBlot);
                  };
                  ContainerBlot2.prototype.length = function() {
                    return this.children.reduce(function(memo, child) {
                      return memo + child.length();
                    }, 0);
                  };
                  ContainerBlot2.prototype.moveChildren = function(targetParent, refNode) {
                    this.children.forEach(function(child) {
                      targetParent.insertBefore(child, refNode);
                    });
                  };
                  ContainerBlot2.prototype.optimize = function(context) {
                    _super.prototype.optimize.call(this, context);
                    if (this.children.length === 0) {
                      if (this.statics.defaultChild != null) {
                        var child = Registry.create(this.statics.defaultChild);
                        this.appendChild(child);
                        child.optimize(context);
                      } else {
                        this.remove();
                      }
                    }
                  };
                  ContainerBlot2.prototype.path = function(index, inclusive) {
                    if (inclusive === void 0) {
                      inclusive = false;
                    }
                    var _a2 = this.children.find(index, inclusive), child = _a2[0], offset2 = _a2[1];
                    var position = [[this, index]];
                    if (child instanceof ContainerBlot2) {
                      return position.concat(child.path(offset2, inclusive));
                    } else if (child != null) {
                      position.push([child, offset2]);
                    }
                    return position;
                  };
                  ContainerBlot2.prototype.removeChild = function(child) {
                    this.children.remove(child);
                  };
                  ContainerBlot2.prototype.replace = function(target) {
                    if (target instanceof ContainerBlot2) {
                      target.moveChildren(this);
                    }
                    _super.prototype.replace.call(this, target);
                  };
                  ContainerBlot2.prototype.split = function(index, force) {
                    if (force === void 0) {
                      force = false;
                    }
                    if (!force) {
                      if (index === 0)
                        return this;
                      if (index === this.length())
                        return this.next;
                    }
                    var after = this.clone();
                    this.parent.insertBefore(after, this.next);
                    this.children.forEachAt(index, this.length(), function(child, offset2, length) {
                      child = child.split(offset2, force);
                      after.appendChild(child);
                    });
                    return after;
                  };
                  ContainerBlot2.prototype.unwrap = function() {
                    this.moveChildren(this.parent, this.next);
                    this.remove();
                  };
                  ContainerBlot2.prototype.update = function(mutations, context) {
                    var _this = this;
                    var addedNodes = [];
                    var removedNodes = [];
                    mutations.forEach(function(mutation) {
                      if (mutation.target === _this.domNode && mutation.type === "childList") {
                        addedNodes.push.apply(addedNodes, mutation.addedNodes);
                        removedNodes.push.apply(removedNodes, mutation.removedNodes);
                      }
                    });
                    removedNodes.forEach(function(node) {
                      if (node.parentNode != null && // @ts-ignore
                      node.tagName !== "IFRAME" && document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
                        return;
                      }
                      var blot = Registry.find(node);
                      if (blot == null)
                        return;
                      if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {
                        blot.detach();
                      }
                    });
                    addedNodes.filter(function(node) {
                      return node.parentNode == _this.domNode;
                    }).sort(function(a, b) {
                      if (a === b)
                        return 0;
                      if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {
                        return 1;
                      }
                      return -1;
                    }).forEach(function(node) {
                      var refBlot = null;
                      if (node.nextSibling != null) {
                        refBlot = Registry.find(node.nextSibling);
                      }
                      var blot = makeBlot(node);
                      if (blot.next != refBlot || blot.next == null) {
                        if (blot.parent != null) {
                          blot.parent.removeChild(_this);
                        }
                        _this.insertBefore(blot, refBlot || void 0);
                      }
                    });
                  };
                  return ContainerBlot2;
                }(shadow_1.default)
              );
              function makeBlot(node) {
                var blot = Registry.find(node);
                if (blot == null) {
                  try {
                    blot = Registry.create(node);
                  } catch (e) {
                    blot = Registry.create(Registry.Scope.INLINE);
                    [].slice.call(node.childNodes).forEach(function(child) {
                      blot.domNode.appendChild(child);
                    });
                    if (node.parentNode) {
                      node.parentNode.replaceChild(blot.domNode, node);
                    }
                    blot.attach();
                  }
                }
                return blot;
              }
              exports3.default = ContainerBlot;
            },
            /* 18 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var attributor_1 = __webpack_require__(12);
              var store_1 = __webpack_require__(31);
              var container_1 = __webpack_require__(17);
              var Registry = __webpack_require__(1);
              var FormatBlot = (
                /** @class */
                function(_super) {
                  __extends(FormatBlot2, _super);
                  function FormatBlot2(domNode) {
                    var _this = _super.call(this, domNode) || this;
                    _this.attributes = new store_1.default(_this.domNode);
                    return _this;
                  }
                  FormatBlot2.formats = function(domNode) {
                    if (typeof this.tagName === "string") {
                      return true;
                    } else if (Array.isArray(this.tagName)) {
                      return domNode.tagName.toLowerCase();
                    }
                    return void 0;
                  };
                  FormatBlot2.prototype.format = function(name, value) {
                    var format = Registry.query(name);
                    if (format instanceof attributor_1.default) {
                      this.attributes.attribute(format, value);
                    } else if (value) {
                      if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {
                        this.replaceWith(name, value);
                      }
                    }
                  };
                  FormatBlot2.prototype.formats = function() {
                    var formats = this.attributes.values();
                    var format = this.statics.formats(this.domNode);
                    if (format != null) {
                      formats[this.statics.blotName] = format;
                    }
                    return formats;
                  };
                  FormatBlot2.prototype.replaceWith = function(name, value) {
                    var replacement = _super.prototype.replaceWith.call(this, name, value);
                    this.attributes.copy(replacement);
                    return replacement;
                  };
                  FormatBlot2.prototype.update = function(mutations, context) {
                    var _this = this;
                    _super.prototype.update.call(this, mutations, context);
                    if (mutations.some(function(mutation) {
                      return mutation.target === _this.domNode && mutation.type === "attributes";
                    })) {
                      this.attributes.build();
                    }
                  };
                  FormatBlot2.prototype.wrap = function(name, value) {
                    var wrapper = _super.prototype.wrap.call(this, name, value);
                    if (wrapper instanceof FormatBlot2 && wrapper.statics.scope === this.statics.scope) {
                      this.attributes.move(wrapper);
                    }
                    return wrapper;
                  };
                  return FormatBlot2;
                }(container_1.default)
              );
              exports3.default = FormatBlot;
            },
            /* 19 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var shadow_1 = __webpack_require__(30);
              var Registry = __webpack_require__(1);
              var LeafBlot = (
                /** @class */
                function(_super) {
                  __extends(LeafBlot2, _super);
                  function LeafBlot2() {
                    return _super !== null && _super.apply(this, arguments) || this;
                  }
                  LeafBlot2.value = function(domNode) {
                    return true;
                  };
                  LeafBlot2.prototype.index = function(node, offset2) {
                    if (this.domNode === node || this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
                      return Math.min(offset2, 1);
                    }
                    return -1;
                  };
                  LeafBlot2.prototype.position = function(index, inclusive) {
                    var offset2 = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);
                    if (index > 0)
                      offset2 += 1;
                    return [this.parent.domNode, offset2];
                  };
                  LeafBlot2.prototype.value = function() {
                    var _a2;
                    return _a2 = {}, _a2[this.statics.blotName] = this.statics.value(this.domNode) || true, _a2;
                  };
                  LeafBlot2.scope = Registry.Scope.INLINE_BLOT;
                  return LeafBlot2;
                }(shadow_1.default)
              );
              exports3.default = LeafBlot;
            },
            /* 20 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var equal = __webpack_require__(11);
              var extend = __webpack_require__(3);
              var lib2 = {
                attributes: {
                  compose: function(a, b, keepNull) {
                    if (typeof a !== "object")
                      a = {};
                    if (typeof b !== "object")
                      b = {};
                    var attributes = extend(true, {}, b);
                    if (!keepNull) {
                      attributes = Object.keys(attributes).reduce(function(copy2, key3) {
                        if (attributes[key3] != null) {
                          copy2[key3] = attributes[key3];
                        }
                        return copy2;
                      }, {});
                    }
                    for (var key2 in a) {
                      if (a[key2] !== void 0 && b[key2] === void 0) {
                        attributes[key2] = a[key2];
                      }
                    }
                    return Object.keys(attributes).length > 0 ? attributes : void 0;
                  },
                  diff: function(a, b) {
                    if (typeof a !== "object")
                      a = {};
                    if (typeof b !== "object")
                      b = {};
                    var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function(attributes2, key2) {
                      if (!equal(a[key2], b[key2])) {
                        attributes2[key2] = b[key2] === void 0 ? null : b[key2];
                      }
                      return attributes2;
                    }, {});
                    return Object.keys(attributes).length > 0 ? attributes : void 0;
                  },
                  transform: function(a, b, priority) {
                    if (typeof a !== "object")
                      return b;
                    if (typeof b !== "object")
                      return void 0;
                    if (!priority)
                      return b;
                    var attributes = Object.keys(b).reduce(function(attributes2, key2) {
                      if (a[key2] === void 0)
                        attributes2[key2] = b[key2];
                      return attributes2;
                    }, {});
                    return Object.keys(attributes).length > 0 ? attributes : void 0;
                  }
                },
                iterator: function(ops) {
                  return new Iterator(ops);
                },
                length: function(op) {
                  if (typeof op["delete"] === "number") {
                    return op["delete"];
                  } else if (typeof op.retain === "number") {
                    return op.retain;
                  } else {
                    return typeof op.insert === "string" ? op.insert.length : 1;
                  }
                }
              };
              function Iterator(ops) {
                this.ops = ops;
                this.index = 0;
                this.offset = 0;
              }
              Iterator.prototype.hasNext = function() {
                return this.peekLength() < Infinity;
              };
              Iterator.prototype.next = function(length) {
                if (!length)
                  length = Infinity;
                var nextOp = this.ops[this.index];
                if (nextOp) {
                  var offset2 = this.offset;
                  var opLength = lib2.length(nextOp);
                  if (length >= opLength - offset2) {
                    length = opLength - offset2;
                    this.index += 1;
                    this.offset = 0;
                  } else {
                    this.offset += length;
                  }
                  if (typeof nextOp["delete"] === "number") {
                    return { "delete": length };
                  } else {
                    var retOp = {};
                    if (nextOp.attributes) {
                      retOp.attributes = nextOp.attributes;
                    }
                    if (typeof nextOp.retain === "number") {
                      retOp.retain = length;
                    } else if (typeof nextOp.insert === "string") {
                      retOp.insert = nextOp.insert.substr(offset2, length);
                    } else {
                      retOp.insert = nextOp.insert;
                    }
                    return retOp;
                  }
                } else {
                  return { retain: Infinity };
                }
              };
              Iterator.prototype.peek = function() {
                return this.ops[this.index];
              };
              Iterator.prototype.peekLength = function() {
                if (this.ops[this.index]) {
                  return lib2.length(this.ops[this.index]) - this.offset;
                } else {
                  return Infinity;
                }
              };
              Iterator.prototype.peekType = function() {
                if (this.ops[this.index]) {
                  if (typeof this.ops[this.index]["delete"] === "number") {
                    return "delete";
                  } else if (typeof this.ops[this.index].retain === "number") {
                    return "retain";
                  } else {
                    return "insert";
                  }
                }
                return "retain";
              };
              Iterator.prototype.rest = function() {
                if (!this.hasNext()) {
                  return [];
                } else if (this.offset === 0) {
                  return this.ops.slice(this.index);
                } else {
                  var offset2 = this.offset;
                  var index = this.index;
                  var next = this.next();
                  var rest = this.ops.slice(this.index);
                  this.offset = offset2;
                  this.index = index;
                  return [next].concat(rest);
                }
              };
              module3.exports = lib2;
            },
            /* 21 */
            /***/
            function(module3, exports3) {
              var clone = function() {
                function _instanceof(obj, type) {
                  return type != null && obj instanceof type;
                }
                var nativeMap;
                try {
                  nativeMap = Map;
                } catch (_) {
                  nativeMap = function() {
                  };
                }
                var nativeSet;
                try {
                  nativeSet = Set;
                } catch (_) {
                  nativeSet = function() {
                  };
                }
                var nativePromise;
                try {
                  nativePromise = Promise;
                } catch (_) {
                  nativePromise = function() {
                  };
                }
                function clone2(parent, circular, depth, prototype, includeNonEnumerable) {
                  if (typeof circular === "object") {
                    depth = circular.depth;
                    prototype = circular.prototype;
                    includeNonEnumerable = circular.includeNonEnumerable;
                    circular = circular.circular;
                  }
                  var allParents = [];
                  var allChildren = [];
                  var useBuffer = typeof Buffer != "undefined";
                  if (typeof circular == "undefined")
                    circular = true;
                  if (typeof depth == "undefined")
                    depth = Infinity;
                  function _clone(parent2, depth2) {
                    if (parent2 === null)
                      return null;
                    if (depth2 === 0)
                      return parent2;
                    var child;
                    var proto;
                    if (typeof parent2 != "object") {
                      return parent2;
                    }
                    if (_instanceof(parent2, nativeMap)) {
                      child = new nativeMap();
                    } else if (_instanceof(parent2, nativeSet)) {
                      child = new nativeSet();
                    } else if (_instanceof(parent2, nativePromise)) {
                      child = new nativePromise(function(resolve, reject) {
                        parent2.then(function(value) {
                          resolve(_clone(value, depth2 - 1));
                        }, function(err) {
                          reject(_clone(err, depth2 - 1));
                        });
                      });
                    } else if (clone2.__isArray(parent2)) {
                      child = [];
                    } else if (clone2.__isRegExp(parent2)) {
                      child = new RegExp(parent2.source, __getRegExpFlags(parent2));
                      if (parent2.lastIndex)
                        child.lastIndex = parent2.lastIndex;
                    } else if (clone2.__isDate(parent2)) {
                      child = new Date(parent2.getTime());
                    } else if (useBuffer && Buffer.isBuffer(parent2)) {
                      if (Buffer.allocUnsafe) {
                        child = Buffer.allocUnsafe(parent2.length);
                      } else {
                        child = new Buffer(parent2.length);
                      }
                      parent2.copy(child);
                      return child;
                    } else if (_instanceof(parent2, Error)) {
                      child = Object.create(parent2);
                    } else {
                      if (typeof prototype == "undefined") {
                        proto = Object.getPrototypeOf(parent2);
                        child = Object.create(proto);
                      } else {
                        child = Object.create(prototype);
                        proto = prototype;
                      }
                    }
                    if (circular) {
                      var index = allParents.indexOf(parent2);
                      if (index != -1) {
                        return allChildren[index];
                      }
                      allParents.push(parent2);
                      allChildren.push(child);
                    }
                    if (_instanceof(parent2, nativeMap)) {
                      parent2.forEach(function(value, key2) {
                        var keyChild = _clone(key2, depth2 - 1);
                        var valueChild = _clone(value, depth2 - 1);
                        child.set(keyChild, valueChild);
                      });
                    }
                    if (_instanceof(parent2, nativeSet)) {
                      parent2.forEach(function(value) {
                        var entryChild = _clone(value, depth2 - 1);
                        child.add(entryChild);
                      });
                    }
                    for (var i in parent2) {
                      var attrs;
                      if (proto) {
                        attrs = Object.getOwnPropertyDescriptor(proto, i);
                      }
                      if (attrs && attrs.set == null) {
                        continue;
                      }
                      child[i] = _clone(parent2[i], depth2 - 1);
                    }
                    if (Object.getOwnPropertySymbols) {
                      var symbols = Object.getOwnPropertySymbols(parent2);
                      for (var i = 0; i < symbols.length; i++) {
                        var symbol = symbols[i];
                        var descriptor = Object.getOwnPropertyDescriptor(parent2, symbol);
                        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
                          continue;
                        }
                        child[symbol] = _clone(parent2[symbol], depth2 - 1);
                        if (!descriptor.enumerable) {
                          Object.defineProperty(child, symbol, {
                            enumerable: false
                          });
                        }
                      }
                    }
                    if (includeNonEnumerable) {
                      var allPropertyNames = Object.getOwnPropertyNames(parent2);
                      for (var i = 0; i < allPropertyNames.length; i++) {
                        var propertyName = allPropertyNames[i];
                        var descriptor = Object.getOwnPropertyDescriptor(parent2, propertyName);
                        if (descriptor && descriptor.enumerable) {
                          continue;
                        }
                        child[propertyName] = _clone(parent2[propertyName], depth2 - 1);
                        Object.defineProperty(child, propertyName, {
                          enumerable: false
                        });
                      }
                    }
                    return child;
                  }
                  return _clone(parent, depth);
                }
                clone2.clonePrototype = function clonePrototype(parent) {
                  if (parent === null)
                    return null;
                  var c = function() {
                  };
                  c.prototype = parent;
                  return new c();
                };
                function __objToStr(o) {
                  return Object.prototype.toString.call(o);
                }
                clone2.__objToStr = __objToStr;
                function __isDate(o) {
                  return typeof o === "object" && __objToStr(o) === "[object Date]";
                }
                clone2.__isDate = __isDate;
                function __isArray(o) {
                  return typeof o === "object" && __objToStr(o) === "[object Array]";
                }
                clone2.__isArray = __isArray;
                function __isRegExp(o) {
                  return typeof o === "object" && __objToStr(o) === "[object RegExp]";
                }
                clone2.__isRegExp = __isRegExp;
                function __getRegExpFlags(re) {
                  var flags = "";
                  if (re.global)
                    flags += "g";
                  if (re.ignoreCase)
                    flags += "i";
                  if (re.multiline)
                    flags += "m";
                  return flags;
                }
                clone2.__getRegExpFlags = __getRegExpFlags;
                return clone2;
              }();
              if (typeof module3 === "object" && module3.exports) {
                module3.exports = clone;
              }
            },
            /* 22 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _emitter = __webpack_require__(8);
              var _emitter2 = _interopRequireDefault(_emitter);
              var _block = __webpack_require__(4);
              var _block2 = _interopRequireDefault(_block);
              var _break = __webpack_require__(16);
              var _break2 = _interopRequireDefault(_break);
              var _code = __webpack_require__(13);
              var _code2 = _interopRequireDefault(_code);
              var _container = __webpack_require__(25);
              var _container2 = _interopRequireDefault(_container);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              function isLine(blot) {
                return blot instanceof _block2.default || blot instanceof _block.BlockEmbed;
              }
              var Scroll = function(_Parchment$Scroll) {
                _inherits(Scroll2, _Parchment$Scroll);
                function Scroll2(domNode, config2) {
                  _classCallCheck(this, Scroll2);
                  var _this = _possibleConstructorReturn(this, (Scroll2.__proto__ || Object.getPrototypeOf(Scroll2)).call(this, domNode));
                  _this.emitter = config2.emitter;
                  if (Array.isArray(config2.whitelist)) {
                    _this.whitelist = config2.whitelist.reduce(function(whitelist, format) {
                      whitelist[format] = true;
                      return whitelist;
                    }, {});
                  }
                  _this.domNode.addEventListener("DOMNodeInserted", function() {
                  });
                  _this.optimize();
                  _this.enable();
                  return _this;
                }
                _createClass(Scroll2, [{
                  key: "batchStart",
                  value: function batchStart() {
                    this.batch = true;
                  }
                }, {
                  key: "batchEnd",
                  value: function batchEnd() {
                    this.batch = false;
                    this.optimize();
                  }
                }, {
                  key: "deleteAt",
                  value: function deleteAt(index, length) {
                    var _line = this.line(index), _line2 = _slicedToArray(_line, 2), first = _line2[0], offset2 = _line2[1];
                    var _line3 = this.line(index + length), _line4 = _slicedToArray(_line3, 1), last = _line4[0];
                    _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "deleteAt", this).call(this, index, length);
                    if (last != null && first !== last && offset2 > 0) {
                      if (first instanceof _block.BlockEmbed || last instanceof _block.BlockEmbed) {
                        this.optimize();
                        return;
                      }
                      if (first instanceof _code2.default) {
                        var newlineIndex = first.newlineIndex(first.length(), true);
                        if (newlineIndex > -1) {
                          first = first.split(newlineIndex + 1);
                          if (first === last) {
                            this.optimize();
                            return;
                          }
                        }
                      } else if (last instanceof _code2.default) {
                        var _newlineIndex = last.newlineIndex(0);
                        if (_newlineIndex > -1) {
                          last.split(_newlineIndex + 1);
                        }
                      }
                      var ref = last.children.head instanceof _break2.default ? null : last.children.head;
                      first.moveChildren(last, ref);
                      first.remove();
                    }
                    this.optimize();
                  }
                }, {
                  key: "enable",
                  value: function enable() {
                    var enabled = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
                    this.domNode.setAttribute("contenteditable", enabled);
                  }
                }, {
                  key: "formatAt",
                  value: function formatAt(index, length, format, value) {
                    if (this.whitelist != null && !this.whitelist[format])
                      return;
                    _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "formatAt", this).call(this, index, length, format, value);
                    this.optimize();
                  }
                }, {
                  key: "insertAt",
                  value: function insertAt(index, value, def) {
                    if (def != null && this.whitelist != null && !this.whitelist[value])
                      return;
                    if (index >= this.length()) {
                      if (def == null || _parchment2.default.query(value, _parchment2.default.Scope.BLOCK) == null) {
                        var blot = _parchment2.default.create(this.statics.defaultChild);
                        this.appendChild(blot);
                        if (def == null && value.endsWith("\n")) {
                          value = value.slice(0, -1);
                        }
                        blot.insertAt(0, value, def);
                      } else {
                        var embed = _parchment2.default.create(value, def);
                        this.appendChild(embed);
                      }
                    } else {
                      _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "insertAt", this).call(this, index, value, def);
                    }
                    this.optimize();
                  }
                }, {
                  key: "insertBefore",
                  value: function insertBefore(blot, ref) {
                    if (blot.statics.scope === _parchment2.default.Scope.INLINE_BLOT) {
                      var wrapper = _parchment2.default.create(this.statics.defaultChild);
                      wrapper.appendChild(blot);
                      blot = wrapper;
                    }
                    _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "insertBefore", this).call(this, blot, ref);
                  }
                }, {
                  key: "leaf",
                  value: function leaf(index) {
                    return this.path(index).pop() || [null, -1];
                  }
                }, {
                  key: "line",
                  value: function line(index) {
                    if (index === this.length()) {
                      return this.line(index - 1);
                    }
                    return this.descendant(isLine, index);
                  }
                }, {
                  key: "lines",
                  value: function lines() {
                    var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
                    var length = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Number.MAX_VALUE;
                    var getLines = function getLines2(blot, index2, length2) {
                      var lines2 = [], lengthLeft = length2;
                      blot.children.forEachAt(index2, length2, function(child, index3, length3) {
                        if (isLine(child)) {
                          lines2.push(child);
                        } else if (child instanceof _parchment2.default.Container) {
                          lines2 = lines2.concat(getLines2(child, index3, lengthLeft));
                        }
                        lengthLeft -= length3;
                      });
                      return lines2;
                    };
                    return getLines(this, index, length);
                  }
                }, {
                  key: "optimize",
                  value: function optimize() {
                    var mutations = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
                    var context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                    if (this.batch === true)
                      return;
                    _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "optimize", this).call(this, mutations, context);
                    if (mutations.length > 0) {
                      this.emitter.emit(_emitter2.default.events.SCROLL_OPTIMIZE, mutations, context);
                    }
                  }
                }, {
                  key: "path",
                  value: function path(index) {
                    return _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "path", this).call(this, index).slice(1);
                  }
                }, {
                  key: "update",
                  value: function update(mutations) {
                    if (this.batch === true)
                      return;
                    var source = _emitter2.default.sources.USER;
                    if (typeof mutations === "string") {
                      source = mutations;
                    }
                    if (!Array.isArray(mutations)) {
                      mutations = this.observer.takeRecords();
                    }
                    if (mutations.length > 0) {
                      this.emitter.emit(_emitter2.default.events.SCROLL_BEFORE_UPDATE, source, mutations);
                    }
                    _get(Scroll2.prototype.__proto__ || Object.getPrototypeOf(Scroll2.prototype), "update", this).call(this, mutations.concat([]));
                    if (mutations.length > 0) {
                      this.emitter.emit(_emitter2.default.events.SCROLL_UPDATE, source, mutations);
                    }
                  }
                }]);
                return Scroll2;
              }(_parchment2.default.Scroll);
              Scroll.blotName = "scroll";
              Scroll.className = "ql-editor";
              Scroll.tagName = "DIV";
              Scroll.defaultChild = "block";
              Scroll.allowedChildren = [_block2.default, _block.BlockEmbed, _container2.default];
              exports3.default = Scroll;
            },
            /* 23 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.SHORTKEY = exports3.default = void 0;
              var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
                return typeof obj;
              } : function(obj) {
                return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
              };
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _clone = __webpack_require__(21);
              var _clone2 = _interopRequireDefault(_clone);
              var _deepEqual = __webpack_require__(11);
              var _deepEqual2 = _interopRequireDefault(_deepEqual);
              var _extend = __webpack_require__(3);
              var _extend2 = _interopRequireDefault(_extend);
              var _quillDelta = __webpack_require__(2);
              var _quillDelta2 = _interopRequireDefault(_quillDelta);
              var _op = __webpack_require__(20);
              var _op2 = _interopRequireDefault(_op);
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _quill = __webpack_require__(5);
              var _quill2 = _interopRequireDefault(_quill);
              var _logger = __webpack_require__(10);
              var _logger2 = _interopRequireDefault(_logger);
              var _module = __webpack_require__(9);
              var _module2 = _interopRequireDefault(_module);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _defineProperty(obj, key2, value) {
                if (key2 in obj) {
                  Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
                } else {
                  obj[key2] = value;
                }
                return obj;
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var debug = (0, _logger2.default)("quill:keyboard");
              var SHORTKEY = /Mac/i.test(navigator.platform) ? "metaKey" : "ctrlKey";
              var Keyboard = function(_Module) {
                _inherits(Keyboard2, _Module);
                _createClass(Keyboard2, null, [{
                  key: "match",
                  value: function match(evt, binding) {
                    binding = normalize(binding);
                    if (["altKey", "ctrlKey", "metaKey", "shiftKey"].some(function(key2) {
                      return !!binding[key2] !== evt[key2] && binding[key2] !== null;
                    })) {
                      return false;
                    }
                    return binding.key === (evt.which || evt.keyCode);
                  }
                }]);
                function Keyboard2(quill2, options) {
                  _classCallCheck(this, Keyboard2);
                  var _this = _possibleConstructorReturn(this, (Keyboard2.__proto__ || Object.getPrototypeOf(Keyboard2)).call(this, quill2, options));
                  _this.bindings = {};
                  Object.keys(_this.options.bindings).forEach(function(name) {
                    if (name === "list autofill" && quill2.scroll.whitelist != null && !quill2.scroll.whitelist["list"]) {
                      return;
                    }
                    if (_this.options.bindings[name]) {
                      _this.addBinding(_this.options.bindings[name]);
                    }
                  });
                  _this.addBinding({ key: Keyboard2.keys.ENTER, shiftKey: null }, handleEnter);
                  _this.addBinding({ key: Keyboard2.keys.ENTER, metaKey: null, ctrlKey: null, altKey: null }, function() {
                  });
                  if (/Firefox/i.test(navigator.userAgent)) {
                    _this.addBinding({ key: Keyboard2.keys.BACKSPACE }, { collapsed: true }, handleBackspace);
                    _this.addBinding({ key: Keyboard2.keys.DELETE }, { collapsed: true }, handleDelete);
                  } else {
                    _this.addBinding({ key: Keyboard2.keys.BACKSPACE }, { collapsed: true, prefix: /^.?$/ }, handleBackspace);
                    _this.addBinding({ key: Keyboard2.keys.DELETE }, { collapsed: true, suffix: /^.?$/ }, handleDelete);
                  }
                  _this.addBinding({ key: Keyboard2.keys.BACKSPACE }, { collapsed: false }, handleDeleteRange);
                  _this.addBinding({ key: Keyboard2.keys.DELETE }, { collapsed: false }, handleDeleteRange);
                  _this.addBinding({ key: Keyboard2.keys.BACKSPACE, altKey: null, ctrlKey: null, metaKey: null, shiftKey: null }, { collapsed: true, offset: 0 }, handleBackspace);
                  _this.listen();
                  return _this;
                }
                _createClass(Keyboard2, [{
                  key: "addBinding",
                  value: function addBinding(key2) {
                    var context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                    var handler = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                    var binding = normalize(key2);
                    if (binding == null || binding.key == null) {
                      return debug.warn("Attempted to add invalid keyboard binding", binding);
                    }
                    if (typeof context === "function") {
                      context = { handler: context };
                    }
                    if (typeof handler === "function") {
                      handler = { handler };
                    }
                    binding = (0, _extend2.default)(binding, context, handler);
                    this.bindings[binding.key] = this.bindings[binding.key] || [];
                    this.bindings[binding.key].push(binding);
                  }
                }, {
                  key: "listen",
                  value: function listen() {
                    var _this2 = this;
                    this.quill.root.addEventListener("keydown", function(evt) {
                      if (evt.defaultPrevented)
                        return;
                      var which = evt.which || evt.keyCode;
                      var bindings = (_this2.bindings[which] || []).filter(function(binding) {
                        return Keyboard2.match(evt, binding);
                      });
                      if (bindings.length === 0)
                        return;
                      var range = _this2.quill.getSelection();
                      if (range == null || !_this2.quill.hasFocus())
                        return;
                      var _quill$getLine = _this2.quill.getLine(range.index), _quill$getLine2 = _slicedToArray(_quill$getLine, 2), line = _quill$getLine2[0], offset2 = _quill$getLine2[1];
                      var _quill$getLeaf = _this2.quill.getLeaf(range.index), _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2), leafStart = _quill$getLeaf2[0], offsetStart = _quill$getLeaf2[1];
                      var _ref = range.length === 0 ? [leafStart, offsetStart] : _this2.quill.getLeaf(range.index + range.length), _ref2 = _slicedToArray(_ref, 2), leafEnd = _ref2[0], offsetEnd = _ref2[1];
                      var prefixText = leafStart instanceof _parchment2.default.Text ? leafStart.value().slice(0, offsetStart) : "";
                      var suffixText = leafEnd instanceof _parchment2.default.Text ? leafEnd.value().slice(offsetEnd) : "";
                      var curContext = {
                        collapsed: range.length === 0,
                        empty: range.length === 0 && line.length() <= 1,
                        format: _this2.quill.getFormat(range),
                        offset: offset2,
                        prefix: prefixText,
                        suffix: suffixText
                      };
                      var prevented = bindings.some(function(binding) {
                        if (binding.collapsed != null && binding.collapsed !== curContext.collapsed)
                          return false;
                        if (binding.empty != null && binding.empty !== curContext.empty)
                          return false;
                        if (binding.offset != null && binding.offset !== curContext.offset)
                          return false;
                        if (Array.isArray(binding.format)) {
                          if (binding.format.every(function(name) {
                            return curContext.format[name] == null;
                          })) {
                            return false;
                          }
                        } else if (_typeof2(binding.format) === "object") {
                          if (!Object.keys(binding.format).every(function(name) {
                            if (binding.format[name] === true)
                              return curContext.format[name] != null;
                            if (binding.format[name] === false)
                              return curContext.format[name] == null;
                            return (0, _deepEqual2.default)(binding.format[name], curContext.format[name]);
                          })) {
                            return false;
                          }
                        }
                        if (binding.prefix != null && !binding.prefix.test(curContext.prefix))
                          return false;
                        if (binding.suffix != null && !binding.suffix.test(curContext.suffix))
                          return false;
                        return binding.handler.call(_this2, range, curContext) !== true;
                      });
                      if (prevented) {
                        evt.preventDefault();
                      }
                    });
                  }
                }]);
                return Keyboard2;
              }(_module2.default);
              Keyboard.keys = {
                BACKSPACE: 8,
                TAB: 9,
                ENTER: 13,
                ESCAPE: 27,
                LEFT: 37,
                UP: 38,
                RIGHT: 39,
                DOWN: 40,
                DELETE: 46
              };
              Keyboard.DEFAULTS = {
                bindings: {
                  "bold": makeFormatHandler("bold"),
                  "italic": makeFormatHandler("italic"),
                  "underline": makeFormatHandler("underline"),
                  "indent": {
                    // highlight tab or tab at beginning of list, indent or blockquote
                    key: Keyboard.keys.TAB,
                    format: ["blockquote", "indent", "list"],
                    handler: function handler(range, context) {
                      if (context.collapsed && context.offset !== 0)
                        return true;
                      this.quill.format("indent", "+1", _quill2.default.sources.USER);
                    }
                  },
                  "outdent": {
                    key: Keyboard.keys.TAB,
                    shiftKey: true,
                    format: ["blockquote", "indent", "list"],
                    // highlight tab or tab at beginning of list, indent or blockquote
                    handler: function handler(range, context) {
                      if (context.collapsed && context.offset !== 0)
                        return true;
                      this.quill.format("indent", "-1", _quill2.default.sources.USER);
                    }
                  },
                  "outdent backspace": {
                    key: Keyboard.keys.BACKSPACE,
                    collapsed: true,
                    shiftKey: null,
                    metaKey: null,
                    ctrlKey: null,
                    altKey: null,
                    format: ["indent", "list"],
                    offset: 0,
                    handler: function handler(range, context) {
                      if (context.format.indent != null) {
                        this.quill.format("indent", "-1", _quill2.default.sources.USER);
                      } else if (context.format.list != null) {
                        this.quill.format("list", false, _quill2.default.sources.USER);
                      }
                    }
                  },
                  "indent code-block": makeCodeBlockHandler(true),
                  "outdent code-block": makeCodeBlockHandler(false),
                  "remove tab": {
                    key: Keyboard.keys.TAB,
                    shiftKey: true,
                    collapsed: true,
                    prefix: /\t$/,
                    handler: function handler(range) {
                      this.quill.deleteText(range.index - 1, 1, _quill2.default.sources.USER);
                    }
                  },
                  "tab": {
                    key: Keyboard.keys.TAB,
                    handler: function handler(range) {
                      this.quill.history.cutoff();
                      var delta = new _quillDelta2.default().retain(range.index).delete(range.length).insert("	");
                      this.quill.updateContents(delta, _quill2.default.sources.USER);
                      this.quill.history.cutoff();
                      this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
                    }
                  },
                  "list empty enter": {
                    key: Keyboard.keys.ENTER,
                    collapsed: true,
                    format: ["list"],
                    empty: true,
                    handler: function handler(range, context) {
                      this.quill.format("list", false, _quill2.default.sources.USER);
                      if (context.format.indent) {
                        this.quill.format("indent", false, _quill2.default.sources.USER);
                      }
                    }
                  },
                  "checklist enter": {
                    key: Keyboard.keys.ENTER,
                    collapsed: true,
                    format: { list: "checked" },
                    handler: function handler(range) {
                      var _quill$getLine3 = this.quill.getLine(range.index), _quill$getLine4 = _slicedToArray(_quill$getLine3, 2), line = _quill$getLine4[0], offset2 = _quill$getLine4[1];
                      var formats = (0, _extend2.default)({}, line.formats(), { list: "checked" });
                      var delta = new _quillDelta2.default().retain(range.index).insert("\n", formats).retain(line.length() - offset2 - 1).retain(1, { list: "unchecked" });
                      this.quill.updateContents(delta, _quill2.default.sources.USER);
                      this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
                      this.quill.scrollIntoView();
                    }
                  },
                  "header enter": {
                    key: Keyboard.keys.ENTER,
                    collapsed: true,
                    format: ["header"],
                    suffix: /^$/,
                    handler: function handler(range, context) {
                      var _quill$getLine5 = this.quill.getLine(range.index), _quill$getLine6 = _slicedToArray(_quill$getLine5, 2), line = _quill$getLine6[0], offset2 = _quill$getLine6[1];
                      var delta = new _quillDelta2.default().retain(range.index).insert("\n", context.format).retain(line.length() - offset2 - 1).retain(1, { header: null });
                      this.quill.updateContents(delta, _quill2.default.sources.USER);
                      this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
                      this.quill.scrollIntoView();
                    }
                  },
                  "list autofill": {
                    key: " ",
                    collapsed: true,
                    format: { list: false },
                    prefix: /^\s*?(\d+\.|-|\*|\[ ?\]|\[x\])$/,
                    handler: function handler(range, context) {
                      var length = context.prefix.length;
                      var _quill$getLine7 = this.quill.getLine(range.index), _quill$getLine8 = _slicedToArray(_quill$getLine7, 2), line = _quill$getLine8[0], offset2 = _quill$getLine8[1];
                      if (offset2 > length)
                        return true;
                      var value = void 0;
                      switch (context.prefix.trim()) {
                        case "[]":
                        case "[ ]":
                          value = "unchecked";
                          break;
                        case "[x]":
                          value = "checked";
                          break;
                        case "-":
                        case "*":
                          value = "bullet";
                          break;
                        default:
                          value = "ordered";
                      }
                      this.quill.insertText(range.index, " ", _quill2.default.sources.USER);
                      this.quill.history.cutoff();
                      var delta = new _quillDelta2.default().retain(range.index - offset2).delete(length + 1).retain(line.length() - 2 - offset2).retain(1, { list: value });
                      this.quill.updateContents(delta, _quill2.default.sources.USER);
                      this.quill.history.cutoff();
                      this.quill.setSelection(range.index - length, _quill2.default.sources.SILENT);
                    }
                  },
                  "code exit": {
                    key: Keyboard.keys.ENTER,
                    collapsed: true,
                    format: ["code-block"],
                    prefix: /\n\n$/,
                    suffix: /^\s+$/,
                    handler: function handler(range) {
                      var _quill$getLine9 = this.quill.getLine(range.index), _quill$getLine10 = _slicedToArray(_quill$getLine9, 2), line = _quill$getLine10[0], offset2 = _quill$getLine10[1];
                      var delta = new _quillDelta2.default().retain(range.index + line.length() - offset2 - 2).retain(1, { "code-block": null }).delete(1);
                      this.quill.updateContents(delta, _quill2.default.sources.USER);
                    }
                  },
                  "embed left": makeEmbedArrowHandler(Keyboard.keys.LEFT, false),
                  "embed left shift": makeEmbedArrowHandler(Keyboard.keys.LEFT, true),
                  "embed right": makeEmbedArrowHandler(Keyboard.keys.RIGHT, false),
                  "embed right shift": makeEmbedArrowHandler(Keyboard.keys.RIGHT, true)
                }
              };
              function makeEmbedArrowHandler(key2, shiftKey) {
                var _ref3;
                var where = key2 === Keyboard.keys.LEFT ? "prefix" : "suffix";
                return _ref3 = {
                  key: key2,
                  shiftKey,
                  altKey: null
                }, _defineProperty(_ref3, where, /^$/), _defineProperty(_ref3, "handler", function handler(range) {
                  var index = range.index;
                  if (key2 === Keyboard.keys.RIGHT) {
                    index += range.length + 1;
                  }
                  var _quill$getLeaf3 = this.quill.getLeaf(index), _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1), leaf = _quill$getLeaf4[0];
                  if (!(leaf instanceof _parchment2.default.Embed))
                    return true;
                  if (key2 === Keyboard.keys.LEFT) {
                    if (shiftKey) {
                      this.quill.setSelection(range.index - 1, range.length + 1, _quill2.default.sources.USER);
                    } else {
                      this.quill.setSelection(range.index - 1, _quill2.default.sources.USER);
                    }
                  } else {
                    if (shiftKey) {
                      this.quill.setSelection(range.index, range.length + 1, _quill2.default.sources.USER);
                    } else {
                      this.quill.setSelection(range.index + range.length + 1, _quill2.default.sources.USER);
                    }
                  }
                  return false;
                }), _ref3;
              }
              function handleBackspace(range, context) {
                if (range.index === 0 || this.quill.getLength() <= 1)
                  return;
                var _quill$getLine11 = this.quill.getLine(range.index), _quill$getLine12 = _slicedToArray(_quill$getLine11, 1), line = _quill$getLine12[0];
                var formats = {};
                if (context.offset === 0) {
                  var _quill$getLine13 = this.quill.getLine(range.index - 1), _quill$getLine14 = _slicedToArray(_quill$getLine13, 1), prev = _quill$getLine14[0];
                  if (prev != null && prev.length() > 1) {
                    var curFormats = line.formats();
                    var prevFormats = this.quill.getFormat(range.index - 1, 1);
                    formats = _op2.default.attributes.diff(curFormats, prevFormats) || {};
                  }
                }
                var length = /[\uD800-\uDBFF][\uDC00-\uDFFF]$/.test(context.prefix) ? 2 : 1;
                this.quill.deleteText(range.index - length, length, _quill2.default.sources.USER);
                if (Object.keys(formats).length > 0) {
                  this.quill.formatLine(range.index - length, length, formats, _quill2.default.sources.USER);
                }
                this.quill.focus();
              }
              function handleDelete(range, context) {
                var length = /^[\uD800-\uDBFF][\uDC00-\uDFFF]/.test(context.suffix) ? 2 : 1;
                if (range.index >= this.quill.getLength() - length)
                  return;
                var formats = {}, nextLength = 0;
                var _quill$getLine15 = this.quill.getLine(range.index), _quill$getLine16 = _slicedToArray(_quill$getLine15, 1), line = _quill$getLine16[0];
                if (context.offset >= line.length() - 1) {
                  var _quill$getLine17 = this.quill.getLine(range.index + 1), _quill$getLine18 = _slicedToArray(_quill$getLine17, 1), next = _quill$getLine18[0];
                  if (next) {
                    var curFormats = line.formats();
                    var nextFormats = this.quill.getFormat(range.index, 1);
                    formats = _op2.default.attributes.diff(curFormats, nextFormats) || {};
                    nextLength = next.length();
                  }
                }
                this.quill.deleteText(range.index, length, _quill2.default.sources.USER);
                if (Object.keys(formats).length > 0) {
                  this.quill.formatLine(range.index + nextLength - 1, length, formats, _quill2.default.sources.USER);
                }
              }
              function handleDeleteRange(range) {
                var lines = this.quill.getLines(range);
                var formats = {};
                if (lines.length > 1) {
                  var firstFormats = lines[0].formats();
                  var lastFormats = lines[lines.length - 1].formats();
                  formats = _op2.default.attributes.diff(lastFormats, firstFormats) || {};
                }
                this.quill.deleteText(range, _quill2.default.sources.USER);
                if (Object.keys(formats).length > 0) {
                  this.quill.formatLine(range.index, 1, formats, _quill2.default.sources.USER);
                }
                this.quill.setSelection(range.index, _quill2.default.sources.SILENT);
                this.quill.focus();
              }
              function handleEnter(range, context) {
                var _this3 = this;
                if (range.length > 0) {
                  this.quill.scroll.deleteAt(range.index, range.length);
                }
                var lineFormats = Object.keys(context.format).reduce(function(lineFormats2, format) {
                  if (_parchment2.default.query(format, _parchment2.default.Scope.BLOCK) && !Array.isArray(context.format[format])) {
                    lineFormats2[format] = context.format[format];
                  }
                  return lineFormats2;
                }, {});
                this.quill.insertText(range.index, "\n", lineFormats, _quill2.default.sources.USER);
                this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
                this.quill.focus();
                Object.keys(context.format).forEach(function(name) {
                  if (lineFormats[name] != null)
                    return;
                  if (Array.isArray(context.format[name]))
                    return;
                  if (name === "link")
                    return;
                  _this3.quill.format(name, context.format[name], _quill2.default.sources.USER);
                });
              }
              function makeCodeBlockHandler(indent) {
                return {
                  key: Keyboard.keys.TAB,
                  shiftKey: !indent,
                  format: { "code-block": true },
                  handler: function handler(range) {
                    var CodeBlock = _parchment2.default.query("code-block");
                    var index = range.index, length = range.length;
                    var _quill$scroll$descend = this.quill.scroll.descendant(CodeBlock, index), _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2), block = _quill$scroll$descend2[0], offset2 = _quill$scroll$descend2[1];
                    if (block == null)
                      return;
                    var scrollIndex = this.quill.getIndex(block);
                    var start2 = block.newlineIndex(offset2, true) + 1;
                    var end2 = block.newlineIndex(scrollIndex + offset2 + length);
                    var lines = block.domNode.textContent.slice(start2, end2).split("\n");
                    offset2 = 0;
                    lines.forEach(function(line, i) {
                      if (indent) {
                        block.insertAt(start2 + offset2, CodeBlock.TAB);
                        offset2 += CodeBlock.TAB.length;
                        if (i === 0) {
                          index += CodeBlock.TAB.length;
                        } else {
                          length += CodeBlock.TAB.length;
                        }
                      } else if (line.startsWith(CodeBlock.TAB)) {
                        block.deleteAt(start2 + offset2, CodeBlock.TAB.length);
                        offset2 -= CodeBlock.TAB.length;
                        if (i === 0) {
                          index -= CodeBlock.TAB.length;
                        } else {
                          length -= CodeBlock.TAB.length;
                        }
                      }
                      offset2 += line.length + 1;
                    });
                    this.quill.update(_quill2.default.sources.USER);
                    this.quill.setSelection(index, length, _quill2.default.sources.SILENT);
                  }
                };
              }
              function makeFormatHandler(format) {
                return {
                  key: format[0].toUpperCase(),
                  shortKey: true,
                  handler: function handler(range, context) {
                    this.quill.format(format, !context.format[format], _quill2.default.sources.USER);
                  }
                };
              }
              function normalize(binding) {
                if (typeof binding === "string" || typeof binding === "number") {
                  return normalize({ key: binding });
                }
                if ((typeof binding === "undefined" ? "undefined" : _typeof2(binding)) === "object") {
                  binding = (0, _clone2.default)(binding, false);
                }
                if (typeof binding.key === "string") {
                  if (Keyboard.keys[binding.key.toUpperCase()] != null) {
                    binding.key = Keyboard.keys[binding.key.toUpperCase()];
                  } else if (binding.key.length === 1) {
                    binding.key = binding.key.toUpperCase().charCodeAt(0);
                  } else {
                    return null;
                  }
                }
                if (binding.shortKey) {
                  binding[SHORTKEY] = binding.shortKey;
                  delete binding.shortKey;
                }
                return binding;
              }
              exports3.default = Keyboard;
              exports3.SHORTKEY = SHORTKEY;
            },
            /* 24 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _text = __webpack_require__(7);
              var _text2 = _interopRequireDefault(_text);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Cursor = function(_Parchment$Embed) {
                _inherits(Cursor2, _Parchment$Embed);
                _createClass(Cursor2, null, [{
                  key: "value",
                  value: function value() {
                    return void 0;
                  }
                }]);
                function Cursor2(domNode, selection) {
                  _classCallCheck(this, Cursor2);
                  var _this = _possibleConstructorReturn(this, (Cursor2.__proto__ || Object.getPrototypeOf(Cursor2)).call(this, domNode));
                  _this.selection = selection;
                  _this.textNode = document.createTextNode(Cursor2.CONTENTS);
                  _this.domNode.appendChild(_this.textNode);
                  _this._length = 0;
                  return _this;
                }
                _createClass(Cursor2, [{
                  key: "detach",
                  value: function detach() {
                    if (this.parent != null)
                      this.parent.removeChild(this);
                  }
                }, {
                  key: "format",
                  value: function format(name, value) {
                    if (this._length !== 0) {
                      return _get(Cursor2.prototype.__proto__ || Object.getPrototypeOf(Cursor2.prototype), "format", this).call(this, name, value);
                    }
                    var target = this, index = 0;
                    while (target != null && target.statics.scope !== _parchment2.default.Scope.BLOCK_BLOT) {
                      index += target.offset(target.parent);
                      target = target.parent;
                    }
                    if (target != null) {
                      this._length = Cursor2.CONTENTS.length;
                      target.optimize();
                      target.formatAt(index, Cursor2.CONTENTS.length, name, value);
                      this._length = 0;
                    }
                  }
                }, {
                  key: "index",
                  value: function index(node, offset2) {
                    if (node === this.textNode)
                      return 0;
                    return _get(Cursor2.prototype.__proto__ || Object.getPrototypeOf(Cursor2.prototype), "index", this).call(this, node, offset2);
                  }
                }, {
                  key: "length",
                  value: function length() {
                    return this._length;
                  }
                }, {
                  key: "position",
                  value: function position() {
                    return [this.textNode, this.textNode.data.length];
                  }
                }, {
                  key: "remove",
                  value: function remove() {
                    _get(Cursor2.prototype.__proto__ || Object.getPrototypeOf(Cursor2.prototype), "remove", this).call(this);
                    this.parent = null;
                  }
                }, {
                  key: "restore",
                  value: function restore() {
                    if (this.selection.composing || this.parent == null)
                      return;
                    var textNode = this.textNode;
                    var range = this.selection.getNativeRange();
                    var restoreText = void 0, start2 = void 0, end2 = void 0;
                    if (range != null && range.start.node === textNode && range.end.node === textNode) {
                      var _ref = [textNode, range.start.offset, range.end.offset];
                      restoreText = _ref[0];
                      start2 = _ref[1];
                      end2 = _ref[2];
                    }
                    while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {
                      this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);
                    }
                    if (this.textNode.data !== Cursor2.CONTENTS) {
                      var text2 = this.textNode.data.split(Cursor2.CONTENTS).join("");
                      if (this.next instanceof _text2.default) {
                        restoreText = this.next.domNode;
                        this.next.insertAt(0, text2);
                        this.textNode.data = Cursor2.CONTENTS;
                      } else {
                        this.textNode.data = text2;
                        this.parent.insertBefore(_parchment2.default.create(this.textNode), this);
                        this.textNode = document.createTextNode(Cursor2.CONTENTS);
                        this.domNode.appendChild(this.textNode);
                      }
                    }
                    this.remove();
                    if (start2 != null) {
                      var _map = [start2, end2].map(function(offset2) {
                        return Math.max(0, Math.min(restoreText.data.length, offset2 - 1));
                      });
                      var _map2 = _slicedToArray(_map, 2);
                      start2 = _map2[0];
                      end2 = _map2[1];
                      return {
                        startNode: restoreText,
                        startOffset: start2,
                        endNode: restoreText,
                        endOffset: end2
                      };
                    }
                  }
                }, {
                  key: "update",
                  value: function update(mutations, context) {
                    var _this2 = this;
                    if (mutations.some(function(mutation) {
                      return mutation.type === "characterData" && mutation.target === _this2.textNode;
                    })) {
                      var range = this.restore();
                      if (range)
                        context.range = range;
                    }
                  }
                }, {
                  key: "value",
                  value: function value() {
                    return "";
                  }
                }]);
                return Cursor2;
              }(_parchment2.default.Embed);
              Cursor.blotName = "cursor";
              Cursor.className = "ql-cursor";
              Cursor.tagName = "span";
              Cursor.CONTENTS = "\uFEFF";
              exports3.default = Cursor;
            },
            /* 25 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _block = __webpack_require__(4);
              var _block2 = _interopRequireDefault(_block);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Container = function(_Parchment$Container) {
                _inherits(Container2, _Parchment$Container);
                function Container2() {
                  _classCallCheck(this, Container2);
                  return _possibleConstructorReturn(this, (Container2.__proto__ || Object.getPrototypeOf(Container2)).apply(this, arguments));
                }
                return Container2;
              }(_parchment2.default.Container);
              Container.allowedChildren = [_block2.default, _block.BlockEmbed, Container];
              exports3.default = Container;
            },
            /* 26 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.ColorStyle = exports3.ColorClass = exports3.ColorAttributor = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var ColorAttributor = function(_Parchment$Attributor) {
                _inherits(ColorAttributor2, _Parchment$Attributor);
                function ColorAttributor2() {
                  _classCallCheck(this, ColorAttributor2);
                  return _possibleConstructorReturn(this, (ColorAttributor2.__proto__ || Object.getPrototypeOf(ColorAttributor2)).apply(this, arguments));
                }
                _createClass(ColorAttributor2, [{
                  key: "value",
                  value: function value(domNode) {
                    var value2 = _get(ColorAttributor2.prototype.__proto__ || Object.getPrototypeOf(ColorAttributor2.prototype), "value", this).call(this, domNode);
                    if (!value2.startsWith("rgb("))
                      return value2;
                    value2 = value2.replace(/^[^\d]+/, "").replace(/[^\d]+$/, "");
                    return "#" + value2.split(",").map(function(component) {
                      return ("00" + parseInt(component).toString(16)).slice(-2);
                    }).join("");
                  }
                }]);
                return ColorAttributor2;
              }(_parchment2.default.Attributor.Style);
              var ColorClass = new _parchment2.default.Attributor.Class("color", "ql-color", {
                scope: _parchment2.default.Scope.INLINE
              });
              var ColorStyle = new ColorAttributor("color", "color", {
                scope: _parchment2.default.Scope.INLINE
              });
              exports3.ColorAttributor = ColorAttributor;
              exports3.ColorClass = ColorClass;
              exports3.ColorStyle = ColorStyle;
            },
            /* 27 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.sanitize = exports3.default = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _inline = __webpack_require__(6);
              var _inline2 = _interopRequireDefault(_inline);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Link = function(_Inline) {
                _inherits(Link2, _Inline);
                function Link2() {
                  _classCallCheck(this, Link2);
                  return _possibleConstructorReturn(this, (Link2.__proto__ || Object.getPrototypeOf(Link2)).apply(this, arguments));
                }
                _createClass(Link2, [{
                  key: "format",
                  value: function format(name, value) {
                    if (name !== this.statics.blotName || !value)
                      return _get(Link2.prototype.__proto__ || Object.getPrototypeOf(Link2.prototype), "format", this).call(this, name, value);
                    value = this.constructor.sanitize(value);
                    this.domNode.setAttribute("href", value);
                  }
                }], [{
                  key: "create",
                  value: function create(value) {
                    var node = _get(Link2.__proto__ || Object.getPrototypeOf(Link2), "create", this).call(this, value);
                    value = this.sanitize(value);
                    node.setAttribute("href", value);
                    node.setAttribute("rel", "noopener noreferrer");
                    node.setAttribute("target", "_blank");
                    return node;
                  }
                }, {
                  key: "formats",
                  value: function formats(domNode) {
                    return domNode.getAttribute("href");
                  }
                }, {
                  key: "sanitize",
                  value: function sanitize(url) {
                    return _sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;
                  }
                }]);
                return Link2;
              }(_inline2.default);
              Link.blotName = "link";
              Link.tagName = "A";
              Link.SANITIZED_URL = "about:blank";
              Link.PROTOCOL_WHITELIST = ["http", "https", "mailto", "tel"];
              function _sanitize(url, protocols) {
                var anchor = document.createElement("a");
                anchor.href = url;
                var protocol = anchor.href.slice(0, anchor.href.indexOf(":"));
                return protocols.indexOf(protocol) > -1;
              }
              exports3.default = Link;
              exports3.sanitize = _sanitize;
            },
            /* 28 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
                return typeof obj;
              } : function(obj) {
                return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
              };
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _keyboard = __webpack_require__(23);
              var _keyboard2 = _interopRequireDefault(_keyboard);
              var _dropdown = __webpack_require__(107);
              var _dropdown2 = _interopRequireDefault(_dropdown);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              var optionsCounter = 0;
              function toggleAriaAttribute(element, attribute) {
                element.setAttribute(attribute, !(element.getAttribute(attribute) === "true"));
              }
              var Picker = function() {
                function Picker2(select) {
                  var _this = this;
                  _classCallCheck(this, Picker2);
                  this.select = select;
                  this.container = document.createElement("span");
                  this.buildPicker();
                  this.select.style.display = "none";
                  this.select.parentNode.insertBefore(this.container, this.select);
                  this.label.addEventListener("mousedown", function() {
                    _this.togglePicker();
                  });
                  this.label.addEventListener("keydown", function(event) {
                    switch (event.keyCode) {
                      case _keyboard2.default.keys.ENTER:
                        _this.togglePicker();
                        break;
                      case _keyboard2.default.keys.ESCAPE:
                        _this.escape();
                        event.preventDefault();
                        break;
                    }
                  });
                  this.select.addEventListener("change", this.update.bind(this));
                }
                _createClass(Picker2, [{
                  key: "togglePicker",
                  value: function togglePicker() {
                    this.container.classList.toggle("ql-expanded");
                    toggleAriaAttribute(this.label, "aria-expanded");
                    toggleAriaAttribute(this.options, "aria-hidden");
                  }
                }, {
                  key: "buildItem",
                  value: function buildItem(option) {
                    var _this2 = this;
                    var item = document.createElement("span");
                    item.tabIndex = "0";
                    item.setAttribute("role", "button");
                    item.classList.add("ql-picker-item");
                    if (option.hasAttribute("value")) {
                      item.setAttribute("data-value", option.getAttribute("value"));
                    }
                    if (option.textContent) {
                      item.setAttribute("data-label", option.textContent);
                    }
                    item.addEventListener("click", function() {
                      _this2.selectItem(item, true);
                    });
                    item.addEventListener("keydown", function(event) {
                      switch (event.keyCode) {
                        case _keyboard2.default.keys.ENTER:
                          _this2.selectItem(item, true);
                          event.preventDefault();
                          break;
                        case _keyboard2.default.keys.ESCAPE:
                          _this2.escape();
                          event.preventDefault();
                          break;
                      }
                    });
                    return item;
                  }
                }, {
                  key: "buildLabel",
                  value: function buildLabel() {
                    var label = document.createElement("span");
                    label.classList.add("ql-picker-label");
                    label.innerHTML = _dropdown2.default;
                    label.tabIndex = "0";
                    label.setAttribute("role", "button");
                    label.setAttribute("aria-expanded", "false");
                    this.container.appendChild(label);
                    return label;
                  }
                }, {
                  key: "buildOptions",
                  value: function buildOptions() {
                    var _this3 = this;
                    var options = document.createElement("span");
                    options.classList.add("ql-picker-options");
                    options.setAttribute("aria-hidden", "true");
                    options.tabIndex = "-1";
                    options.id = "ql-picker-options-" + optionsCounter;
                    optionsCounter += 1;
                    this.label.setAttribute("aria-controls", options.id);
                    this.options = options;
                    [].slice.call(this.select.options).forEach(function(option) {
                      var item = _this3.buildItem(option);
                      options.appendChild(item);
                      if (option.selected === true) {
                        _this3.selectItem(item);
                      }
                    });
                    this.container.appendChild(options);
                  }
                }, {
                  key: "buildPicker",
                  value: function buildPicker() {
                    var _this4 = this;
                    [].slice.call(this.select.attributes).forEach(function(item) {
                      _this4.container.setAttribute(item.name, item.value);
                    });
                    this.container.classList.add("ql-picker");
                    this.label = this.buildLabel();
                    this.buildOptions();
                  }
                }, {
                  key: "escape",
                  value: function escape() {
                    var _this5 = this;
                    this.close();
                    setTimeout(function() {
                      return _this5.label.focus();
                    }, 1);
                  }
                }, {
                  key: "close",
                  value: function close() {
                    this.container.classList.remove("ql-expanded");
                    this.label.setAttribute("aria-expanded", "false");
                    this.options.setAttribute("aria-hidden", "true");
                  }
                }, {
                  key: "selectItem",
                  value: function selectItem(item) {
                    var trigger = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                    var selected = this.container.querySelector(".ql-selected");
                    if (item === selected)
                      return;
                    if (selected != null) {
                      selected.classList.remove("ql-selected");
                    }
                    if (item == null)
                      return;
                    item.classList.add("ql-selected");
                    this.select.selectedIndex = [].indexOf.call(item.parentNode.children, item);
                    if (item.hasAttribute("data-value")) {
                      this.label.setAttribute("data-value", item.getAttribute("data-value"));
                    } else {
                      this.label.removeAttribute("data-value");
                    }
                    if (item.hasAttribute("data-label")) {
                      this.label.setAttribute("data-label", item.getAttribute("data-label"));
                    } else {
                      this.label.removeAttribute("data-label");
                    }
                    if (trigger) {
                      if (typeof Event === "function") {
                        this.select.dispatchEvent(new Event("change"));
                      } else if ((typeof Event === "undefined" ? "undefined" : _typeof2(Event)) === "object") {
                        var event = document.createEvent("Event");
                        event.initEvent("change", true, true);
                        this.select.dispatchEvent(event);
                      }
                      this.close();
                    }
                  }
                }, {
                  key: "update",
                  value: function update() {
                    var option = void 0;
                    if (this.select.selectedIndex > -1) {
                      var item = this.container.querySelector(".ql-picker-options").children[this.select.selectedIndex];
                      option = this.select.options[this.select.selectedIndex];
                      this.selectItem(item);
                    } else {
                      this.selectItem(null);
                    }
                    var isActive = option != null && option !== this.select.querySelector("option[selected]");
                    this.label.classList.toggle("ql-active", isActive);
                  }
                }]);
                return Picker2;
              }();
              exports3.default = Picker;
            },
            /* 29 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _quill = __webpack_require__(5);
              var _quill2 = _interopRequireDefault(_quill);
              var _block = __webpack_require__(4);
              var _block2 = _interopRequireDefault(_block);
              var _break = __webpack_require__(16);
              var _break2 = _interopRequireDefault(_break);
              var _container = __webpack_require__(25);
              var _container2 = _interopRequireDefault(_container);
              var _cursor = __webpack_require__(24);
              var _cursor2 = _interopRequireDefault(_cursor);
              var _embed = __webpack_require__(35);
              var _embed2 = _interopRequireDefault(_embed);
              var _inline = __webpack_require__(6);
              var _inline2 = _interopRequireDefault(_inline);
              var _scroll = __webpack_require__(22);
              var _scroll2 = _interopRequireDefault(_scroll);
              var _text = __webpack_require__(7);
              var _text2 = _interopRequireDefault(_text);
              var _clipboard = __webpack_require__(55);
              var _clipboard2 = _interopRequireDefault(_clipboard);
              var _history = __webpack_require__(42);
              var _history2 = _interopRequireDefault(_history);
              var _keyboard = __webpack_require__(23);
              var _keyboard2 = _interopRequireDefault(_keyboard);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              _quill2.default.register({
                "blots/block": _block2.default,
                "blots/block/embed": _block.BlockEmbed,
                "blots/break": _break2.default,
                "blots/container": _container2.default,
                "blots/cursor": _cursor2.default,
                "blots/embed": _embed2.default,
                "blots/inline": _inline2.default,
                "blots/scroll": _scroll2.default,
                "blots/text": _text2.default,
                "modules/clipboard": _clipboard2.default,
                "modules/history": _history2.default,
                "modules/keyboard": _keyboard2.default
              });
              _parchment2.default.register(_block2.default, _break2.default, _cursor2.default, _inline2.default, _scroll2.default, _text2.default);
              exports3.default = _quill2.default;
            },
            /* 30 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", { value: true });
              var Registry = __webpack_require__(1);
              var ShadowBlot = (
                /** @class */
                function() {
                  function ShadowBlot2(domNode) {
                    this.domNode = domNode;
                    this.domNode[Registry.DATA_KEY] = { blot: this };
                  }
                  Object.defineProperty(ShadowBlot2.prototype, "statics", {
                    // Hack for accessing inherited static methods
                    get: function() {
                      return this.constructor;
                    },
                    enumerable: true,
                    configurable: true
                  });
                  ShadowBlot2.create = function(value) {
                    if (this.tagName == null) {
                      throw new Registry.ParchmentError("Blot definition missing tagName");
                    }
                    var node;
                    if (Array.isArray(this.tagName)) {
                      if (typeof value === "string") {
                        value = value.toUpperCase();
                        if (parseInt(value).toString() === value) {
                          value = parseInt(value);
                        }
                      }
                      if (typeof value === "number") {
                        node = document.createElement(this.tagName[value - 1]);
                      } else if (this.tagName.indexOf(value) > -1) {
                        node = document.createElement(value);
                      } else {
                        node = document.createElement(this.tagName[0]);
                      }
                    } else {
                      node = document.createElement(this.tagName);
                    }
                    if (this.className) {
                      node.classList.add(this.className);
                    }
                    return node;
                  };
                  ShadowBlot2.prototype.attach = function() {
                    if (this.parent != null) {
                      this.scroll = this.parent.scroll;
                    }
                  };
                  ShadowBlot2.prototype.clone = function() {
                    var domNode = this.domNode.cloneNode(false);
                    return Registry.create(domNode);
                  };
                  ShadowBlot2.prototype.detach = function() {
                    if (this.parent != null)
                      this.parent.removeChild(this);
                    delete this.domNode[Registry.DATA_KEY];
                  };
                  ShadowBlot2.prototype.deleteAt = function(index, length) {
                    var blot = this.isolate(index, length);
                    blot.remove();
                  };
                  ShadowBlot2.prototype.formatAt = function(index, length, name, value) {
                    var blot = this.isolate(index, length);
                    if (Registry.query(name, Registry.Scope.BLOT) != null && value) {
                      blot.wrap(name, value);
                    } else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {
                      var parent = Registry.create(this.statics.scope);
                      blot.wrap(parent);
                      parent.format(name, value);
                    }
                  };
                  ShadowBlot2.prototype.insertAt = function(index, value, def) {
                    var blot = def == null ? Registry.create("text", value) : Registry.create(value, def);
                    var ref = this.split(index);
                    this.parent.insertBefore(blot, ref);
                  };
                  ShadowBlot2.prototype.insertInto = function(parentBlot, refBlot) {
                    if (refBlot === void 0) {
                      refBlot = null;
                    }
                    if (this.parent != null) {
                      this.parent.children.remove(this);
                    }
                    var refDomNode = null;
                    parentBlot.children.insertBefore(this, refBlot);
                    if (refBlot != null) {
                      refDomNode = refBlot.domNode;
                    }
                    if (this.domNode.parentNode != parentBlot.domNode || this.domNode.nextSibling != refDomNode) {
                      parentBlot.domNode.insertBefore(this.domNode, refDomNode);
                    }
                    this.parent = parentBlot;
                    this.attach();
                  };
                  ShadowBlot2.prototype.isolate = function(index, length) {
                    var target = this.split(index);
                    target.split(length);
                    return target;
                  };
                  ShadowBlot2.prototype.length = function() {
                    return 1;
                  };
                  ShadowBlot2.prototype.offset = function(root) {
                    if (root === void 0) {
                      root = this.parent;
                    }
                    if (this.parent == null || this == root)
                      return 0;
                    return this.parent.children.offset(this) + this.parent.offset(root);
                  };
                  ShadowBlot2.prototype.optimize = function(context) {
                    if (this.domNode[Registry.DATA_KEY] != null) {
                      delete this.domNode[Registry.DATA_KEY].mutations;
                    }
                  };
                  ShadowBlot2.prototype.remove = function() {
                    if (this.domNode.parentNode != null) {
                      this.domNode.parentNode.removeChild(this.domNode);
                    }
                    this.detach();
                  };
                  ShadowBlot2.prototype.replace = function(target) {
                    if (target.parent == null)
                      return;
                    target.parent.insertBefore(this, target.next);
                    target.remove();
                  };
                  ShadowBlot2.prototype.replaceWith = function(name, value) {
                    var replacement = typeof name === "string" ? Registry.create(name, value) : name;
                    replacement.replace(this);
                    return replacement;
                  };
                  ShadowBlot2.prototype.split = function(index, force) {
                    return index === 0 ? this : this.next;
                  };
                  ShadowBlot2.prototype.update = function(mutations, context) {
                  };
                  ShadowBlot2.prototype.wrap = function(name, value) {
                    var wrapper = typeof name === "string" ? Registry.create(name, value) : name;
                    if (this.parent != null) {
                      this.parent.insertBefore(wrapper, this.next);
                    }
                    wrapper.appendChild(this);
                    return wrapper;
                  };
                  ShadowBlot2.blotName = "abstract";
                  return ShadowBlot2;
                }()
              );
              exports3.default = ShadowBlot;
            },
            /* 31 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", { value: true });
              var attributor_1 = __webpack_require__(12);
              var class_1 = __webpack_require__(32);
              var style_1 = __webpack_require__(33);
              var Registry = __webpack_require__(1);
              var AttributorStore = (
                /** @class */
                function() {
                  function AttributorStore2(domNode) {
                    this.attributes = {};
                    this.domNode = domNode;
                    this.build();
                  }
                  AttributorStore2.prototype.attribute = function(attribute, value) {
                    if (value) {
                      if (attribute.add(this.domNode, value)) {
                        if (attribute.value(this.domNode) != null) {
                          this.attributes[attribute.attrName] = attribute;
                        } else {
                          delete this.attributes[attribute.attrName];
                        }
                      }
                    } else {
                      attribute.remove(this.domNode);
                      delete this.attributes[attribute.attrName];
                    }
                  };
                  AttributorStore2.prototype.build = function() {
                    var _this = this;
                    this.attributes = {};
                    var attributes = attributor_1.default.keys(this.domNode);
                    var classes = class_1.default.keys(this.domNode);
                    var styles = style_1.default.keys(this.domNode);
                    attributes.concat(classes).concat(styles).forEach(function(name) {
                      var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);
                      if (attr instanceof attributor_1.default) {
                        _this.attributes[attr.attrName] = attr;
                      }
                    });
                  };
                  AttributorStore2.prototype.copy = function(target) {
                    var _this = this;
                    Object.keys(this.attributes).forEach(function(key2) {
                      var value = _this.attributes[key2].value(_this.domNode);
                      target.format(key2, value);
                    });
                  };
                  AttributorStore2.prototype.move = function(target) {
                    var _this = this;
                    this.copy(target);
                    Object.keys(this.attributes).forEach(function(key2) {
                      _this.attributes[key2].remove(_this.domNode);
                    });
                    this.attributes = {};
                  };
                  AttributorStore2.prototype.values = function() {
                    var _this = this;
                    return Object.keys(this.attributes).reduce(function(attributes, name) {
                      attributes[name] = _this.attributes[name].value(_this.domNode);
                      return attributes;
                    }, {});
                  };
                  return AttributorStore2;
                }()
              );
              exports3.default = AttributorStore;
            },
            /* 32 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var attributor_1 = __webpack_require__(12);
              function match(node, prefix) {
                var className = node.getAttribute("class") || "";
                return className.split(/\s+/).filter(function(name) {
                  return name.indexOf(prefix + "-") === 0;
                });
              }
              var ClassAttributor = (
                /** @class */
                function(_super) {
                  __extends(ClassAttributor2, _super);
                  function ClassAttributor2() {
                    return _super !== null && _super.apply(this, arguments) || this;
                  }
                  ClassAttributor2.keys = function(node) {
                    return (node.getAttribute("class") || "").split(/\s+/).map(function(name) {
                      return name.split("-").slice(0, -1).join("-");
                    });
                  };
                  ClassAttributor2.prototype.add = function(node, value) {
                    if (!this.canAdd(node, value))
                      return false;
                    this.remove(node);
                    node.classList.add(this.keyName + "-" + value);
                    return true;
                  };
                  ClassAttributor2.prototype.remove = function(node) {
                    var matches = match(node, this.keyName);
                    matches.forEach(function(name) {
                      node.classList.remove(name);
                    });
                    if (node.classList.length === 0) {
                      node.removeAttribute("class");
                    }
                  };
                  ClassAttributor2.prototype.value = function(node) {
                    var result = match(node, this.keyName)[0] || "";
                    var value = result.slice(this.keyName.length + 1);
                    return this.canAdd(node, value) ? value : "";
                  };
                  return ClassAttributor2;
                }(attributor_1.default)
              );
              exports3.default = ClassAttributor;
            },
            /* 33 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var attributor_1 = __webpack_require__(12);
              function camelize(name) {
                var parts = name.split("-");
                var rest = parts.slice(1).map(function(part) {
                  return part[0].toUpperCase() + part.slice(1);
                }).join("");
                return parts[0] + rest;
              }
              var StyleAttributor = (
                /** @class */
                function(_super) {
                  __extends(StyleAttributor2, _super);
                  function StyleAttributor2() {
                    return _super !== null && _super.apply(this, arguments) || this;
                  }
                  StyleAttributor2.keys = function(node) {
                    return (node.getAttribute("style") || "").split(";").map(function(value) {
                      var arr = value.split(":");
                      return arr[0].trim();
                    });
                  };
                  StyleAttributor2.prototype.add = function(node, value) {
                    if (!this.canAdd(node, value))
                      return false;
                    node.style[camelize(this.keyName)] = value;
                    return true;
                  };
                  StyleAttributor2.prototype.remove = function(node) {
                    node.style[camelize(this.keyName)] = "";
                    if (!node.getAttribute("style")) {
                      node.removeAttribute("style");
                    }
                  };
                  StyleAttributor2.prototype.value = function(node) {
                    var value = node.style[camelize(this.keyName)];
                    return this.canAdd(node, value) ? value : "";
                  };
                  return StyleAttributor2;
                }(attributor_1.default)
              );
              exports3.default = StyleAttributor;
            },
            /* 34 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              var Theme = function() {
                function Theme2(quill2, options) {
                  _classCallCheck(this, Theme2);
                  this.quill = quill2;
                  this.options = options;
                  this.modules = {};
                }
                _createClass(Theme2, [{
                  key: "init",
                  value: function init() {
                    var _this = this;
                    Object.keys(this.options.modules).forEach(function(name) {
                      if (_this.modules[name] == null) {
                        _this.addModule(name);
                      }
                    });
                  }
                }, {
                  key: "addModule",
                  value: function addModule(name) {
                    var moduleClass = this.quill.constructor.import("modules/" + name);
                    this.modules[name] = new moduleClass(this.quill, this.options.modules[name] || {});
                    return this.modules[name];
                  }
                }]);
                return Theme2;
              }();
              Theme.DEFAULTS = {
                modules: {}
              };
              Theme.themes = {
                "default": Theme
              };
              exports3.default = Theme;
            },
            /* 35 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _text = __webpack_require__(7);
              var _text2 = _interopRequireDefault(_text);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var GUARD_TEXT = "\uFEFF";
              var Embed = function(_Parchment$Embed) {
                _inherits(Embed2, _Parchment$Embed);
                function Embed2(node) {
                  _classCallCheck(this, Embed2);
                  var _this = _possibleConstructorReturn(this, (Embed2.__proto__ || Object.getPrototypeOf(Embed2)).call(this, node));
                  _this.contentNode = document.createElement("span");
                  _this.contentNode.setAttribute("contenteditable", false);
                  [].slice.call(_this.domNode.childNodes).forEach(function(childNode) {
                    _this.contentNode.appendChild(childNode);
                  });
                  _this.leftGuard = document.createTextNode(GUARD_TEXT);
                  _this.rightGuard = document.createTextNode(GUARD_TEXT);
                  _this.domNode.appendChild(_this.leftGuard);
                  _this.domNode.appendChild(_this.contentNode);
                  _this.domNode.appendChild(_this.rightGuard);
                  return _this;
                }
                _createClass(Embed2, [{
                  key: "index",
                  value: function index(node, offset2) {
                    if (node === this.leftGuard)
                      return 0;
                    if (node === this.rightGuard)
                      return 1;
                    return _get(Embed2.prototype.__proto__ || Object.getPrototypeOf(Embed2.prototype), "index", this).call(this, node, offset2);
                  }
                }, {
                  key: "restore",
                  value: function restore(node) {
                    var range = void 0, textNode = void 0;
                    var text2 = node.data.split(GUARD_TEXT).join("");
                    if (node === this.leftGuard) {
                      if (this.prev instanceof _text2.default) {
                        var prevLength = this.prev.length();
                        this.prev.insertAt(prevLength, text2);
                        range = {
                          startNode: this.prev.domNode,
                          startOffset: prevLength + text2.length
                        };
                      } else {
                        textNode = document.createTextNode(text2);
                        this.parent.insertBefore(_parchment2.default.create(textNode), this);
                        range = {
                          startNode: textNode,
                          startOffset: text2.length
                        };
                      }
                    } else if (node === this.rightGuard) {
                      if (this.next instanceof _text2.default) {
                        this.next.insertAt(0, text2);
                        range = {
                          startNode: this.next.domNode,
                          startOffset: text2.length
                        };
                      } else {
                        textNode = document.createTextNode(text2);
                        this.parent.insertBefore(_parchment2.default.create(textNode), this.next);
                        range = {
                          startNode: textNode,
                          startOffset: text2.length
                        };
                      }
                    }
                    node.data = GUARD_TEXT;
                    return range;
                  }
                }, {
                  key: "update",
                  value: function update(mutations, context) {
                    var _this2 = this;
                    mutations.forEach(function(mutation) {
                      if (mutation.type === "characterData" && (mutation.target === _this2.leftGuard || mutation.target === _this2.rightGuard)) {
                        var range = _this2.restore(mutation.target);
                        if (range)
                          context.range = range;
                      }
                    });
                  }
                }]);
                return Embed2;
              }(_parchment2.default.Embed);
              exports3.default = Embed;
            },
            /* 36 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.AlignStyle = exports3.AlignClass = exports3.AlignAttribute = void 0;
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              var config2 = {
                scope: _parchment2.default.Scope.BLOCK,
                whitelist: ["right", "center", "justify"]
              };
              var AlignAttribute = new _parchment2.default.Attributor.Attribute("align", "align", config2);
              var AlignClass = new _parchment2.default.Attributor.Class("align", "ql-align", config2);
              var AlignStyle = new _parchment2.default.Attributor.Style("align", "text-align", config2);
              exports3.AlignAttribute = AlignAttribute;
              exports3.AlignClass = AlignClass;
              exports3.AlignStyle = AlignStyle;
            },
            /* 37 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.BackgroundStyle = exports3.BackgroundClass = void 0;
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _color = __webpack_require__(26);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              var BackgroundClass = new _parchment2.default.Attributor.Class("background", "ql-bg", {
                scope: _parchment2.default.Scope.INLINE
              });
              var BackgroundStyle = new _color.ColorAttributor("background", "background-color", {
                scope: _parchment2.default.Scope.INLINE
              });
              exports3.BackgroundClass = BackgroundClass;
              exports3.BackgroundStyle = BackgroundStyle;
            },
            /* 38 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.DirectionStyle = exports3.DirectionClass = exports3.DirectionAttribute = void 0;
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              var config2 = {
                scope: _parchment2.default.Scope.BLOCK,
                whitelist: ["rtl"]
              };
              var DirectionAttribute = new _parchment2.default.Attributor.Attribute("direction", "dir", config2);
              var DirectionClass = new _parchment2.default.Attributor.Class("direction", "ql-direction", config2);
              var DirectionStyle = new _parchment2.default.Attributor.Style("direction", "direction", config2);
              exports3.DirectionAttribute = DirectionAttribute;
              exports3.DirectionClass = DirectionClass;
              exports3.DirectionStyle = DirectionStyle;
            },
            /* 39 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.FontClass = exports3.FontStyle = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var config2 = {
                scope: _parchment2.default.Scope.INLINE,
                whitelist: ["serif", "monospace"]
              };
              var FontClass = new _parchment2.default.Attributor.Class("font", "ql-font", config2);
              var FontStyleAttributor = function(_Parchment$Attributor) {
                _inherits(FontStyleAttributor2, _Parchment$Attributor);
                function FontStyleAttributor2() {
                  _classCallCheck(this, FontStyleAttributor2);
                  return _possibleConstructorReturn(this, (FontStyleAttributor2.__proto__ || Object.getPrototypeOf(FontStyleAttributor2)).apply(this, arguments));
                }
                _createClass(FontStyleAttributor2, [{
                  key: "value",
                  value: function value(node) {
                    return _get(FontStyleAttributor2.prototype.__proto__ || Object.getPrototypeOf(FontStyleAttributor2.prototype), "value", this).call(this, node).replace(/["']/g, "");
                  }
                }]);
                return FontStyleAttributor2;
              }(_parchment2.default.Attributor.Style);
              var FontStyle = new FontStyleAttributor("font", "font-family", config2);
              exports3.FontStyle = FontStyle;
              exports3.FontClass = FontClass;
            },
            /* 40 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.SizeStyle = exports3.SizeClass = void 0;
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              var SizeClass = new _parchment2.default.Attributor.Class("size", "ql-size", {
                scope: _parchment2.default.Scope.INLINE,
                whitelist: ["small", "large", "huge"]
              });
              var SizeStyle = new _parchment2.default.Attributor.Style("size", "font-size", {
                scope: _parchment2.default.Scope.INLINE,
                whitelist: ["10px", "18px", "32px"]
              });
              exports3.SizeClass = SizeClass;
              exports3.SizeStyle = SizeStyle;
            },
            /* 41 */
            /***/
            function(module3, exports3, __webpack_require__) {
              module3.exports = {
                "align": {
                  "": __webpack_require__(76),
                  "center": __webpack_require__(77),
                  "right": __webpack_require__(78),
                  "justify": __webpack_require__(79)
                },
                "background": __webpack_require__(80),
                "blockquote": __webpack_require__(81),
                "bold": __webpack_require__(82),
                "clean": __webpack_require__(83),
                "code": __webpack_require__(58),
                "code-block": __webpack_require__(58),
                "color": __webpack_require__(84),
                "direction": {
                  "": __webpack_require__(85),
                  "rtl": __webpack_require__(86)
                },
                "float": {
                  "center": __webpack_require__(87),
                  "full": __webpack_require__(88),
                  "left": __webpack_require__(89),
                  "right": __webpack_require__(90)
                },
                "formula": __webpack_require__(91),
                "header": {
                  "1": __webpack_require__(92),
                  "2": __webpack_require__(93)
                },
                "italic": __webpack_require__(94),
                "image": __webpack_require__(95),
                "indent": {
                  "+1": __webpack_require__(96),
                  "-1": __webpack_require__(97)
                },
                "link": __webpack_require__(98),
                "list": {
                  "ordered": __webpack_require__(99),
                  "bullet": __webpack_require__(100),
                  "check": __webpack_require__(101)
                },
                "script": {
                  "sub": __webpack_require__(102),
                  "super": __webpack_require__(103)
                },
                "strike": __webpack_require__(104),
                "underline": __webpack_require__(105),
                "video": __webpack_require__(106)
              };
            },
            /* 42 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.getLastChangeIndex = exports3.default = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _quill = __webpack_require__(5);
              var _quill2 = _interopRequireDefault(_quill);
              var _module = __webpack_require__(9);
              var _module2 = _interopRequireDefault(_module);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var History = function(_Module) {
                _inherits(History2, _Module);
                function History2(quill2, options) {
                  _classCallCheck(this, History2);
                  var _this = _possibleConstructorReturn(this, (History2.__proto__ || Object.getPrototypeOf(History2)).call(this, quill2, options));
                  _this.lastRecorded = 0;
                  _this.ignoreChange = false;
                  _this.clear();
                  _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function(eventName, delta, oldDelta, source) {
                    if (eventName !== _quill2.default.events.TEXT_CHANGE || _this.ignoreChange)
                      return;
                    if (!_this.options.userOnly || source === _quill2.default.sources.USER) {
                      _this.record(delta, oldDelta);
                    } else {
                      _this.transform(delta);
                    }
                  });
                  _this.quill.keyboard.addBinding({ key: "Z", shortKey: true }, _this.undo.bind(_this));
                  _this.quill.keyboard.addBinding({ key: "Z", shortKey: true, shiftKey: true }, _this.redo.bind(_this));
                  if (/Win/i.test(navigator.platform)) {
                    _this.quill.keyboard.addBinding({ key: "Y", shortKey: true }, _this.redo.bind(_this));
                  }
                  return _this;
                }
                _createClass(History2, [{
                  key: "change",
                  value: function change(source, dest) {
                    if (this.stack[source].length === 0)
                      return;
                    var delta = this.stack[source].pop();
                    this.stack[dest].push(delta);
                    this.lastRecorded = 0;
                    this.ignoreChange = true;
                    this.quill.updateContents(delta[source], _quill2.default.sources.USER);
                    this.ignoreChange = false;
                    var index = getLastChangeIndex(delta[source]);
                    this.quill.setSelection(index);
                  }
                }, {
                  key: "clear",
                  value: function clear() {
                    this.stack = { undo: [], redo: [] };
                  }
                }, {
                  key: "cutoff",
                  value: function cutoff() {
                    this.lastRecorded = 0;
                  }
                }, {
                  key: "record",
                  value: function record(changeDelta, oldDelta) {
                    if (changeDelta.ops.length === 0)
                      return;
                    this.stack.redo = [];
                    var undoDelta = this.quill.getContents().diff(oldDelta);
                    var timestamp = Date.now();
                    if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {
                      var delta = this.stack.undo.pop();
                      undoDelta = undoDelta.compose(delta.undo);
                      changeDelta = delta.redo.compose(changeDelta);
                    } else {
                      this.lastRecorded = timestamp;
                    }
                    this.stack.undo.push({
                      redo: changeDelta,
                      undo: undoDelta
                    });
                    if (this.stack.undo.length > this.options.maxStack) {
                      this.stack.undo.shift();
                    }
                  }
                }, {
                  key: "redo",
                  value: function redo() {
                    this.change("redo", "undo");
                  }
                }, {
                  key: "transform",
                  value: function transform(delta) {
                    this.stack.undo.forEach(function(change) {
                      change.undo = delta.transform(change.undo, true);
                      change.redo = delta.transform(change.redo, true);
                    });
                    this.stack.redo.forEach(function(change) {
                      change.undo = delta.transform(change.undo, true);
                      change.redo = delta.transform(change.redo, true);
                    });
                  }
                }, {
                  key: "undo",
                  value: function undo() {
                    this.change("undo", "redo");
                  }
                }]);
                return History2;
              }(_module2.default);
              History.DEFAULTS = {
                delay: 1e3,
                maxStack: 100,
                userOnly: false
              };
              function endsWithNewlineChange(delta) {
                var lastOp = delta.ops[delta.ops.length - 1];
                if (lastOp == null)
                  return false;
                if (lastOp.insert != null) {
                  return typeof lastOp.insert === "string" && lastOp.insert.endsWith("\n");
                }
                if (lastOp.attributes != null) {
                  return Object.keys(lastOp.attributes).some(function(attr) {
                    return _parchment2.default.query(attr, _parchment2.default.Scope.BLOCK) != null;
                  });
                }
                return false;
              }
              function getLastChangeIndex(delta) {
                var deleteLength = delta.reduce(function(length, op) {
                  length += op.delete || 0;
                  return length;
                }, 0);
                var changeIndex = delta.length() - deleteLength;
                if (endsWithNewlineChange(delta)) {
                  changeIndex -= 1;
                }
                return changeIndex;
              }
              exports3.default = History;
              exports3.getLastChangeIndex = getLastChangeIndex;
            },
            /* 43 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.default = exports3.BaseTooltip = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _extend = __webpack_require__(3);
              var _extend2 = _interopRequireDefault(_extend);
              var _quillDelta = __webpack_require__(2);
              var _quillDelta2 = _interopRequireDefault(_quillDelta);
              var _emitter = __webpack_require__(8);
              var _emitter2 = _interopRequireDefault(_emitter);
              var _keyboard = __webpack_require__(23);
              var _keyboard2 = _interopRequireDefault(_keyboard);
              var _theme = __webpack_require__(34);
              var _theme2 = _interopRequireDefault(_theme);
              var _colorPicker = __webpack_require__(59);
              var _colorPicker2 = _interopRequireDefault(_colorPicker);
              var _iconPicker = __webpack_require__(60);
              var _iconPicker2 = _interopRequireDefault(_iconPicker);
              var _picker = __webpack_require__(28);
              var _picker2 = _interopRequireDefault(_picker);
              var _tooltip = __webpack_require__(61);
              var _tooltip2 = _interopRequireDefault(_tooltip);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var ALIGNS = [false, "center", "right", "justify"];
              var COLORS2 = ["#000000", "#e60000", "#ff9900", "#ffff00", "#008a00", "#0066cc", "#9933ff", "#ffffff", "#facccc", "#ffebcc", "#ffffcc", "#cce8cc", "#cce0f5", "#ebd6ff", "#bbbbbb", "#f06666", "#ffc266", "#ffff66", "#66b966", "#66a3e0", "#c285ff", "#888888", "#a10000", "#b26b00", "#b2b200", "#006100", "#0047b2", "#6b24b2", "#444444", "#5c0000", "#663d00", "#666600", "#003700", "#002966", "#3d1466"];
              var FONTS = [false, "serif", "monospace"];
              var HEADERS = ["1", "2", "3", false];
              var SIZES = ["small", false, "large", "huge"];
              var BaseTheme = function(_Theme) {
                _inherits(BaseTheme2, _Theme);
                function BaseTheme2(quill2, options) {
                  _classCallCheck(this, BaseTheme2);
                  var _this = _possibleConstructorReturn(this, (BaseTheme2.__proto__ || Object.getPrototypeOf(BaseTheme2)).call(this, quill2, options));
                  var listener = function listener2(e) {
                    if (!document.body.contains(quill2.root)) {
                      return document.body.removeEventListener("click", listener2);
                    }
                    if (_this.tooltip != null && !_this.tooltip.root.contains(e.target) && document.activeElement !== _this.tooltip.textbox && !_this.quill.hasFocus()) {
                      _this.tooltip.hide();
                    }
                    if (_this.pickers != null) {
                      _this.pickers.forEach(function(picker) {
                        if (!picker.container.contains(e.target)) {
                          picker.close();
                        }
                      });
                    }
                  };
                  quill2.emitter.listenDOM("click", document.body, listener);
                  return _this;
                }
                _createClass(BaseTheme2, [{
                  key: "addModule",
                  value: function addModule(name) {
                    var module4 = _get(BaseTheme2.prototype.__proto__ || Object.getPrototypeOf(BaseTheme2.prototype), "addModule", this).call(this, name);
                    if (name === "toolbar") {
                      this.extendToolbar(module4);
                    }
                    return module4;
                  }
                }, {
                  key: "buildButtons",
                  value: function buildButtons(buttons, icons2) {
                    buttons.forEach(function(button) {
                      var className = button.getAttribute("class") || "";
                      className.split(/\s+/).forEach(function(name) {
                        if (!name.startsWith("ql-"))
                          return;
                        name = name.slice("ql-".length);
                        if (icons2[name] == null)
                          return;
                        if (name === "direction") {
                          button.innerHTML = icons2[name][""] + icons2[name]["rtl"];
                        } else if (typeof icons2[name] === "string") {
                          button.innerHTML = icons2[name];
                        } else {
                          var value = button.value || "";
                          if (value != null && icons2[name][value]) {
                            button.innerHTML = icons2[name][value];
                          }
                        }
                      });
                    });
                  }
                }, {
                  key: "buildPickers",
                  value: function buildPickers(selects, icons2) {
                    var _this2 = this;
                    this.pickers = selects.map(function(select) {
                      if (select.classList.contains("ql-align")) {
                        if (select.querySelector("option") == null) {
                          fillSelect(select, ALIGNS);
                        }
                        return new _iconPicker2.default(select, icons2.align);
                      } else if (select.classList.contains("ql-background") || select.classList.contains("ql-color")) {
                        var format = select.classList.contains("ql-background") ? "background" : "color";
                        if (select.querySelector("option") == null) {
                          fillSelect(select, COLORS2, format === "background" ? "#ffffff" : "#000000");
                        }
                        return new _colorPicker2.default(select, icons2[format]);
                      } else {
                        if (select.querySelector("option") == null) {
                          if (select.classList.contains("ql-font")) {
                            fillSelect(select, FONTS);
                          } else if (select.classList.contains("ql-header")) {
                            fillSelect(select, HEADERS);
                          } else if (select.classList.contains("ql-size")) {
                            fillSelect(select, SIZES);
                          }
                        }
                        return new _picker2.default(select);
                      }
                    });
                    var update = function update2() {
                      _this2.pickers.forEach(function(picker) {
                        picker.update();
                      });
                    };
                    this.quill.on(_emitter2.default.events.EDITOR_CHANGE, update);
                  }
                }]);
                return BaseTheme2;
              }(_theme2.default);
              BaseTheme.DEFAULTS = (0, _extend2.default)(true, {}, _theme2.default.DEFAULTS, {
                modules: {
                  toolbar: {
                    handlers: {
                      formula: function formula() {
                        this.quill.theme.tooltip.edit("formula");
                      },
                      image: function image() {
                        var _this3 = this;
                        var fileInput = this.container.querySelector("input.ql-image[type=file]");
                        if (fileInput == null) {
                          fileInput = document.createElement("input");
                          fileInput.setAttribute("type", "file");
                          fileInput.setAttribute("accept", "image/png, image/gif, image/jpeg, image/bmp, image/x-icon");
                          fileInput.classList.add("ql-image");
                          fileInput.addEventListener("change", function() {
                            if (fileInput.files != null && fileInput.files[0] != null) {
                              var reader = new FileReader();
                              reader.onload = function(e) {
                                var range = _this3.quill.getSelection(true);
                                _this3.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert({ image: e.target.result }), _emitter2.default.sources.USER);
                                _this3.quill.setSelection(range.index + 1, _emitter2.default.sources.SILENT);
                                fileInput.value = "";
                              };
                              reader.readAsDataURL(fileInput.files[0]);
                            }
                          });
                          this.container.appendChild(fileInput);
                        }
                        fileInput.click();
                      },
                      video: function video() {
                        this.quill.theme.tooltip.edit("video");
                      }
                    }
                  }
                }
              });
              var BaseTooltip = function(_Tooltip) {
                _inherits(BaseTooltip2, _Tooltip);
                function BaseTooltip2(quill2, boundsContainer) {
                  _classCallCheck(this, BaseTooltip2);
                  var _this4 = _possibleConstructorReturn(this, (BaseTooltip2.__proto__ || Object.getPrototypeOf(BaseTooltip2)).call(this, quill2, boundsContainer));
                  _this4.textbox = _this4.root.querySelector('input[type="text"]');
                  _this4.listen();
                  return _this4;
                }
                _createClass(BaseTooltip2, [{
                  key: "listen",
                  value: function listen() {
                    var _this5 = this;
                    this.textbox.addEventListener("keydown", function(event) {
                      if (_keyboard2.default.match(event, "enter")) {
                        _this5.save();
                        event.preventDefault();
                      } else if (_keyboard2.default.match(event, "escape")) {
                        _this5.cancel();
                        event.preventDefault();
                      }
                    });
                  }
                }, {
                  key: "cancel",
                  value: function cancel() {
                    this.hide();
                  }
                }, {
                  key: "edit",
                  value: function edit() {
                    var mode = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "link";
                    var preview = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                    this.root.classList.remove("ql-hidden");
                    this.root.classList.add("ql-editing");
                    if (preview != null) {
                      this.textbox.value = preview;
                    } else if (mode !== this.root.getAttribute("data-mode")) {
                      this.textbox.value = "";
                    }
                    this.position(this.quill.getBounds(this.quill.selection.savedRange));
                    this.textbox.select();
                    this.textbox.setAttribute("placeholder", this.textbox.getAttribute("data-" + mode) || "");
                    this.root.setAttribute("data-mode", mode);
                  }
                }, {
                  key: "restoreFocus",
                  value: function restoreFocus() {
                    var scrollTop = this.quill.scrollingContainer.scrollTop;
                    this.quill.focus();
                    this.quill.scrollingContainer.scrollTop = scrollTop;
                  }
                }, {
                  key: "save",
                  value: function save() {
                    var value = this.textbox.value;
                    switch (this.root.getAttribute("data-mode")) {
                      case "link": {
                        var scrollTop = this.quill.root.scrollTop;
                        if (this.linkRange) {
                          this.quill.formatText(this.linkRange, "link", value, _emitter2.default.sources.USER);
                          delete this.linkRange;
                        } else {
                          this.restoreFocus();
                          this.quill.format("link", value, _emitter2.default.sources.USER);
                        }
                        this.quill.root.scrollTop = scrollTop;
                        break;
                      }
                      case "video": {
                        value = extractVideoUrl(value);
                      }
                      case "formula": {
                        if (!value)
                          break;
                        var range = this.quill.getSelection(true);
                        if (range != null) {
                          var index = range.index + range.length;
                          this.quill.insertEmbed(index, this.root.getAttribute("data-mode"), value, _emitter2.default.sources.USER);
                          if (this.root.getAttribute("data-mode") === "formula") {
                            this.quill.insertText(index + 1, " ", _emitter2.default.sources.USER);
                          }
                          this.quill.setSelection(index + 2, _emitter2.default.sources.USER);
                        }
                        break;
                      }
                    }
                    this.textbox.value = "";
                    this.hide();
                  }
                }]);
                return BaseTooltip2;
              }(_tooltip2.default);
              function extractVideoUrl(url) {
                var match = url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtube\.com\/watch.*v=([a-zA-Z0-9_-]+)/) || url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtu\.be\/([a-zA-Z0-9_-]+)/);
                if (match) {
                  return (match[1] || "https") + "://www.youtube.com/embed/" + match[2] + "?showinfo=0";
                }
                if (match = url.match(/^(?:(https?):\/\/)?(?:www\.)?vimeo\.com\/(\d+)/)) {
                  return (match[1] || "https") + "://player.vimeo.com/video/" + match[2] + "/";
                }
                return url;
              }
              function fillSelect(select, values) {
                var defaultValue = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
                values.forEach(function(value) {
                  var option = document.createElement("option");
                  if (value === defaultValue) {
                    option.setAttribute("selected", "selected");
                  } else {
                    option.setAttribute("value", value);
                  }
                  select.appendChild(option);
                });
              }
              exports3.BaseTooltip = BaseTooltip;
              exports3.default = BaseTheme;
            },
            /* 44 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", { value: true });
              var LinkedList = (
                /** @class */
                function() {
                  function LinkedList2() {
                    this.head = this.tail = null;
                    this.length = 0;
                  }
                  LinkedList2.prototype.append = function() {
                    var nodes = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                      nodes[_i] = arguments[_i];
                    }
                    this.insertBefore(nodes[0], null);
                    if (nodes.length > 1) {
                      this.append.apply(this, nodes.slice(1));
                    }
                  };
                  LinkedList2.prototype.contains = function(node) {
                    var cur, next = this.iterator();
                    while (cur = next()) {
                      if (cur === node)
                        return true;
                    }
                    return false;
                  };
                  LinkedList2.prototype.insertBefore = function(node, refNode) {
                    if (!node)
                      return;
                    node.next = refNode;
                    if (refNode != null) {
                      node.prev = refNode.prev;
                      if (refNode.prev != null) {
                        refNode.prev.next = node;
                      }
                      refNode.prev = node;
                      if (refNode === this.head) {
                        this.head = node;
                      }
                    } else if (this.tail != null) {
                      this.tail.next = node;
                      node.prev = this.tail;
                      this.tail = node;
                    } else {
                      node.prev = null;
                      this.head = this.tail = node;
                    }
                    this.length += 1;
                  };
                  LinkedList2.prototype.offset = function(target) {
                    var index = 0, cur = this.head;
                    while (cur != null) {
                      if (cur === target)
                        return index;
                      index += cur.length();
                      cur = cur.next;
                    }
                    return -1;
                  };
                  LinkedList2.prototype.remove = function(node) {
                    if (!this.contains(node))
                      return;
                    if (node.prev != null)
                      node.prev.next = node.next;
                    if (node.next != null)
                      node.next.prev = node.prev;
                    if (node === this.head)
                      this.head = node.next;
                    if (node === this.tail)
                      this.tail = node.prev;
                    this.length -= 1;
                  };
                  LinkedList2.prototype.iterator = function(curNode) {
                    if (curNode === void 0) {
                      curNode = this.head;
                    }
                    return function() {
                      var ret = curNode;
                      if (curNode != null)
                        curNode = curNode.next;
                      return ret;
                    };
                  };
                  LinkedList2.prototype.find = function(index, inclusive) {
                    if (inclusive === void 0) {
                      inclusive = false;
                    }
                    var cur, next = this.iterator();
                    while (cur = next()) {
                      var length = cur.length();
                      if (index < length || inclusive && index === length && (cur.next == null || cur.next.length() !== 0)) {
                        return [cur, index];
                      }
                      index -= length;
                    }
                    return [null, 0];
                  };
                  LinkedList2.prototype.forEach = function(callback) {
                    var cur, next = this.iterator();
                    while (cur = next()) {
                      callback(cur);
                    }
                  };
                  LinkedList2.prototype.forEachAt = function(index, length, callback) {
                    if (length <= 0)
                      return;
                    var _a2 = this.find(index), startNode = _a2[0], offset2 = _a2[1];
                    var cur, curIndex = index - offset2, next = this.iterator(startNode);
                    while ((cur = next()) && curIndex < index + length) {
                      var curLength = cur.length();
                      if (index > curIndex) {
                        callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));
                      } else {
                        callback(cur, 0, Math.min(curLength, index + length - curIndex));
                      }
                      curIndex += curLength;
                    }
                  };
                  LinkedList2.prototype.map = function(callback) {
                    return this.reduce(function(memo, cur) {
                      memo.push(callback(cur));
                      return memo;
                    }, []);
                  };
                  LinkedList2.prototype.reduce = function(callback, memo) {
                    var cur, next = this.iterator();
                    while (cur = next()) {
                      memo = callback(memo, cur);
                    }
                    return memo;
                  };
                  return LinkedList2;
                }()
              );
              exports3.default = LinkedList;
            },
            /* 45 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var container_1 = __webpack_require__(17);
              var Registry = __webpack_require__(1);
              var OBSERVER_CONFIG = {
                attributes: true,
                characterData: true,
                characterDataOldValue: true,
                childList: true,
                subtree: true
              };
              var MAX_OPTIMIZE_ITERATIONS = 100;
              var ScrollBlot = (
                /** @class */
                function(_super) {
                  __extends(ScrollBlot2, _super);
                  function ScrollBlot2(node) {
                    var _this = _super.call(this, node) || this;
                    _this.scroll = _this;
                    _this.observer = new MutationObserver(function(mutations) {
                      _this.update(mutations);
                    });
                    _this.observer.observe(_this.domNode, OBSERVER_CONFIG);
                    _this.attach();
                    return _this;
                  }
                  ScrollBlot2.prototype.detach = function() {
                    _super.prototype.detach.call(this);
                    this.observer.disconnect();
                  };
                  ScrollBlot2.prototype.deleteAt = function(index, length) {
                    this.update();
                    if (index === 0 && length === this.length()) {
                      this.children.forEach(function(child) {
                        child.remove();
                      });
                    } else {
                      _super.prototype.deleteAt.call(this, index, length);
                    }
                  };
                  ScrollBlot2.prototype.formatAt = function(index, length, name, value) {
                    this.update();
                    _super.prototype.formatAt.call(this, index, length, name, value);
                  };
                  ScrollBlot2.prototype.insertAt = function(index, value, def) {
                    this.update();
                    _super.prototype.insertAt.call(this, index, value, def);
                  };
                  ScrollBlot2.prototype.optimize = function(mutations, context) {
                    var _this = this;
                    if (mutations === void 0) {
                      mutations = [];
                    }
                    if (context === void 0) {
                      context = {};
                    }
                    _super.prototype.optimize.call(this, context);
                    var records = [].slice.call(this.observer.takeRecords());
                    while (records.length > 0)
                      mutations.push(records.pop());
                    var mark = function(blot, markParent) {
                      if (markParent === void 0) {
                        markParent = true;
                      }
                      if (blot == null || blot === _this)
                        return;
                      if (blot.domNode.parentNode == null)
                        return;
                      if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                        blot.domNode[Registry.DATA_KEY].mutations = [];
                      }
                      if (markParent)
                        mark(blot.parent);
                    };
                    var optimize = function(blot) {
                      if (
                        // @ts-ignore
                        blot.domNode[Registry.DATA_KEY] == null || // @ts-ignore
                        blot.domNode[Registry.DATA_KEY].mutations == null
                      ) {
                        return;
                      }
                      if (blot instanceof container_1.default) {
                        blot.children.forEach(optimize);
                      }
                      blot.optimize(context);
                    };
                    var remaining = mutations;
                    for (var i = 0; remaining.length > 0; i += 1) {
                      if (i >= MAX_OPTIMIZE_ITERATIONS) {
                        throw new Error("[Parchment] Maximum optimize iterations reached");
                      }
                      remaining.forEach(function(mutation) {
                        var blot = Registry.find(mutation.target, true);
                        if (blot == null)
                          return;
                        if (blot.domNode === mutation.target) {
                          if (mutation.type === "childList") {
                            mark(Registry.find(mutation.previousSibling, false));
                            [].forEach.call(mutation.addedNodes, function(node) {
                              var child = Registry.find(node, false);
                              mark(child, false);
                              if (child instanceof container_1.default) {
                                child.children.forEach(function(grandChild) {
                                  mark(grandChild, false);
                                });
                              }
                            });
                          } else if (mutation.type === "attributes") {
                            mark(blot.prev);
                          }
                        }
                        mark(blot);
                      });
                      this.children.forEach(optimize);
                      remaining = [].slice.call(this.observer.takeRecords());
                      records = remaining.slice();
                      while (records.length > 0)
                        mutations.push(records.pop());
                    }
                  };
                  ScrollBlot2.prototype.update = function(mutations, context) {
                    var _this = this;
                    if (context === void 0) {
                      context = {};
                    }
                    mutations = mutations || this.observer.takeRecords();
                    mutations.map(function(mutation) {
                      var blot = Registry.find(mutation.target, true);
                      if (blot == null)
                        return null;
                      if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                        blot.domNode[Registry.DATA_KEY].mutations = [mutation];
                        return blot;
                      } else {
                        blot.domNode[Registry.DATA_KEY].mutations.push(mutation);
                        return null;
                      }
                    }).forEach(function(blot) {
                      if (blot == null || blot === _this || //@ts-ignore
                      blot.domNode[Registry.DATA_KEY] == null)
                        return;
                      blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);
                    });
                    if (this.domNode[Registry.DATA_KEY].mutations != null) {
                      _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);
                    }
                    this.optimize(mutations, context);
                  };
                  ScrollBlot2.blotName = "scroll";
                  ScrollBlot2.defaultChild = "block";
                  ScrollBlot2.scope = Registry.Scope.BLOCK_BLOT;
                  ScrollBlot2.tagName = "DIV";
                  return ScrollBlot2;
                }(container_1.default)
              );
              exports3.default = ScrollBlot;
            },
            /* 46 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var format_1 = __webpack_require__(18);
              var Registry = __webpack_require__(1);
              function isEqual2(obj1, obj2) {
                if (Object.keys(obj1).length !== Object.keys(obj2).length)
                  return false;
                for (var prop in obj1) {
                  if (obj1[prop] !== obj2[prop])
                    return false;
                }
                return true;
              }
              var InlineBlot = (
                /** @class */
                function(_super) {
                  __extends(InlineBlot2, _super);
                  function InlineBlot2() {
                    return _super !== null && _super.apply(this, arguments) || this;
                  }
                  InlineBlot2.formats = function(domNode) {
                    if (domNode.tagName === InlineBlot2.tagName)
                      return void 0;
                    return _super.formats.call(this, domNode);
                  };
                  InlineBlot2.prototype.format = function(name, value) {
                    var _this = this;
                    if (name === this.statics.blotName && !value) {
                      this.children.forEach(function(child) {
                        if (!(child instanceof format_1.default)) {
                          child = child.wrap(InlineBlot2.blotName, true);
                        }
                        _this.attributes.copy(child);
                      });
                      this.unwrap();
                    } else {
                      _super.prototype.format.call(this, name, value);
                    }
                  };
                  InlineBlot2.prototype.formatAt = function(index, length, name, value) {
                    if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {
                      var blot = this.isolate(index, length);
                      blot.format(name, value);
                    } else {
                      _super.prototype.formatAt.call(this, index, length, name, value);
                    }
                  };
                  InlineBlot2.prototype.optimize = function(context) {
                    _super.prototype.optimize.call(this, context);
                    var formats = this.formats();
                    if (Object.keys(formats).length === 0) {
                      return this.unwrap();
                    }
                    var next = this.next;
                    if (next instanceof InlineBlot2 && next.prev === this && isEqual2(formats, next.formats())) {
                      next.moveChildren(this);
                      next.remove();
                    }
                  };
                  InlineBlot2.blotName = "inline";
                  InlineBlot2.scope = Registry.Scope.INLINE_BLOT;
                  InlineBlot2.tagName = "SPAN";
                  return InlineBlot2;
                }(format_1.default)
              );
              exports3.default = InlineBlot;
            },
            /* 47 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var format_1 = __webpack_require__(18);
              var Registry = __webpack_require__(1);
              var BlockBlot = (
                /** @class */
                function(_super) {
                  __extends(BlockBlot2, _super);
                  function BlockBlot2() {
                    return _super !== null && _super.apply(this, arguments) || this;
                  }
                  BlockBlot2.formats = function(domNode) {
                    var tagName = Registry.query(BlockBlot2.blotName).tagName;
                    if (domNode.tagName === tagName)
                      return void 0;
                    return _super.formats.call(this, domNode);
                  };
                  BlockBlot2.prototype.format = function(name, value) {
                    if (Registry.query(name, Registry.Scope.BLOCK) == null) {
                      return;
                    } else if (name === this.statics.blotName && !value) {
                      this.replaceWith(BlockBlot2.blotName);
                    } else {
                      _super.prototype.format.call(this, name, value);
                    }
                  };
                  BlockBlot2.prototype.formatAt = function(index, length, name, value) {
                    if (Registry.query(name, Registry.Scope.BLOCK) != null) {
                      this.format(name, value);
                    } else {
                      _super.prototype.formatAt.call(this, index, length, name, value);
                    }
                  };
                  BlockBlot2.prototype.insertAt = function(index, value, def) {
                    if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {
                      _super.prototype.insertAt.call(this, index, value, def);
                    } else {
                      var after = this.split(index);
                      var blot = Registry.create(value, def);
                      after.parent.insertBefore(blot, after);
                    }
                  };
                  BlockBlot2.prototype.update = function(mutations, context) {
                    if (navigator.userAgent.match(/Trident/)) {
                      this.build();
                    } else {
                      _super.prototype.update.call(this, mutations, context);
                    }
                  };
                  BlockBlot2.blotName = "block";
                  BlockBlot2.scope = Registry.Scope.BLOCK_BLOT;
                  BlockBlot2.tagName = "P";
                  return BlockBlot2;
                }(format_1.default)
              );
              exports3.default = BlockBlot;
            },
            /* 48 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var leaf_1 = __webpack_require__(19);
              var EmbedBlot = (
                /** @class */
                function(_super) {
                  __extends(EmbedBlot2, _super);
                  function EmbedBlot2() {
                    return _super !== null && _super.apply(this, arguments) || this;
                  }
                  EmbedBlot2.formats = function(domNode) {
                    return void 0;
                  };
                  EmbedBlot2.prototype.format = function(name, value) {
                    _super.prototype.formatAt.call(this, 0, this.length(), name, value);
                  };
                  EmbedBlot2.prototype.formatAt = function(index, length, name, value) {
                    if (index === 0 && length === this.length()) {
                      this.format(name, value);
                    } else {
                      _super.prototype.formatAt.call(this, index, length, name, value);
                    }
                  };
                  EmbedBlot2.prototype.formats = function() {
                    return this.statics.formats(this.domNode);
                  };
                  return EmbedBlot2;
                }(leaf_1.default)
              );
              exports3.default = EmbedBlot;
            },
            /* 49 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var __extends = this && this.__extends || function() {
                var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
                  d.__proto__ = b;
                } || function(d, b) {
                  for (var p in b)
                    if (b.hasOwnProperty(p))
                      d[p] = b[p];
                };
                return function(d, b) {
                  extendStatics(d, b);
                  function __() {
                    this.constructor = d;
                  }
                  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
                };
              }();
              Object.defineProperty(exports3, "__esModule", { value: true });
              var leaf_1 = __webpack_require__(19);
              var Registry = __webpack_require__(1);
              var TextBlot = (
                /** @class */
                function(_super) {
                  __extends(TextBlot2, _super);
                  function TextBlot2(node) {
                    var _this = _super.call(this, node) || this;
                    _this.text = _this.statics.value(_this.domNode);
                    return _this;
                  }
                  TextBlot2.create = function(value) {
                    return document.createTextNode(value);
                  };
                  TextBlot2.value = function(domNode) {
                    var text2 = domNode.data;
                    if (text2["normalize"])
                      text2 = text2["normalize"]();
                    return text2;
                  };
                  TextBlot2.prototype.deleteAt = function(index, length) {
                    this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);
                  };
                  TextBlot2.prototype.index = function(node, offset2) {
                    if (this.domNode === node) {
                      return offset2;
                    }
                    return -1;
                  };
                  TextBlot2.prototype.insertAt = function(index, value, def) {
                    if (def == null) {
                      this.text = this.text.slice(0, index) + value + this.text.slice(index);
                      this.domNode.data = this.text;
                    } else {
                      _super.prototype.insertAt.call(this, index, value, def);
                    }
                  };
                  TextBlot2.prototype.length = function() {
                    return this.text.length;
                  };
                  TextBlot2.prototype.optimize = function(context) {
                    _super.prototype.optimize.call(this, context);
                    this.text = this.statics.value(this.domNode);
                    if (this.text.length === 0) {
                      this.remove();
                    } else if (this.next instanceof TextBlot2 && this.next.prev === this) {
                      this.insertAt(this.length(), this.next.value());
                      this.next.remove();
                    }
                  };
                  TextBlot2.prototype.position = function(index, inclusive) {
                    return [this.domNode, index];
                  };
                  TextBlot2.prototype.split = function(index, force) {
                    if (force === void 0) {
                      force = false;
                    }
                    if (!force) {
                      if (index === 0)
                        return this;
                      if (index === this.length())
                        return this.next;
                    }
                    var after = Registry.create(this.domNode.splitText(index));
                    this.parent.insertBefore(after, this.next);
                    this.text = this.statics.value(this.domNode);
                    return after;
                  };
                  TextBlot2.prototype.update = function(mutations, context) {
                    var _this = this;
                    if (mutations.some(function(mutation) {
                      return mutation.type === "characterData" && mutation.target === _this.domNode;
                    })) {
                      this.text = this.statics.value(this.domNode);
                    }
                  };
                  TextBlot2.prototype.value = function() {
                    return this.text;
                  };
                  TextBlot2.blotName = "text";
                  TextBlot2.scope = Registry.Scope.INLINE_BLOT;
                  return TextBlot2;
                }(leaf_1.default)
              );
              exports3.default = TextBlot;
            },
            /* 50 */
            /***/
            function(module3, exports3, __webpack_require__) {
              var elem = document.createElement("div");
              elem.classList.toggle("test-class", false);
              if (elem.classList.contains("test-class")) {
                var _toggle = DOMTokenList.prototype.toggle;
                DOMTokenList.prototype.toggle = function(token, force) {
                  if (arguments.length > 1 && !this.contains(token) === !force) {
                    return force;
                  } else {
                    return _toggle.call(this, token);
                  }
                };
              }
              if (!String.prototype.startsWith) {
                String.prototype.startsWith = function(searchString, position) {
                  position = position || 0;
                  return this.substr(position, searchString.length) === searchString;
                };
              }
              if (!String.prototype.endsWith) {
                String.prototype.endsWith = function(searchString, position) {
                  var subjectString = this.toString();
                  if (typeof position !== "number" || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {
                    position = subjectString.length;
                  }
                  position -= searchString.length;
                  var lastIndex = subjectString.indexOf(searchString, position);
                  return lastIndex !== -1 && lastIndex === position;
                };
              }
              if (!Array.prototype.find) {
                Object.defineProperty(Array.prototype, "find", {
                  value: function value(predicate) {
                    if (this === null) {
                      throw new TypeError("Array.prototype.find called on null or undefined");
                    }
                    if (typeof predicate !== "function") {
                      throw new TypeError("predicate must be a function");
                    }
                    var list = Object(this);
                    var length = list.length >>> 0;
                    var thisArg = arguments[1];
                    var value2;
                    for (var i = 0; i < length; i++) {
                      value2 = list[i];
                      if (predicate.call(thisArg, value2, i, list)) {
                        return value2;
                      }
                    }
                    return void 0;
                  }
                });
              }
              document.addEventListener("DOMContentLoaded", function() {
                document.execCommand("enableObjectResizing", false, false);
                document.execCommand("autoUrlDetect", false, false);
              });
            },
            /* 51 */
            /***/
            function(module3, exports3) {
              var DIFF_DELETE = -1;
              var DIFF_INSERT = 1;
              var DIFF_EQUAL = 0;
              function diff_main(text1, text2, cursor_pos) {
                if (text1 == text2) {
                  if (text1) {
                    return [[DIFF_EQUAL, text1]];
                  }
                  return [];
                }
                if (cursor_pos < 0 || text1.length < cursor_pos) {
                  cursor_pos = null;
                }
                var commonlength = diff_commonPrefix(text1, text2);
                var commonprefix = text1.substring(0, commonlength);
                text1 = text1.substring(commonlength);
                text2 = text2.substring(commonlength);
                commonlength = diff_commonSuffix(text1, text2);
                var commonsuffix = text1.substring(text1.length - commonlength);
                text1 = text1.substring(0, text1.length - commonlength);
                text2 = text2.substring(0, text2.length - commonlength);
                var diffs = diff_compute_(text1, text2);
                if (commonprefix) {
                  diffs.unshift([DIFF_EQUAL, commonprefix]);
                }
                if (commonsuffix) {
                  diffs.push([DIFF_EQUAL, commonsuffix]);
                }
                diff_cleanupMerge(diffs);
                if (cursor_pos != null) {
                  diffs = fix_cursor(diffs, cursor_pos);
                }
                diffs = fix_emoji(diffs);
                return diffs;
              }
              function diff_compute_(text1, text2) {
                var diffs;
                if (!text1) {
                  return [[DIFF_INSERT, text2]];
                }
                if (!text2) {
                  return [[DIFF_DELETE, text1]];
                }
                var longtext = text1.length > text2.length ? text1 : text2;
                var shorttext = text1.length > text2.length ? text2 : text1;
                var i = longtext.indexOf(shorttext);
                if (i != -1) {
                  diffs = [
                    [DIFF_INSERT, longtext.substring(0, i)],
                    [DIFF_EQUAL, shorttext],
                    [DIFF_INSERT, longtext.substring(i + shorttext.length)]
                  ];
                  if (text1.length > text2.length) {
                    diffs[0][0] = diffs[2][0] = DIFF_DELETE;
                  }
                  return diffs;
                }
                if (shorttext.length == 1) {
                  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
                }
                var hm = diff_halfMatch_(text1, text2);
                if (hm) {
                  var text1_a = hm[0];
                  var text1_b = hm[1];
                  var text2_a = hm[2];
                  var text2_b = hm[3];
                  var mid_common = hm[4];
                  var diffs_a = diff_main(text1_a, text2_a);
                  var diffs_b = diff_main(text1_b, text2_b);
                  return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
                }
                return diff_bisect_(text1, text2);
              }
              function diff_bisect_(text1, text2) {
                var text1_length = text1.length;
                var text2_length = text2.length;
                var max_d = Math.ceil((text1_length + text2_length) / 2);
                var v_offset = max_d;
                var v_length = 2 * max_d;
                var v1 = new Array(v_length);
                var v2 = new Array(v_length);
                for (var x = 0; x < v_length; x++) {
                  v1[x] = -1;
                  v2[x] = -1;
                }
                v1[v_offset + 1] = 0;
                v2[v_offset + 1] = 0;
                var delta = text1_length - text2_length;
                var front = delta % 2 != 0;
                var k1start = 0;
                var k1end = 0;
                var k2start = 0;
                var k2end = 0;
                for (var d = 0; d < max_d; d++) {
                  for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {
                    var k1_offset = v_offset + k1;
                    var x1;
                    if (k1 == -d || k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1]) {
                      x1 = v1[k1_offset + 1];
                    } else {
                      x1 = v1[k1_offset - 1] + 1;
                    }
                    var y1 = x1 - k1;
                    while (x1 < text1_length && y1 < text2_length && text1.charAt(x1) == text2.charAt(y1)) {
                      x1++;
                      y1++;
                    }
                    v1[k1_offset] = x1;
                    if (x1 > text1_length) {
                      k1end += 2;
                    } else if (y1 > text2_length) {
                      k1start += 2;
                    } else if (front) {
                      var k2_offset = v_offset + delta - k1;
                      if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {
                        var x2 = text1_length - v2[k2_offset];
                        if (x1 >= x2) {
                          return diff_bisectSplit_(text1, text2, x1, y1);
                        }
                      }
                    }
                  }
                  for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {
                    var k2_offset = v_offset + k2;
                    var x2;
                    if (k2 == -d || k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1]) {
                      x2 = v2[k2_offset + 1];
                    } else {
                      x2 = v2[k2_offset - 1] + 1;
                    }
                    var y2 = x2 - k2;
                    while (x2 < text1_length && y2 < text2_length && text1.charAt(text1_length - x2 - 1) == text2.charAt(text2_length - y2 - 1)) {
                      x2++;
                      y2++;
                    }
                    v2[k2_offset] = x2;
                    if (x2 > text1_length) {
                      k2end += 2;
                    } else if (y2 > text2_length) {
                      k2start += 2;
                    } else if (!front) {
                      var k1_offset = v_offset + delta - k2;
                      if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {
                        var x1 = v1[k1_offset];
                        var y1 = v_offset + x1 - k1_offset;
                        x2 = text1_length - x2;
                        if (x1 >= x2) {
                          return diff_bisectSplit_(text1, text2, x1, y1);
                        }
                      }
                    }
                  }
                }
                return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
              }
              function diff_bisectSplit_(text1, text2, x, y) {
                var text1a = text1.substring(0, x);
                var text2a = text2.substring(0, y);
                var text1b = text1.substring(x);
                var text2b = text2.substring(y);
                var diffs = diff_main(text1a, text2a);
                var diffsb = diff_main(text1b, text2b);
                return diffs.concat(diffsb);
              }
              function diff_commonPrefix(text1, text2) {
                if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
                  return 0;
                }
                var pointermin = 0;
                var pointermax = Math.min(text1.length, text2.length);
                var pointermid = pointermax;
                var pointerstart = 0;
                while (pointermin < pointermid) {
                  if (text1.substring(pointerstart, pointermid) == text2.substring(pointerstart, pointermid)) {
                    pointermin = pointermid;
                    pointerstart = pointermin;
                  } else {
                    pointermax = pointermid;
                  }
                  pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
                }
                return pointermid;
              }
              function diff_commonSuffix(text1, text2) {
                if (!text1 || !text2 || text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {
                  return 0;
                }
                var pointermin = 0;
                var pointermax = Math.min(text1.length, text2.length);
                var pointermid = pointermax;
                var pointerend = 0;
                while (pointermin < pointermid) {
                  if (text1.substring(text1.length - pointermid, text1.length - pointerend) == text2.substring(text2.length - pointermid, text2.length - pointerend)) {
                    pointermin = pointermid;
                    pointerend = pointermin;
                  } else {
                    pointermax = pointermid;
                  }
                  pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
                }
                return pointermid;
              }
              function diff_halfMatch_(text1, text2) {
                var longtext = text1.length > text2.length ? text1 : text2;
                var shorttext = text1.length > text2.length ? text2 : text1;
                if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {
                  return null;
                }
                function diff_halfMatchI_(longtext2, shorttext2, i) {
                  var seed = longtext2.substring(i, i + Math.floor(longtext2.length / 4));
                  var j = -1;
                  var best_common = "";
                  var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;
                  while ((j = shorttext2.indexOf(seed, j + 1)) != -1) {
                    var prefixLength = diff_commonPrefix(
                      longtext2.substring(i),
                      shorttext2.substring(j)
                    );
                    var suffixLength = diff_commonSuffix(
                      longtext2.substring(0, i),
                      shorttext2.substring(0, j)
                    );
                    if (best_common.length < suffixLength + prefixLength) {
                      best_common = shorttext2.substring(j - suffixLength, j) + shorttext2.substring(j, j + prefixLength);
                      best_longtext_a = longtext2.substring(0, i - suffixLength);
                      best_longtext_b = longtext2.substring(i + prefixLength);
                      best_shorttext_a = shorttext2.substring(0, j - suffixLength);
                      best_shorttext_b = shorttext2.substring(j + prefixLength);
                    }
                  }
                  if (best_common.length * 2 >= longtext2.length) {
                    return [
                      best_longtext_a,
                      best_longtext_b,
                      best_shorttext_a,
                      best_shorttext_b,
                      best_common
                    ];
                  } else {
                    return null;
                  }
                }
                var hm1 = diff_halfMatchI_(
                  longtext,
                  shorttext,
                  Math.ceil(longtext.length / 4)
                );
                var hm2 = diff_halfMatchI_(
                  longtext,
                  shorttext,
                  Math.ceil(longtext.length / 2)
                );
                var hm;
                if (!hm1 && !hm2) {
                  return null;
                } else if (!hm2) {
                  hm = hm1;
                } else if (!hm1) {
                  hm = hm2;
                } else {
                  hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
                }
                var text1_a, text1_b, text2_a, text2_b;
                if (text1.length > text2.length) {
                  text1_a = hm[0];
                  text1_b = hm[1];
                  text2_a = hm[2];
                  text2_b = hm[3];
                } else {
                  text2_a = hm[0];
                  text2_b = hm[1];
                  text1_a = hm[2];
                  text1_b = hm[3];
                }
                var mid_common = hm[4];
                return [text1_a, text1_b, text2_a, text2_b, mid_common];
              }
              function diff_cleanupMerge(diffs) {
                diffs.push([DIFF_EQUAL, ""]);
                var pointer = 0;
                var count_delete = 0;
                var count_insert = 0;
                var text_delete = "";
                var text_insert = "";
                var commonlength;
                while (pointer < diffs.length) {
                  switch (diffs[pointer][0]) {
                    case DIFF_INSERT:
                      count_insert++;
                      text_insert += diffs[pointer][1];
                      pointer++;
                      break;
                    case DIFF_DELETE:
                      count_delete++;
                      text_delete += diffs[pointer][1];
                      pointer++;
                      break;
                    case DIFF_EQUAL:
                      if (count_delete + count_insert > 1) {
                        if (count_delete !== 0 && count_insert !== 0) {
                          commonlength = diff_commonPrefix(text_insert, text_delete);
                          if (commonlength !== 0) {
                            if (pointer - count_delete - count_insert > 0 && diffs[pointer - count_delete - count_insert - 1][0] == DIFF_EQUAL) {
                              diffs[pointer - count_delete - count_insert - 1][1] += text_insert.substring(0, commonlength);
                            } else {
                              diffs.splice(0, 0, [
                                DIFF_EQUAL,
                                text_insert.substring(0, commonlength)
                              ]);
                              pointer++;
                            }
                            text_insert = text_insert.substring(commonlength);
                            text_delete = text_delete.substring(commonlength);
                          }
                          commonlength = diff_commonSuffix(text_insert, text_delete);
                          if (commonlength !== 0) {
                            diffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];
                            text_insert = text_insert.substring(0, text_insert.length - commonlength);
                            text_delete = text_delete.substring(0, text_delete.length - commonlength);
                          }
                        }
                        if (count_delete === 0) {
                          diffs.splice(
                            pointer - count_insert,
                            count_delete + count_insert,
                            [DIFF_INSERT, text_insert]
                          );
                        } else if (count_insert === 0) {
                          diffs.splice(
                            pointer - count_delete,
                            count_delete + count_insert,
                            [DIFF_DELETE, text_delete]
                          );
                        } else {
                          diffs.splice(
                            pointer - count_delete - count_insert,
                            count_delete + count_insert,
                            [DIFF_DELETE, text_delete],
                            [DIFF_INSERT, text_insert]
                          );
                        }
                        pointer = pointer - count_delete - count_insert + (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;
                      } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {
                        diffs[pointer - 1][1] += diffs[pointer][1];
                        diffs.splice(pointer, 1);
                      } else {
                        pointer++;
                      }
                      count_insert = 0;
                      count_delete = 0;
                      text_delete = "";
                      text_insert = "";
                      break;
                  }
                }
                if (diffs[diffs.length - 1][1] === "") {
                  diffs.pop();
                }
                var changes = false;
                pointer = 1;
                while (pointer < diffs.length - 1) {
                  if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {
                    if (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {
                      diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);
                      diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];
                      diffs.splice(pointer - 1, 1);
                      changes = true;
                    } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) == diffs[pointer + 1][1]) {
                      diffs[pointer - 1][1] += diffs[pointer + 1][1];
                      diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];
                      diffs.splice(pointer + 1, 1);
                      changes = true;
                    }
                  }
                  pointer++;
                }
                if (changes) {
                  diff_cleanupMerge(diffs);
                }
              }
              var diff = diff_main;
              diff.INSERT = DIFF_INSERT;
              diff.DELETE = DIFF_DELETE;
              diff.EQUAL = DIFF_EQUAL;
              module3.exports = diff;
              function cursor_normalize_diff(diffs, cursor_pos) {
                if (cursor_pos === 0) {
                  return [DIFF_EQUAL, diffs];
                }
                for (var current_pos = 0, i = 0; i < diffs.length; i++) {
                  var d = diffs[i];
                  if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {
                    var next_pos = current_pos + d[1].length;
                    if (cursor_pos === next_pos) {
                      return [i + 1, diffs];
                    } else if (cursor_pos < next_pos) {
                      diffs = diffs.slice();
                      var split_pos = cursor_pos - current_pos;
                      var d_left = [d[0], d[1].slice(0, split_pos)];
                      var d_right = [d[0], d[1].slice(split_pos)];
                      diffs.splice(i, 1, d_left, d_right);
                      return [i + 1, diffs];
                    } else {
                      current_pos = next_pos;
                    }
                  }
                }
                throw new Error("cursor_pos is out of bounds!");
              }
              function fix_cursor(diffs, cursor_pos) {
                var norm = cursor_normalize_diff(diffs, cursor_pos);
                var ndiffs = norm[1];
                var cursor_pointer = norm[0];
                var d = ndiffs[cursor_pointer];
                var d_next = ndiffs[cursor_pointer + 1];
                if (d == null) {
                  return diffs;
                } else if (d[0] !== DIFF_EQUAL) {
                  return diffs;
                } else {
                  if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {
                    ndiffs.splice(cursor_pointer, 2, d_next, d);
                    return merge_tuples(ndiffs, cursor_pointer, 2);
                  } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {
                    ndiffs.splice(cursor_pointer, 2, [d_next[0], d[1]], [0, d[1]]);
                    var suffix = d_next[1].slice(d[1].length);
                    if (suffix.length > 0) {
                      ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);
                    }
                    return merge_tuples(ndiffs, cursor_pointer, 3);
                  } else {
                    return diffs;
                  }
                }
              }
              function fix_emoji(diffs) {
                var compact = false;
                var starts_with_pair_end = function(str) {
                  return str.charCodeAt(0) >= 56320 && str.charCodeAt(0) <= 57343;
                };
                var ends_with_pair_start = function(str) {
                  return str.charCodeAt(str.length - 1) >= 55296 && str.charCodeAt(str.length - 1) <= 56319;
                };
                for (var i = 2; i < diffs.length; i += 1) {
                  if (diffs[i - 2][0] === DIFF_EQUAL && ends_with_pair_start(diffs[i - 2][1]) && diffs[i - 1][0] === DIFF_DELETE && starts_with_pair_end(diffs[i - 1][1]) && diffs[i][0] === DIFF_INSERT && starts_with_pair_end(diffs[i][1])) {
                    compact = true;
                    diffs[i - 1][1] = diffs[i - 2][1].slice(-1) + diffs[i - 1][1];
                    diffs[i][1] = diffs[i - 2][1].slice(-1) + diffs[i][1];
                    diffs[i - 2][1] = diffs[i - 2][1].slice(0, -1);
                  }
                }
                if (!compact) {
                  return diffs;
                }
                var fixed_diffs = [];
                for (var i = 0; i < diffs.length; i += 1) {
                  if (diffs[i][1].length > 0) {
                    fixed_diffs.push(diffs[i]);
                  }
                }
                return fixed_diffs;
              }
              function merge_tuples(diffs, start2, length) {
                for (var i = start2 + length - 1; i >= 0 && i >= start2 - 1; i--) {
                  if (i + 1 < diffs.length) {
                    var left_d = diffs[i];
                    var right_d = diffs[i + 1];
                    if (left_d[0] === right_d[1]) {
                      diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);
                    }
                  }
                }
                return diffs;
              }
            },
            /* 52 */
            /***/
            function(module3, exports3) {
              exports3 = module3.exports = typeof Object.keys === "function" ? Object.keys : shim;
              exports3.shim = shim;
              function shim(obj) {
                var keys = [];
                for (var key2 in obj)
                  keys.push(key2);
                return keys;
              }
            },
            /* 53 */
            /***/
            function(module3, exports3) {
              var supportsArgumentsClass = function() {
                return Object.prototype.toString.call(arguments);
              }() == "[object Arguments]";
              exports3 = module3.exports = supportsArgumentsClass ? supported : unsupported;
              exports3.supported = supported;
              function supported(object) {
                return Object.prototype.toString.call(object) == "[object Arguments]";
              }
              exports3.unsupported = unsupported;
              function unsupported(object) {
                return object && typeof object == "object" && typeof object.length == "number" && Object.prototype.hasOwnProperty.call(object, "callee") && !Object.prototype.propertyIsEnumerable.call(object, "callee") || false;
              }
            },
            /* 54 */
            /***/
            function(module3, exports3) {
              var has = Object.prototype.hasOwnProperty, prefix = "~";
              function Events2() {
              }
              if (Object.create) {
                Events2.prototype = /* @__PURE__ */ Object.create(null);
                if (!new Events2().__proto__)
                  prefix = false;
              }
              function EE(fn, context, once) {
                this.fn = fn;
                this.context = context;
                this.once = once || false;
              }
              function EventEmitter() {
                this._events = new Events2();
                this._eventsCount = 0;
              }
              EventEmitter.prototype.eventNames = function eventNames() {
                var names = [], events2, name;
                if (this._eventsCount === 0)
                  return names;
                for (name in events2 = this._events) {
                  if (has.call(events2, name))
                    names.push(prefix ? name.slice(1) : name);
                }
                if (Object.getOwnPropertySymbols) {
                  return names.concat(Object.getOwnPropertySymbols(events2));
                }
                return names;
              };
              EventEmitter.prototype.listeners = function listeners(event, exists) {
                var evt = prefix ? prefix + event : event, available = this._events[evt];
                if (exists)
                  return !!available;
                if (!available)
                  return [];
                if (available.fn)
                  return [available.fn];
                for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {
                  ee[i] = available[i].fn;
                }
                return ee;
              };
              EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
                var evt = prefix ? prefix + event : event;
                if (!this._events[evt])
                  return false;
                var listeners = this._events[evt], len = arguments.length, args, i;
                if (listeners.fn) {
                  if (listeners.once)
                    this.removeListener(event, listeners.fn, void 0, true);
                  switch (len) {
                    case 1:
                      return listeners.fn.call(listeners.context), true;
                    case 2:
                      return listeners.fn.call(listeners.context, a1), true;
                    case 3:
                      return listeners.fn.call(listeners.context, a1, a2), true;
                    case 4:
                      return listeners.fn.call(listeners.context, a1, a2, a3), true;
                    case 5:
                      return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
                    case 6:
                      return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
                  }
                  for (i = 1, args = new Array(len - 1); i < len; i++) {
                    args[i - 1] = arguments[i];
                  }
                  listeners.fn.apply(listeners.context, args);
                } else {
                  var length = listeners.length, j;
                  for (i = 0; i < length; i++) {
                    if (listeners[i].once)
                      this.removeListener(event, listeners[i].fn, void 0, true);
                    switch (len) {
                      case 1:
                        listeners[i].fn.call(listeners[i].context);
                        break;
                      case 2:
                        listeners[i].fn.call(listeners[i].context, a1);
                        break;
                      case 3:
                        listeners[i].fn.call(listeners[i].context, a1, a2);
                        break;
                      case 4:
                        listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                        break;
                      default:
                        if (!args)
                          for (j = 1, args = new Array(len - 1); j < len; j++) {
                            args[j - 1] = arguments[j];
                          }
                        listeners[i].fn.apply(listeners[i].context, args);
                    }
                  }
                }
                return true;
              };
              EventEmitter.prototype.on = function on(event, fn, context) {
                var listener = new EE(fn, context || this), evt = prefix ? prefix + event : event;
                if (!this._events[evt])
                  this._events[evt] = listener, this._eventsCount++;
                else if (!this._events[evt].fn)
                  this._events[evt].push(listener);
                else
                  this._events[evt] = [this._events[evt], listener];
                return this;
              };
              EventEmitter.prototype.once = function once(event, fn, context) {
                var listener = new EE(fn, context || this, true), evt = prefix ? prefix + event : event;
                if (!this._events[evt])
                  this._events[evt] = listener, this._eventsCount++;
                else if (!this._events[evt].fn)
                  this._events[evt].push(listener);
                else
                  this._events[evt] = [this._events[evt], listener];
                return this;
              };
              EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
                var evt = prefix ? prefix + event : event;
                if (!this._events[evt])
                  return this;
                if (!fn) {
                  if (--this._eventsCount === 0)
                    this._events = new Events2();
                  else
                    delete this._events[evt];
                  return this;
                }
                var listeners = this._events[evt];
                if (listeners.fn) {
                  if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
                    if (--this._eventsCount === 0)
                      this._events = new Events2();
                    else
                      delete this._events[evt];
                  }
                } else {
                  for (var i = 0, events2 = [], length = listeners.length; i < length; i++) {
                    if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
                      events2.push(listeners[i]);
                    }
                  }
                  if (events2.length)
                    this._events[evt] = events2.length === 1 ? events2[0] : events2;
                  else if (--this._eventsCount === 0)
                    this._events = new Events2();
                  else
                    delete this._events[evt];
                }
                return this;
              };
              EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
                var evt;
                if (event) {
                  evt = prefix ? prefix + event : event;
                  if (this._events[evt]) {
                    if (--this._eventsCount === 0)
                      this._events = new Events2();
                    else
                      delete this._events[evt];
                  }
                } else {
                  this._events = new Events2();
                  this._eventsCount = 0;
                }
                return this;
              };
              EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
              EventEmitter.prototype.addListener = EventEmitter.prototype.on;
              EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
                return this;
              };
              EventEmitter.prefixed = prefix;
              EventEmitter.EventEmitter = EventEmitter;
              if ("undefined" !== typeof module3) {
                module3.exports = EventEmitter;
              }
            },
            /* 55 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.matchText = exports3.matchSpacing = exports3.matchNewline = exports3.matchBlot = exports3.matchAttributor = exports3.default = void 0;
              var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
                return typeof obj;
              } : function(obj) {
                return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
              };
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _extend2 = __webpack_require__(3);
              var _extend3 = _interopRequireDefault(_extend2);
              var _quillDelta = __webpack_require__(2);
              var _quillDelta2 = _interopRequireDefault(_quillDelta);
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _quill = __webpack_require__(5);
              var _quill2 = _interopRequireDefault(_quill);
              var _logger = __webpack_require__(10);
              var _logger2 = _interopRequireDefault(_logger);
              var _module = __webpack_require__(9);
              var _module2 = _interopRequireDefault(_module);
              var _align = __webpack_require__(36);
              var _background = __webpack_require__(37);
              var _code = __webpack_require__(13);
              var _code2 = _interopRequireDefault(_code);
              var _color = __webpack_require__(26);
              var _direction = __webpack_require__(38);
              var _font = __webpack_require__(39);
              var _size = __webpack_require__(40);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _defineProperty(obj, key2, value) {
                if (key2 in obj) {
                  Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
                } else {
                  obj[key2] = value;
                }
                return obj;
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var debug = (0, _logger2.default)("quill:clipboard");
              var DOM_KEY = "__ql-matcher";
              var CLIPBOARD_CONFIG = [[Node.TEXT_NODE, matchText], [Node.TEXT_NODE, matchNewline], ["br", matchBreak], [Node.ELEMENT_NODE, matchNewline], [Node.ELEMENT_NODE, matchBlot], [Node.ELEMENT_NODE, matchSpacing], [Node.ELEMENT_NODE, matchAttributor], [Node.ELEMENT_NODE, matchStyles], ["li", matchIndent], ["b", matchAlias.bind(matchAlias, "bold")], ["i", matchAlias.bind(matchAlias, "italic")], ["style", matchIgnore]];
              var ATTRIBUTE_ATTRIBUTORS = [_align.AlignAttribute, _direction.DirectionAttribute].reduce(function(memo, attr) {
                memo[attr.keyName] = attr;
                return memo;
              }, {});
              var STYLE_ATTRIBUTORS = [_align.AlignStyle, _background.BackgroundStyle, _color.ColorStyle, _direction.DirectionStyle, _font.FontStyle, _size.SizeStyle].reduce(function(memo, attr) {
                memo[attr.keyName] = attr;
                return memo;
              }, {});
              var Clipboard = function(_Module) {
                _inherits(Clipboard2, _Module);
                function Clipboard2(quill2, options) {
                  _classCallCheck(this, Clipboard2);
                  var _this = _possibleConstructorReturn(this, (Clipboard2.__proto__ || Object.getPrototypeOf(Clipboard2)).call(this, quill2, options));
                  _this.quill.root.addEventListener("paste", _this.onPaste.bind(_this));
                  _this.container = _this.quill.addContainer("ql-clipboard");
                  _this.container.setAttribute("contenteditable", true);
                  _this.container.setAttribute("tabindex", -1);
                  _this.matchers = [];
                  CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(function(_ref) {
                    var _ref2 = _slicedToArray(_ref, 2), selector = _ref2[0], matcher = _ref2[1];
                    if (!options.matchVisual && matcher === matchSpacing)
                      return;
                    _this.addMatcher(selector, matcher);
                  });
                  return _this;
                }
                _createClass(Clipboard2, [{
                  key: "addMatcher",
                  value: function addMatcher(selector, matcher) {
                    this.matchers.push([selector, matcher]);
                  }
                }, {
                  key: "convert",
                  value: function convert(html2) {
                    if (typeof html2 === "string") {
                      this.container.innerHTML = html2.replace(/\>\r?\n +\</g, "><");
                      return this.convert();
                    }
                    var formats = this.quill.getFormat(this.quill.selection.savedRange.index);
                    if (formats[_code2.default.blotName]) {
                      var text2 = this.container.innerText;
                      this.container.innerHTML = "";
                      return new _quillDelta2.default().insert(text2, _defineProperty({}, _code2.default.blotName, formats[_code2.default.blotName]));
                    }
                    var _prepareMatching = this.prepareMatching(), _prepareMatching2 = _slicedToArray(_prepareMatching, 2), elementMatchers = _prepareMatching2[0], textMatchers = _prepareMatching2[1];
                    var delta = traverse(this.container, elementMatchers, textMatchers);
                    if (deltaEndsWith(delta, "\n") && delta.ops[delta.ops.length - 1].attributes == null) {
                      delta = delta.compose(new _quillDelta2.default().retain(delta.length() - 1).delete(1));
                    }
                    debug.log("convert", this.container.innerHTML, delta);
                    this.container.innerHTML = "";
                    return delta;
                  }
                }, {
                  key: "dangerouslyPasteHTML",
                  value: function dangerouslyPasteHTML(index, html2) {
                    var source = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : _quill2.default.sources.API;
                    if (typeof index === "string") {
                      this.quill.setContents(this.convert(index), html2);
                      this.quill.setSelection(0, _quill2.default.sources.SILENT);
                    } else {
                      var paste = this.convert(html2);
                      this.quill.updateContents(new _quillDelta2.default().retain(index).concat(paste), source);
                      this.quill.setSelection(index + paste.length(), _quill2.default.sources.SILENT);
                    }
                  }
                }, {
                  key: "onPaste",
                  value: function onPaste(e) {
                    var _this2 = this;
                    if (e.defaultPrevented || !this.quill.isEnabled())
                      return;
                    var range = this.quill.getSelection();
                    var delta = new _quillDelta2.default().retain(range.index);
                    var scrollTop = this.quill.scrollingContainer.scrollTop;
                    this.container.focus();
                    this.quill.selection.update(_quill2.default.sources.SILENT);
                    setTimeout(function() {
                      delta = delta.concat(_this2.convert()).delete(range.length);
                      _this2.quill.updateContents(delta, _quill2.default.sources.USER);
                      _this2.quill.setSelection(delta.length() - range.length, _quill2.default.sources.SILENT);
                      _this2.quill.scrollingContainer.scrollTop = scrollTop;
                      _this2.quill.focus();
                    }, 1);
                  }
                }, {
                  key: "prepareMatching",
                  value: function prepareMatching() {
                    var _this3 = this;
                    var elementMatchers = [], textMatchers = [];
                    this.matchers.forEach(function(pair) {
                      var _pair = _slicedToArray(pair, 2), selector = _pair[0], matcher = _pair[1];
                      switch (selector) {
                        case Node.TEXT_NODE:
                          textMatchers.push(matcher);
                          break;
                        case Node.ELEMENT_NODE:
                          elementMatchers.push(matcher);
                          break;
                        default:
                          [].forEach.call(_this3.container.querySelectorAll(selector), function(node) {
                            node[DOM_KEY] = node[DOM_KEY] || [];
                            node[DOM_KEY].push(matcher);
                          });
                          break;
                      }
                    });
                    return [elementMatchers, textMatchers];
                  }
                }]);
                return Clipboard2;
              }(_module2.default);
              Clipboard.DEFAULTS = {
                matchers: [],
                matchVisual: true
              };
              function applyFormat(delta, format, value) {
                if ((typeof format === "undefined" ? "undefined" : _typeof2(format)) === "object") {
                  return Object.keys(format).reduce(function(delta2, key2) {
                    return applyFormat(delta2, key2, format[key2]);
                  }, delta);
                } else {
                  return delta.reduce(function(delta2, op) {
                    if (op.attributes && op.attributes[format]) {
                      return delta2.push(op);
                    } else {
                      return delta2.insert(op.insert, (0, _extend3.default)({}, _defineProperty({}, format, value), op.attributes));
                    }
                  }, new _quillDelta2.default());
                }
              }
              function computeStyle(node) {
                if (node.nodeType !== Node.ELEMENT_NODE)
                  return {};
                var DOM_KEY2 = "__ql-computed-style";
                return node[DOM_KEY2] || (node[DOM_KEY2] = window.getComputedStyle(node));
              }
              function deltaEndsWith(delta, text2) {
                var endText = "";
                for (var i = delta.ops.length - 1; i >= 0 && endText.length < text2.length; --i) {
                  var op = delta.ops[i];
                  if (typeof op.insert !== "string")
                    break;
                  endText = op.insert + endText;
                }
                return endText.slice(-1 * text2.length) === text2;
              }
              function isLine(node) {
                if (node.childNodes.length === 0)
                  return false;
                var style = computeStyle(node);
                return ["block", "list-item"].indexOf(style.display) > -1;
              }
              function traverse(node, elementMatchers, textMatchers) {
                if (node.nodeType === node.TEXT_NODE) {
                  return textMatchers.reduce(function(delta, matcher) {
                    return matcher(node, delta);
                  }, new _quillDelta2.default());
                } else if (node.nodeType === node.ELEMENT_NODE) {
                  return [].reduce.call(node.childNodes || [], function(delta, childNode) {
                    var childrenDelta = traverse(childNode, elementMatchers, textMatchers);
                    if (childNode.nodeType === node.ELEMENT_NODE) {
                      childrenDelta = elementMatchers.reduce(function(childrenDelta2, matcher) {
                        return matcher(childNode, childrenDelta2);
                      }, childrenDelta);
                      childrenDelta = (childNode[DOM_KEY] || []).reduce(function(childrenDelta2, matcher) {
                        return matcher(childNode, childrenDelta2);
                      }, childrenDelta);
                    }
                    return delta.concat(childrenDelta);
                  }, new _quillDelta2.default());
                } else {
                  return new _quillDelta2.default();
                }
              }
              function matchAlias(format, node, delta) {
                return applyFormat(delta, format, true);
              }
              function matchAttributor(node, delta) {
                var attributes = _parchment2.default.Attributor.Attribute.keys(node);
                var classes = _parchment2.default.Attributor.Class.keys(node);
                var styles = _parchment2.default.Attributor.Style.keys(node);
                var formats = {};
                attributes.concat(classes).concat(styles).forEach(function(name) {
                  var attr = _parchment2.default.query(name, _parchment2.default.Scope.ATTRIBUTE);
                  if (attr != null) {
                    formats[attr.attrName] = attr.value(node);
                    if (formats[attr.attrName])
                      return;
                  }
                  attr = ATTRIBUTE_ATTRIBUTORS[name];
                  if (attr != null && (attr.attrName === name || attr.keyName === name)) {
                    formats[attr.attrName] = attr.value(node) || void 0;
                  }
                  attr = STYLE_ATTRIBUTORS[name];
                  if (attr != null && (attr.attrName === name || attr.keyName === name)) {
                    attr = STYLE_ATTRIBUTORS[name];
                    formats[attr.attrName] = attr.value(node) || void 0;
                  }
                });
                if (Object.keys(formats).length > 0) {
                  delta = applyFormat(delta, formats);
                }
                return delta;
              }
              function matchBlot(node, delta) {
                var match = _parchment2.default.query(node);
                if (match == null)
                  return delta;
                if (match.prototype instanceof _parchment2.default.Embed) {
                  var embed = {};
                  var value = match.value(node);
                  if (value != null) {
                    embed[match.blotName] = value;
                    delta = new _quillDelta2.default().insert(embed, match.formats(node));
                  }
                } else if (typeof match.formats === "function") {
                  delta = applyFormat(delta, match.blotName, match.formats(node));
                }
                return delta;
              }
              function matchBreak(node, delta) {
                if (!deltaEndsWith(delta, "\n")) {
                  delta.insert("\n");
                }
                return delta;
              }
              function matchIgnore() {
                return new _quillDelta2.default();
              }
              function matchIndent(node, delta) {
                var match = _parchment2.default.query(node);
                if (match == null || match.blotName !== "list-item" || !deltaEndsWith(delta, "\n")) {
                  return delta;
                }
                var indent = -1, parent = node.parentNode;
                while (!parent.classList.contains("ql-clipboard")) {
                  if ((_parchment2.default.query(parent) || {}).blotName === "list") {
                    indent += 1;
                  }
                  parent = parent.parentNode;
                }
                if (indent <= 0)
                  return delta;
                return delta.compose(new _quillDelta2.default().retain(delta.length() - 1).retain(1, { indent }));
              }
              function matchNewline(node, delta) {
                if (!deltaEndsWith(delta, "\n")) {
                  if (isLine(node) || delta.length() > 0 && node.nextSibling && isLine(node.nextSibling)) {
                    delta.insert("\n");
                  }
                }
                return delta;
              }
              function matchSpacing(node, delta) {
                if (isLine(node) && node.nextElementSibling != null && !deltaEndsWith(delta, "\n\n")) {
                  var nodeHeight = node.offsetHeight + parseFloat(computeStyle(node).marginTop) + parseFloat(computeStyle(node).marginBottom);
                  if (node.nextElementSibling.offsetTop > node.offsetTop + nodeHeight * 1.5) {
                    delta.insert("\n");
                  }
                }
                return delta;
              }
              function matchStyles(node, delta) {
                var formats = {};
                var style = node.style || {};
                if (style.fontStyle && computeStyle(node).fontStyle === "italic") {
                  formats.italic = true;
                }
                if (style.fontWeight && (computeStyle(node).fontWeight.startsWith("bold") || parseInt(computeStyle(node).fontWeight) >= 700)) {
                  formats.bold = true;
                }
                if (Object.keys(formats).length > 0) {
                  delta = applyFormat(delta, formats);
                }
                if (parseFloat(style.textIndent || 0) > 0) {
                  delta = new _quillDelta2.default().insert("	").concat(delta);
                }
                return delta;
              }
              function matchText(node, delta) {
                var text2 = node.data;
                if (node.parentNode.tagName === "O:P") {
                  return delta.insert(text2.trim());
                }
                if (text2.trim().length === 0 && node.parentNode.classList.contains("ql-clipboard")) {
                  return delta;
                }
                if (!computeStyle(node.parentNode).whiteSpace.startsWith("pre")) {
                  var replacer = function replacer2(collapse, match) {
                    match = match.replace(/[^\u00a0]/g, "");
                    return match.length < 1 && collapse ? " " : match;
                  };
                  text2 = text2.replace(/\r\n/g, " ").replace(/\n/g, " ");
                  text2 = text2.replace(/\s\s+/g, replacer.bind(replacer, true));
                  if (node.previousSibling == null && isLine(node.parentNode) || node.previousSibling != null && isLine(node.previousSibling)) {
                    text2 = text2.replace(/^\s+/, replacer.bind(replacer, false));
                  }
                  if (node.nextSibling == null && isLine(node.parentNode) || node.nextSibling != null && isLine(node.nextSibling)) {
                    text2 = text2.replace(/\s+$/, replacer.bind(replacer, false));
                  }
                }
                return delta.insert(text2);
              }
              exports3.default = Clipboard;
              exports3.matchAttributor = matchAttributor;
              exports3.matchBlot = matchBlot;
              exports3.matchNewline = matchNewline;
              exports3.matchSpacing = matchSpacing;
              exports3.matchText = matchText;
            },
            /* 56 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _inline = __webpack_require__(6);
              var _inline2 = _interopRequireDefault(_inline);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Bold = function(_Inline) {
                _inherits(Bold2, _Inline);
                function Bold2() {
                  _classCallCheck(this, Bold2);
                  return _possibleConstructorReturn(this, (Bold2.__proto__ || Object.getPrototypeOf(Bold2)).apply(this, arguments));
                }
                _createClass(Bold2, [{
                  key: "optimize",
                  value: function optimize(context) {
                    _get(Bold2.prototype.__proto__ || Object.getPrototypeOf(Bold2.prototype), "optimize", this).call(this, context);
                    if (this.domNode.tagName !== this.statics.tagName[0]) {
                      this.replaceWith(this.statics.blotName);
                    }
                  }
                }], [{
                  key: "create",
                  value: function create() {
                    return _get(Bold2.__proto__ || Object.getPrototypeOf(Bold2), "create", this).call(this);
                  }
                }, {
                  key: "formats",
                  value: function formats() {
                    return true;
                  }
                }]);
                return Bold2;
              }(_inline2.default);
              Bold.blotName = "bold";
              Bold.tagName = ["STRONG", "B"];
              exports3.default = Bold;
            },
            /* 57 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.addControls = exports3.default = void 0;
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _quillDelta = __webpack_require__(2);
              var _quillDelta2 = _interopRequireDefault(_quillDelta);
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _quill = __webpack_require__(5);
              var _quill2 = _interopRequireDefault(_quill);
              var _logger = __webpack_require__(10);
              var _logger2 = _interopRequireDefault(_logger);
              var _module = __webpack_require__(9);
              var _module2 = _interopRequireDefault(_module);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _defineProperty(obj, key2, value) {
                if (key2 in obj) {
                  Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
                } else {
                  obj[key2] = value;
                }
                return obj;
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var debug = (0, _logger2.default)("quill:toolbar");
              var Toolbar = function(_Module) {
                _inherits(Toolbar2, _Module);
                function Toolbar2(quill2, options) {
                  _classCallCheck(this, Toolbar2);
                  var _this = _possibleConstructorReturn(this, (Toolbar2.__proto__ || Object.getPrototypeOf(Toolbar2)).call(this, quill2, options));
                  if (Array.isArray(_this.options.container)) {
                    var container = document.createElement("div");
                    addControls(container, _this.options.container);
                    quill2.container.parentNode.insertBefore(container, quill2.container);
                    _this.container = container;
                  } else if (typeof _this.options.container === "string") {
                    _this.container = document.querySelector(_this.options.container);
                  } else {
                    _this.container = _this.options.container;
                  }
                  if (!(_this.container instanceof HTMLElement)) {
                    var _ret;
                    return _ret = debug.error("Container required for toolbar", _this.options), _possibleConstructorReturn(_this, _ret);
                  }
                  _this.container.classList.add("ql-toolbar");
                  _this.controls = [];
                  _this.handlers = {};
                  Object.keys(_this.options.handlers).forEach(function(format) {
                    _this.addHandler(format, _this.options.handlers[format]);
                  });
                  [].forEach.call(_this.container.querySelectorAll("button, select"), function(input) {
                    _this.attach(input);
                  });
                  _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function(type, range) {
                    if (type === _quill2.default.events.SELECTION_CHANGE) {
                      _this.update(range);
                    }
                  });
                  _this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function() {
                    var _this$quill$selection = _this.quill.selection.getRange(), _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1), range = _this$quill$selection2[0];
                    _this.update(range);
                  });
                  return _this;
                }
                _createClass(Toolbar2, [{
                  key: "addHandler",
                  value: function addHandler2(format, handler) {
                    this.handlers[format] = handler;
                  }
                }, {
                  key: "attach",
                  value: function attach(input) {
                    var _this2 = this;
                    var format = [].find.call(input.classList, function(className) {
                      return className.indexOf("ql-") === 0;
                    });
                    if (!format)
                      return;
                    format = format.slice("ql-".length);
                    if (input.tagName === "BUTTON") {
                      input.setAttribute("type", "button");
                    }
                    if (this.handlers[format] == null) {
                      if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {
                        debug.warn("ignoring attaching to disabled format", format, input);
                        return;
                      }
                      if (_parchment2.default.query(format) == null) {
                        debug.warn("ignoring attaching to nonexistent format", format, input);
                        return;
                      }
                    }
                    var eventName = input.tagName === "SELECT" ? "change" : "click";
                    input.addEventListener(eventName, function(e) {
                      var value = void 0;
                      if (input.tagName === "SELECT") {
                        if (input.selectedIndex < 0)
                          return;
                        var selected = input.options[input.selectedIndex];
                        if (selected.hasAttribute("selected")) {
                          value = false;
                        } else {
                          value = selected.value || false;
                        }
                      } else {
                        if (input.classList.contains("ql-active")) {
                          value = false;
                        } else {
                          value = input.value || !input.hasAttribute("value");
                        }
                        e.preventDefault();
                      }
                      _this2.quill.focus();
                      var _quill$selection$getR = _this2.quill.selection.getRange(), _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1), range = _quill$selection$getR2[0];
                      if (_this2.handlers[format] != null) {
                        _this2.handlers[format].call(_this2, value);
                      } else if (_parchment2.default.query(format).prototype instanceof _parchment2.default.Embed) {
                        value = prompt("Enter " + format);
                        if (!value)
                          return;
                        _this2.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert(_defineProperty({}, format, value)), _quill2.default.sources.USER);
                      } else {
                        _this2.quill.format(format, value, _quill2.default.sources.USER);
                      }
                      _this2.update(range);
                    });
                    this.controls.push([format, input]);
                  }
                }, {
                  key: "update",
                  value: function update(range) {
                    var formats = range == null ? {} : this.quill.getFormat(range);
                    this.controls.forEach(function(pair) {
                      var _pair = _slicedToArray(pair, 2), format = _pair[0], input = _pair[1];
                      if (input.tagName === "SELECT") {
                        var option = void 0;
                        if (range == null) {
                          option = null;
                        } else if (formats[format] == null) {
                          option = input.querySelector("option[selected]");
                        } else if (!Array.isArray(formats[format])) {
                          var value = formats[format];
                          if (typeof value === "string") {
                            value = value.replace(/\"/g, '\\"');
                          }
                          option = input.querySelector('option[value="' + value + '"]');
                        }
                        if (option == null) {
                          input.value = "";
                          input.selectedIndex = -1;
                        } else {
                          option.selected = true;
                        }
                      } else {
                        if (range == null) {
                          input.classList.remove("ql-active");
                        } else if (input.hasAttribute("value")) {
                          var isActive = formats[format] === input.getAttribute("value") || formats[format] != null && formats[format].toString() === input.getAttribute("value") || formats[format] == null && !input.getAttribute("value");
                          input.classList.toggle("ql-active", isActive);
                        } else {
                          input.classList.toggle("ql-active", formats[format] != null);
                        }
                      }
                    });
                  }
                }]);
                return Toolbar2;
              }(_module2.default);
              Toolbar.DEFAULTS = {};
              function addButton(container, format, value) {
                var input = document.createElement("button");
                input.setAttribute("type", "button");
                input.classList.add("ql-" + format);
                if (value != null) {
                  input.value = value;
                }
                container.appendChild(input);
              }
              function addControls(container, groups) {
                if (!Array.isArray(groups[0])) {
                  groups = [groups];
                }
                groups.forEach(function(controls) {
                  var group = document.createElement("span");
                  group.classList.add("ql-formats");
                  controls.forEach(function(control) {
                    if (typeof control === "string") {
                      addButton(group, control);
                    } else {
                      var format = Object.keys(control)[0];
                      var value = control[format];
                      if (Array.isArray(value)) {
                        addSelect(group, format, value);
                      } else {
                        addButton(group, format, value);
                      }
                    }
                  });
                  container.appendChild(group);
                });
              }
              function addSelect(container, format, values) {
                var input = document.createElement("select");
                input.classList.add("ql-" + format);
                values.forEach(function(value) {
                  var option = document.createElement("option");
                  if (value !== false) {
                    option.setAttribute("value", value);
                  } else {
                    option.setAttribute("selected", "selected");
                  }
                  input.appendChild(option);
                });
                container.appendChild(input);
              }
              Toolbar.DEFAULTS = {
                container: null,
                handlers: {
                  clean: function clean() {
                    var _this3 = this;
                    var range = this.quill.getSelection();
                    if (range == null)
                      return;
                    if (range.length == 0) {
                      var formats = this.quill.getFormat();
                      Object.keys(formats).forEach(function(name) {
                        if (_parchment2.default.query(name, _parchment2.default.Scope.INLINE) != null) {
                          _this3.quill.format(name, false);
                        }
                      });
                    } else {
                      this.quill.removeFormat(range, _quill2.default.sources.USER);
                    }
                  },
                  direction: function direction(value) {
                    var align = this.quill.getFormat()["align"];
                    if (value === "rtl" && align == null) {
                      this.quill.format("align", "right", _quill2.default.sources.USER);
                    } else if (!value && align === "right") {
                      this.quill.format("align", false, _quill2.default.sources.USER);
                    }
                    this.quill.format("direction", value, _quill2.default.sources.USER);
                  },
                  indent: function indent(value) {
                    var range = this.quill.getSelection();
                    var formats = this.quill.getFormat(range);
                    var indent2 = parseInt(formats.indent || 0);
                    if (value === "+1" || value === "-1") {
                      var modifier = value === "+1" ? 1 : -1;
                      if (formats.direction === "rtl")
                        modifier *= -1;
                      this.quill.format("indent", indent2 + modifier, _quill2.default.sources.USER);
                    }
                  },
                  link: function link(value) {
                    if (value === true) {
                      value = prompt("Enter link URL:");
                    }
                    this.quill.format("link", value, _quill2.default.sources.USER);
                  },
                  list: function list(value) {
                    var range = this.quill.getSelection();
                    var formats = this.quill.getFormat(range);
                    if (value === "check") {
                      if (formats["list"] === "checked" || formats["list"] === "unchecked") {
                        this.quill.format("list", false, _quill2.default.sources.USER);
                      } else {
                        this.quill.format("list", "unchecked", _quill2.default.sources.USER);
                      }
                    } else {
                      this.quill.format("list", value, _quill2.default.sources.USER);
                    }
                  }
                }
              };
              exports3.default = Toolbar;
              exports3.addControls = addControls;
            },
            /* 58 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <polyline class="ql-even ql-stroke" points="5 7 3 9 5 11"></polyline> <polyline class="ql-even ql-stroke" points="13 7 15 9 13 11"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>';
            },
            /* 59 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _picker = __webpack_require__(28);
              var _picker2 = _interopRequireDefault(_picker);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var ColorPicker = function(_Picker) {
                _inherits(ColorPicker2, _Picker);
                function ColorPicker2(select, label) {
                  _classCallCheck(this, ColorPicker2);
                  var _this = _possibleConstructorReturn(this, (ColorPicker2.__proto__ || Object.getPrototypeOf(ColorPicker2)).call(this, select));
                  _this.label.innerHTML = label;
                  _this.container.classList.add("ql-color-picker");
                  [].slice.call(_this.container.querySelectorAll(".ql-picker-item"), 0, 7).forEach(function(item) {
                    item.classList.add("ql-primary");
                  });
                  return _this;
                }
                _createClass(ColorPicker2, [{
                  key: "buildItem",
                  value: function buildItem(option) {
                    var item = _get(ColorPicker2.prototype.__proto__ || Object.getPrototypeOf(ColorPicker2.prototype), "buildItem", this).call(this, option);
                    item.style.backgroundColor = option.getAttribute("value") || "";
                    return item;
                  }
                }, {
                  key: "selectItem",
                  value: function selectItem(item, trigger) {
                    _get(ColorPicker2.prototype.__proto__ || Object.getPrototypeOf(ColorPicker2.prototype), "selectItem", this).call(this, item, trigger);
                    var colorLabel = this.label.querySelector(".ql-color-label");
                    var value = item ? item.getAttribute("data-value") || "" : "";
                    if (colorLabel) {
                      if (colorLabel.tagName === "line") {
                        colorLabel.style.stroke = value;
                      } else {
                        colorLabel.style.fill = value;
                      }
                    }
                  }
                }]);
                return ColorPicker2;
              }(_picker2.default);
              exports3.default = ColorPicker;
            },
            /* 60 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _picker = __webpack_require__(28);
              var _picker2 = _interopRequireDefault(_picker);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var IconPicker = function(_Picker) {
                _inherits(IconPicker2, _Picker);
                function IconPicker2(select, icons2) {
                  _classCallCheck(this, IconPicker2);
                  var _this = _possibleConstructorReturn(this, (IconPicker2.__proto__ || Object.getPrototypeOf(IconPicker2)).call(this, select));
                  _this.container.classList.add("ql-icon-picker");
                  [].forEach.call(_this.container.querySelectorAll(".ql-picker-item"), function(item) {
                    item.innerHTML = icons2[item.getAttribute("data-value") || ""];
                  });
                  _this.defaultItem = _this.container.querySelector(".ql-selected");
                  _this.selectItem(_this.defaultItem);
                  return _this;
                }
                _createClass(IconPicker2, [{
                  key: "selectItem",
                  value: function selectItem(item, trigger) {
                    _get(IconPicker2.prototype.__proto__ || Object.getPrototypeOf(IconPicker2.prototype), "selectItem", this).call(this, item, trigger);
                    item = item || this.defaultItem;
                    this.label.innerHTML = item.innerHTML;
                  }
                }]);
                return IconPicker2;
              }(_picker2.default);
              exports3.default = IconPicker;
            },
            /* 61 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              var Tooltip2 = function() {
                function Tooltip3(quill2, boundsContainer) {
                  var _this = this;
                  _classCallCheck(this, Tooltip3);
                  this.quill = quill2;
                  this.boundsContainer = boundsContainer || document.body;
                  this.root = quill2.addContainer("ql-tooltip");
                  this.root.innerHTML = this.constructor.TEMPLATE;
                  if (this.quill.root === this.quill.scrollingContainer) {
                    this.quill.root.addEventListener("scroll", function() {
                      _this.root.style.marginTop = -1 * _this.quill.root.scrollTop + "px";
                    });
                  }
                  this.hide();
                }
                _createClass(Tooltip3, [{
                  key: "hide",
                  value: function hide2() {
                    this.root.classList.add("ql-hidden");
                  }
                }, {
                  key: "position",
                  value: function position(reference2) {
                    var left2 = reference2.left + reference2.width / 2 - this.root.offsetWidth / 2;
                    var top2 = reference2.bottom + this.quill.root.scrollTop;
                    this.root.style.left = left2 + "px";
                    this.root.style.top = top2 + "px";
                    this.root.classList.remove("ql-flip");
                    var containerBounds = this.boundsContainer.getBoundingClientRect();
                    var rootBounds = this.root.getBoundingClientRect();
                    var shift = 0;
                    if (rootBounds.right > containerBounds.right) {
                      shift = containerBounds.right - rootBounds.right;
                      this.root.style.left = left2 + shift + "px";
                    }
                    if (rootBounds.left < containerBounds.left) {
                      shift = containerBounds.left - rootBounds.left;
                      this.root.style.left = left2 + shift + "px";
                    }
                    if (rootBounds.bottom > containerBounds.bottom) {
                      var height = rootBounds.bottom - rootBounds.top;
                      var verticalShift = reference2.bottom - reference2.top + height;
                      this.root.style.top = top2 - verticalShift + "px";
                      this.root.classList.add("ql-flip");
                    }
                    return shift;
                  }
                }, {
                  key: "show",
                  value: function show() {
                    this.root.classList.remove("ql-editing");
                    this.root.classList.remove("ql-hidden");
                  }
                }]);
                return Tooltip3;
              }();
              exports3.default = Tooltip2;
            },
            /* 62 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _slicedToArray = function() {
                function sliceIterator(arr, i) {
                  var _arr = [];
                  var _n = true;
                  var _d = false;
                  var _e = void 0;
                  try {
                    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                      _arr.push(_s.value);
                      if (i && _arr.length === i)
                        break;
                    }
                  } catch (err) {
                    _d = true;
                    _e = err;
                  } finally {
                    try {
                      if (!_n && _i["return"])
                        _i["return"]();
                    } finally {
                      if (_d)
                        throw _e;
                    }
                  }
                  return _arr;
                }
                return function(arr, i) {
                  if (Array.isArray(arr)) {
                    return arr;
                  } else if (Symbol.iterator in Object(arr)) {
                    return sliceIterator(arr, i);
                  } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                  }
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _extend = __webpack_require__(3);
              var _extend2 = _interopRequireDefault(_extend);
              var _emitter = __webpack_require__(8);
              var _emitter2 = _interopRequireDefault(_emitter);
              var _base = __webpack_require__(43);
              var _base2 = _interopRequireDefault(_base);
              var _link = __webpack_require__(27);
              var _link2 = _interopRequireDefault(_link);
              var _selection = __webpack_require__(15);
              var _icons = __webpack_require__(41);
              var _icons2 = _interopRequireDefault(_icons);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var TOOLBAR_CONFIG = [[{ header: ["1", "2", "3", false] }], ["bold", "italic", "underline", "link"], [{ list: "ordered" }, { list: "bullet" }], ["clean"]];
              var SnowTheme = function(_BaseTheme) {
                _inherits(SnowTheme2, _BaseTheme);
                function SnowTheme2(quill2, options) {
                  _classCallCheck(this, SnowTheme2);
                  if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
                    options.modules.toolbar.container = TOOLBAR_CONFIG;
                  }
                  var _this = _possibleConstructorReturn(this, (SnowTheme2.__proto__ || Object.getPrototypeOf(SnowTheme2)).call(this, quill2, options));
                  _this.quill.container.classList.add("ql-snow");
                  return _this;
                }
                _createClass(SnowTheme2, [{
                  key: "extendToolbar",
                  value: function extendToolbar(toolbar) {
                    toolbar.container.classList.add("ql-snow");
                    this.buildButtons([].slice.call(toolbar.container.querySelectorAll("button")), _icons2.default);
                    this.buildPickers([].slice.call(toolbar.container.querySelectorAll("select")), _icons2.default);
                    this.tooltip = new SnowTooltip(this.quill, this.options.bounds);
                    if (toolbar.container.querySelector(".ql-link")) {
                      this.quill.keyboard.addBinding({ key: "K", shortKey: true }, function(range, context) {
                        toolbar.handlers["link"].call(toolbar, !context.format.link);
                      });
                    }
                  }
                }]);
                return SnowTheme2;
              }(_base2.default);
              SnowTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
                modules: {
                  toolbar: {
                    handlers: {
                      link: function link(value) {
                        if (value) {
                          var range = this.quill.getSelection();
                          if (range == null || range.length == 0)
                            return;
                          var preview = this.quill.getText(range);
                          if (/^\S+@\S+\.\S+$/.test(preview) && preview.indexOf("mailto:") !== 0) {
                            preview = "mailto:" + preview;
                          }
                          var tooltip = this.quill.theme.tooltip;
                          tooltip.edit("link", preview);
                        } else {
                          this.quill.format("link", false);
                        }
                      }
                    }
                  }
                }
              });
              var SnowTooltip = function(_BaseTooltip) {
                _inherits(SnowTooltip2, _BaseTooltip);
                function SnowTooltip2(quill2, bounds) {
                  _classCallCheck(this, SnowTooltip2);
                  var _this2 = _possibleConstructorReturn(this, (SnowTooltip2.__proto__ || Object.getPrototypeOf(SnowTooltip2)).call(this, quill2, bounds));
                  _this2.preview = _this2.root.querySelector("a.ql-preview");
                  return _this2;
                }
                _createClass(SnowTooltip2, [{
                  key: "listen",
                  value: function listen() {
                    var _this3 = this;
                    _get(SnowTooltip2.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip2.prototype), "listen", this).call(this);
                    this.root.querySelector("a.ql-action").addEventListener("click", function(event) {
                      if (_this3.root.classList.contains("ql-editing")) {
                        _this3.save();
                      } else {
                        _this3.edit("link", _this3.preview.textContent);
                      }
                      event.preventDefault();
                    });
                    this.root.querySelector("a.ql-remove").addEventListener("click", function(event) {
                      if (_this3.linkRange != null) {
                        var range = _this3.linkRange;
                        _this3.restoreFocus();
                        _this3.quill.formatText(range, "link", false, _emitter2.default.sources.USER);
                        delete _this3.linkRange;
                      }
                      event.preventDefault();
                      _this3.hide();
                    });
                    this.quill.on(_emitter2.default.events.SELECTION_CHANGE, function(range, oldRange, source) {
                      if (range == null)
                        return;
                      if (range.length === 0 && source === _emitter2.default.sources.USER) {
                        var _quill$scroll$descend = _this3.quill.scroll.descendant(_link2.default, range.index), _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2), link = _quill$scroll$descend2[0], offset2 = _quill$scroll$descend2[1];
                        if (link != null) {
                          _this3.linkRange = new _selection.Range(range.index - offset2, link.length());
                          var preview = _link2.default.formats(link.domNode);
                          _this3.preview.textContent = preview;
                          _this3.preview.setAttribute("href", preview);
                          _this3.show();
                          _this3.position(_this3.quill.getBounds(_this3.linkRange));
                          return;
                        }
                      } else {
                        delete _this3.linkRange;
                      }
                      _this3.hide();
                    });
                  }
                }, {
                  key: "show",
                  value: function show() {
                    _get(SnowTooltip2.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip2.prototype), "show", this).call(this);
                    this.root.removeAttribute("data-mode");
                  }
                }]);
                return SnowTooltip2;
              }(_base.BaseTooltip);
              SnowTooltip.TEMPLATE = ['<a class="ql-preview" rel="noopener noreferrer" target="_blank" href="about:blank"></a>', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-action"></a>', '<a class="ql-remove"></a>'].join("");
              exports3.default = SnowTheme;
            },
            /* 63 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _core = __webpack_require__(29);
              var _core2 = _interopRequireDefault(_core);
              var _align = __webpack_require__(36);
              var _direction = __webpack_require__(38);
              var _indent = __webpack_require__(64);
              var _blockquote = __webpack_require__(65);
              var _blockquote2 = _interopRequireDefault(_blockquote);
              var _header = __webpack_require__(66);
              var _header2 = _interopRequireDefault(_header);
              var _list = __webpack_require__(67);
              var _list2 = _interopRequireDefault(_list);
              var _background = __webpack_require__(37);
              var _color = __webpack_require__(26);
              var _font = __webpack_require__(39);
              var _size = __webpack_require__(40);
              var _bold = __webpack_require__(56);
              var _bold2 = _interopRequireDefault(_bold);
              var _italic = __webpack_require__(68);
              var _italic2 = _interopRequireDefault(_italic);
              var _link = __webpack_require__(27);
              var _link2 = _interopRequireDefault(_link);
              var _script = __webpack_require__(69);
              var _script2 = _interopRequireDefault(_script);
              var _strike = __webpack_require__(70);
              var _strike2 = _interopRequireDefault(_strike);
              var _underline = __webpack_require__(71);
              var _underline2 = _interopRequireDefault(_underline);
              var _image = __webpack_require__(72);
              var _image2 = _interopRequireDefault(_image);
              var _video = __webpack_require__(73);
              var _video2 = _interopRequireDefault(_video);
              var _code = __webpack_require__(13);
              var _code2 = _interopRequireDefault(_code);
              var _formula = __webpack_require__(74);
              var _formula2 = _interopRequireDefault(_formula);
              var _syntax = __webpack_require__(75);
              var _syntax2 = _interopRequireDefault(_syntax);
              var _toolbar = __webpack_require__(57);
              var _toolbar2 = _interopRequireDefault(_toolbar);
              var _icons = __webpack_require__(41);
              var _icons2 = _interopRequireDefault(_icons);
              var _picker = __webpack_require__(28);
              var _picker2 = _interopRequireDefault(_picker);
              var _colorPicker = __webpack_require__(59);
              var _colorPicker2 = _interopRequireDefault(_colorPicker);
              var _iconPicker = __webpack_require__(60);
              var _iconPicker2 = _interopRequireDefault(_iconPicker);
              var _tooltip = __webpack_require__(61);
              var _tooltip2 = _interopRequireDefault(_tooltip);
              var _bubble = __webpack_require__(108);
              var _bubble2 = _interopRequireDefault(_bubble);
              var _snow = __webpack_require__(62);
              var _snow2 = _interopRequireDefault(_snow);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              _core2.default.register({
                "attributors/attribute/direction": _direction.DirectionAttribute,
                "attributors/class/align": _align.AlignClass,
                "attributors/class/background": _background.BackgroundClass,
                "attributors/class/color": _color.ColorClass,
                "attributors/class/direction": _direction.DirectionClass,
                "attributors/class/font": _font.FontClass,
                "attributors/class/size": _size.SizeClass,
                "attributors/style/align": _align.AlignStyle,
                "attributors/style/background": _background.BackgroundStyle,
                "attributors/style/color": _color.ColorStyle,
                "attributors/style/direction": _direction.DirectionStyle,
                "attributors/style/font": _font.FontStyle,
                "attributors/style/size": _size.SizeStyle
              }, true);
              _core2.default.register({
                "formats/align": _align.AlignClass,
                "formats/direction": _direction.DirectionClass,
                "formats/indent": _indent.IndentClass,
                "formats/background": _background.BackgroundStyle,
                "formats/color": _color.ColorStyle,
                "formats/font": _font.FontClass,
                "formats/size": _size.SizeClass,
                "formats/blockquote": _blockquote2.default,
                "formats/code-block": _code2.default,
                "formats/header": _header2.default,
                "formats/list": _list2.default,
                "formats/bold": _bold2.default,
                "formats/code": _code.Code,
                "formats/italic": _italic2.default,
                "formats/link": _link2.default,
                "formats/script": _script2.default,
                "formats/strike": _strike2.default,
                "formats/underline": _underline2.default,
                "formats/image": _image2.default,
                "formats/video": _video2.default,
                "formats/list/item": _list.ListItem,
                "modules/formula": _formula2.default,
                "modules/syntax": _syntax2.default,
                "modules/toolbar": _toolbar2.default,
                "themes/bubble": _bubble2.default,
                "themes/snow": _snow2.default,
                "ui/icons": _icons2.default,
                "ui/picker": _picker2.default,
                "ui/icon-picker": _iconPicker2.default,
                "ui/color-picker": _colorPicker2.default,
                "ui/tooltip": _tooltip2.default
              }, true);
              exports3.default = _core2.default;
            },
            /* 64 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.IndentClass = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var IdentAttributor = function(_Parchment$Attributor) {
                _inherits(IdentAttributor2, _Parchment$Attributor);
                function IdentAttributor2() {
                  _classCallCheck(this, IdentAttributor2);
                  return _possibleConstructorReturn(this, (IdentAttributor2.__proto__ || Object.getPrototypeOf(IdentAttributor2)).apply(this, arguments));
                }
                _createClass(IdentAttributor2, [{
                  key: "add",
                  value: function add(node, value) {
                    if (value === "+1" || value === "-1") {
                      var indent = this.value(node) || 0;
                      value = value === "+1" ? indent + 1 : indent - 1;
                    }
                    if (value === 0) {
                      this.remove(node);
                      return true;
                    } else {
                      return _get(IdentAttributor2.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor2.prototype), "add", this).call(this, node, value);
                    }
                  }
                }, {
                  key: "canAdd",
                  value: function canAdd(node, value) {
                    return _get(IdentAttributor2.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor2.prototype), "canAdd", this).call(this, node, value) || _get(IdentAttributor2.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor2.prototype), "canAdd", this).call(this, node, parseInt(value));
                  }
                }, {
                  key: "value",
                  value: function value(node) {
                    return parseInt(_get(IdentAttributor2.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor2.prototype), "value", this).call(this, node)) || void 0;
                  }
                }]);
                return IdentAttributor2;
              }(_parchment2.default.Attributor.Class);
              var IndentClass = new IdentAttributor("indent", "ql-indent", {
                scope: _parchment2.default.Scope.BLOCK,
                whitelist: [1, 2, 3, 4, 5, 6, 7, 8]
              });
              exports3.IndentClass = IndentClass;
            },
            /* 65 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _block = __webpack_require__(4);
              var _block2 = _interopRequireDefault(_block);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Blockquote = function(_Block) {
                _inherits(Blockquote2, _Block);
                function Blockquote2() {
                  _classCallCheck(this, Blockquote2);
                  return _possibleConstructorReturn(this, (Blockquote2.__proto__ || Object.getPrototypeOf(Blockquote2)).apply(this, arguments));
                }
                return Blockquote2;
              }(_block2.default);
              Blockquote.blotName = "blockquote";
              Blockquote.tagName = "blockquote";
              exports3.default = Blockquote;
            },
            /* 66 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _block = __webpack_require__(4);
              var _block2 = _interopRequireDefault(_block);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Header = function(_Block) {
                _inherits(Header2, _Block);
                function Header2() {
                  _classCallCheck(this, Header2);
                  return _possibleConstructorReturn(this, (Header2.__proto__ || Object.getPrototypeOf(Header2)).apply(this, arguments));
                }
                _createClass(Header2, null, [{
                  key: "formats",
                  value: function formats(domNode) {
                    return this.tagName.indexOf(domNode.tagName) + 1;
                  }
                }]);
                return Header2;
              }(_block2.default);
              Header.blotName = "header";
              Header.tagName = ["H1", "H2", "H3", "H4", "H5", "H6"];
              exports3.default = Header;
            },
            /* 67 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.default = exports3.ListItem = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _block = __webpack_require__(4);
              var _block2 = _interopRequireDefault(_block);
              var _container = __webpack_require__(25);
              var _container2 = _interopRequireDefault(_container);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _defineProperty(obj, key2, value) {
                if (key2 in obj) {
                  Object.defineProperty(obj, key2, { value, enumerable: true, configurable: true, writable: true });
                } else {
                  obj[key2] = value;
                }
                return obj;
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var ListItem = function(_Block) {
                _inherits(ListItem2, _Block);
                function ListItem2() {
                  _classCallCheck(this, ListItem2);
                  return _possibleConstructorReturn(this, (ListItem2.__proto__ || Object.getPrototypeOf(ListItem2)).apply(this, arguments));
                }
                _createClass(ListItem2, [{
                  key: "format",
                  value: function format(name, value) {
                    if (name === List.blotName && !value) {
                      this.replaceWith(_parchment2.default.create(this.statics.scope));
                    } else {
                      _get(ListItem2.prototype.__proto__ || Object.getPrototypeOf(ListItem2.prototype), "format", this).call(this, name, value);
                    }
                  }
                }, {
                  key: "remove",
                  value: function remove() {
                    if (this.prev == null && this.next == null) {
                      this.parent.remove();
                    } else {
                      _get(ListItem2.prototype.__proto__ || Object.getPrototypeOf(ListItem2.prototype), "remove", this).call(this);
                    }
                  }
                }, {
                  key: "replaceWith",
                  value: function replaceWith(name, value) {
                    this.parent.isolate(this.offset(this.parent), this.length());
                    if (name === this.parent.statics.blotName) {
                      this.parent.replaceWith(name, value);
                      return this;
                    } else {
                      this.parent.unwrap();
                      return _get(ListItem2.prototype.__proto__ || Object.getPrototypeOf(ListItem2.prototype), "replaceWith", this).call(this, name, value);
                    }
                  }
                }], [{
                  key: "formats",
                  value: function formats(domNode) {
                    return domNode.tagName === this.tagName ? void 0 : _get(ListItem2.__proto__ || Object.getPrototypeOf(ListItem2), "formats", this).call(this, domNode);
                  }
                }]);
                return ListItem2;
              }(_block2.default);
              ListItem.blotName = "list-item";
              ListItem.tagName = "LI";
              var List = function(_Container) {
                _inherits(List2, _Container);
                _createClass(List2, null, [{
                  key: "create",
                  value: function create(value) {
                    var tagName = value === "ordered" ? "OL" : "UL";
                    var node = _get(List2.__proto__ || Object.getPrototypeOf(List2), "create", this).call(this, tagName);
                    if (value === "checked" || value === "unchecked") {
                      node.setAttribute("data-checked", value === "checked");
                    }
                    return node;
                  }
                }, {
                  key: "formats",
                  value: function formats(domNode) {
                    if (domNode.tagName === "OL")
                      return "ordered";
                    if (domNode.tagName === "UL") {
                      if (domNode.hasAttribute("data-checked")) {
                        return domNode.getAttribute("data-checked") === "true" ? "checked" : "unchecked";
                      } else {
                        return "bullet";
                      }
                    }
                    return void 0;
                  }
                }]);
                function List2(domNode) {
                  _classCallCheck(this, List2);
                  var _this2 = _possibleConstructorReturn(this, (List2.__proto__ || Object.getPrototypeOf(List2)).call(this, domNode));
                  var listEventHandler = function listEventHandler2(e) {
                    if (e.target.parentNode !== domNode)
                      return;
                    var format = _this2.statics.formats(domNode);
                    var blot = _parchment2.default.find(e.target);
                    if (format === "checked") {
                      blot.format("list", "unchecked");
                    } else if (format === "unchecked") {
                      blot.format("list", "checked");
                    }
                  };
                  domNode.addEventListener("touchstart", listEventHandler);
                  domNode.addEventListener("mousedown", listEventHandler);
                  return _this2;
                }
                _createClass(List2, [{
                  key: "format",
                  value: function format(name, value) {
                    if (this.children.length > 0) {
                      this.children.tail.format(name, value);
                    }
                  }
                }, {
                  key: "formats",
                  value: function formats() {
                    return _defineProperty({}, this.statics.blotName, this.statics.formats(this.domNode));
                  }
                }, {
                  key: "insertBefore",
                  value: function insertBefore(blot, ref) {
                    if (blot instanceof ListItem) {
                      _get(List2.prototype.__proto__ || Object.getPrototypeOf(List2.prototype), "insertBefore", this).call(this, blot, ref);
                    } else {
                      var index = ref == null ? this.length() : ref.offset(this);
                      var after = this.split(index);
                      after.parent.insertBefore(blot, after);
                    }
                  }
                }, {
                  key: "optimize",
                  value: function optimize(context) {
                    _get(List2.prototype.__proto__ || Object.getPrototypeOf(List2.prototype), "optimize", this).call(this, context);
                    var next = this.next;
                    if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && next.domNode.tagName === this.domNode.tagName && next.domNode.getAttribute("data-checked") === this.domNode.getAttribute("data-checked")) {
                      next.moveChildren(this);
                      next.remove();
                    }
                  }
                }, {
                  key: "replace",
                  value: function replace(target) {
                    if (target.statics.blotName !== this.statics.blotName) {
                      var item = _parchment2.default.create(this.statics.defaultChild);
                      target.moveChildren(item);
                      this.appendChild(item);
                    }
                    _get(List2.prototype.__proto__ || Object.getPrototypeOf(List2.prototype), "replace", this).call(this, target);
                  }
                }]);
                return List2;
              }(_container2.default);
              List.blotName = "list";
              List.scope = _parchment2.default.Scope.BLOCK_BLOT;
              List.tagName = ["OL", "UL"];
              List.defaultChild = "list-item";
              List.allowedChildren = [ListItem];
              exports3.ListItem = ListItem;
              exports3.default = List;
            },
            /* 68 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _bold = __webpack_require__(56);
              var _bold2 = _interopRequireDefault(_bold);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Italic = function(_Bold) {
                _inherits(Italic2, _Bold);
                function Italic2() {
                  _classCallCheck(this, Italic2);
                  return _possibleConstructorReturn(this, (Italic2.__proto__ || Object.getPrototypeOf(Italic2)).apply(this, arguments));
                }
                return Italic2;
              }(_bold2.default);
              Italic.blotName = "italic";
              Italic.tagName = ["EM", "I"];
              exports3.default = Italic;
            },
            /* 69 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _inline = __webpack_require__(6);
              var _inline2 = _interopRequireDefault(_inline);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Script = function(_Inline) {
                _inherits(Script2, _Inline);
                function Script2() {
                  _classCallCheck(this, Script2);
                  return _possibleConstructorReturn(this, (Script2.__proto__ || Object.getPrototypeOf(Script2)).apply(this, arguments));
                }
                _createClass(Script2, null, [{
                  key: "create",
                  value: function create(value) {
                    if (value === "super") {
                      return document.createElement("sup");
                    } else if (value === "sub") {
                      return document.createElement("sub");
                    } else {
                      return _get(Script2.__proto__ || Object.getPrototypeOf(Script2), "create", this).call(this, value);
                    }
                  }
                }, {
                  key: "formats",
                  value: function formats(domNode) {
                    if (domNode.tagName === "SUB")
                      return "sub";
                    if (domNode.tagName === "SUP")
                      return "super";
                    return void 0;
                  }
                }]);
                return Script2;
              }(_inline2.default);
              Script.blotName = "script";
              Script.tagName = ["SUB", "SUP"];
              exports3.default = Script;
            },
            /* 70 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _inline = __webpack_require__(6);
              var _inline2 = _interopRequireDefault(_inline);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Strike = function(_Inline) {
                _inherits(Strike2, _Inline);
                function Strike2() {
                  _classCallCheck(this, Strike2);
                  return _possibleConstructorReturn(this, (Strike2.__proto__ || Object.getPrototypeOf(Strike2)).apply(this, arguments));
                }
                return Strike2;
              }(_inline2.default);
              Strike.blotName = "strike";
              Strike.tagName = "S";
              exports3.default = Strike;
            },
            /* 71 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _inline = __webpack_require__(6);
              var _inline2 = _interopRequireDefault(_inline);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var Underline = function(_Inline) {
                _inherits(Underline2, _Inline);
                function Underline2() {
                  _classCallCheck(this, Underline2);
                  return _possibleConstructorReturn(this, (Underline2.__proto__ || Object.getPrototypeOf(Underline2)).apply(this, arguments));
                }
                return Underline2;
              }(_inline2.default);
              Underline.blotName = "underline";
              Underline.tagName = "U";
              exports3.default = Underline;
            },
            /* 72 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _link = __webpack_require__(27);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var ATTRIBUTES = ["alt", "height", "width"];
              var Image = function(_Parchment$Embed) {
                _inherits(Image2, _Parchment$Embed);
                function Image2() {
                  _classCallCheck(this, Image2);
                  return _possibleConstructorReturn(this, (Image2.__proto__ || Object.getPrototypeOf(Image2)).apply(this, arguments));
                }
                _createClass(Image2, [{
                  key: "format",
                  value: function format(name, value) {
                    if (ATTRIBUTES.indexOf(name) > -1) {
                      if (value) {
                        this.domNode.setAttribute(name, value);
                      } else {
                        this.domNode.removeAttribute(name);
                      }
                    } else {
                      _get(Image2.prototype.__proto__ || Object.getPrototypeOf(Image2.prototype), "format", this).call(this, name, value);
                    }
                  }
                }], [{
                  key: "create",
                  value: function create(value) {
                    var node = _get(Image2.__proto__ || Object.getPrototypeOf(Image2), "create", this).call(this, value);
                    if (typeof value === "string") {
                      node.setAttribute("src", this.sanitize(value));
                    }
                    return node;
                  }
                }, {
                  key: "formats",
                  value: function formats(domNode) {
                    return ATTRIBUTES.reduce(function(formats2, attribute) {
                      if (domNode.hasAttribute(attribute)) {
                        formats2[attribute] = domNode.getAttribute(attribute);
                      }
                      return formats2;
                    }, {});
                  }
                }, {
                  key: "match",
                  value: function match(url) {
                    return /\.(jpe?g|gif|png)$/.test(url) || /^data:image\/.+;base64/.test(url);
                  }
                }, {
                  key: "sanitize",
                  value: function sanitize(url) {
                    return (0, _link.sanitize)(url, ["http", "https", "data"]) ? url : "//:0";
                  }
                }, {
                  key: "value",
                  value: function value(domNode) {
                    return domNode.getAttribute("src");
                  }
                }]);
                return Image2;
              }(_parchment2.default.Embed);
              Image.blotName = "image";
              Image.tagName = "IMG";
              exports3.default = Image;
            },
            /* 73 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _block = __webpack_require__(4);
              var _link = __webpack_require__(27);
              var _link2 = _interopRequireDefault(_link);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var ATTRIBUTES = ["height", "width"];
              var Video = function(_BlockEmbed) {
                _inherits(Video2, _BlockEmbed);
                function Video2() {
                  _classCallCheck(this, Video2);
                  return _possibleConstructorReturn(this, (Video2.__proto__ || Object.getPrototypeOf(Video2)).apply(this, arguments));
                }
                _createClass(Video2, [{
                  key: "format",
                  value: function format(name, value) {
                    if (ATTRIBUTES.indexOf(name) > -1) {
                      if (value) {
                        this.domNode.setAttribute(name, value);
                      } else {
                        this.domNode.removeAttribute(name);
                      }
                    } else {
                      _get(Video2.prototype.__proto__ || Object.getPrototypeOf(Video2.prototype), "format", this).call(this, name, value);
                    }
                  }
                }], [{
                  key: "create",
                  value: function create(value) {
                    var node = _get(Video2.__proto__ || Object.getPrototypeOf(Video2), "create", this).call(this, value);
                    node.setAttribute("frameborder", "0");
                    node.setAttribute("allowfullscreen", true);
                    node.setAttribute("src", this.sanitize(value));
                    return node;
                  }
                }, {
                  key: "formats",
                  value: function formats(domNode) {
                    return ATTRIBUTES.reduce(function(formats2, attribute) {
                      if (domNode.hasAttribute(attribute)) {
                        formats2[attribute] = domNode.getAttribute(attribute);
                      }
                      return formats2;
                    }, {});
                  }
                }, {
                  key: "sanitize",
                  value: function sanitize(url) {
                    return _link2.default.sanitize(url);
                  }
                }, {
                  key: "value",
                  value: function value(domNode) {
                    return domNode.getAttribute("src");
                  }
                }]);
                return Video2;
              }(_block.BlockEmbed);
              Video.blotName = "video";
              Video.className = "ql-video";
              Video.tagName = "IFRAME";
              exports3.default = Video;
            },
            /* 74 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.default = exports3.FormulaBlot = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _embed = __webpack_require__(35);
              var _embed2 = _interopRequireDefault(_embed);
              var _quill = __webpack_require__(5);
              var _quill2 = _interopRequireDefault(_quill);
              var _module = __webpack_require__(9);
              var _module2 = _interopRequireDefault(_module);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var FormulaBlot = function(_Embed) {
                _inherits(FormulaBlot2, _Embed);
                function FormulaBlot2() {
                  _classCallCheck(this, FormulaBlot2);
                  return _possibleConstructorReturn(this, (FormulaBlot2.__proto__ || Object.getPrototypeOf(FormulaBlot2)).apply(this, arguments));
                }
                _createClass(FormulaBlot2, null, [{
                  key: "create",
                  value: function create(value) {
                    var node = _get(FormulaBlot2.__proto__ || Object.getPrototypeOf(FormulaBlot2), "create", this).call(this, value);
                    if (typeof value === "string") {
                      window.katex.render(value, node, {
                        throwOnError: false,
                        errorColor: "#f00"
                      });
                      node.setAttribute("data-value", value);
                    }
                    return node;
                  }
                }, {
                  key: "value",
                  value: function value(domNode) {
                    return domNode.getAttribute("data-value");
                  }
                }]);
                return FormulaBlot2;
              }(_embed2.default);
              FormulaBlot.blotName = "formula";
              FormulaBlot.className = "ql-formula";
              FormulaBlot.tagName = "SPAN";
              var Formula = function(_Module) {
                _inherits(Formula2, _Module);
                _createClass(Formula2, null, [{
                  key: "register",
                  value: function register() {
                    _quill2.default.register(FormulaBlot, true);
                  }
                }]);
                function Formula2() {
                  _classCallCheck(this, Formula2);
                  var _this2 = _possibleConstructorReturn(this, (Formula2.__proto__ || Object.getPrototypeOf(Formula2)).call(this));
                  if (window.katex == null) {
                    throw new Error("Formula module requires KaTeX.");
                  }
                  return _this2;
                }
                return Formula2;
              }(_module2.default);
              exports3.FormulaBlot = FormulaBlot;
              exports3.default = Formula;
            },
            /* 75 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.default = exports3.CodeToken = exports3.CodeBlock = void 0;
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _parchment = __webpack_require__(0);
              var _parchment2 = _interopRequireDefault(_parchment);
              var _quill = __webpack_require__(5);
              var _quill2 = _interopRequireDefault(_quill);
              var _module = __webpack_require__(9);
              var _module2 = _interopRequireDefault(_module);
              var _code = __webpack_require__(13);
              var _code2 = _interopRequireDefault(_code);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var SyntaxCodeBlock = function(_CodeBlock) {
                _inherits(SyntaxCodeBlock2, _CodeBlock);
                function SyntaxCodeBlock2() {
                  _classCallCheck(this, SyntaxCodeBlock2);
                  return _possibleConstructorReturn(this, (SyntaxCodeBlock2.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock2)).apply(this, arguments));
                }
                _createClass(SyntaxCodeBlock2, [{
                  key: "replaceWith",
                  value: function replaceWith(block) {
                    this.domNode.textContent = this.domNode.textContent;
                    this.attach();
                    _get(SyntaxCodeBlock2.prototype.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock2.prototype), "replaceWith", this).call(this, block);
                  }
                }, {
                  key: "highlight",
                  value: function highlight(_highlight) {
                    var text2 = this.domNode.textContent;
                    if (this.cachedText !== text2) {
                      if (text2.trim().length > 0 || this.cachedText == null) {
                        this.domNode.innerHTML = _highlight(text2);
                        this.domNode.normalize();
                        this.attach();
                      }
                      this.cachedText = text2;
                    }
                  }
                }]);
                return SyntaxCodeBlock2;
              }(_code2.default);
              SyntaxCodeBlock.className = "ql-syntax";
              var CodeToken = new _parchment2.default.Attributor.Class("token", "hljs", {
                scope: _parchment2.default.Scope.INLINE
              });
              var Syntax = function(_Module) {
                _inherits(Syntax2, _Module);
                _createClass(Syntax2, null, [{
                  key: "register",
                  value: function register() {
                    _quill2.default.register(CodeToken, true);
                    _quill2.default.register(SyntaxCodeBlock, true);
                  }
                }]);
                function Syntax2(quill2, options) {
                  _classCallCheck(this, Syntax2);
                  var _this2 = _possibleConstructorReturn(this, (Syntax2.__proto__ || Object.getPrototypeOf(Syntax2)).call(this, quill2, options));
                  if (typeof _this2.options.highlight !== "function") {
                    throw new Error("Syntax module requires highlight.js. Please include the library on the page before Quill.");
                  }
                  var timer2 = null;
                  _this2.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function() {
                    clearTimeout(timer2);
                    timer2 = setTimeout(function() {
                      _this2.highlight();
                      timer2 = null;
                    }, _this2.options.interval);
                  });
                  _this2.highlight();
                  return _this2;
                }
                _createClass(Syntax2, [{
                  key: "highlight",
                  value: function highlight() {
                    var _this3 = this;
                    if (this.quill.selection.composing)
                      return;
                    this.quill.update(_quill2.default.sources.USER);
                    var range = this.quill.getSelection();
                    this.quill.scroll.descendants(SyntaxCodeBlock).forEach(function(code2) {
                      code2.highlight(_this3.options.highlight);
                    });
                    this.quill.update(_quill2.default.sources.SILENT);
                    if (range != null) {
                      this.quill.setSelection(range, _quill2.default.sources.SILENT);
                    }
                  }
                }]);
                return Syntax2;
              }(_module2.default);
              Syntax.DEFAULTS = {
                highlight: function() {
                  if (window.hljs == null)
                    return null;
                  return function(text2) {
                    var result = window.hljs.highlightAuto(text2);
                    return result.value;
                  };
                }(),
                interval: 1e3
              };
              exports3.CodeBlock = SyntaxCodeBlock;
              exports3.CodeToken = CodeToken;
              exports3.default = Syntax;
            },
            /* 76 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>';
            },
            /* 77 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>';
            },
            /* 78 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>';
            },
            /* 79 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>';
            },
            /* 80 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <g class="ql-fill ql-color-label"> <polygon points="6 6.868 6 6 5 6 5 7 5.942 7 6 6.868"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points="6.817 5 6 5 6 6 6.38 6 6.817 5"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points="4 11.439 4 11 3 11 3 12 3.755 12 4 11.439"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points="4.63 10 4 10 4 11 4.192 11 4.63 10"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points="13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points="12 6.868 12 6 11.62 6 12 6.868"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points="12.933 9 13 9 13 8 12.495 8 12.933 9"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points="5.5 13 9 5 12.5 13"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>';
            },
            /* 81 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <rect class="ql-fill ql-stroke" height=3 width=3 x=4 y=5></rect> <rect class="ql-fill ql-stroke" height=3 width=3 x=11 y=5></rect> <path class="ql-even ql-fill ql-stroke" d=M7,8c0,4.031-3,5-3,5></path> <path class="ql-even ql-fill ql-stroke" d=M14,8c0,4.031-3,5-3,5></path> </svg>';
            },
            /* 82 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>';
            },
            /* 83 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg class="" viewbox="0 0 18 18"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>';
            },
            /* 84 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class="ql-color-label ql-stroke ql-transparent" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points="5.5 11 9 3 12.5 11"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>';
            },
            /* 85 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <polygon class="ql-stroke ql-fill" points="3 11 5 9 3 7 3 11"></polygon> <line class="ql-stroke ql-fill" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>';
            },
            /* 86 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <polygon class="ql-stroke ql-fill" points="15 12 13 10 15 8 15 12"></polygon> <line class="ql-stroke ql-fill" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>';
            },
            /* 87 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>';
            },
            /* 88 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>';
            },
            /* 89 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>';
            },
            /* 90 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform="translate(24 18) rotate(-180)"/> </svg>';
            },
            /* 91 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>';
            },
            /* 92 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewBox="0 0 18 18"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>';
            },
            /* 93 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewBox="0 0 18 18"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>';
            },
            /* 94 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>';
            },
            /* 95 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class="ql-even ql-fill" points="5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12"></polyline> </svg>';
            },
            /* 96 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class="ql-fill ql-stroke" points="3 7 3 11 5 9 3 7"></polyline> </svg>';
            },
            /* 97 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points="5 7 5 11 3 9 5 7"></polyline> </svg>';
            },
            /* 98 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class="ql-even ql-stroke" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class="ql-even ql-stroke" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>';
            },
            /* 99 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class="ql-stroke ql-thin" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class="ql-stroke ql-thin" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class="ql-stroke ql-thin" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>';
            },
            /* 100 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>';
            },
            /* 101 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg class="" viewbox="0 0 18 18"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points="3 4 4 5 6 3"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points="3 14 4 15 6 13"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points="3 9 4 10 6 8"></polyline> </svg>';
            },
            /* 102 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>';
            },
            /* 103 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>';
            },
            /* 104 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <line class="ql-stroke ql-thin" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>';
            },
            /* 105 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>';
            },
            /* 106 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>';
            },
            /* 107 */
            /***/
            function(module3, exports3) {
              module3.exports = '<svg viewbox="0 0 18 18"> <polygon class=ql-stroke points="7 11 9 13 11 11 7 11"></polygon> <polygon class=ql-stroke points="7 7 9 5 11 7 7 7"></polygon> </svg>';
            },
            /* 108 */
            /***/
            function(module3, exports3, __webpack_require__) {
              Object.defineProperty(exports3, "__esModule", {
                value: true
              });
              exports3.default = exports3.BubbleTooltip = void 0;
              var _get = function get(object, property, receiver) {
                if (object === null)
                  object = Function.prototype;
                var desc = Object.getOwnPropertyDescriptor(object, property);
                if (desc === void 0) {
                  var parent = Object.getPrototypeOf(object);
                  if (parent === null) {
                    return void 0;
                  } else {
                    return get(parent, property, receiver);
                  }
                } else if ("value" in desc) {
                  return desc.value;
                } else {
                  var getter = desc.get;
                  if (getter === void 0) {
                    return void 0;
                  }
                  return getter.call(receiver);
                }
              };
              var _createClass = function() {
                function defineProperties(target, props) {
                  for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor)
                      descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                  }
                }
                return function(Constructor, protoProps, staticProps) {
                  if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                  if (staticProps)
                    defineProperties(Constructor, staticProps);
                  return Constructor;
                };
              }();
              var _extend = __webpack_require__(3);
              var _extend2 = _interopRequireDefault(_extend);
              var _emitter = __webpack_require__(8);
              var _emitter2 = _interopRequireDefault(_emitter);
              var _base = __webpack_require__(43);
              var _base2 = _interopRequireDefault(_base);
              var _selection = __webpack_require__(15);
              var _icons = __webpack_require__(41);
              var _icons2 = _interopRequireDefault(_icons);
              function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _possibleConstructorReturn(self2, call2) {
                if (!self2) {
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                }
                return call2 && (typeof call2 === "object" || typeof call2 === "function") ? call2 : self2;
              }
              function _inherits(subClass, superClass) {
                if (typeof superClass !== "function" && superClass !== null) {
                  throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
                }
                subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
                if (superClass)
                  Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
              }
              var TOOLBAR_CONFIG = [["bold", "italic", "link"], [{ header: 1 }, { header: 2 }, "blockquote"]];
              var BubbleTheme = function(_BaseTheme) {
                _inherits(BubbleTheme2, _BaseTheme);
                function BubbleTheme2(quill2, options) {
                  _classCallCheck(this, BubbleTheme2);
                  if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
                    options.modules.toolbar.container = TOOLBAR_CONFIG;
                  }
                  var _this = _possibleConstructorReturn(this, (BubbleTheme2.__proto__ || Object.getPrototypeOf(BubbleTheme2)).call(this, quill2, options));
                  _this.quill.container.classList.add("ql-bubble");
                  return _this;
                }
                _createClass(BubbleTheme2, [{
                  key: "extendToolbar",
                  value: function extendToolbar(toolbar) {
                    this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);
                    this.tooltip.root.appendChild(toolbar.container);
                    this.buildButtons([].slice.call(toolbar.container.querySelectorAll("button")), _icons2.default);
                    this.buildPickers([].slice.call(toolbar.container.querySelectorAll("select")), _icons2.default);
                  }
                }]);
                return BubbleTheme2;
              }(_base2.default);
              BubbleTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
                modules: {
                  toolbar: {
                    handlers: {
                      link: function link(value) {
                        if (!value) {
                          this.quill.format("link", false);
                        } else {
                          this.quill.theme.tooltip.edit();
                        }
                      }
                    }
                  }
                }
              });
              var BubbleTooltip = function(_BaseTooltip) {
                _inherits(BubbleTooltip2, _BaseTooltip);
                function BubbleTooltip2(quill2, bounds) {
                  _classCallCheck(this, BubbleTooltip2);
                  var _this2 = _possibleConstructorReturn(this, (BubbleTooltip2.__proto__ || Object.getPrototypeOf(BubbleTooltip2)).call(this, quill2, bounds));
                  _this2.quill.on(_emitter2.default.events.EDITOR_CHANGE, function(type, range, oldRange, source) {
                    if (type !== _emitter2.default.events.SELECTION_CHANGE)
                      return;
                    if (range != null && range.length > 0 && source === _emitter2.default.sources.USER) {
                      _this2.show();
                      _this2.root.style.left = "0px";
                      _this2.root.style.width = "";
                      _this2.root.style.width = _this2.root.offsetWidth + "px";
                      var lines = _this2.quill.getLines(range.index, range.length);
                      if (lines.length === 1) {
                        _this2.position(_this2.quill.getBounds(range));
                      } else {
                        var lastLine = lines[lines.length - 1];
                        var index = _this2.quill.getIndex(lastLine);
                        var length = Math.min(lastLine.length() - 1, range.index + range.length - index);
                        var _bounds = _this2.quill.getBounds(new _selection.Range(index, length));
                        _this2.position(_bounds);
                      }
                    } else if (document.activeElement !== _this2.textbox && _this2.quill.hasFocus()) {
                      _this2.hide();
                    }
                  });
                  return _this2;
                }
                _createClass(BubbleTooltip2, [{
                  key: "listen",
                  value: function listen() {
                    var _this3 = this;
                    _get(BubbleTooltip2.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip2.prototype), "listen", this).call(this);
                    this.root.querySelector(".ql-close").addEventListener("click", function() {
                      _this3.root.classList.remove("ql-editing");
                    });
                    this.quill.on(_emitter2.default.events.SCROLL_OPTIMIZE, function() {
                      setTimeout(function() {
                        if (_this3.root.classList.contains("ql-hidden"))
                          return;
                        var range = _this3.quill.getSelection();
                        if (range != null) {
                          _this3.position(_this3.quill.getBounds(range));
                        }
                      }, 1);
                    });
                  }
                }, {
                  key: "cancel",
                  value: function cancel() {
                    this.show();
                  }
                }, {
                  key: "position",
                  value: function position(reference2) {
                    var shift = _get(BubbleTooltip2.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip2.prototype), "position", this).call(this, reference2);
                    var arrow2 = this.root.querySelector(".ql-tooltip-arrow");
                    arrow2.style.marginLeft = "";
                    if (shift === 0)
                      return shift;
                    arrow2.style.marginLeft = -1 * shift - arrow2.offsetWidth / 2 + "px";
                  }
                }]);
                return BubbleTooltip2;
              }(_base.BaseTooltip);
              BubbleTooltip.TEMPLATE = ['<span class="ql-tooltip-arrow"></span>', '<div class="ql-tooltip-editor">', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-close"></a>', "</div>"].join("");
              exports3.BubbleTooltip = BubbleTooltip;
              exports3.default = BubbleTheme;
            },
            /* 109 */
            /***/
            function(module3, exports3, __webpack_require__) {
              module3.exports = __webpack_require__(63);
            }
            /******/
          ])["default"]
        );
      });
    })(quill);
    var quillExports = quill.exports;
    const Quill = /* @__PURE__ */ getDefaultExportFromCjs(quillExports);
    const _sfc_main$1V = vueExports$1.defineComponent({
      name: "widget-1",
      props: {
        widgetClasses: String
      },
      components: {
        Dropdown2
      },
      setup() {
        vueExports$1.onMounted(() => {
          const editorId = "kt_forms_widget_1_editor";
          const options = {
            modules: {
              toolbar: {
                container: "#kt_forms_widget_1_editor_toolbar"
              }
            },
            theme: "snow"
          };
          new Quill("#" + editorId, options);
        });
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-body pb-0"><div class="d-flex align-items-center"><div class="d-flex align-items-center flex-grow-1"><div class="symbol symbol-45px me-5"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-6.jpg"))} alt=""></div><div class="d-flex flex-column"><a href="#" class="text-gray-800 text-hover-primary fs-6 fw-bold">Grace Green</a><span class="text-gray-500 fw-semibold">PHP, SQLite, Artisan CLI</span></div></div><div class="my-0"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><form id="kt_forms_widget_1_form" class="ql-quil ql-quil-plain pb-3"><div id="kt_forms_widget_1_editor" class="py-6"></div><div class="separator"></div><div id="kt_forms_widget_1_editor_toolbar" class="ql-toolbar d-flex flex-stack py-2"><div class="me-2"><span class="ql-formats ql-size ms-0"><select class="ql-size w-75px"></select></span><span class="ql-formats"><button class="ql-bold"></button><button class="ql-italic"></button><button class="ql-underline"></button><button class="ql-strike"></button><button class="ql-image"></button><button class="ql-link"></button><button class="ql-clean"></button></span></div><div class="me-n3"><span class="btn btn-icon btn-sm btn-active-color-primary"><i class="flaticon2-clip-symbol icon-ms"></i></span><span class="btn btn-icon btn-sm btn-active-color-primary"><i class="flaticon2-pin icon-ms"></i></span></div></div></form></div></div>`);
    }
    const _sfc_setup$1V = _sfc_main$1V.setup;
    _sfc_main$1V.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/feeds/Widget1.vue");
      return _sfc_setup$1V ? _sfc_setup$1V(props, ctx) : void 0;
    };
    const FeedsWidget1 = /* @__PURE__ */ _export_sfc(_sfc_main$1V, [["ssrRender", _sfc_ssrRender$1R]]);
    const __vite_glob_0_90 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: FeedsWidget1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1U = vueExports$1.defineComponent({
      name: "widget-2",
      props: {
        widgetClasses: String
      },
      components: {
        Dropdown2
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-body pb-0"><div class="d-flex align-items-center mb-5"><div class="d-flex align-items-center flex-grow-1"><div class="symbol symbol-45px me-5"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-23.jpg"))} alt=""></div><div class="d-flex flex-column"><a href="#" class="text-gray-800 text-hover-primary fs-6 fw-bold">Nick Logan</a><span class="text-gray-500 fw-semibold">PHP, SQLite, Artisan CLI</span></div></div><div class="my-0"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="mb-5"><p class="text-gray-800 fw-normal mb-5"> Outlines keep you honest. They stop you from indulging in poorly thought-out metaphors about driving and keep you focused on the overall structure of your post </p><div class="d-flex align-items-center mb-5"><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-success px-4 py-2 me-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "message-text-2",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` 120 </a><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-danger px-4 py-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "heart",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` 15 </a></div></div><div class="separator mb-4"></div><form class="position-relative mb-6"><textarea class="form-control border-0 p-0 pe-10 resize-none min-h-25px" data-kt-autosize="true" rows="1" placeholder="Reply.."></textarea><div class="position-absolute top-0 end-0 me-n5"><span class="btn btn-icon btn-sm btn-active-color-primary pe-0 me-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "paper-clip",
        "icon-class": "fs-3 mb-3"
      }, null, _parent));
      _push(`</span><span class="btn btn-icon btn-sm btn-active-color-primary ps-0">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "geolocation",
        "icon-class": "fs-3 mb-3"
      }, null, _parent));
      _push(`</span></div></form></div></div>`);
    }
    const _sfc_setup$1U = _sfc_main$1U.setup;
    _sfc_main$1U.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/feeds/Widget2.vue");
      return _sfc_setup$1U ? _sfc_setup$1U(props, ctx) : void 0;
    };
    const FeedsWidget2 = /* @__PURE__ */ _export_sfc(_sfc_main$1U, [["ssrRender", _sfc_ssrRender$1Q]]);
    const __vite_glob_0_91 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: FeedsWidget2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1T = vueExports$1.defineComponent({
      name: "widget-3",
      props: {
        widgetClasses: String
      },
      components: {
        Dropdown2
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-body pb-0"><div class="d-flex align-items-center mb-3"><div class="d-flex align-items-center flex-grow-1"><div class="symbol symbol-45px me-5"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-21.jpg"))} alt=""></div><div class="d-flex flex-column"><a href="#" class="text-gray-800 text-hover-primary fs-6 fw-bold">Carles Nilson</a><span class="text-gray-500 fw-semibold">Yestarday at 5:06 PM</span></div></div><div class="my-0"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="mb-7"><div class="text-gray-800 mb-5"> Outlines keep you honest. They stop you from indulging in poorly thought-out metaphors about driving and keep you focused on the overall structure of your post </div><div class="d-flex align-items-center mb-5"><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-success px-4 py-2 me-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "message-text-2",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` 12 </a><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-danger px-4 py-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "heart",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(` 150 </a></div></div><div class="mb-7 ps-10"><div class="d-flex mb-5"><div class="symbol symbol-45px me-5"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-14.jpg"))} alt=""></div><div class="d-flex flex-column flex-row-fluid"><div class="d-flex align-items-center flex-wrap mb-1"><a href="#" class="text-gray-800 text-hover-primary fw-bold me-2">Alice Danchik</a><span class="text-gray-500 fw-semibold fs-7">1 day</span><a href="#" class="ms-auto text-gray-400 text-hover-primary fw-semibold fs-7">Reply</a></div><span class="text-gray-800 fs-7 fw-normal pt-1"> Long before you sit dow to put digital pen to paper you need to make sure you have to sit down and write. </span></div></div><div class="d-flex"><div class="symbol symbol-45px me-5"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-9.jpg"))} alt=""></div><div class="d-flex flex-column flex-row-fluid"><div class="d-flex align-items-center flex-wrap mb-1"><a href="#" class="text-gray-800 text-hover-primary fw-bold me-2">Harris Bold</a><span class="text-gray-500 fw-semibold fs-7">2 days</span><a href="#" class="ms-auto text-gray-400 text-hover-primary fw-semibold fs-7">Reply</a></div><span class="text-gray-800 fs-7 fw-normal pt-1"> Outlines keep you honest. They stop you from indulging in poorly </span></div></div></div><div class="separator mb-4"></div><form class="position-relative mb-6"><textarea class="form-control border-0 p-0 pe-10 resize-none min-h-25px" data-kt-autosize="true" rows="1" placeholder="Reply.."></textarea><div class="position-absolute top-0 end-0 me-n5"><span class="btn btn-icon btn-sm btn-active-color-primary pe-0 me-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "paper-clip",
        "icon-class": "fs-3 mb-3"
      }, null, _parent));
      _push(`</span><span class="btn btn-icon btn-sm btn-active-color-primary ps-0">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "geolocation",
        "icon-class": "fs-2 mb-3"
      }, null, _parent));
      _push(`</span></div></form></div></div>`);
    }
    const _sfc_setup$1T = _sfc_main$1T.setup;
    _sfc_main$1T.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/feeds/Widget3.vue");
      return _sfc_setup$1T ? _sfc_setup$1T(props, ctx) : void 0;
    };
    const FeedsWidget3 = /* @__PURE__ */ _export_sfc(_sfc_main$1T, [["ssrRender", _sfc_ssrRender$1P]]);
    const __vite_glob_0_92 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: FeedsWidget3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1S = vueExports$1.defineComponent({
      name: "widget-4",
      props: {
        widgetClasses: String
      },
      components: {
        Dropdown3
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-body pb-0"><div class="d-flex align-items-center mb-5"><div class="d-flex align-items-center flex-grow-1"><div class="symbol symbol-45px me-5"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-7.jpg"))} alt=""></div><div class="d-flex flex-column"><a href="#" class="text-gray-800 text-hover-primary fs-6 fw-bold">Carles Nilson</a><span class="text-gray-500 fw-semibold">Last week at 10:00 PM</span></div></div><div class="my-0"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="mb-7"><div class="text-gray-800 mb-5"> Outlines keep you honest. They stop you from indulging in poorly thought-out metaphors about driving and keep you focused on the overall structure of your post </div><div class="d-flex align-items-center mb-5"><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-success px-4 py-2 me-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "message-text-2",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` 22 </a><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-danger px-4 py-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "heart",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(` 59 </a></div></div><div class="separator mb-4"></div><form class="position-relative mb-6"><textarea class="form-control border-0 p-0 pe-10 resize-none min-h-25px" data-kt-autosize="true" rows="1" placeholder="Reply.."></textarea><div class="position-absolute top-0 end-0 me-n5"><span class="btn btn-icon btn-sm btn-active-color-primary pe-0 me-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "paper-clip",
        "icon-class": "fs-3 mb-3"
      }, null, _parent));
      _push(`</span><span class="btn btn-icon btn-sm btn-active-color-primary ps-0">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "geolocation",
        "icon-class": "fs-2 mb-3"
      }, null, _parent));
      _push(`</span></div></form></div></div>`);
    }
    const _sfc_setup$1S = _sfc_main$1S.setup;
    _sfc_main$1S.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/feeds/Widget4.vue");
      return _sfc_setup$1S ? _sfc_setup$1S(props, ctx) : void 0;
    };
    const FeedsWidget4 = /* @__PURE__ */ _export_sfc(_sfc_main$1S, [["ssrRender", _sfc_ssrRender$1O]]);
    const __vite_glob_0_93 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: FeedsWidget4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1R = vueExports$1.defineComponent({
      name: "widget-5",
      props: {
        widgetClasses: String
      },
      components: {
        Dropdown2
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-body pb-0"><div class="d-flex align-items-center mb-5"><div class="d-flex align-items-center flex-grow-1"><div class="symbol symbol-45px me-5"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-25.jpg"))} alt=""></div><div class="d-flex flex-column"><a href="#" class="text-gray-800 text-hover-primary fs-6 fw-bold">Sam Logan</a><span class="text-gray-500 fw-semibold">Mango, Java, Python</span></div></div><div class="my-0"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="mb-5"><div class="bgi-no-repeat bgi-size-cover rounded min-h-250px mb-5" style="${ssrRenderStyle({
        backgroundImage: `url(${_ctx.getAssetPath(
          "/media/stock/900x600/20.jpg"
        )})`
      })}"></div><div class="text-gray-800 mb-5"> Outlines keep you honest. They stop you from indulging in poorly thought-out metaphors about driving and keep you focused on the overall structure of your post </div><div class="d-flex align-items-center mb-5"><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-success px-4 py-2 me-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "message-text-2",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` 89 </a><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-danger px-4 py-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "heart",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(` 29 </a></div></div><div class="separator mb-4"></div><form class="position-relative mb-6"><textarea class="form-control border-0 p-0 pe-10 resize-none min-h-25px" data-kt-autosize="true" rows="1" placeholder="Reply.."></textarea><div class="position-absolute top-0 end-0 me-n5"><span class="btn btn-icon btn-sm btn-active-color-primary pe-0 me-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "paper-clip",
        "icon-class": "fs-3 mb-3"
      }, null, _parent));
      _push(`</span><span class="btn btn-icon btn-sm btn-active-color-primary ps-0">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "geolocation",
        "icon-class": "fs-2 mb-3"
      }, null, _parent));
      _push(`</span></div></form></div></div>`);
    }
    const _sfc_setup$1R = _sfc_main$1R.setup;
    _sfc_main$1R.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/feeds/Widget5.vue");
      return _sfc_setup$1R ? _sfc_setup$1R(props, ctx) : void 0;
    };
    const FeedsWidget5 = /* @__PURE__ */ _export_sfc(_sfc_main$1R, [["ssrRender", _sfc_ssrRender$1N]]);
    const __vite_glob_0_94 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: FeedsWidget5
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1Q = vueExports$1.defineComponent({
      name: "widget-6",
      props: {
        widgetClasses: String
      },
      components: {
        Dropdown3
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-body pb-0"><div class="d-flex align-items-center mb-5"><div class="d-flex align-items-center flex-grow-1"><div class="symbol symbol-45px me-5"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-13.jpg"))} alt=""></div><div class="d-flex flex-column"><a href="#" class="text-gray-800 text-hover-primary fs-6 fw-bold">Mat Dillon</a><span class="text-gray-500 fw-semibold">Last month</span></div></div><div class="my-0"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="mb-6"><div class="text-gray-800 fs-6 fw-normal mb-5"> Outlines keep you honest. They stop you from indulging in poorly thought-out metaphors </div><div class="mb-5"><iframe class="embed-responsive-item rounded h-300px w-100" src="https://www.youtube.com/embed/qIHXpnASPAA"${ssrIncludeBooleanAttr(true) ? " allowfullscreen" : ""}></iframe></div><div class="d-flex align-items-center mb-5"><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-success px-4 py-2 me-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "message-text-2",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` 189 </a><a href="#" class="btn btn-sm btn-light btn-color-muted btn-active-light-danger px-4 py-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "heart",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(` 229 </a></div></div><div class="separator mb-4"></div><form class="position-relative mb-6"><textarea class="form-control border-0 p-0 pe-10 resize-none min-h-25px" data-kt-autosize="true" rows="1" placeholder="Reply.."></textarea><div class="position-absolute top-0 end-0 me-n5"><span class="btn btn-icon btn-sm btn-active-color-primary pe-0 me-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "paper-clip",
        "icon-class": "fs-3 mb-3"
      }, null, _parent));
      _push(`</span><span class="btn btn-icon btn-sm btn-active-color-primary ps-0">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "geolocation",
        "icon-class": "fs-2 mb-3"
      }, null, _parent));
      _push(`</span></div></form></div></div>`);
    }
    const _sfc_setup$1Q = _sfc_main$1Q.setup;
    _sfc_main$1Q.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/feeds/Widget6.vue");
      return _sfc_setup$1Q ? _sfc_setup$1Q(props, ctx) : void 0;
    };
    const FeedsWidget6 = /* @__PURE__ */ _export_sfc(_sfc_main$1Q, [["ssrRender", _sfc_ssrRender$1M]]);
    const __vite_glob_0_95 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: FeedsWidget6
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1P = vueExports$1.defineComponent({
      name: "kt-widget-1",
      components: {
        Dropdown1
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const items = [
          {
            icon: "abstract-26",
            color: "success",
            title: "Project Briefing",
            description: "Project Manager"
          },
          {
            icon: "pencil",
            color: "warning",
            title: "Concept Design",
            description: "Art Director"
          },
          {
            icon: "message-text-2",
            color: "primary",
            title: "Functional Logics",
            description: "Lead Developer"
          },
          {
            icon: "disconnect",
            color: "danger",
            title: "Development",
            description: "DevOps"
          },
          {
            icon: "security-user",
            color: "info",
            title: "Testing",
            description: "QA Managers"
          }
        ];
        return {
          items,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown1 = vueExports$1.resolveComponent("Dropdown1");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold text-gray-900">Tasks Overview</span><span class="text-muted mt-1 fw-semibold fs-7">Pending 10 tasks</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown1, null, null, _parent));
      _push(`</div></div><div class="card-body pt-5"><!--[-->`);
      ssrRenderList(_ctx.items, (item, index) => {
        _push(`<div class="${ssrRenderClass([{ "mb-7": _ctx.items.length - 1 !== index }, "d-flex align-items-center"])}"><div class="symbol symbol-50px me-5"><span class="${ssrRenderClass([`bg-light-${item.color}`, "symbol-label"])}">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": item.icon,
          "icon-class": `text-${item.color} fs-2x`
        }, null, _parent));
        _push(`</span></div><div class="d-flex flex-column"><a href="#" class="text-gray-900 text-hover-primary fs-6 fw-bold">${ssrInterpolate(item.title)}</a><span class="text-muted fw-semibold">${ssrInterpolate(item.description)}</span></div></div>`);
      });
      _push(`<!--]--></div></div>`);
    }
    const _sfc_setup$1P = _sfc_main$1P.setup;
    _sfc_main$1P.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/lists/Widget1.vue");
      return _sfc_setup$1P ? _sfc_setup$1P(props, ctx) : void 0;
    };
    const ListsWidget1 = /* @__PURE__ */ _export_sfc(_sfc_main$1P, [["ssrRender", _sfc_ssrRender$1L]]);
    const __vite_glob_0_96 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ListsWidget1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1O = vueExports$1.defineComponent({
      name: "kt-widget-2",
      components: {
        Dropdown2
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const list = vueExports$1.ref([
          {
            avatar: getAssetPath("media/avatars/300-6.jpg"),
            name: "Emma Smith",
            description: "Project Manager"
          },
          {
            avatar: getAssetPath("media/avatars/300-5.jpg"),
            name: "Sean Bean",
            description: "PHP, SQLite, Artisan CLI"
          },
          {
            avatar: getAssetPath("media/avatars/300-11.jpg"),
            name: "Brian Cox",
            description: "PHP, SQLite, Artisan CLI"
          },
          {
            avatar: getAssetPath("media/avatars/300-9.jpg"),
            name: "Francis Mitcham",
            description: "PHP, SQLite, Artisan CLI"
          },
          {
            avatar: getAssetPath("media/avatars/300-23.jpg"),
            name: "Dan Wilson",
            description: "PHP, SQLite, Artisan CLI"
          },
          {
            avatar: getAssetPath("media/avatars/300-23.jpg"),
            name: "Dan Wilson",
            description: "PHP, SQLite, Artisan CLI"
          }
        ]);
        return {
          list,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1K(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header border-0"><h3 class="card-title fw-bold text-gray-900">Authors</h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="card-body pt-2"><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<div class="${ssrRenderClass([{ "mb-7": _ctx.list.length - 1 !== index }, "d-flex align-items-center"])}"><div class="symbol symbol-50px me-5"><img${ssrRenderAttr("src", item.avatar)} class="" alt=""></div><div class="flex-grow-1"><a href="#" class="text-gray-900 fw-bold text-hover-primary fs-6">${ssrInterpolate(item.name)}</a><span class="text-muted d-block fw-semibold">${ssrInterpolate(item.description)}</span></div></div>`);
      });
      _push(`<!--]--></div></div>`);
    }
    const _sfc_setup$1O = _sfc_main$1O.setup;
    _sfc_main$1O.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/lists/Widget2.vue");
      return _sfc_setup$1O ? _sfc_setup$1O(props, ctx) : void 0;
    };
    const ListsWidget2 = /* @__PURE__ */ _export_sfc(_sfc_main$1O, [["ssrRender", _sfc_ssrRender$1K]]);
    const __vite_glob_0_97 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ListsWidget2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1N = vueExports$1.defineComponent({
      name: "kt-widget-3",
      components: {
        Dropdown2
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const list = vueExports$1.ref([
          {
            color: "success",
            title: "Create FireStone Logo",
            text: "Due in 2 Days"
          },
          {
            color: "primary",
            title: "Stakeholder Meeting",
            text: "Due in 3 Days"
          },
          {
            color: "warning",
            title: "Scoping & Estimations",
            text: "Due in 5 Days"
          },
          {
            color: "primary",
            title: "KPI App Showcase",
            text: "Due in 2 Days"
          },
          {
            color: "danger",
            title: "Project Meeting",
            text: "Due in 12 Days"
          },
          {
            color: "success",
            title: "Customers Update",
            text: "Due in 1 week"
          }
        ]);
        return {
          list,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header border-0"><h3 class="card-title fw-bold text-gray-900">Todo</h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="card-body pt-2"><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<div class="${ssrRenderClass([{ "mb-8": _ctx.list.length - 1 !== index }, "d-flex align-items-center"])}"><span class="${ssrRenderClass([`bg-${item.color}`, "bullet bullet-vertical h-40px"])}"></span><div class="form-check form-check-custom form-check-solid mx-5"><input class="form-check-input" type="checkbox" value=""></div><div class="flex-grow-1"><a href="#" class="text-gray-800 text-hover-primary fw-bold fs-6">${ssrInterpolate(item.title)}</a><span class="text-muted fw-semibold d-block">${ssrInterpolate(item.text)}</span></div><span class="${ssrRenderClass([`badge-light-${item.color}`, "badge fs-8 fw-bold"])}">New</span></div>`);
      });
      _push(`<!--]--></div></div>`);
    }
    const _sfc_setup$1N = _sfc_main$1N.setup;
    _sfc_main$1N.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/lists/Widget3.vue");
      return _sfc_setup$1N ? _sfc_setup$1N(props, ctx) : void 0;
    };
    const ListsWidget3 = /* @__PURE__ */ _export_sfc(_sfc_main$1N, [["ssrRender", _sfc_ssrRender$1J]]);
    const __vite_glob_0_98 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ListsWidget3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1M = vueExports$1.defineComponent({
      name: "kt-widget-4",
      components: {
        Dropdown3
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const list = vueExports$1.ref([
          {
            image: getAssetPath("media/svg/brand-logos/plurk.svg"),
            title: "Top Authors",
            text: "Mark, Rowling, Esther",
            badge: "+82$"
          },
          {
            image: getAssetPath("media/svg/brand-logos/telegram.svg"),
            title: "Popular Authors",
            text: "Randy, Steve, Mike",
            badge: "+280$"
          },
          {
            image: getAssetPath("media/svg/brand-logos/vimeo.svg"),
            title: "New Users",
            text: "John, Pat, Jimmy",
            badge: "+4500$"
          },
          {
            image: getAssetPath("media/svg/brand-logos/bebo.svg"),
            title: "Active Customers",
            text: "Mark, Rowling, Esther",
            badge: "+4500$"
          },
          {
            image: getAssetPath("media/svg/brand-logos/kickstarter.svg"),
            title: "Bestseller Theme",
            text: "Disco, Retro, Sports",
            badge: "+4500$"
          },
          {
            image: getAssetPath("media/svg/brand-logos/fox-hub.svg"),
            title: "Fox Broker App",
            text: "Finance, Corporate, Apps",
            badge: "+145$",
            space: ""
          }
        ]);
        return {
          list,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold text-gray-900">Trends</span><span class="text-muted mt-1 fw-semibold fs-7">Latest tech trends</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="card-body pt-5"><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<div class="${ssrRenderClass([{ "mb-7": _ctx.list.length - 1 !== index }, "d-flex align-items-sm-center"])}"><div class="symbol symbol-50px me-5"><span class="symbol-label"><img${ssrRenderAttr("src", item.image)} class="h-50 align-self-center" alt=""></span></div><div class="d-flex align-items-center flex-row-fluid flex-wrap"><div class="flex-grow-1 me-2"><a href="#" class="text-gray-800 text-hover-primary fs-6 fw-bold">${ssrInterpolate(item.title)}</a><span class="text-muted fw-semibold d-block fs-7">${ssrInterpolate(item.text)}</span></div><span class="badge badge-light fw-bold my-2">${ssrInterpolate(item.badge)}</span></div></div>`);
      });
      _push(`<!--]--></div></div>`);
    }
    const _sfc_setup$1M = _sfc_main$1M.setup;
    _sfc_main$1M.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/lists/Widget4.vue");
      return _sfc_setup$1M ? _sfc_setup$1M(props, ctx) : void 0;
    };
    const ListsWidget4 = /* @__PURE__ */ _export_sfc(_sfc_main$1M, [["ssrRender", _sfc_ssrRender$1I]]);
    const __vite_glob_0_99 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ListsWidget4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1L = vueExports$1.defineComponent({
      name: "kt-widget-5",
      props: {
        widgetClasses: String
      },
      components: {
        Dropdown1
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown1 = vueExports$1.resolveComponent("Dropdown1");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header align-items-center border-0 mt-4"><h3 class="card-title align-items-start flex-column"><span class="fw-bold mb-2 text-gray-900">Activities</span><span class="text-muted fw-semibold fs-7">890,344 Sales</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown1, null, null, _parent));
      _push(`</div></div><div class="card-body pt-5"><div class="timeline-label"><div class="timeline-item"><div class="timeline-label fw-bold text-gray-800 fs-6">08:42</div><div class="timeline-badge"><i class="fa fa-genderless text-warning fs-1"></i></div><div class="fw-mormal timeline-content text-muted ps-3"> Outlines keep you honest. And keep structure </div></div><div class="timeline-item"><div class="timeline-label fw-bold text-gray-800 fs-6">10:00</div><div class="timeline-badge"><i class="fa fa-genderless text-success fs-1"></i></div><div class="timeline-content d-flex"><span class="fw-bold text-gray-800 ps-3">AEOL meeting</span></div></div><div class="timeline-item"><div class="timeline-label fw-bold text-gray-800 fs-6">14:37</div><div class="timeline-badge"><i class="fa fa-genderless text-danger fs-1"></i></div><div class="timeline-content fw-bold text-gray-800 ps-3"> Make deposit <a href="#" class="text-primary">USD 700</a>. to ESL </div></div><div class="timeline-item"><div class="timeline-label fw-bold text-gray-800 fs-6">16:50</div><div class="timeline-badge"><i class="fa fa-genderless text-primary fs-1"></i></div><div class="timeline-content fw-mormal text-muted ps-3"> Indulging in poorly driving and keep structure keep great </div></div><div class="timeline-item"><div class="timeline-label fw-bold text-gray-800 fs-6">21:03</div><div class="timeline-badge"><i class="fa fa-genderless text-danger fs-1"></i></div><div class="timeline-content fw-semibold text-gray-800 ps-3"> New order placed <a href="#" class="text-primary">#XF-2356</a>. </div></div><div class="timeline-item"><div class="timeline-label fw-bold text-gray-800 fs-6">16:50</div><div class="timeline-badge"><i class="fa fa-genderless text-primary fs-1"></i></div><div class="timeline-content fw-mormal text-muted ps-3"> Indulging in poorly driving and keep structure keep great </div></div><div class="timeline-item"><div class="timeline-label fw-bold text-gray-800 fs-6">21:03</div><div class="timeline-badge"><i class="fa fa-genderless text-danger fs-1"></i></div><div class="timeline-content fw-semibold text-gray-800 ps-3"> New order placed <a href="#" class="text-primary">#XF-2356</a>. </div></div><div class="timeline-item"><div class="timeline-label fw-bold text-gray-800 fs-6">10:30</div><div class="timeline-badge"><i class="fa fa-genderless text-success fs-1"></i></div><div class="timeline-content fw-mormal text-muted ps-3"> Finance KPI Mobile app launch preparion meeting </div></div></div></div></div>`);
    }
    const _sfc_setup$1L = _sfc_main$1L.setup;
    _sfc_main$1L.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/lists/Widget5.vue");
      return _sfc_setup$1L ? _sfc_setup$1L(props, ctx) : void 0;
    };
    const ListsWidget5 = /* @__PURE__ */ _export_sfc(_sfc_main$1L, [["ssrRender", _sfc_ssrRender$1H]]);
    const __vite_glob_0_100 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ListsWidget5
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1K = vueExports$1.defineComponent({
      name: "kt-widget-6",
      components: {
        Dropdown3
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const list = vueExports$1.ref([
          {
            color: "warning",
            icon: getAssetPath("media/icons/duotune/abstract/abs027.svg"),
            title: "Group lunch celebration",
            text: "Due in 2 Days",
            number: "+28%"
          },
          {
            color: "success",
            icon: getAssetPath("media/icons/duotune/art/art005.svg"),
            title: "Navigation optimization",
            text: "Due in 2 Days",
            number: "+50%"
          },
          {
            color: "danger",
            icon: getAssetPath("media/icons/duotune/communication/com012.svg"),
            title: "Rebrand strategy planning",
            text: "Due in 5 Days",
            number: "-27%"
          },
          {
            color: "info",
            icon: getAssetPath("media/icons/duotune/communication/com012.svg"),
            title: "Product goals strategy",
            text: "Due in 7 Days",
            number: "+8%"
          }
        ]);
        return {
          list,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header border-0"><h3 class="card-title fw-bold text-gray-900">Notifications</h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="card-body pt-0"><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<div class="${ssrRenderClass([[
          _ctx.list.length - 1 !== index,
          `bg-light-${item.color}`
        ], "d-flex align-items-center rounded p-5 mb-7"])}">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "abstract-26",
          "icon-class": `text-${item.color} fs-1 me-5`
        }, null, _parent));
        _push(`<div class="flex-grow-1 me-2"><a href="#" class="fw-bold text-gray-800 text-hover-primary fs-6">${ssrInterpolate(item.title)}</a><span class="text-muted fw-semibold d-block">${ssrInterpolate(item.text)}</span></div><span class="${ssrRenderClass([`text-${item.color}`, "fw-bold py-1"])}">${ssrInterpolate(item.number)}</span></div>`);
      });
      _push(`<!--]--></div></div>`);
    }
    const _sfc_setup$1K = _sfc_main$1K.setup;
    _sfc_main$1K.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/lists/Widget6.vue");
      return _sfc_setup$1K ? _sfc_setup$1K(props, ctx) : void 0;
    };
    const ListsWidget6 = /* @__PURE__ */ _export_sfc(_sfc_main$1K, [["ssrRender", _sfc_ssrRender$1G]]);
    const __vite_glob_0_101 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ListsWidget6
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1J = vueExports$1.defineComponent({
      name: "kt-widget-6",
      components: {
        Dropdown1
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const list = vueExports$1.ref([
          {
            image: getAssetPath("media/stock/600x400/img-20.jpg"),
            title: "Cup & Green",
            size: "87KB",
            color: "success",
            status: "Approved"
          },
          {
            image: getAssetPath("media/stock/600x400/img-19.jpg"),
            title: "Yellow Background",
            size: "1.2MB",
            color: "warning",
            status: "In Progress"
          },
          {
            image: getAssetPath("media/stock/600x400/img-25.jpg"),
            title: "Nike & Blue",
            size: "87KB",
            color: "success",
            status: "Success"
          },
          {
            image: getAssetPath("media/stock/600x400/img-24.jpg"),
            title: "Red Boots",
            size: "345KB",
            color: "danger",
            status: "Rejected"
          }
        ]);
        return {
          list,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown1 = vueExports$1.resolveComponent("Dropdown1");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header align-items-center border-0 mt-4"><h3 class="card-title align-items-start flex-column"><span class="fw-bold text-gray-900">Latest Media</span><span class="text-muted mt-1 fw-semibold fs-7">Articles and publications</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown1, null, null, _parent));
      _push(`</div></div><div class="card-body pt-3"><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<div class="${ssrRenderClass([{ "mb-7": _ctx.list.length - 1 !== index }, "d-flex align-items-sm-center"])}"><div class="symbol symbol-60px symbol-2by3 me-4"><div class="symbol-label" style="${ssrRenderStyle({
          backgroundImage: `url(${item.image})`
        })}"></div></div><div class="d-flex flex-row-fluid flex-wrap align-items-center"><div class="flex-grow-1 me-2"><a href="#" class="text-gray-800 fw-bold text-hover-primary fs-6">${ssrInterpolate(item.title)}</a><span class="text-muted fw-semibold d-block pt-1">Size: ${ssrInterpolate(item.size)}</span></div><span class="${ssrRenderClass([`badge-light-${item.color}`, "badge fs-8 fw-bold my-2"])}">${ssrInterpolate(item.status)}</span></div></div>`);
      });
      _push(`<!--]--></div></div>`);
    }
    const _sfc_setup$1J = _sfc_main$1J.setup;
    _sfc_main$1J.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/lists/Widget7.vue");
      return _sfc_setup$1J ? _sfc_setup$1J(props, ctx) : void 0;
    };
    const ListsWidget7 = /* @__PURE__ */ _export_sfc(_sfc_main$1J, [["ssrRender", _sfc_ssrRender$1F]]);
    const __vite_glob_0_102 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ListsWidget7
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1I = vueExports$1.defineComponent({
      name: "kt-widget-6",
      components: {
        Dropdown3
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const list = vueExports$1.ref([
          {
            image: getAssetPath("media/stock/600x400/img-17.jpg"),
            title: "Cup & Green",
            desc: "Visually stunning",
            rate: "4.2"
          },
          {
            image: getAssetPath("media/stock/600x400/img-17.jpg"),
            title: "Pink Patterns",
            desc: "Feminine all around",
            rate: "5.0"
          },
          {
            image: getAssetPath("media/stock/600x400/img-1.jpg"),
            title: "Abstract Art",
            desc: "The will to capture readers",
            rate: " 5.7"
          },
          {
            image: getAssetPath("media/stock/600x400/img-9.jpg"),
            title: "Desserts platter",
            desc: "Food trends & inspirations",
            rate: "3.7"
          }
        ]);
        return {
          list,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header align-items-center border-0 mt-4"><h3 class="card-title align-items-start flex-column"><span class="fw-bold text-gray-900">Latest Products</span><span class="text-muted mt-1 fw-semibold fs-7">Gifts and more</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="card-body pt-3"><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<div class="${ssrRenderClass([{ "mb-7": _ctx.list.length - 1 !== index }, "d-flex align-items-sm-center"])}"><div class="symbol symbol-60px symbol-2by3 me-4"><div class="symbol-label" style="${ssrRenderStyle({
          backgroundImage: `url(${item.image})`
        })}"></div></div><div class="d-flex flex-row-fluid align-items-center flex-wrap my-lg-0 me-2"><div class="flex-grow-1 my-lg-0 my-2 me-2"><a href="#" class="text-gray-800 fw-bold text-hover-primary fs-6">${ssrInterpolate(item.title)}</a><span class="text-muted fw-semibold d-block pt-1">${ssrInterpolate(item.desc)}</span></div><div class="d-flex align-items-center"><div class="me-6"><i class="fa fa-star-half-alt me-1 text-warning fs-5"></i><span class="text-gray-800 fw-bold">${ssrInterpolate(item.rate)}</span></div><a href="#" class="btn btn-icon btn-light btn-sm border-0">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "arrow-right",
          "icon-class": "fs-2 text-primary"
        }, null, _parent));
        _push(`</a></div></div></div>`);
      });
      _push(`<!--]--></div></div>`);
    }
    const _sfc_setup$1I = _sfc_main$1I.setup;
    _sfc_main$1I.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/lists/Widget8.vue");
      return _sfc_setup$1I ? _sfc_setup$1I(props, ctx) : void 0;
    };
    const ListsWidget8 = /* @__PURE__ */ _export_sfc(_sfc_main$1I, [["ssrRender", _sfc_ssrRender$1E]]);
    const __vite_glob_0_103 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ListsWidget8
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1H = vueExports$1.defineComponent({
      name: "widget-1",
      components: {
        Dropdown3
      },
      props: {
        widgetClasses: String,
        widgetColor: String,
        chartHeight: Number
      },
      setup() {
        const items = [
          {
            icon: "compass",
            title: "Sales",
            description: "100 Regions",
            stats: "$2,5b",
            arrow: "up"
          },
          {
            icon: "category",
            title: "Revenue",
            description: "Quarter 2/3",
            stats: "$1,7b",
            arrow: "down"
          },
          {
            icon: "wifi",
            title: "Growth",
            description: "80% Rate",
            stats: "$8,8m",
            arrow: "up"
          },
          {
            icon: "rocket",
            title: "Dispute",
            description: "3090 Refunds",
            stats: "$270m",
            arrow: "down"
          }
        ];
        return {
          items,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-body p-0"><div class="${ssrRenderClass([`bg-${_ctx.widgetColor}`, "px-9 pt-7 card-rounded h-275px w-100"])}"><div class="d-flex flex-stack"><h3 class="m-0 text-white fw-bold fs-3">Sales Summary</h3><div class="ms-1"><button type="button" class="${ssrRenderClass([`btn-active-color-${_ctx.widgetColor}`, "btn btn-sm btn-icon btn-color-white btn-active-white border-0 me-n3"])}" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="d-flex text-center flex-column text-white pt-8"><span class="fw-semibold fs-7">You Balance</span><span class="fw-bold fs-2x pt-1">$37,562.00</span></div></div><div class="bg-body shadow-sm card-rounded mx-9 mb-9 px-6 py-9 position-relative z-index-1" style="${ssrRenderStyle({ "margin-top": "-100px" })}"><!--[-->`);
      ssrRenderList(_ctx.items, (item, index) => {
        _push(`<div class="${ssrRenderClass([[index !== _ctx.items.length && "mb-7"], "d-flex align-items-center"])}"><div class="symbol symbol-45px w-40px me-5"><span class="symbol-label bg-lighten">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": item.icon,
          "icon-class": "fs-1"
        }, null, _parent));
        _push(`</span></div><div class="d-flex align-items-center flex-wrap w-100"><div class="mb-1 pe-3 flex-grow-1"><a href="#" class="fs-5 text-gray-800 text-hover-primary fw-bold">${ssrInterpolate(item.title)}</a><div class="text-gray-500 fw-semibold fs-7">${ssrInterpolate(item.description)}</div></div><div class="d-flex align-items-center"><div class="fw-bold fs-5 text-gray-800 pe-1">${ssrInterpolate(item.stats)}</div>`);
        if (item.arrow === "up") {
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "arrow-up",
            "icon-class": "fs-5 text-success ms-1"
          }, null, _parent));
        } else if (item.arrow === "down") {
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "arrow-down",
            "icon-class": "fs-5 text-danger ms-1"
          }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`</div></div></div>`);
      });
      _push(`<!--]--></div></div></div>`);
    }
    const _sfc_setup$1H = _sfc_main$1H.setup;
    _sfc_main$1H.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget1.vue");
      return _sfc_setup$1H ? _sfc_setup$1H(props, ctx) : void 0;
    };
    const MixedWidget1 = /* @__PURE__ */ _export_sfc(_sfc_main$1H, [["ssrRender", _sfc_ssrRender$1D]]);
    const __vite_glob_0_104 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1G = vueExports$1.defineComponent({
      name: "widget-12",
      props: {
        widgetClasses: String,
        chartColor: String,
        chartHeight: String
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = vueExports$1.ref([
          {
            name: "Net Profit",
            data: [50, 60, 70, 80, 60, 50, 70, 60]
          },
          {
            name: "Revenue",
            data: [50, 60, 70, 80, 60, 50, 70, 60]
          }
        ]);
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(
            chart2.value,
            chartOptions$b(props.chartColor, props.chartHeight)
          );
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(
            chartOptions$b(props.chartColor, props.chartHeight)
          );
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          refreshChart,
          getAssetPath
        };
      }
    });
    const chartOptions$b = (color = "primary", chartHeight = "auto") => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const secondaryColor = getCSSVariableValue("--bs-gray-300");
      const baseColor = getCSSVariableValue(`--bs-${color}`);
      return {
        chart: {
          fontFamily: "inherit",
          type: "bar",
          height: chartHeight,
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          bar: {
            horizontal: false,
            columnWidth: "50%",
            borderRadius: 5
          }
        },
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          show: true,
          width: 2,
          colors: ["transparent"]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        yaxis: {
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        fill: {
          type: "solid"
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " revenue";
            }
          }
        },
        colors: [baseColor, secondaryColor],
        grid: {
          padding: {
            top: 10
          },
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          }
        }
      };
    };
    function _sfc_ssrRender$1C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-body p-0 d-flex justify-content-between flex-column overflow-hidden"><div class="d-flex flex-stack flex-wrap flex-grow-1 px-9 pt-9 pb-3"><div class="me-2"><span class="fw-bold text-gray-800 d-block fs-3">Sales</span><span class="text-gray-500 fw-semibold">Oct 8 - Oct 26 21</span></div><div class="${ssrRenderClass([`text-${_ctx.chartColor}`, "fw-bold fs-3"])}">$15,300</div></div>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "mixed-widget-10-chart",
        options: _ctx.chart,
        series: _ctx.series,
        type: "bar",
        height: _ctx.chartHeight
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1G = _sfc_main$1G.setup;
    _sfc_main$1G.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget10.vue");
      return _sfc_setup$1G ? _sfc_setup$1G(props, ctx) : void 0;
    };
    const MixedWidget10 = /* @__PURE__ */ _export_sfc(_sfc_main$1G, [["ssrRender", _sfc_ssrRender$1C]]);
    const __vite_glob_0_105 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget10
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1F = vueExports$1.defineComponent({
      name: "widget-12",
      props: {
        widgetClasses: String,
        widgetColor: String,
        chartHeight: String
      },
      components: {
        Dropdown3
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = vueExports$1.ref([
          {
            name: "Net Profit",
            data: [35, 65, 75, 55, 45, 60, 55]
          },
          {
            name: "Revenue",
            data: [40, 70, 80, 60, 50, 65, 60]
          }
        ]);
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$a(props.chartHeight));
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$a(props.chartHeight));
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          refreshChart,
          getAssetPath
        };
      }
    });
    const chartOptions$a = (chartHeight = "auto") => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      return {
        chart: {
          fontFamily: "inherit",
          type: "bar",
          height: chartHeight,
          toolbar: {
            show: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {
          bar: {
            horizontal: false,
            columnWidth: "30%"
          }
        },
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          show: true,
          width: 1,
          colors: ["transparent"]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        yaxis: {
          min: 0,
          max: 100,
          labels: {
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        fill: {
          type: ["solid", "solid"],
          opacity: [0.25, 1]
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          },
          marker: {
            show: false
          }
        },
        colors: ["#ffffff", "#ffffff"],
        grid: {
          borderColor,
          strokeDashArray: 4,
          yaxis: {
            lines: {
              show: true
            }
          },
          padding: {
            left: 20,
            right: 20
          }
        }
      };
    };
    function _sfc_ssrRender$1B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="${ssrRenderClass([`bg-${_ctx.widgetColor}`, "card-header border-0 py-5"])}"><h3 class="card-title fw-bold text-white">Sales Progress</h3><div class="card-toolbar"><button type="button" class="${ssrRenderClass([`btn-active-color-${_ctx.widgetColor}`, "btn btn-sm btn-icon btn-color-white btn-active-white border-0 me-n3"])}" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="card-body p-0">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: [`bg-${_ctx.widgetColor}`, "mixed-widget-12-chart card-rounded-bottom"],
        options: _ctx.chart,
        series: _ctx.series,
        height: "200",
        type: "bar"
      }, null, _parent));
      _push(`<div class="card-rounded bg-body mt-n10 position-relative card-px py-15"><div class="row g-0 mb-7"><div class="col mx-5"><div class="fs-6 text-gray-500">Avarage Sale</div><div class="fs-2 fw-bold text-gray-800">$650</div></div><div class="col mx-5"><div class="fs-6 text-gray-500">Comissions</div><div class="fs-2 fw-bold text-gray-800">$29,500</div></div></div><div class="row g-0"><div class="col mx-5"><div class="fs-6 text-gray-500">Revenue</div><div class="fs-2 fw-bold text-gray-800">$55,000</div></div><div class="col mx-5"><div class="fs-6 text-gray-500">Expenses</div><div class="fs-2 fw-bold text-gray-800">$1,130,600</div></div></div></div></div></div>`);
    }
    const _sfc_setup$1F = _sfc_main$1F.setup;
    _sfc_main$1F.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget11.vue");
      return _sfc_setup$1F ? _sfc_setup$1F(props, ctx) : void 0;
    };
    const MixedWidget11 = /* @__PURE__ */ _export_sfc(_sfc_main$1F, [["ssrRender", _sfc_ssrRender$1B]]);
    const __vite_glob_0_106 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget11
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1E = vueExports$1.defineComponent({
      name: "widget-12",
      props: {
        widgetClasses: String,
        widgetColor: String,
        chartHeight: String
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [15, 25, 15, 40, 20, 50]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$9(props.chartHeight));
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$9(props.chartHeight));
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          refreshChart,
          getAssetPath
        };
      }
    });
    const chartOptions$9 = (chartHeight = "auto") => {
      const labelColor = getCSSVariableValue("--bs-gray-800");
      const strokeColor = getCSSVariableValue("--bs-gray-300");
      return {
        grid: {
          show: false,
          padding: {
            top: 0,
            bottom: 0,
            left: 0,
            right: 0
          }
        },
        chart: {
          fontFamily: "inherit",
          type: "area",
          height: chartHeight,
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "gradient",
          gradient: {
            opacityFrom: 0.4,
            opacityTo: 0,
            stops: [20, 120, 120, 120]
          }
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: ["#FFFFFF"]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: strokeColor,
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          min: 0,
          max: 60,
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: ["#ffffff"],
        markers: {
          colors: [labelColor],
          strokeColors: [strokeColor],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card theme-dark-bg-body"],
        style: `background-color: ${_ctx.widgetColor}`
      }, _attrs))}><div class="card-body d-flex flex-column"><div class="d-flex flex-column flex-grow-1"><a href="#" class="text-gray-900 text-hover-primary fw-bold fs-3">Earnings</a>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "mixed-widget-13-chart",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.chartHeight,
        type: "area"
      }, null, _parent));
      _push(`</div><div class="pt-5"><span class="text-gray-900 fw-bold fs-2x lh-0">$</span><span class="text-gray-900 fw-bold fs-3x me-2 lh-0">560</span><span class="text-gray-900 fw-bold fs-6 lh-0">+ 28% this week</span></div></div></div>`);
    }
    const _sfc_setup$1E = _sfc_main$1E.setup;
    _sfc_main$1E.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget12.vue");
      return _sfc_setup$1E ? _sfc_setup$1E(props, ctx) : void 0;
    };
    const MixedWidget12 = /* @__PURE__ */ _export_sfc(_sfc_main$1E, [["ssrRender", _sfc_ssrRender$1A]]);
    const __vite_glob_0_107 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget12
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1D = vueExports$1.defineComponent({
      name: "widget-13",
      props: {
        widgetClasses: String,
        widgetColor: String,
        chartHeight: String
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Inflation",
            data: [
              1,
              2.1,
              1,
              2.1,
              4.1,
              6.1,
              4.1,
              4.1,
              2.1,
              4.1,
              2.1,
              3.1,
              1,
              1,
              2.1
            ]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$8(props.chartHeight));
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$8(props.chartHeight));
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          refreshChart
        };
      }
    });
    const chartOptions$8 = (chartHeight = "auto") => {
      return {
        chart: {
          fontFamily: "inherit",
          height: chartHeight,
          type: "bar",
          toolbar: {
            show: false
          }
        },
        grid: {
          show: false,
          padding: {
            top: 0,
            bottom: 0,
            left: 0,
            right: 0
          }
        },
        colors: ["#ffffff"],
        plotOptions: {
          bar: {
            dataLabels: {
              position: "top"
              // top, center, bottom
            },
            columnWidth: "20%"
          }
        },
        dataLabels: {
          enabled: false,
          formatter: function(val) {
            return val + "%";
          },
          offsetY: -20,
          style: {
            fontSize: "12px",
            colors: ["#304758"]
          }
        },
        xaxis: {
          labels: {
            show: false
          },
          categories: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
            "Jan",
            "Feb",
            "Mar"
          ],
          position: "top",
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          crosshairs: {
            show: false
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          show: false,
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            formatter: function(val) {
              return val + "%";
            }
          }
        }
      };
    };
    function _sfc_ssrRender$1z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card theme-dark-bg-body"],
        style: `background-color: ${_ctx.widgetColor}`
      }, _attrs))}><div class="card-body d-flex flex-column"><div class="d-flex flex-column flex-grow-1"><a href="#" class="text-gray-900 text-hover-primary fw-bold fs-3">Contributors</a>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "mixed-widget-14-chart",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.chartHeight,
        type: "bar"
      }, null, _parent));
      _push(`</div><div class="pt-5"><span class="text-gray-900 fw-bold fs-3x me-2 lh-0">47</span><span class="text-gray-900 fw-bold fs-6 lh-0">- 12% this week</span></div></div></div>`);
    }
    const _sfc_setup$1D = _sfc_main$1D.setup;
    _sfc_main$1D.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget13.vue");
      return _sfc_setup$1D ? _sfc_setup$1D(props, ctx) : void 0;
    };
    const MixedWidget13 = /* @__PURE__ */ _export_sfc(_sfc_main$1D, [["ssrRender", _sfc_ssrRender$1z]]);
    const __vite_glob_0_108 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget13
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1C = vueExports$1.defineComponent({
      name: "widget-14",
      props: {
        widgetClasses: String,
        widgetColor: String
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card theme-dark-bg-body"],
        style: `background-color: ${_ctx.widgetColor}`
      }, _attrs))}><div class="card-body d-flex flex-column"><div class="d-flex flex-column mb-7"><a href="#" class="text-gray-900 text-hover-primary fw-bold fs-3">Summary</a></div><div class="row g-0"><div class="col-6"><div class="d-flex align-items-center mb-9 me-2"><div class="symbol symbol-40px me-3"><div class="symbol-label bg-body bg-opacity-50">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-42",
        "icon-class": "fs-1 text-gray-900"
      }, null, _parent));
      _push(`</div></div><div><div class="fs-5 text-dark fw-bold lh-1">$50K</div><div class="fs-7 text-gray-600 fw-semibold">Sales</div></div></div></div><div class="col-6"><div class="d-flex align-items-center mb-9 ms-2"><div class="symbol symbol-40px me-3"><div class="symbol-label bg-body bg-opacity-50">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-45",
        "icon-class": "fs-1 text-gray-900"
      }, null, _parent));
      _push(`</div></div><div><div class="fs-5 text-dark fw-bold lh-1">$4,5K</div><div class="fs-7 text-gray-600 fw-semibold">Revenue</div></div></div></div><div class="col-6"><div class="d-flex align-items-center me-2"><div class="symbol symbol-40px me-3"><div class="symbol-label bg-body bg-opacity-50">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-21",
        "icon-class": "fs-1 text-gray-900"
      }, null, _parent));
      _push(`</div></div><div><div class="fs-5 text-dark fw-bold lh-1">40</div><div class="fs-7 text-gray-600 fw-semibold">Tasks</div></div></div></div><div class="col-6"><div class="d-flex align-items-center ms-2"><div class="symbol symbol-40px me-3"><div class="symbol-label bg-body bg-opacity-50">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-44",
        "icon-class": "fs-1 text-gray-900"
      }, null, _parent));
      _push(`</div></div><div><div class="fs-5 text-dark fw-bold lh-1">$5.8M</div><div class="fs-7 text-gray-600 fw-semibold">Sales</div></div></div></div></div></div></div>`);
    }
    const _sfc_setup$1C = _sfc_main$1C.setup;
    _sfc_main$1C.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget14.vue");
      return _sfc_setup$1C ? _sfc_setup$1C(props, ctx) : void 0;
    };
    const MixedWidget14 = /* @__PURE__ */ _export_sfc(_sfc_main$1C, [["ssrRender", _sfc_ssrRender$1y]]);
    const __vite_glob_0_109 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget14
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1B = vueExports$1.defineComponent({
      name: "widget-1",
      components: {
        Dropdown3
      },
      props: {
        widgetClasses: String,
        widgetColor: String,
        strokeColor: String
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = vueExports$1.ref([
          {
            name: "Net Profit",
            data: [30, 45, 32, 70, 40, 40, 40]
          }
        ]);
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(
            chart2.value,
            chartOptions$7(props.widgetColor, props.strokeColor)
          );
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(
            chartOptions$7(props.widgetColor, props.strokeColor)
          );
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          getAssetPath
        };
      }
    });
    const chartOptions$7 = (widgetColor = "primary", strokeColor) => {
      const labelColor = getCSSVariableValue("--bs-gray-500");
      const borderColor = getCSSVariableValue("--bs-gray-200");
      const color = getCSSVariableValue(`--bs-${widgetColor}`);
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          },
          dropShadow: {
            enabled: true,
            enabledOnSeries: void 0,
            top: 5,
            left: 0,
            blur: 3,
            color: strokeColor,
            opacity: 0.5
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "solid",
          opacity: 0
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: [strokeColor]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: borderColor,
              width: 1,
              dashArray: 3
            }
          }
        },
        yaxis: {
          min: 0,
          max: 80,
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          },
          marker: {
            show: false
          }
        },
        markers: {
          colors: [color],
          strokeColors: [strokeColor],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card card-xxl-stretch" }, _attrs))}><div class="${ssrRenderClass([`bg-${_ctx.widgetColor}`, "card-header border-0 py-5"])}"><h3 class="card-title fw-bold text-white">Sales Statistics</h3><div class="card-toolbar"><button type="button" class="${ssrRenderClass([`btn-active-color-${_ctx.widgetColor}`, "btn btn-sm btn-icon btn-color-white btn-active-white border-0 me-n3"])}" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="card-body p-0">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: [`bg-${_ctx.widgetColor}`, "mixed-widget-2-chart card-rounded-bottom"],
        options: _ctx.chart,
        series: _ctx.series,
        height: "200",
        type: "area"
      }, null, _parent));
      _push(`<div class="card-p mt-n20 position-relative"><div class="row m-0"><div class="col bg-light-warning px-6 py-8 rounded-2 me-7 mb-7">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "chart-simple",
        "icon-class": "fs-3x text-warning d-block my-2"
      }, null, _parent));
      _push(`<a href="#" class="text-warning fw-semibold fs-6"> Weekly Sales </a></div><div class="col bg-light-primary px-6 py-8 rounded-2 mb-7">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "plus",
        "icon-class": "fs-3x text-primary d-block my-2"
      }, null, _parent));
      _push(`<a href="#" class="text-primary fw-semibold fs-6"> New Users </a></div></div><div class="row m-0"><div class="col bg-light-danger px-6 py-8 rounded-2 me-7">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-26",
        "icon-class": "fs-3x text-danger d-block my-2"
      }, null, _parent));
      _push(`<a href="#" class="text-danger fw-semibold fs-6 mt-2"> Item Orders </a></div><div class="col bg-light-success px-6 py-8 rounded-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "sms",
        "icon-class": "fs-3x text-success d-block my-2"
      }, null, _parent));
      _push(`<a href="#" class="text-success fw-semibold fs-6 mt-2"> Bug Reports </a></div></div></div></div></div>`);
    }
    const _sfc_setup$1B = _sfc_main$1B.setup;
    _sfc_main$1B.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget2.vue");
      return _sfc_setup$1B ? _sfc_setup$1B(props, ctx) : void 0;
    };
    const MixedWidget2 = /* @__PURE__ */ _export_sfc(_sfc_main$1B, [["ssrRender", _sfc_ssrRender$1x]]);
    const __vite_glob_0_110 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1A = vueExports$1.defineComponent({
      name: "widget-1",
      components: {
        Dropdown1
      },
      props: {
        widgetClasses: String,
        chartColor: String,
        chartHeight: String
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [30, 25, 45, 30, 55, 55]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(
            chart2.value,
            chartOptions$6(props.chartColor, props.chartHeight)
          );
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(
            chartOptions$6(props.chartColor, props.chartHeight)
          );
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          getAssetPath
        };
      }
    });
    const chartOptions$6 = (color = "primary", height = "auto") => {
      const labelColor = getCSSVariableValue("--bs-gray-800");
      const strokeColor = getCSSVariableValue("--bs-gray-300");
      const baseColor = getCSSVariableValue(`--bs-${color}`);
      const lightColor = getCSSVariableValue(`--bs-${color}-light`);
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          height,
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "solid",
          opacity: 1
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: [baseColor]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: strokeColor,
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          min: 0,
          max: 60,
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [lightColor],
        markers: {
          colors: [lightColor],
          strokeColors: [baseColor],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown1 = vueExports$1.resolveComponent("Dropdown1");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 py-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Sales Overview</span><span class="text-muted fw-semibold fs-7">Recent sales statistics</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown1, null, null, _parent));
      _push(`</div></div><div class="card-body p-0 d-flex flex-column"><div class="card-p pt-5 bg-body flex-grow-1"><div class="row g-0"><div class="col mr-8"><div class="fs-7 text-muted fw-semibold">Average Sale</div><div class="d-flex align-items-center"><div class="fs-4 fw-bold">$650</div>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-5 text-success d-block ms-1"
      }, null, _parent));
      _push(`</div></div><div class="col"><div class="fs-7 text-muted fw-semibold">Commission</div><div class="fs-4 fw-bold">$233,600</div></div></div><div class="row g-0 mt-8"><div class="col mr-8"><div class="fs-7 text-muted fw-semibold">Annual Taxes 2019</div><div class="fs-4 fw-bold">$29,004</div></div><div class="col"><div class="fs-7 text-muted fw-semibold">Annual Income</div><div class="d-flex align-items-center"><div class="fs-4 fw-bold">$1,480,00</div>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-down",
        "icon-class": "fs-5 text-danger ms-1"
      }, null, _parent));
      _push(`</div></div></div></div>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "mixed-widget-3-chart card-rounded-bottom",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.chartHeight,
        type: "area"
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1A = _sfc_main$1A.setup;
    _sfc_main$1A.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget3.vue");
      return _sfc_setup$1A ? _sfc_setup$1A(props, ctx) : void 0;
    };
    const MixedWidget3 = /* @__PURE__ */ _export_sfc(_sfc_main$1A, [["ssrRender", _sfc_ssrRender$1w]]);
    const __vite_glob_0_111 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1z = vueExports$1.defineComponent({
      name: "widget-1",
      components: {
        Dropdown1
      },
      props: {
        widgetClasses: String,
        chartColor: String,
        chartHeight: String,
        btnColor: String
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = vueExports$1.ref([74]);
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(
            chart2.value,
            chartOptions$5(props.chartColor, props.chartHeight)
          );
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(
            chartOptions$5(props.chartColor, props.chartHeight)
          );
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          getAssetPath
        };
      }
    });
    const chartOptions$5 = (color = "primary", height = "auto") => {
      const baseColor = getCSSVariableValue(`--bs-${color}`);
      const lightColor = getCSSVariableValue(`--bs-${color}-light`);
      const labelColor = getCSSVariableValue("--bs-gray-700");
      return {
        chart: {
          fontFamily: "inherit",
          height,
          type: "radialBar"
        },
        plotOptions: {
          radialBar: {
            hollow: {
              margin: 0,
              size: "65%"
            },
            dataLabels: {
              show: true,
              name: {
                show: false,
                fontWeight: "700"
              },
              value: {
                color: labelColor,
                fontSize: "30px",
                fontWeight: "700",
                offsetY: 12,
                show: true,
                formatter: function(val) {
                  return val + "%";
                }
              }
            },
            track: {
              background: lightColor,
              strokeWidth: "100%"
            }
          }
        },
        colors: [baseColor],
        stroke: {
          lineCap: "round"
        },
        labels: ["Progress"]
      };
    };
    function _sfc_ssrRender$1v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown1 = vueExports$1.resolveComponent("Dropdown1");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 py-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Action Needed</span><span class="text-muted fw-semibold fs-7">Complete your profile setup</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown1, null, null, _parent));
      _push(`</div></div><div class="card-body d-flex flex-column"><div class="flex-grow-1">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "mixed-widget-4-chart",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.chartHeight,
        type: "radialBar"
      }, null, _parent));
      _push(`</div><div class="pt-5"><p class="text-center fs-6 pb-5"><span class="badge badge-light-danger fs-8">Notes:</span>  Current sprint requires stakeholders<br> to approve newly amended policies </p><a href="#" class="${ssrRenderClass([`btn-${_ctx.btnColor}`, "btn w-100 py-3"])}">Take Action</a></div></div></div>`);
    }
    const _sfc_setup$1z = _sfc_main$1z.setup;
    _sfc_main$1z.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget4.vue");
      return _sfc_setup$1z ? _sfc_setup$1z(props, ctx) : void 0;
    };
    const MixedWidget4 = /* @__PURE__ */ _export_sfc(_sfc_main$1z, [["ssrRender", _sfc_ssrRender$1v]]);
    const __vite_glob_0_112 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1y = vueExports$1.defineComponent({
      name: "widget-7",
      components: {
        Dropdown3
      },
      props: {
        widgetClasses: String,
        chartColor: String,
        chartHeight: String
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [30, 30, 60, 25, 25, 40]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onMounted(() => {
          Object.assign(
            chart2.value,
            chartOptions$4(props.chartColor, props.chartHeight)
          );
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(
            chartOptions$4(props.chartColor, props.chartHeight)
          );
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          getAssetPath
        };
      }
    });
    const chartOptions$4 = (color = "primary", height = "auto") => {
      const labelColor = getCSSVariableValue("--bs-gray-800");
      const strokeColor = getCSSVariableValue("--bs-gray-300");
      const baseColor = getCSSVariableValue(`--bs-${color}`);
      const lightColor = getCSSVariableValue(`--bs-${color}-light`);
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          height,
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "solid",
          opacity: 1
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: [baseColor]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: strokeColor,
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: true,
            formatter: void 0,
            offsetY: 0,
            style: {
              fontSize: "12px"
            }
          }
        },
        yaxis: {
          min: 0,
          max: 65,
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [lightColor],
        markers: {
          colors: [lightColor],
          strokeColors: [baseColor],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 py-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Trends</span><span class="text-muted fw-semibold fs-7">Latest trends</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="card-body d-flex flex-column">`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "mixed-widget-5-chart card-rounded-top",
        options: _ctx.chart,
        series: _ctx.series,
        type: "area",
        height: _ctx.chartHeight
      }, null, _parent));
      _push(`<div class="mt-5"><div class="d-flex flex-stack mb-5"><div class="d-flex align-items-center me-2"><div class="symbol symbol-50px me-3"><div class="symbol-label bg-light"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/plurk.svg"))} alt="" class="h-50"></div></div><div><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-bold">Top Authors</a><div class="fs-7 text-muted fw-semibold mt-1"> Ricky Hunt, Sandra Trepp </div></div></div><div class="badge badge-light fw-semibold py-4 px-3">+82$</div></div><div class="d-flex flex-stack mb-5"><div class="d-flex align-items-center me-2"><div class="symbol symbol-50px me-3"><div class="symbol-label bg-light"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/figma-1.svg"))} alt="" class="h-50"></div></div><div><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-bold">Top Sales</a><div class="fs-7 text-muted fw-semibold mt-1">PitStop Emails</div></div></div><div class="badge badge-light fw-semibold py-4 px-3">+82$</div></div><div class="d-flex flex-stack"><div class="d-flex align-items-center me-2"><div class="symbol symbol-50px me-3"><div class="symbol-label bg-light"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/vimeo.svg"))} alt="" class="h-50"></div></div><div class="py-1"><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-bold">Top Engagement</a><div class="fs-7 text-muted fw-semibold mt-1">KT.com</div></div></div><div class="badge badge-light fw-semibold py-4 px-3">+82$</div></div></div></div></div>`);
    }
    const _sfc_setup$1y = _sfc_main$1y.setup;
    _sfc_main$1y.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget5.vue");
      return _sfc_setup$1y ? _sfc_setup$1y(props, ctx) : void 0;
    };
    const MixedWidget5 = /* @__PURE__ */ _export_sfc(_sfc_main$1y, [["ssrRender", _sfc_ssrRender$1u]]);
    const __vite_glob_0_113 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget5
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1x = vueExports$1.defineComponent({
      name: "widget-1",
      components: {
        Dropdown1
      },
      props: {
        widgetClasses: String,
        chartColor: String,
        chartHeight: String
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [30, 25, 45, 30, 55, 55]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(
            chart2.value,
            chartOptions$3(props.chartColor, props.chartHeight)
          );
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(
            chartOptions$3(props.chartColor, props.chartHeight)
          );
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          getAssetPath
        };
      }
    });
    const chartOptions$3 = (color = "primary", height = "auto") => {
      const labelColor = getCSSVariableValue("--bs-gray-800");
      const strokeColor = getCSSVariableValue("--bs-gray-300");
      const baseColor = getCSSVariableValue(`--bs-${color}`);
      const lightColor = getCSSVariableValue(`--bs-${color}-light`);
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          height,
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "solid",
          opacity: 1
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: [baseColor]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: strokeColor,
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          min: 0,
          max: 60,
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [lightColor],
        markers: {
          colors: [lightColor],
          strokeColors: [baseColor],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown1 = vueExports$1.resolveComponent("Dropdown1");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 py-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Sales Statistics</span><span class="text-muted fw-semibold fs-7">Recent sales statistics</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown1, null, null, _parent));
      _push(`</div></div><div class="card-body p-0 d-flex flex-column"><div class="card-px pt-5 pb-10 flex-grow-1"><div class="row g-0 mt-5 mb-10"><div class="col"><div class="d-flex align-items-center me-2"><div class="symbol symbol-50px me-3"><div class="symbol-label bg-light-info">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "bucket",
        "icon-class": "fs-1 text-info"
      }, null, _parent));
      _push(`</div></div><div><div class="fs-4 text-dark fw-bold">$2,034</div><div class="fs-7 text-muted fw-semibold">Author Sales</div></div></div></div><div class="col"><div class="d-flex align-items-center me-2"><div class="symbol symbol-50px me-3"><div class="symbol-label bg-light-danger">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-26",
        "icon-class": "fs-1 text-danger"
      }, null, _parent));
      _push(`</div></div><div><div class="fs-4 text-dark fw-bold">$706</div><div class="fs-7 text-muted fw-semibold">Commision</div></div></div></div></div><div class="row g-0"><div class="col"><div class="d-flex align-items-center me-2"><div class="symbol symbol-50px me-3"><div class="symbol-label bg-light-success">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "basket",
        "icon-class": "fs-1 text-success"
      }, null, _parent));
      _push(`</div></div><div><div class="fs-4 text-dark fw-bold">$49</div><div class="fs-7 text-muted fw-semibold">Average Bid</div></div></div></div><div class="col"><div class="d-flex align-items-center me-2"><div class="symbol symbol-50px me-3"><div class="symbol-label bg-light-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "package",
        "icon-class": "fs-1 text-primary"
      }, null, _parent));
      _push(`</div></div><div><div class="fs-4 text-dark fw-bold">$5.8M</div><div class="fs-7 text-muted fw-semibold">All Time Sales</div></div></div></div></div></div>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "mixed-widget-6-chart card-rounded-bottom",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.chartHeight,
        type: "area"
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1x = _sfc_main$1x.setup;
    _sfc_main$1x.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget6.vue");
      return _sfc_setup$1x ? _sfc_setup$1x(props, ctx) : void 0;
    };
    const MixedWidget6 = /* @__PURE__ */ _export_sfc(_sfc_main$1x, [["ssrRender", _sfc_ssrRender$1t]]);
    const __vite_glob_0_114 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget6
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1w = vueExports$1.defineComponent({
      name: "widget-7",
      props: {
        widgetClasses: String,
        chartColor: String,
        chartHeight: String
      },
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = vueExports$1.ref([
          {
            name: "Net Profit",
            data: [15, 25, 15, 40, 20, 50]
          }
        ]);
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(
            chart2.value,
            chartOptions$2(props.chartColor, props.chartHeight)
          );
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(
            chartOptions$2(props.chartColor, props.chartHeight)
          );
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          refreshChart,
          getAssetPath
        };
      }
    });
    const chartOptions$2 = (color = "primary", chartHeight = "auto") => {
      const labelColor = getCSSVariableValue("--bs-gray-800");
      const strokeColor = getCSSVariableValue("--bs-gray-300");
      const baseColor = getCSSVariableValue(`--bs-${color}`);
      const lightColor = getCSSVariableValue(`--bs-${color}-light`);
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          height: chartHeight,
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        fill: {
          type: "solid",
          opacity: 1
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: [baseColor]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: strokeColor,
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: true,
            formatter: void 0,
            offsetY: 0,
            style: {
              fontSize: "12px"
            }
          }
        },
        yaxis: {
          min: 0,
          max: 60,
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        colors: [lightColor],
        markers: {
          colors: [lightColor],
          strokeColors: [baseColor],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-body d-flex flex-column p-0"><div class="flex-grow-1 card-p pb-0"><div class="d-flex flex-stack flex-wrap"><div class="me-2"><a href="#" class="text-gray-900 text-hover-primary fw-bold fs-3">Generate Reports</a><div class="text-muted fs-7 fw-semibold"> Finance and accounting reports </div></div><div class="${ssrRenderClass([`text-${_ctx.chartColor}`, "fw-bold fs-3"])}">$24,500</div></div></div>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "mixed-widget-7-chart card-rounded-bottom",
        options: _ctx.chart,
        series: _ctx.series,
        type: "area",
        height: _ctx.chartHeight
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1w = _sfc_main$1w.setup;
    _sfc_main$1w.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget7.vue");
      return _sfc_setup$1w ? _sfc_setup$1w(props, ctx) : void 0;
    };
    const MixedWidget7 = /* @__PURE__ */ _export_sfc(_sfc_main$1w, [["ssrRender", _sfc_ssrRender$1s]]);
    const __vite_glob_0_115 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget7
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1v = vueExports$1.defineComponent({
      name: "widget-1",
      components: {
        Dropdown2
      },
      props: {
        widgetClasses: String,
        color: String,
        image: String,
        title: String,
        date: String,
        progress: String
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-body"><div class="d-flex flex-stack"><div class="d-flex align-items-center"><div class="symbol symbol-60px me-5"><span class="${ssrRenderClass([`bg-${_ctx.color}-light`, "symbol-label"])}"><img${ssrRenderAttr("src", _ctx.image)} class="h-50 align-self-center" alt=""></span></div><div class="d-flex flex-column flex-grow-1 my-lg-0 my-2 pr-3"><a href="#" class="text-gray-900 fw-bold text-hover-primary fs-5">${ssrInterpolate(_ctx.title)}</a><span class="text-muted fw-semibold">${ssrInterpolate(_ctx.date)}</span></div></div><div class="ms-1"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="d-flex flex-column w-100 mt-12"><span class="text-gray-900 me-2 fw-bold pb-3"> Progress </span><div class="progress h-5px w-100"><div class="${ssrRenderClass([`bg-${_ctx.color}`, "progress-bar"])}" role="progressbar" style="${ssrRenderStyle(`width: ${_ctx.progress}%`)}"${ssrRenderAttr("aria-valuenow", _ctx.progress)} aria-valuemin="0" aria-valuemax="100"></div></div></div><div class="d-flex flex-column mt-10"><div class="text-gray-900 me-2 fw-bold pb-4">Team</div><div class="d-flex"><a href="#" class="symbol symbol-35px me-2" data-bs-toggle="tooltip" title="Ana Stone"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-6.jpg"))} alt=""></a><a href="#" class="symbol symbol-35px me-2" data-bs-toggle="tooltip" title="Mark Larson"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-5.jpg"))} alt=""></a><a href="#" class="symbol symbol-35px me-2" data-bs-toggle="tooltip" title="Sam Harris"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-9.jpg"))} alt=""></a><a href="#" class="symbol symbol-35px" data-bs-toggle="tooltip" title="Alice Micto"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-10.jpg"))} alt=""></a></div></div></div></div>`);
    }
    const _sfc_setup$1v = _sfc_main$1v.setup;
    _sfc_main$1v.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget8.vue");
      return _sfc_setup$1v ? _sfc_setup$1v(props, ctx) : void 0;
    };
    const MixedWidget8 = /* @__PURE__ */ _export_sfc(_sfc_main$1v, [["ssrRender", _sfc_ssrRender$1r]]);
    const __vite_glob_0_116 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget8
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1u = vueExports$1.defineComponent({
      name: "widget-1",
      components: {},
      props: {
        widgetClasses: String,
        time: String,
        image: String,
        title: String,
        description: String
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-body d-flex flex-column"><div class="flex-grow-1"><div class="d-flex align-items-center pe-2 mb-5"><span class="text-muted fw-bold fs-5 flex-grow-1">${ssrInterpolate(_ctx.time)}</span><div class="symbol symbol-50px"><span class="symbol-label bg-light"><img${ssrRenderAttr("src", _ctx.image)} class="h-50 align-self-center" alt=""></span></div></div><a href="#" class="text-gray-900 fw-bold text-hover-primary fs-4">${ssrInterpolate(_ctx.title)}</a><p class="py-3"><span>${_ctx.description ?? ""}</span></p></div><div class="d-flex align-items-center"><a href="#" class="symbol symbol-35px me-2" data-bs-toggle="tooltip" title="Ana Stone"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-6.jpg"))} alt=""></a><a href="#" class="symbol symbol-35px me-2" data-bs-toggle="tooltip" title="Mark Larson"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-5.jpg"))} alt=""></a><a href="#" class="symbol symbol-35px me-2" data-bs-toggle="tooltip" title="Sam Harris"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-9.jpg"))} alt=""></a></div></div></div>`);
    }
    const _sfc_setup$1u = _sfc_main$1u.setup;
    _sfc_main$1u.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/mixed/Widget9.vue");
      return _sfc_setup$1u ? _sfc_setup$1u(props, ctx) : void 0;
    };
    const MixedWidget9 = /* @__PURE__ */ _export_sfc(_sfc_main$1u, [["ssrRender", _sfc_ssrRender$1q]]);
    const __vite_glob_0_117 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: MixedWidget9
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1t = vueExports$1.defineComponent({
      name: "kt-widget-1",
      props: {
        widgetClasses: String,
        background: String,
        title: String,
        time: String,
        description: String
      },
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card bgi-no-repeat"],
        style: [{
          backgroundImage: `url(${_ctx.getAssetPath(
            "/media/svg/shapes/" + _ctx.background
          )})`
        }, { "background-position": "right top", "background-size": "30% auto" }]
      }, _attrs))}><div class="card-body"><a href="#" class="card-title fw-bold text-muted text-hover-primary fs-4">${ssrInterpolate(_ctx.title)}</a><div class="fw-bold text-primary my-6">${ssrInterpolate(_ctx.time)}</div><p class="text-gray-900-75 fw-semibold fs-5 m-0"><span>${_ctx.description ?? ""}</span></p></div></div>`);
    }
    const _sfc_setup$1t = _sfc_main$1t.setup;
    _sfc_main$1t.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/statsistics/Widget1.vue");
      return _sfc_setup$1t ? _sfc_setup$1t(props, ctx) : void 0;
    };
    const StatisticsWidget1 = /* @__PURE__ */ _export_sfc(_sfc_main$1t, [["ssrRender", _sfc_ssrRender$1p]]);
    const __vite_glob_0_118 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: StatisticsWidget1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1s = vueExports$1.defineComponent({
      name: "kt-widget-2",
      props: {
        widgetClasses: String,
        title: String,
        description: String,
        avatar: String
      },
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-body d-flex align-items-center pt-3 pb-0"><div class="d-flex flex-column flex-grow-1 py-2 py-lg-13 me-2"><a href="#" class="fw-bold text-gray-900 fs-4 mb-2 text-hover-primary">${ssrInterpolate(_ctx.title)}</a><span class="fw-semibold text-muted fs-5">${ssrInterpolate(_ctx.description)}</span></div><img${ssrRenderAttr("src", _ctx.avatar)} alt="" class="align-self-end h-100px"></div></div>`);
    }
    const _sfc_setup$1s = _sfc_main$1s.setup;
    _sfc_main$1s.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/statsistics/Widget2.vue");
      return _sfc_setup$1s ? _sfc_setup$1s(props, ctx) : void 0;
    };
    const StatisticsWidget2 = /* @__PURE__ */ _export_sfc(_sfc_main$1s, [["ssrRender", _sfc_ssrRender$1o]]);
    const __vite_glob_0_119 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: StatisticsWidget2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1r = vueExports$1.defineComponent({
      name: "kt-widget-3",
      props: {
        widgetClasses: String,
        title: String,
        description: String,
        change: String,
        color: String,
        height: String
      },
      components: {},
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [30, 45, 32, 70, 40]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions$1(props.color, props.height));
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions$1(props.color, props.height));
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          getAssetPath
        };
      }
    });
    const chartOptions$1 = (color = "primary", height = "auto") => {
      const labelColor = getCSSVariableValue("--bs-gray-800");
      const baseColor = getCSSVariableValue(`--bs-${color}`);
      const lightColor = getCSSVariableValue(`--bs-${color}-light`);
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          height,
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: [baseColor]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: "#E4E6EF",
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          min: 0,
          max: 80,
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        fill: {
          type: "gradient",
          gradient: {
            stops: [0, 100]
          }
        },
        colors: [baseColor],
        markers: {
          colors: [baseColor],
          strokeColors: [lightColor],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-body d-flex flex-column p-0"><div class="d-flex flex-stack flex-grow-1 card-p"><div class="d-flex flex-column me-2"><a href="#" class="text-gray-900 text-hover-primary fw-bold fs-3">${ssrInterpolate(_ctx.title)}</a><span class="text-muted fw-semibold mt-1">${ssrInterpolate(_ctx.description)}</span></div><span class="symbol symbol-50px"><span class="${ssrRenderClass([`bg-light-${_ctx.color} text-${_ctx.color}`, "symbol-label fs-5 fw-bold"])}">${ssrInterpolate(_ctx.change)}</span></span></div>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "statistics-widget-3-chart card-rounded-bottom",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.height,
        type: "area"
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1r = _sfc_main$1r.setup;
    _sfc_main$1r.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/statsistics/Widget3.vue");
      return _sfc_setup$1r ? _sfc_setup$1r(props, ctx) : void 0;
    };
    const StatisticsWidget3 = /* @__PURE__ */ _export_sfc(_sfc_main$1r, [["ssrRender", _sfc_ssrRender$1n]]);
    const __vite_glob_0_120 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: StatisticsWidget3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1q = vueExports$1.defineComponent({
      name: "kt-widget-4",
      props: {
        widgetClasses: String,
        iconName: String,
        color: String,
        change: String,
        description: String,
        height: String
      },
      components: {},
      setup(props) {
        const chartRef = vueExports$1.ref(null);
        const chart2 = vueExports$1.ref({});
        const store = useThemeStore();
        const series = [
          {
            name: "Net Profit",
            data: [40, 40, 30, 30, 35, 35, 50]
          }
        ];
        const themeMode2 = vueExports$1.computed(() => {
          return store.mode;
        });
        vueExports$1.onBeforeMount(() => {
          Object.assign(chart2.value, chartOptions(props.color, props.height));
        });
        const refreshChart = () => {
          if (!chartRef.value) {
            return;
          }
          chartRef.value.updateOptions(chartOptions(props.color, props.height));
        };
        vueExports$1.watch(themeMode2, () => {
          refreshChart();
        });
        return {
          chart: chart2,
          series,
          chartRef,
          getAssetPath
        };
      }
    });
    const chartOptions = (color = "primary", height = "auto") => {
      const labelColor = getCSSVariableValue("--bs-gray-800");
      const baseColor = getCSSVariableValue(`--bs-${color}`);
      const lightColor = getCSSVariableValue(`--bs-light-${color}`);
      return {
        chart: {
          fontFamily: "inherit",
          type: "area",
          height,
          toolbar: {
            show: false
          },
          zoom: {
            enabled: false
          },
          sparkline: {
            enabled: true
          }
        },
        plotOptions: {},
        legend: {
          show: false
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          curve: "smooth",
          show: true,
          width: 3,
          colors: [baseColor]
        },
        xaxis: {
          categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug"],
          axisBorder: {
            show: false
          },
          axisTicks: {
            show: false
          },
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          },
          crosshairs: {
            show: false,
            position: "front",
            stroke: {
              color: "#E4E6EF",
              width: 1,
              dashArray: 3
            }
          },
          tooltip: {
            enabled: false
          }
        },
        yaxis: {
          min: 0,
          max: 60,
          labels: {
            show: false,
            style: {
              colors: labelColor,
              fontSize: "12px"
            }
          }
        },
        states: {
          normal: {
            filter: {
              type: "none",
              value: 0
            }
          },
          hover: {
            filter: {
              type: "none",
              value: 0
            }
          },
          active: {
            allowMultipleDataPointsSelection: false,
            filter: {
              type: "none",
              value: 0
            }
          }
        },
        tooltip: {
          style: {
            fontSize: "12px"
          },
          y: {
            formatter: function(val) {
              return "$" + val + " thousands";
            }
          }
        },
        fill: {
          type: "gradient",
          gradient: {
            stops: [0, 100]
          }
        },
        colors: [baseColor],
        markers: {
          colors: [baseColor],
          strokeColors: [lightColor],
          strokeWidth: 3
        }
      };
    };
    function _sfc_ssrRender$1m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_apexchart = vueExports$1.resolveComponent("apexchart");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-body p-0"><div class="d-flex flex-stack card-p flex-grow-1"><span class="symbol symbol-50px me-2"><span class="${ssrRenderClass(`symbol-label bg-light-${_ctx.color}`)}">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": _ctx.iconName,
        "icon-class": `text-${_ctx.color} fs-2x`
      }, null, _parent));
      _push(`</span></span><div class="d-flex flex-column text-end"><span class="text-gray-900 fw-bold fs-2">${ssrInterpolate(_ctx.change)}</span><span class="text-muted fw-semibold mt-1">${ssrInterpolate(_ctx.description)}</span></div></div>`);
      _push(ssrRenderComponent(_component_apexchart, {
        ref: "chartRef",
        class: "statistics-widget-4-chart card-rounded-bottom",
        options: _ctx.chart,
        series: _ctx.series,
        height: _ctx.height,
        type: "area"
      }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$1q = _sfc_main$1q.setup;
    _sfc_main$1q.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/statsistics/Widget4.vue");
      return _sfc_setup$1q ? _sfc_setup$1q(props, ctx) : void 0;
    };
    const StatisticsWidget4 = /* @__PURE__ */ _export_sfc(_sfc_main$1q, [["ssrRender", _sfc_ssrRender$1m]]);
    const __vite_glob_0_121 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: StatisticsWidget4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1p = vueExports$1.defineComponent({
      name: "kt-widget-5",
      props: {
        widgetClasses: String,
        color: String,
        iconColor: String,
        iconName: String,
        title: String,
        description: String
      },
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<a${ssrRenderAttrs(vueExports$1.mergeProps({
        href: "#",
        class: [[_ctx.widgetClasses, `bg-${_ctx.color}`], "card hoverable"]
      }, _attrs))}><div class="card-body">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": _ctx.iconName,
        "icon-class": `text-${_ctx.iconColor} fs-3x mx-n1`
      }, null, _parent));
      _push(`<div class="${ssrRenderClass([`text-inverse-${_ctx.color}`, "fw-bold fs-2 mb-2 mt-5"])}">${ssrInterpolate(_ctx.title)}</div><div class="${ssrRenderClass([`text-inverse-${_ctx.color}`, "fw-semibold fs-7"])}">${ssrInterpolate(_ctx.description)}</div></div></a>`);
    }
    const _sfc_setup$1p = _sfc_main$1p.setup;
    _sfc_main$1p.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/statsistics/Widget5.vue");
      return _sfc_setup$1p ? _sfc_setup$1p(props, ctx) : void 0;
    };
    const StatisticsWidget5 = /* @__PURE__ */ _export_sfc(_sfc_main$1p, [["ssrRender", _sfc_ssrRender$1l]]);
    const __vite_glob_0_122 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: StatisticsWidget5
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1o = vueExports$1.defineComponent({
      name: "kt-widget-6",
      props: {
        widgetClasses: String,
        color: String,
        description: String,
        progress: String,
        title: String
      },
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [[_ctx.widgetClasses, `bg-light-${_ctx.color}`], "card"]
      }, _attrs))}><div class="card-body my-3"><a href="#" class="${ssrRenderClass([`text-${_ctx.color}`, "card-title fw-bold fs-5 mb-3 d-block"])}">${ssrInterpolate(_ctx.description)}</a><div class="py-1"><span class="text-gray-900 fs-1 fw-bold me-2">${ssrInterpolate(_ctx.progress)}</span><span class="fw-semibold text-muted fs-7">${ssrInterpolate(_ctx.title)}</span></div><div class="${ssrRenderClass([`bg-${_ctx.color}`, "progress h-7px bg-opacity-50 mt-7"])}"><div class="${ssrRenderClass([`bg-${_ctx.color}`, "progress-bar"])}" role="progressbar" style="${ssrRenderStyle(`width: ${_ctx.progress}`)}" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div></div></div></div>`);
    }
    const _sfc_setup$1o = _sfc_main$1o.setup;
    _sfc_main$1o.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/statsistics/Widget6.vue");
      return _sfc_setup$1o ? _sfc_setup$1o(props, ctx) : void 0;
    };
    const StatisticsWidget6 = /* @__PURE__ */ _export_sfc(_sfc_main$1o, [["ssrRender", _sfc_ssrRender$1k]]);
    const __vite_glob_0_123 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: StatisticsWidget6
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1n = vueExports$1.defineComponent({
      name: "kt-widget-1",
      components: {
        Dropdown1
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const items = [
          {
            image: getAssetPath("media/svg/brand-logos/plurk.svg"),
            info: {
              title: "Top Authors",
              description: "Successful Fellas"
            },
            progress: {
              value: "70",
              color: "primary"
            }
          },
          {
            image: getAssetPath("media/svg/brand-logos/telegram.svg"),
            info: {
              title: "Popular Authors",
              description: "Most Successful"
            },
            progress: {
              value: "50",
              color: "primary"
            }
          },
          {
            image: getAssetPath("media/svg/brand-logos/vimeo.svg"),
            info: {
              title: "New Users",
              description: "Awesome Users"
            },
            progress: {
              value: "80",
              color: "primary"
            }
          },
          {
            image: getAssetPath("media/svg/brand-logos/bebo.svg"),
            info: {
              title: "Active Customers",
              description: "Best Customers"
            },
            progress: {
              value: "90",
              color: "primary"
            }
          },
          {
            image: getAssetPath("media/svg/brand-logos/kickstarter.svg"),
            info: {
              title: "Bestseller Theme",
              description: "Amazing Templates"
            },
            progress: {
              value: "70",
              color: "primary"
            }
          }
        ];
        return {
          items,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown1 = vueExports$1.resolveComponent("Dropdown1");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Tasks Overview</span><span class="text-muted fw-semibold fs-7">Pending 10 tasks</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown1, null, null, _parent));
      _push(`</div></div><div class="card-body py-3"><div class="table-responsive"><table class="table align-middle gs-0 gy-5"><thead><tr><th class="p-0 w-50px"></th><th class="p-0 min-w-200px"></th><th class="p-0 min-w-100px"></th><th class="p-0 min-w-40px"></th></tr></thead><tbody><!--[-->`);
      ssrRenderList(_ctx.items, (item, index) => {
        _push(`<tr><th><div class="symbol symbol-50px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", item.image)} class="h-50 align-self-center" alt=""></span></div></th><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item.info.title)}</a><span class="text-muted fw-semibold d-block fs-7">${ssrInterpolate(item.info.description)}</span></td><td><div class="d-flex flex-column w-100 me-2"><div class="d-flex flex-stack mb-2"><span class="text-muted me-2 fs-7 fw-semibold">${ssrInterpolate(item.progress.value)}% </span></div><div class="progress h-6px w-100"><div class="${ssrRenderClass(`
                          progress-bar
                          bg-${item.progress.color}
                        `)}" role="progressbar" style="${ssrRenderStyle(`width: ${item.progress.value}%`)}"${ssrRenderAttr("aria-valuenow", item.progress.value)} aria-valuemin="0" aria-valuemax="100"></div></div></div></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "arrow-right",
          "icon-class": "fs-2"
        }, null, _parent));
        _push(`</a></td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$1n = _sfc_main$1n.setup;
    _sfc_main$1n.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget1.vue");
      return _sfc_setup$1n ? _sfc_setup$1n(props, ctx) : void 0;
    };
    const TablesWidget1 = /* @__PURE__ */ _export_sfc(_sfc_main$1n, [["ssrRender", _sfc_ssrRender$1j]]);
    const __vite_glob_0_124 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1m = vueExports$1.defineComponent({
      name: "kt-widget-10",
      components: {
        Dropdown2
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const list = [
          {
            user: {
              avatar: getAssetPath("media/avatars/300-6.jpg"),
              name: "Emma Smith",
              email: "e.smith@kpmg.com.au"
            },
            price: "$560,000",
            technologies: "Laravel, Metronic",
            status: {
              label: "Approved",
              color: "success"
            }
          },
          {
            user: {
              state: "danger",
              name: "Melody Macy",
              email: "melody@altbox.com"
            },
            price: "$2,000,000",
            technologies: "ReactJs, HTML",
            status: {
              label: "In Progress",
              color: "warning"
            }
          },
          {
            user: {
              avatar: getAssetPath("media/avatars/300-1.jpg"),
              name: "Max Smith",
              email: "max@kt.com"
            },
            price: "$760,000",
            technologies: "Python, MySQL",
            status: {
              label: "Success",
              color: "danger"
            }
          },
          {
            user: {
              avatar: getAssetPath("media/avatars/300-5.jpg"),
              name: "Sean Bean",
              email: "sean@dellito.com"
            },
            price: "$257,000",
            technologies: "ReactJS, Ruby",
            status: {
              label: "Rejected",
              color: "info"
            }
          },
          {
            user: {
              avatar: getAssetPath("media/avatars/300-25.jpg"),
              name: "Brian Cox",
              email: "brian@exchange.com"
            },
            price: "$560,000",
            technologies: "AngularJS, C#",
            status: {
              label: "In Progress",
              color: "primary"
            }
          }
        ];
        return {
          list,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">New Products</span><span class="text-muted mt-1 fw-semibold fs-7">Over 500 new products</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="card-body pt-3"><div class="table-responsive"><table class="table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4"><thead><tr class="border-0"><th class="p-0"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-200px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-100px text-end"></th></tr></thead><tbody><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<tr><td><div class="d-flex align-items-center"><div class="symbol symbol-45px me-5">`);
        if (item.user.avatar) {
          _push(`<img alt="Pic"${ssrRenderAttr("src", item.user.avatar)}>`);
        } else if (item.user.state) {
          _push(`<span class="${ssrRenderClass([`bg-light-${item.user.state} text-${item.user.state}`, "symbol-label fw-bold"])}">${ssrInterpolate(item.user.name.charAt(0))}</span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div><div class="d-flex justify-content-start flex-column"><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item.user.name)}</a><a href="#" class="text-muted text-hover-primary fw-semibold text-muted d-block fs-7"><span class="text-gray-900">Email</span>: ${ssrInterpolate(item.user.email)}</a></div></div></td><td class="text-end"><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.price)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">Paid</span></td><td class="text-muted fw-semibold text-end">${ssrInterpolate(item.technologies)}</td><td class="text-end"><span class="${ssrRenderClass([`badge-light-${item.status.color}`, "badge"])}">${ssrInterpolate(item.status.label)}</span></td><td class="text-end"><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "switch",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "pencil",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "trash",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a></td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$1m = _sfc_main$1m.setup;
    _sfc_main$1m.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget10.vue");
      return _sfc_setup$1m ? _sfc_setup$1m(props, ctx) : void 0;
    };
    const TablesWidget10 = /* @__PURE__ */ _export_sfc(_sfc_main$1m, [["ssrRender", _sfc_ssrRender$1i]]);
    const __vite_glob_0_125 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget10
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1l = vueExports$1.defineComponent({
      name: "kt-widget-11",
      components: {},
      props: {
        widgetClasses: String
      },
      setup() {
        const list = [
          {
            product: {
              image: getAssetPath("media/stock/600x400/img-26.jpg"),
              name: "Sant Extreanet Solution",
              specs: "HTML, JS, ReactJS"
            },
            price: "$2,790",
            deposit: "$520",
            agent: {
              name: "Bradly Beal",
              position: "Insurance"
            },
            status: {
              label: "Approved",
              color: "primary"
            }
          },
          {
            product: {
              image: getAssetPath("media/stock/600x400/img-3.jpg"),
              name: "Telegram Development",
              specs: "C#, ASP.NET, MS SQL"
            },
            price: "$4,790",
            deposit: "$240",
            agent: {
              name: "Chris Thompson",
              position: "NBA Player"
            },
            status: {
              label: "In Progress",
              color: "danger"
            }
          },
          {
            product: {
              image: getAssetPath("media/stock/600x400/img-9.jpg"),
              name: "Payroll Application",
              specs: "PHP, Laravel, VueJS"
            },
            price: "$4,390",
            deposit: "$593",
            agent: {
              name: "Zoey McGee",
              position: "Ruby Developer"
            },
            status: {
              label: "Success",
              color: "success"
            }
          },
          {
            product: {
              image: getAssetPath("media/stock/600x400/img-18.jpg"),
              name: "HR Management System",
              specs: "Python, PostgreSQL, ReactJS"
            },
            price: "$7,990",
            deposit: "$980",
            agent: {
              name: "Brandon Ingram",
              position: "Insurance"
            },
            status: {
              label: "Rejected",
              color: "info"
            }
          },
          {
            product: {
              image: getAssetPath("media/stock/600x400/img-8.jpg"),
              name: "Telegram Mobile",
              specs: "HTML, JS, ReactJS"
            },
            price: "$5,790",
            deposit: "$750",
            agent: {
              name: "Natali Trump",
              position: "Insurance"
            },
            status: {
              label: "Approved",
              color: "warning"
            }
          }
        ];
        return {
          list,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">New Arrivals</span><span class="text-muted mt-1 fw-semibold fs-7">Over 500 new products</span></h3><div class="card-toolbar"><a href="#" class="btn btn-sm btn-light-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "plus",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(` New Member </a></div></div><div class="card-body py-3"><div class="table-responsive"><table class="table align-middle gs-0 gy-4"><thead><tr class="fw-bold text-muted bg-light"><th class="ps-4 min-w-325px rounded-start">Product</th><th class="min-w-125px">Price</th><th class="min-w-125px">Deposit</th><th class="min-w-200px">Agent</th><th class="min-w-150px">Status</th><th class="min-w-200px text-end rounded-end"></th></tr></thead><tbody><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<tr><td><div class="d-flex align-items-center"><div class="symbol symbol-50px me-5"><img${ssrRenderAttr("src", item.product.image)} class="" alt=""></div><div class="d-flex justify-content-start flex-column"><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item.product.name)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">${ssrInterpolate(item.product.specs)}</span></div></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.price)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">Paid</span></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.deposit)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">Rejected</span></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.agent.name)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">${ssrInterpolate(item.agent.position)}</span></td><td><span class="${ssrRenderClass(`
                      badge badge-light-${item.status.color}
                      fs-7
                      fw-bold
                    `)}">${ssrInterpolate(item.status.label)}</span></td><td class="text-end"><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "switch",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "pencil",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "trash",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a></td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$1l = _sfc_main$1l.setup;
    _sfc_main$1l.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget11.vue");
      return _sfc_setup$1l ? _sfc_setup$1l(props, ctx) : void 0;
    };
    const TablesWidget11 = /* @__PURE__ */ _export_sfc(_sfc_main$1l, [["ssrRender", _sfc_ssrRender$1h]]);
    const __vite_glob_0_126 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget11
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1k = vueExports$1.defineComponent({
      name: "kt-widget-12",
      components: {
        Dropdown2
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const list = [
          {
            agent: {
              image: getAssetPath("media/svg/avatars/001-boy.svg"),
              name: "Brad Simmons",
              skills: "HTML, JS, ReactJS"
            },
            earnings: {
              value: "$8,000,000",
              remarks: "Pending"
            },
            comission: {
              value: "$5,400",
              remarks: "Paid"
            },
            company: {
              name: "Intertico",
              fields: "Web, UI/UX Design"
            },
            rating: {
              value: 5,
              remarks: "Best Rated"
            }
          },
          {
            agent: {
              image: getAssetPath("media/svg/avatars/047-girl-25.svg"),
              name: "Lebron Wayde",
              skills: "PHP, Laravel, VueJS"
            },
            earnings: {
              value: "$8,750,000",
              remarks: "Paid"
            },
            comission: {
              value: "$7,400",
              remarks: "Paid"
            },
            company: {
              name: "Agoda",
              fields: "Houses & Hotels"
            },
            rating: {
              value: 4,
              remarks: "Above Avarage"
            }
          },
          {
            agent: {
              image: getAssetPath("media/svg/avatars/006-girl-3.svg"),
              name: "Brad Simmons",
              skills: "HTML, JS, ReactJS"
            },
            earnings: {
              value: "$8,000,000",
              remarks: "In Proccess"
            },
            comission: {
              value: "$2,500",
              remarks: "Rejected"
            },
            company: {
              name: "RoadGee",
              fields: "Paid"
            },
            rating: {
              value: 5,
              remarks: "Best Rated"
            }
          },
          {
            agent: {
              image: getAssetPath("media/svg/avatars/014-girl-7.svg"),
              name: "Natali Trump",
              skills: "HTML, JS, ReactJS"
            },
            earnings: {
              value: "$700,000",
              remarks: "Pending"
            },
            comission: {
              value: "$7,760",
              remarks: "Paid"
            },
            company: {
              name: "The Hill",
              fields: "Insurance"
            },
            rating: {
              value: 3,
              remarks: "Avarage"
            }
          },
          {
            agent: {
              image: getAssetPath("media/svg/avatars/020-girl-11.svg"),
              name: "	Jessie Clarcson",
              skills: "HTML, JS, ReactJS"
            },
            earnings: {
              value: "$1,320,000",
              remarks: "Pending"
            },
            comission: {
              value: "$6,250",
              remarks: "Paid"
            },
            company: {
              name: "Intertico",
              fields: "Web, UI/UX Design"
            },
            rating: {
              value: 5,
              remarks: "Best Rated"
            }
          }
        ];
        return {
          list,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Member Statistics</span><span class="text-muted mt-1 fw-semibold fs-7">Over 500 new members</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="card-body py-3"><div class="table-responsive"><table class="table align-middle gs-0 gy-4"><thead><tr class="fw-bold text-muted bg-light"><th class="ps-4 min-w-300px rounded-start">Agent</th><th class="min-w-125px">Earnings</th><th class="min-w-125px">Comission</th><th class="min-w-200px">Company</th><th class="min-w-150px">Rating</th><th class="min-w-200px text-end rounded-end"></th></tr></thead><tbody><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<tr><td><div class="d-flex align-items-center"><div class="symbol symbol-50px me-5"><span class="symbol-label bg-light"><img${ssrRenderAttr("src", item.agent.image)} class="h-75 align-self-end" alt=""></span></div><div class="d-flex justify-content-start flex-column"><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item.agent.name)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">${ssrInterpolate(item.agent.skills)}</span></div></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.earnings.value)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">${ssrInterpolate(item.earnings.remarks)}&gt;</span></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.comission.value)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">${ssrInterpolate(item.comission.remarks)}</span></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.company.name)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">${ssrInterpolate(item.company.fields)}</span></td><td><div class="rating"><!--[-->`);
        ssrRenderList(5, (i) => {
          _push(`<div class="${ssrRenderClass([[item.rating.value >= i && "checked"], "rating-label me-2"])}"><i class="bi bi-star-fill fs-5"></i></div>`);
        });
        _push(`<!--]--></div><span class="text-muted fw-semibold text-muted d-block fs-7 mt-1">${ssrInterpolate(item.rating.remarks)}</span></td><td class="text-end"><a href="#" class="btn btn-bg-light btn-color-muted btn-active-color-primary btn-sm px-4 me-2"> View </a><a href="#" class="btn btn-bg-light btn-color-muted btn-active-color-primary btn-sm px-4"> Edit </a></td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$1k = _sfc_main$1k.setup;
    _sfc_main$1k.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget12.vue");
      return _sfc_setup$1k ? _sfc_setup$1k(props, ctx) : void 0;
    };
    const TablesWidget12 = /* @__PURE__ */ _export_sfc(_sfc_main$1k, [["ssrRender", _sfc_ssrRender$1g]]);
    const __vite_glob_0_127 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget12
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1j = vueExports$1.defineComponent({
      name: "kt-widget-12",
      components: {
        Dropdown2
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const checkedRows = vueExports$1.ref([]);
        const list = [
          {
            orderid: "56037-XDER",
            country: {
              name: "Brasil",
              code: "PH"
            },
            date: {
              value: "05/28/2020",
              remarks: "Paid"
            },
            progress: {
              value: "50",
              color: "primary"
            },
            company: {
              name: "Intertico",
              fields: "Web, UI/UX Design"
            },
            status: {
              label: "Approved",
              color: "success"
            },
            total: "$3560"
          },
          {
            orderid: "05822-FXSP",
            country: {
              name: "Belarus",
              code: "BY"
            },
            date: {
              value: "04/18/2021",
              remarks: "Paid"
            },
            progress: {
              value: "50",
              color: "primary"
            },
            company: {
              name: "Agoda",
              fields: "Houses & Hotels"
            },
            status: {
              label: "In Progress",
              color: "warning"
            },
            total: "$4850"
          },
          {
            orderid: "4472-QREX",
            country: {
              name: "Phillipines",
              code: "BH"
            },
            date: {
              value: "07/23/2019",
              remarks: "Paid"
            },
            progress: {
              value: "50",
              color: "primary"
            },
            company: {
              name: "RoadGee",
              fields: "Transportation"
            },
            status: {
              label: "Success",
              color: "danger"
            },
            total: "$8376"
          },
          {
            orderid: "00347-BCLQ",
            country: {
              name: "Argentina",
              code: "BR"
            },
            date: {
              value: "12/21/2021",
              remarks: "Paid"
            },
            progress: {
              value: "50",
              color: "primary"
            },
            company: {
              name: "The Hill",
              fields: "Insurance"
            },
            status: {
              label: "Rejected",
              color: "info"
            },
            total: "$9486"
          },
          {
            orderid: "59486-XDER",
            country: {
              name: "Agoda",
              code: "BT"
            },
            date: {
              value: "05/28/2020",
              remarks: "Paid"
            },
            progress: {
              value: "50",
              color: "primary"
            },
            company: {
              name: "Phillipines",
              fields: "Transportation"
            },
            status: {
              label: "Approved",
              color: "primary"
            },
            total: "$8476"
          }
        ];
        return {
          list,
          checkedRows,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown2 = vueExports$1.resolveComponent("Dropdown2");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Recent Orders</span><span class="text-muted mt-1 fw-semibold fs-7">Over 500 orders</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown2, null, null, _parent));
      _push(`</div></div><div class="card-body py-3"><div class="table-responsive"><table class="table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3"><thead><tr class="fw-bold text-muted"><th class="w-25px"><div class="form-check form-check-sm form-check-custom form-check-solid"><input class="form-check-input" type="checkbox"></div></th><th class="min-w-150px">Order Id</th><th class="min-w-140px">Country</th><th class="min-w-120px">Date</th><th class="min-w-120px">Company</th><th class="min-w-120px">Total</th><th class="min-w-120px">Status</th><th class="min-w-100px text-end">Actions</th></tr></thead><tbody><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<tr><td><div class="form-check form-check-sm form-check-custom form-check-solid"><input class="form-check-input widget-13-check" type="checkbox"${ssrRenderAttr("value", index)}${ssrIncludeBooleanAttr(Array.isArray(_ctx.checkedRows) ? ssrLooseContain(_ctx.checkedRows, index) : _ctx.checkedRows) ? " checked" : ""}></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary fs-6">${ssrInterpolate(item.orderid)}</a></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.company.name)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">Code: ${ssrInterpolate(item.country.code)}</span></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.date.value)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">Code: ${ssrInterpolate(item.date.remarks)}</span></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block mb-1 fs-6">${ssrInterpolate(item.company.name)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">${ssrInterpolate(item.company.fields)}</span></td><td class="text-gray-900 fw-bold text-hover-primary fs-6">${ssrInterpolate(item.total)}</td><td><span class="${ssrRenderClass([`badge-light-${item.status.color}`, "badge"])}">${ssrInterpolate(item.status.label)}</span></td><td class="text-end"><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "switch",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "pencil",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "trash",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a></td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$1j = _sfc_main$1j.setup;
    _sfc_main$1j.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget13.vue");
      return _sfc_setup$1j ? _sfc_setup$1j(props, ctx) : void 0;
    };
    const TablesWidget13 = /* @__PURE__ */ _export_sfc(_sfc_main$1j, [["ssrRender", _sfc_ssrRender$1f]]);
    const __vite_glob_0_128 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget13
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1i = vueExports$1.defineComponent({
      name: "kt-widget-2",
      components: {
        Dropdown1
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const items = [
          {
            image: getAssetPath("media/svg/brand-logos/plurk.svg"),
            info: {
              title: "Top Authors",
              description: "Successful Fellas"
            },
            badges: [
              { label: "Angular", color: "danger" },
              { label: "PHP", color: "info" }
            ],
            remarks: "4600 Users"
          },
          {
            image: getAssetPath("media/svg/brand-logos/telegram.svg"),
            info: {
              title: "Popular Authors",
              description: "Most Successful"
            },
            badges: [
              { label: "HTML", color: "danger" },
              { label: "CSS", color: "info" }
            ],
            remarks: "7200 Users"
          },
          {
            image: getAssetPath("media/svg/brand-logos/vimeo.svg"),
            info: {
              title: "New Users",
              description: "Awesome Users"
            },
            badges: [
              { label: "React", color: "danger" },
              { label: "SASS", color: "info" }
            ],
            remarks: "890  Users"
          },
          {
            image: getAssetPath("media/svg/brand-logos/bebo.svg"),
            info: {
              title: "Active Customers",
              description: "Best Customers"
            },
            badges: [
              { label: "Java", color: "danger" },
              { label: "PHP", color: "info" }
            ],
            remarks: "6370 Users"
          },
          {
            image: getAssetPath("media/svg/brand-logos/kickstarter.svg"),
            info: {
              title: "Bestseller Theme",
              description: "Amazing Templates"
            },
            badges: [
              { label: "Python", color: "danger" },
              { label: "MySQL", color: "info" }
            ],
            remarks: "354 Users"
          }
        ];
        return {
          items,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown1 = vueExports$1.resolveComponent("Dropdown1");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Latest Arrivals</span><span class="text-muted mt-1 fw-semibold fs-7">More than 100 new products</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown1, null, null, _parent));
      _push(`</div></div><div class="card-body py-3"><div class="table-responsive"><table class="table align-middle gs-0 gy-5"><thead><tr><th class="p-0 w-50px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-125px"></th><th class="p-0 min-w-40px"></th></tr></thead><tbody><!--[-->`);
      ssrRenderList(_ctx.items, (item, index) => {
        _push(`<tr><td><div class="symbol symbol-50px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", item.image)} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item.info.title)}</a><span class="text-muted fw-semibold d-block fs-7">${ssrInterpolate(item.info.description)}</span></td><td class="text-end"><!--[-->`);
        ssrRenderList(item.badges, (item1, index1) => {
          _push(`<span class="${ssrRenderClass([`badge-light-${item1.color}`, "badge fw-semibold me-1"])}">${ssrInterpolate(item1.label)}</span>`);
        });
        _push(`<!--]--></td><td class="text-end"><span class="text-muted fw-semibold">${ssrInterpolate(item.remarks)}</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "arrow-right",
          "icon-class": "fs-2"
        }, null, _parent));
        _push(`</a></td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$1i = _sfc_main$1i.setup;
    _sfc_main$1i.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget2.vue");
      return _sfc_setup$1i ? _sfc_setup$1i(props, ctx) : void 0;
    };
    const TablesWidget2 = /* @__PURE__ */ _export_sfc(_sfc_main$1i, [["ssrRender", _sfc_ssrRender$1e]]);
    const __vite_glob_0_129 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget2
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1h = vueExports$1.defineComponent({
      name: "kt-widget-3",
      components: {
        Dropdown3
      },
      props: {
        widgetClasses: String
      },
      setup() {
        const items = [
          {
            icon: "basket",
            color: "success",
            title: "Top Authors",
            description: "Best Customers",
            technologies: "ReactJs, HTML",
            users: "4600 Users",
            size: "5.4MB"
          },
          {
            icon: "category",
            color: "danger",
            title: "Popular Authors",
            description: "Best Customers",
            technologies: "Python, MySQL",
            users: "7200 Users",
            size: "2.8MB"
          },
          {
            icon: "briefcase",
            color: "info",
            title: "New Users",
            description: "Communication/Group.svg",
            technologies: "Laravel, Metronic",
            users: "890 Users",
            size: "1.5MB"
          },
          {
            icon: "abstract-26",
            color: "warning",
            title: "Active Customers",
            description: "Best Customers",
            technologies: "AngularJS, C#",
            users: "4600 Users",
            size: "5.4MB"
          },
          {
            icon: "abstract-41",
            color: "primary",
            title: "Active Customers",
            description: "Best Customers",
            technologies: "ReactJS, Ruby",
            users: "354 Users",
            size: "500KB"
          }
        ];
        return {
          items,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Files</span><span class="text-muted mt-1 fw-semibold fs-7">Over 100 pending files</span></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-primary btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "category",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div><div class="card-body py-3"><div class="table-responsive"><table class="table align-middle gs-0 gy-3"><thead><tr><th class="p-0 w-50px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-140px"></th><th class="p-0 min-w-120px"></th><th class="p-0 min-w-40px"></th></tr></thead><tbody><!--[-->`);
      ssrRenderList(_ctx.items, (item, index) => {
        _push(`<tr><td><div class="symbol symbol-50px me-2"><span class="${ssrRenderClass([`bg-light-${item.color}`, "symbol-label"])}">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": item.icon,
          "icon-class": `text-${item.color} fs-2x`
        }, null, _parent));
        _push(`</span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item.title)}</a></td><td class="text-end text-muted fw-semibold">${ssrInterpolate(item.technologies)}</td><td class="text-end text-muted fw-semibold">${ssrInterpolate(item.users)}</td><td class="text-end text-gray-900 fw-bold fs-6 pe-0">${ssrInterpolate(item.size)}</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$1h = _sfc_main$1h.setup;
    _sfc_main$1h.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget3.vue");
      return _sfc_setup$1h ? _sfc_setup$1h(props, ctx) : void 0;
    };
    const TablesWidget3 = /* @__PURE__ */ _export_sfc(_sfc_main$1h, [["ssrRender", _sfc_ssrRender$1d]]);
    const __vite_glob_0_130 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget3
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1g = vueExports$1.defineComponent({
      name: "kt-widget-4",
      components: {},
      props: {
        widgetClasses: String
      },
      setup() {
        const items = [
          [
            {
              image: getAssetPath("media/avatars/300-14.jpg"),
              user: {
                name: "Brad Simmons",
                position: "Movie Creator"
              },
              rating: 5
            },
            {
              image: getAssetPath("media/avatars/300-5.jpg"),
              user: {
                name: "Jessie Clarcson",
                position: "HTML, CSS Coding"
              },
              rating: 5
            },
            {
              image: getAssetPath("media/avatars/300-20.jpg"),
              user: {
                name: "Lebron Wayde",
                position: "ReactJS Developer"
              },
              rating: 4
            },
            {
              image: getAssetPath("media/avatars/300-23.jpg"),
              user: {
                name: "Natali Trump",
                position: "UI/UX Designer"
              },
              rating: 5
            },
            {
              image: getAssetPath("media/avatars/300-10.jpg"),
              user: {
                name: "Kevin Leonard",
                position: "Art Director"
              },
              rating: 3
            }
          ],
          [
            {
              image: getAssetPath("media/svg/avatars/043-boy-18.svg"),
              user: {
                name: "Kevin Leonard",
                position: "Art Director"
              },
              rating: 3
            },
            {
              image: getAssetPath("media/svg/avatars/014-girl-7.svg"),
              user: {
                name: "Natali Trump",
                position: "UI/UX Designer"
              },
              rating: 5
            },
            {
              image: getAssetPath("media/svg/avatars/018-girl-9.svg"),
              user: {
                name: "Jessie Clarcson",
                position: "HTML, CSS Coding"
              },
              rating: 5
            },
            {
              image: getAssetPath("media/svg/avatars/001-boy.svg"),
              user: {
                name: "Brad Simmons",
                position: "Movie Creator"
              },
              rating: 5
            }
          ],
          [
            {
              image: getAssetPath("media/svg/avatars/018-girl-9.svg"),
              user: {
                name: "Jessie Clarcson",
                position: "HTML, CSS Coding"
              },
              rating: 5
            },
            {
              image: getAssetPath("media/svg/avatars/047-girl-25.svg"),
              user: {
                name: "Lebron Wayde",
                position: "ReactJS Developer"
              },
              rating: 4
            },
            {
              image: getAssetPath("media/svg/avatars/014-girl-7.svg"),
              user: {
                name: "Natali Trump",
                position: "UI/UX Designer"
              },
              rating: 5
            }
          ]
        ];
        return {
          items
        };
      }
    });
    function _sfc_ssrRender$1c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">New Members</span><span class="text-muted mt-1 fw-semibold fs-7">More than 400 new members</span></h3><div class="card-toolbar"><ul class="nav"><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary active fw-bold px-4 me-1" data-bs-toggle="tab" href="#kt_table_widget_4_tab_1">Month</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4 me-1" data-bs-toggle="tab" href="#kt_table_widget_4_tab_2">Week</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4" data-bs-toggle="tab" href="#kt_table_widget_4_tab_3">Day</a></li></ul></div></div><div class="card-body py-3"><div class="tab-content"><!--[-->`);
      ssrRenderList(_ctx.items, (item, index) => {
        _push(`<div class="${ssrRenderClass([[index === 0 && "show active"], "tab-pane fade"])}"${ssrRenderAttr("id", `kt_table_widget_4_tab_${index + 1}`)}><div class="table-responsive"><table class="table align-middle gs-0 gy-3"><thead><tr><th class="p-0 w-50px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-140px"></th><th class="p-0 min-w-120px"></th></tr></thead><tbody><!--[-->`);
        ssrRenderList(item, (item1, index1) => {
          _push(`<tr><td><div class="symbol symbol-50px"><img${ssrRenderAttr("src", item1.image)} alt=""></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item1.user.name)}</a><span class="text-muted fw-semibold d-block fs-7">${ssrInterpolate(item1.user.position)}</span></td><td><span class="text-muted fw-semibold d-block fs-7"> Rating </span><div class="rating"><!--[-->`);
          ssrRenderList(5, (i) => {
            _push(`<div class="${ssrRenderClass([[item1.rating >= i && "checked"], "rating-label me-2"])}"><i class="bi bi-star-fill fs-5"></i></div>`);
          });
          _push(`<!--]--></div></td><td class="text-end"><a href="#" class="btn btn-icon btn-light-twitter btn-sm me-3"><i class="bi bi-twitter fs-4"></i></a><a href="#" class="btn btn-icon btn-light-facebook btn-sm"><i class="bi bi-facebook fs-4"></i></a></td></tr>`);
        });
        _push(`<!--]--></tbody></table></div></div>`);
      });
      _push(`<!--]--></div></div></div>`);
    }
    const _sfc_setup$1g = _sfc_main$1g.setup;
    _sfc_main$1g.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget4.vue");
      return _sfc_setup$1g ? _sfc_setup$1g(props, ctx) : void 0;
    };
    const TablesWidget4 = /* @__PURE__ */ _export_sfc(_sfc_main$1g, [["ssrRender", _sfc_ssrRender$1c]]);
    const __vite_glob_0_131 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget4
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1f = vueExports$1.defineComponent({
      name: "kt-widget-5",
      components: {},
      props: {
        widgetClasses: String
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Latest Products</span><span class="text-muted mt-1 fw-semibold fs-7">More than 400 new products</span></h3><div class="card-toolbar"><ul class="nav"><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4 me-1 active" data-bs-toggle="tab" href="#kt_table_widget_5_tab_1">Month</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4 me-1" data-bs-toggle="tab" href="#kt_table_widget_5_tab_2">Week</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4" data-bs-toggle="tab" href="#kt_table_widget_5_tab_3">Day</a></li></ul></div></div><div class="card-body py-3"><div class="tab-content"><div class="tab-pane fade active show" id="kt_table_widget_5_tab_1"><div class="table-responsive"><table class="table table-row-dashed table-row-gray-200 align-middle gs-0 gy-4"><thead><tr class="border-0"><th class="p-0 w-50px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-140px"></th><th class="p-0 min-w-110px"></th><th class="p-0 min-w-50px"></th></tr></thead><tbody><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/plurk.svg"))} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Brad Simmons</a><span class="text-muted fw-semibold d-block">Movie Creator</span></td><td class="text-end text-muted fw-semibold">React, HTML</td><td class="text-end"><span class="badge badge-light-success">Approved</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/svg/brand-logos/telegram.svg")
      )} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Popular Authors</a><span class="text-muted fw-semibold d-block">Most Successful</span></td><td class="text-end text-muted fw-semibold">Python, MySQL</td><td class="text-end"><span class="badge badge-light-warning">In Progress</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/vimeo.svg"))} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">New Users</a><span class="text-muted fw-semibold d-block">Awesome Users</span></td><td class="text-end text-muted fw-semibold"> Laravel,Metronic </td><td class="text-end"><span class="badge badge-light-primary">Success</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/bebo.svg"))} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Active Customers</a><span class="text-muted fw-semibold d-block">Movie Creator</span></td><td class="text-end text-muted fw-semibold">AngularJS, C#</td><td class="text-end"><span class="badge badge-light-danger">Rejected</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath(
          "/media/svg/brand-logos/kickstarter.svg"
        )
      )} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Bestseller Theme</a><span class="text-muted fw-semibold d-block">Best Customers</span></td><td class="text-end text-muted fw-semibold">ReactJS, Ruby</td><td class="text-end"><span class="badge badge-light-warning">In Progress</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr></tbody></table></div></div><div class="tab-pane fade" id="kt_table_widget_5_tab_2"><div class="table-responsive"><table class="table table-row-dashed table-row-gray-200 align-middle gs-0 gy-4"><thead><tr class="border-0"><th class="p-0 w-50px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-140px"></th><th class="p-0 min-w-110px"></th><th class="p-0 min-w-50px"></th></tr></thead><tbody><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/plurk.svg"))} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Brad Simmons</a><span class="text-muted fw-semibold d-block">Movie Creator</span></td><td class="text-end text-muted fw-semibold">React, HTML</td><td class="text-end"><span class="badge badge-light-success">Approved</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/svg/brand-logos/telegram.svg")
      )} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Popular Authors</a><span class="text-muted fw-semibold d-block">Most Successful</span></td><td class="text-end text-muted fw-semibold">Python, MySQL</td><td class="text-end"><span class="badge badge-light-warning">In Progress</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/bebo.svg"))} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Active Customers</a><span class="text-muted fw-semibold d-block">Movie Creator</span></td><td class="text-end text-muted fw-semibold">AngularJS, C#</td><td class="text-end"><span class="badge badge-light-danger">Rejected</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr></tbody></table></div></div><div class="tab-pane fade" id="kt_table_widget_5_tab_3"><div class="table-responsive"><table class="table table-row-dashed table-row-gray-200 align-middle gs-0 gy-4"><thead><tr class="border-0"><th class="p-0 w-50px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-140px"></th><th class="p-0 min-w-110px"></th><th class="p-0 min-w-50px"></th></tr></thead><tbody><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath(
          "/media/svg/brand-logos/kickstarter.svg"
        )
      )} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Bestseller Theme</a><span class="text-muted fw-semibold d-block">Best Customers</span></td><td class="text-end text-muted fw-semibold">ReactJS, Ruby</td><td class="text-end"><span class="badge badge-light-warning">In Progress</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/bebo.svg"))} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Active Customers</a><span class="text-muted fw-semibold d-block">Movie Creator</span></td><td class="text-end text-muted fw-semibold">AngularJS, C#</td><td class="text-end"><span class="badge badge-light-danger">Rejected</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/vimeo.svg"))} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">New Users</a><span class="text-muted fw-semibold d-block">Awesome Users</span></td><td class="text-end text-muted fw-semibold"> Laravel,Metronic </td><td class="text-end"><span class="badge badge-light-primary">Success</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr><tr><td><div class="symbol symbol-45px me-2"><span class="symbol-label"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/svg/brand-logos/telegram.svg")
      )} class="h-50 align-self-center" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">Popular Authors</a><span class="text-muted fw-semibold d-block">Most Successful</span></td><td class="text-end text-muted fw-semibold">Python, MySQL</td><td class="text-end"><span class="badge badge-light-warning">In Progress</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</a></td></tr></tbody></table></div></div></div></div></div>`);
    }
    const _sfc_setup$1f = _sfc_main$1f.setup;
    _sfc_main$1f.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget5.vue");
      return _sfc_setup$1f ? _sfc_setup$1f(props, ctx) : void 0;
    };
    const TablesWidget5 = /* @__PURE__ */ _export_sfc(_sfc_main$1f, [["ssrRender", _sfc_ssrRender$1b]]);
    const __vite_glob_0_132 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget5
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1e = vueExports$1.defineComponent({
      name: "kt-widget-6",
      components: {},
      props: {
        widgetClasses: String
      },
      setup() {
        const items = [
          [
            {
              image: getAssetPath("media/svg/avatars/001-boy.svg"),
              user: {
                name: "Brad Simmons",
                position: "Successful Fellas"
              },
              paid: "$200,500",
              progress: {
                value: "+28%",
                color: "primary"
              }
            },
            {
              image: getAssetPath("media/svg/avatars/018-girl-9.svg"),
              user: {
                name: "Jessie Clarcson",
                position: "HTML, CSS Coding"
              },
              paid: "$1,200,000",
              progress: {
                value: "+52%",
                color: "warning"
              }
            },
            {
              image: getAssetPath("media/svg/avatars/047-girl-25.svg"),
              user: {
                name: "Jessie Clarcson",
                position: "PHP, Laravel, VueJS"
              },
              paid: "$1,200,000",
              progress: {
                value: "+52%",
                color: "danger"
              }
            },
            {
              image: getAssetPath("media/svg/avatars/014-girl-7.svg"),
              user: {
                name: "Natali Trump",
                position: "UI/UX Designer"
              },
              paid: "$3,400,000",
              progress: {
                value: "-34%",
                color: "success"
              }
            },
            {
              image: getAssetPath("media/svg/avatars/043-boy-18.svg"),
              user: {
                name: "Kevin Leonard",
                position: "Art Director"
              },
              paid: "$35,600,000",
              progress: {
                value: "+230%",
                color: "info"
              }
            }
          ],
          [
            {
              image: getAssetPath("media/svg/avatars/018-girl-9.svg"),
              user: {
                name: "Jessie Clarcson",
                position: "HTML, CSS Coding"
              },
              paid: "$1,200,000",
              progress: {
                value: "+52%",
                color: "warning"
              }
            },
            {
              image: getAssetPath("media/svg/avatars/014-girl-7.svg"),
              user: {
                name: "Natali Trump",
                position: "UI/UX Designer"
              },
              paid: "$3,400,000",
              progress: {
                value: "-34%",
                color: "success"
              }
            },
            {
              image: getAssetPath("media/svg/avatars/001-boy.svg"),
              user: {
                name: "Brad Simmons",
                position: "Successful Fellas"
              },
              paid: "$200,500",
              progress: {
                value: "+28%",
                color: "primary"
              }
            }
          ],
          [
            {
              image: getAssetPath("media/svg/avatars/047-girl-25.svg"),
              user: {
                name: "Jessie Clarcson",
                position: "HTML, CSS Coding"
              },
              paid: "$1,200,000",
              progress: {
                value: "+52%",
                color: "danger"
              }
            },
            {
              image: getAssetPath("media/svg/avatars/014-girl-7.svg"),
              user: {
                name: "Natali Trump",
                position: "UI/UX Designer"
              },
              paid: "$3,400,000",
              progress: {
                value: "-34%",
                color: "success"
              }
            },
            {
              image: getAssetPath("media/svg/avatars/043-boy-18.svg"),
              user: {
                name: "Kevin Leonard",
                position: "Art Director"
              },
              paid: "$35,600,000",
              progress: {
                value: "+230%",
                color: "info"
              }
            },
            {
              image: getAssetPath("media/svg/avatars/001-boy.svg"),
              user: {
                name: "Brad Simmons",
                position: "Successful Fellas"
              },
              paid: "$200,500",
              progress: {
                value: "+28%",
                color: "primary"
              }
            }
          ]
        ];
        return {
          items,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Authors Earnings</span><span class="text-muted mt-1 fw-semibold fs-7">More than 400 new authors</span></h3><div class="card-toolbar"><ul class="nav"><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary active fw-bold px-4 me-1" data-bs-toggle="tab" href="#kt_table_widget_6_tab_1">Month</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4 me-1" data-bs-toggle="tab" href="#kt_table_widget_6_tab_2">Week</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4" data-bs-toggle="tab" href="#kt_table_widget_6_tab_3">Day</a></li></ul></div></div><div class="card-body py-3"><div class="tab-content"><!--[-->`);
      ssrRenderList(_ctx.items, (item, index) => {
        _push(`<div class="${ssrRenderClass([[index === 0 && "active show"], "tab-pane fade"])}"${ssrRenderAttr("id", `kt_table_widget_6_tab_${index + 1}`)}><div class="table-responsive"><table class="table align-middle gs-0 gy-3"><thead><tr><th class="p-0 w-50px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-140px"></th><th class="p-0 min-w-120px"></th></tr></thead><tbody><!--[-->`);
        ssrRenderList(item, (item1, index1) => {
          _push(`<tr><td><div class="symbol symbol-50px me-2"><span class="symbol-label"><img${ssrRenderAttr("src", item1.image)} class="h-75 align-self-end" alt=""></span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item1.user.name)}</a><span class="text-muted fw-semibold d-block">${ssrInterpolate(item1.user.position)}</span></td><td><span class="text-muted fw-semibold d-block fs-7">Paid</span><span class="text-gray-900 fw-bold d-block fs-5">${ssrInterpolate(item1.paid)}</span></td><td class="text-end"><span class="${ssrRenderClass([`text-${item1.progress.color}`, "fs-7 fw-bold"])}">${ssrInterpolate(item1.progress.value)}</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "arrow-right",
            "icon-class": "fs-2"
          }, null, _parent));
          _push(`</a></td></tr>`);
        });
        _push(`<!--]--></tbody></table></div></div>`);
      });
      _push(`<!--]--></div></div></div>`);
    }
    const _sfc_setup$1e = _sfc_main$1e.setup;
    _sfc_main$1e.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget6.vue");
      return _sfc_setup$1e ? _sfc_setup$1e(props, ctx) : void 0;
    };
    const TablesWidget6 = /* @__PURE__ */ _export_sfc(_sfc_main$1e, [["ssrRender", _sfc_ssrRender$1a]]);
    const __vite_glob_0_133 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget6
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1d = vueExports$1.defineComponent({
      name: "kt-widget-7",
      components: {},
      props: {
        widgetClasses: String
      },
      setup() {
        const items = [
          [
            {
              icon: {
                file: "scroll",
                color: "success"
              },
              info: {
                title: "Media Device",
                description: "Voice and video recorder"
              },
              date: "5 day ago",
              badge: {
                label: "Delivered",
                color: "success"
              }
            },
            {
              icon: {
                file: "category",
                color: "danger"
              },
              info: {
                title: "Special Meal",
                description: "Quona Rice"
              },
              date: "2 day ago",
              badge: {
                label: "Delivered",
                color: "danger"
              }
            },
            {
              icon: {
                file: "compass",
                color: "primary"
              },
              info: {
                title: "New Users",
                description: "Awesome Users"
              },
              date: "4 day ago",
              badge: {
                label: "Delivered",
                color: "primary"
              }
            },
            {
              icon: {
                file: "abstract-26",
                color: "warning"
              },
              info: {
                title: "Active Customers",
                description: "Best Customers"
              },
              date: "1 day ago",
              badge: {
                label: "Delivered",
                color: "warning"
              }
            },
            {
              icon: {
                file: "bucket",
                color: "info"
              },
              info: {
                title: "Strawberry Boxes",
                description: "From Spain"
              },
              date: "7 day ago",
              badge: {
                label: "Delivered",
                color: "info"
              }
            }
          ],
          [
            {
              icon: {
                file: "abstract-41",
                color: "info"
              },
              info: {
                title: "Strawberry Boxes",
                description: "From Spain"
              },
              date: "4 week ago",
              badge: {
                label: "Delivered",
                color: "info"
              }
            },
            {
              icon: {
                file: "category",
                color: "danger"
              },
              info: {
                title: "Special Meal",
                description: "Quona Rice"
              },
              date: "2 week ago",
              badge: {
                label: "Delivered",
                color: "danger"
              }
            },
            {
              icon: {
                file: "abstract-26",
                color: "warning"
              },
              info: {
                title: "Active Customers",
                description: "Best Customers"
              },
              date: "5 week ago",
              badge: {
                label: "Delivered",
                color: "warning"
              }
            }
          ],
          [
            {
              icon: {
                file: "package",
                color: "success"
              },
              info: {
                title: "Media Device",
                description: "Voice and video recorder"
              },
              date: "3 month ago",
              badge: {
                label: "Delivered",
                color: "success"
              }
            },
            {
              icon: {
                file: "category",
                color: "danger"
              },
              info: {
                title: "Special Meal",
                description: "Quona Rice"
              },
              date: "5 month ago",
              badge: {
                label: "Delivered",
                color: "danger"
              }
            },
            {
              icon: {
                file: "abstract-26",
                color: "warning"
              },
              info: {
                title: "Active Customers",
                description: "Best Customers"
              },
              date: "6 month ago",
              badge: {
                label: "Delivered",
                color: "warning"
              }
            },
            {
              icon: {
                file: "abstract-41",
                color: "info"
              },
              info: {
                title: "Strawberry Boxes",
                description: "From Spain"
              },
              date: "4 month ago",
              badge: {
                label: "Delivered",
                color: "info"
              }
            }
          ]
        ];
        return {
          items
        };
      }
    });
    function _sfc_ssrRender$19(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Latest Orders</span><span class="text-muted mt-1 fw-semibold fs-7">More than 100 new orders</span></h3><div class="card-toolbar"><ul class="nav"><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary active fw-bold px-4 me-1" data-bs-toggle="tab" href="#kt_table_widget_7_tab_1">Month</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4 me-1" data-bs-toggle="tab" href="#kt_table_widget_7_tab_2">Week</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4" data-bs-toggle="tab" href="#kt_table_widget_7_tab_3">Day</a></li></ul></div></div><div class="card-body py-3"><div class="tab-content"><!--[-->`);
      ssrRenderList(_ctx.items, (item, index) => {
        _push(`<div class="${ssrRenderClass([[index === 0 && "active show"], "tab-pane fade"])}"${ssrRenderAttr("id", `kt_table_widget_7_tab_${index + 1}`)}><div class="table-responsive"><table class="table align-middle gs-0 gy-3"><thead><tr><th class="p-0 w-50px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-140px"></th><th class="p-0 min-w-120px"></th></tr></thead><tbody><!--[-->`);
        ssrRenderList(item, (item1, index1) => {
          _push(`<tr><td><div class="symbol symbol-50px me-2"><span class="${ssrRenderClass([`bg-light-${item1.icon.color}`, "symbol-label"])}">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": item1.icon.file,
            "icon-class": `text-${item1.icon.color} fs-2x`
          }, null, _parent));
          _push(`</span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item1.info.title)}</a><span class="text-muted fw-semibold d-block fs-7">${ssrInterpolate(item1.info.description)}</span></td><td class="text-end"><span class="text-muted fw-semibold d-block fs-8">Ordered</span><span class="text-gray-900 fw-bold d-block fs-7">${ssrInterpolate(item1.date)}</span></td><td class="text-end"><span class="${ssrRenderClass([`badge-light-${item1.badge.color}`, "badge fs-7 fw-bold"])}">${ssrInterpolate(item1.badge.label)}</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary"><i class="bi bi-three-dots fs-5"></i></a></td></tr>`);
        });
        _push(`<!--]--></tbody></table></div></div>`);
      });
      _push(`<!--]--></div></div></div>`);
    }
    const _sfc_setup$1d = _sfc_main$1d.setup;
    _sfc_main$1d.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget7.vue");
      return _sfc_setup$1d ? _sfc_setup$1d(props, ctx) : void 0;
    };
    const TablesWidget7 = /* @__PURE__ */ _export_sfc(_sfc_main$1d, [["ssrRender", _sfc_ssrRender$19]]);
    const __vite_glob_0_134 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget7
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1c = vueExports$1.defineComponent({
      name: "kt-widget-8",
      components: {},
      props: {
        widgetClasses: String
      },
      setup() {
        const items = [
          [
            {
              icon: {
                file: "scroll",
                color: "danger"
              },
              info: {
                event: "School Music Festival",
                user: "by Rose Liam"
              },
              date: "4:20PM, 03 Sep"
            },
            {
              icon: {
                file: "category",
                color: "warning"
              },
              info: {
                event: "Maths Championship",
                user: "By Tom Gere"
              },
              date: "10:05PM, 25 Oct"
            },
            {
              icon: {
                file: "compass",
                color: "info"
              },
              info: {
                event: "Who Knows Geography",
                user: "By Zoey Dylan"
              },
              date: "3:22PM, 07 Sep"
            },
            {
              icon: {
                file: "abstract-26",
                color: "primary"
              },
              info: {
                event: "Napoleon Days",
                user: "By Luke Owen"
              },
              date: "1:20PM, 02 Dec"
            },
            {
              icon: {
                file: "bucket",
                color: "success"
              },
              info: {
                event: "The School Art Leads",
                user: "By Ellie Cole"
              },
              date: "6:20PM, 07 Sep"
            }
          ],
          [
            {
              icon: {
                file: "compass",
                color: "info"
              },
              info: {
                event: "Who Knows Geography",
                user: "By Zoey Dylan"
              },
              date: "3:22PM, 07 Sep"
            },
            {
              icon: {
                file: "category",
                color: "warning"
              },
              info: {
                event: "Maths Championship",
                user: "By Tom Gere"
              },
              date: "10:05PM, 25 Oct"
            },
            {
              icon: {
                file: "scroll",
                color: "danger"
              },
              info: {
                event: "School Music Festival",
                user: "by Rose Liam"
              },
              date: "4:20PM, 03 Sep"
            }
          ],
          [
            {
              icon: {
                file: "category",
                color: "warning"
              },
              info: {
                event: "Maths Championship",
                user: "By Tom Gere"
              },
              date: "10:05PM, 25 Oct"
            },
            {
              icon: {
                file: "compass",
                color: "info"
              },
              info: {
                event: "Who Knows Geography",
                user: "By Zoey Dylan"
              },
              date: "3:22PM, 07 Sep"
            },
            {
              icon: {
                file: "abstract-26",
                color: "primary"
              },
              info: {
                event: "Napoleon Days",
                user: "By Luke Owen"
              },
              date: "1:20PM, 02 Dec"
            },
            {
              icon: {
                file: "scroll",
                color: "danger"
              },
              info: {
                event: "School Music Festival",
                user: "by Rose Liam"
              },
              date: "4:20PM, 03 Sep"
            }
          ]
        ];
        return {
          items
        };
      }
    });
    function _sfc_ssrRender$18(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: [_ctx.widgetClasses, "card"]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Latest Products</span><span class="text-muted mt-1 fw-semibold fs-7">More than 100 new orders</span></h3><div class="card-toolbar"><ul class="nav"><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary active fw-bold px-4 me-1" data-bs-toggle="tab" href="#kt_table_widget_8_tab_1">Month</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4 me-1" data-bs-toggle="tab" href="#kt_table_widget_8_tab_2">Week</a></li><li class="nav-item"><a class="nav-link btn btn-sm btn-color-muted btn-active btn-active-light-primary fw-bold px-4" data-bs-toggle="tab" href="#kt_table_widget_8_tab_3">Day</a></li></ul></div></div><div class="card-body py-3"><div class="tab-content"><!--[-->`);
      ssrRenderList(_ctx.items, (item, index) => {
        _push(`<div class="${ssrRenderClass([[index === 0 && "active show"], "tab-pane fade"])}"${ssrRenderAttr("id", `kt_table_widget_8_tab_${index + 1}`)}><div class="table-responsive"><table class="table align-middle gs-0 gy-3"><thead><tr><th class="p-0 w-50px"></th><th class="p-0 min-w-150px"></th><th class="p-0 min-w-120px"></th></tr></thead><tbody><!--[-->`);
        ssrRenderList(item, (item1, index1) => {
          _push(`<tr><td><div class="symbol symbol-50px me-2"><span class="${ssrRenderClass([`bg-light-${item1.icon.color}`, "symbol-label"])}">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": item1.icon.file,
            "icon-class": `text-${item1.icon.color} fs-2x`
          }, null, _parent));
          _push(`</span></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary mb-1 fs-6">${ssrInterpolate(item1.info.event)}</a><span class="text-muted fw-semibold d-block fs-7">${ssrInterpolate(item1.info.user)}</span></td><td class="text-end"><span class="text-gray-900 fw-bold d-block fs-7">${ssrInterpolate(item1.date)}</span><span class="text-muted fw-semibold d-block fs-8">Date</span></td><td class="text-end"><a href="#" class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary"><i class="bi bi-three-dots fs-5"></i></a></td></tr>`);
        });
        _push(`<!--]--></tbody></table></div></div>`);
      });
      _push(`<!--]--></div></div></div>`);
    }
    const _sfc_setup$1c = _sfc_main$1c.setup;
    _sfc_main$1c.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget8.vue");
      return _sfc_setup$1c ? _sfc_setup$1c(props, ctx) : void 0;
    };
    const TablesWidget8 = /* @__PURE__ */ _export_sfc(_sfc_main$1c, [["ssrRender", _sfc_ssrRender$18]]);
    const __vite_glob_0_135 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget8
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1b = vueExports$1.defineComponent({
      name: "kt-widget-9",
      components: {},
      props: {
        widgetClasses: String
      },
      setup() {
        const checkedRows = vueExports$1.ref([]);
        const list = [
          {
            image: getAssetPath("media/avatars/300-14.jpg"),
            name: "Ana Simmons",
            skills: "HTML, JS, ReactJS",
            companyName: "Intertico",
            companySkills: "Web, UI/UX Design",
            value: "50",
            color: "primary"
          },
          {
            image: getAssetPath("media/avatars/300-2.jpg"),
            name: "Jessie Clarcson",
            skills: "C#, ASP.NET, MS SQL",
            companyName: "Agoda",
            companySkills: "Houses & Hotels",
            value: "70",
            color: "danger"
          },
          {
            image: getAssetPath("media/avatars/300-5.jpg"),
            name: "Lebron Wayde",
            skills: "PHP, Laravel, VueJS",
            companyName: "RoadGee",
            companySkills: "Transportation",
            value: "60",
            color: "success"
          },
          {
            image: getAssetPath("media/avatars/300-20.jpg"),
            name: "Natali Goodwin",
            skills: "Python, PostgreSQL, ReactJS",
            companyName: "The Hill",
            companySkills: "Insurance",
            value: "50",
            color: "warning"
          },
          {
            image: getAssetPath("media/avatars/300-23.jpg"),
            name: "Kevin Leonard",
            skills: "HTML, JS, ReactJS",
            companyName: "RoadGee",
            companySkills: "Art Director",
            value: "90",
            color: "info"
          }
        ];
        return {
          list,
          checkedRows,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$17(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: ["card", _ctx.widgetClasses]
      }, _attrs))}><div class="card-header border-0 pt-5"><h3 class="card-title align-items-start flex-column"><span class="card-label fw-bold fs-3 mb-1">Members Statistics</span><span class="text-muted mt-1 fw-semibold fs-7">Over 500 members</span></h3><div class="card-toolbar" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-trigger="hover" title="Click to add a user"><a href="#" class="btn btn-sm btn-light-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_invite_friends">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "plus",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(` New Member </a></div></div><div class="card-body py-3"><div class="table-responsive"><table class="table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4"><thead><tr class="fw-bold text-muted"><th class="w-25px"><div class="form-check form-check-sm form-check-custom form-check-solid"><input class="form-check-input" type="checkbox"></div></th><th class="min-w-150px">Authors</th><th class="min-w-140px">Company</th><th class="min-w-120px">Progress</th><th class="min-w-100px text-end">Actions</th></tr></thead><tbody><!--[-->`);
      ssrRenderList(_ctx.list, (item, index) => {
        _push(`<tr><td><div class="form-check form-check-sm form-check-custom form-check-solid"><input class="form-check-input widget-9-check" type="checkbox"${ssrRenderAttr("value", index)}${ssrIncludeBooleanAttr(Array.isArray(_ctx.checkedRows) ? ssrLooseContain(_ctx.checkedRows, index) : _ctx.checkedRows) ? " checked" : ""}></div></td><td><div class="d-flex align-items-center"><div class="symbol symbol-45px me-5"><img${ssrRenderAttr("src", item.image)} alt=""></div><div class="d-flex justify-content-start flex-column"><a href="#" class="text-gray-900 fw-bold text-hover-primary fs-6">${ssrInterpolate(item.name)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">${ssrInterpolate(item.skills)}</span></div></div></td><td><a href="#" class="text-gray-900 fw-bold text-hover-primary d-block fs-6">${ssrInterpolate(item.companyName)}</a><span class="text-muted fw-semibold text-muted d-block fs-7">${ssrInterpolate(item.companySkills)}</span></td><td class="text-end"><div class="d-flex flex-column w-100 me-2"><div class="d-flex flex-stack mb-2"><span class="text-muted me-2 fs-7 fw-semibold">${ssrInterpolate(item.value)}% </span></div><div class="progress h-6px w-100"><div class="${ssrRenderClass([`bg-${item.color}`, "progress-bar"])}" role="progressbar" style="${ssrRenderStyle({ width: item.value + "%" })}"${ssrRenderAttr("aria-valuenow", item.value)} aria-valuemin="0" aria-valuemax="100"></div></div></div></td><td class="text-end"><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "switch",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "pencil",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a><a href="#" class="btn btn-icon btn-bg-light btn-active-color-primary btn-sm">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "trash",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</a></td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></div></div>`);
    }
    const _sfc_setup$1b = _sfc_main$1b.setup;
    _sfc_main$1b.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/widgets/tables/Widget9.vue");
      return _sfc_setup$1b ? _sfc_setup$1b(props, ctx) : void 0;
    };
    const TablesWidget9 = /* @__PURE__ */ _export_sfc(_sfc_main$1b, [["ssrRender", _sfc_ssrRender$17]]);
    const __vite_glob_0_136 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TablesWidget9
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1a = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "CreateAccountVerticalWizardStepper",
      __ssrInlineRender: true,
      props: {
        closeHadler: { type: Function }
      },
      setup(__props) {
        const props = __props;
        const createAccountStepperRef = vueExports$1.ref(null);
        return (_ctx, _push, _parent, _attrs) => {
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "stepper stepper-pills stepper-column d-flex flex-column flex-xl-row flex-row-fluid",
            id: "kt_create_account_stepper",
            ref_key: "createAccountStepperRef",
            ref: createAccountStepperRef
          }, _attrs))}><div class="card d-flex justify-content-center justify-content-xl-start flex-row-auto w-100 w-xl-300px w-xxl-400px me-9"><div class="card-body px-6 px-lg-10 px-xxl-15 py-20"><div class="stepper-nav"><div class="stepper-item current" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">1</span></div><div class="stepper-label"><h3 class="stepper-title">Account Type</h3><div class="stepper-desc fw-semibold"> Setup Your Account Details </div></div></div><div class="stepper-line h-40px"></div></div><div class="stepper-item" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">2</span></div><div class="stepper-label"><h3 class="stepper-title">Account Settings</h3><div class="stepper-desc fw-semibold"> Setup Your Account Settings </div></div></div><div class="stepper-line h-40px"></div></div><div class="stepper-item" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">3</span></div><div class="stepper-label"><h3 class="stepper-title">Business Info</h3><div class="stepper-desc fw-semibold"> Your Business Related Info </div></div></div><div class="stepper-line h-40px"></div></div><div class="stepper-item" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">4</span></div><div class="stepper-label"><h3 class="stepper-title">Billing Details</h3><div class="stepper-desc fw-semibold"> Set Your Payment Methods </div></div></div><div class="stepper-line h-40px"></div></div><div class="stepper-item" data-kt-stepper-element="nav"><div class="stepper-wrapper"><div class="stepper-icon w-40px h-40px"><i class="stepper-check fas fa-check"></i><span class="stepper-number">5</span></div><div class="stepper-label"><h3 class="stepper-title">Completed</h3><div class="stepper-desc fw-semibold">Woah, we are here</div></div></div></div></div></div></div><div class="card d-flex flex-row-fluid flex-center">`);
          _push(ssrRenderComponent(_sfc_main$2p, {
            "stepper-el": createAccountStepperRef.value,
            "close-hadler": props.closeHadler
          }, null, _parent));
          _push(`</div></div>`);
        };
      }
    });
    const _sfc_setup$1a = _sfc_main$1a.setup;
    _sfc_main$1a.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/components/wizards/create-account-wizard/CreateAccountVerticalWizardStepper.vue");
      return _sfc_setup$1a ? _sfc_setup$1a(props, ctx) : void 0;
    };
    const __vite_glob_0_138 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$1a
    }, Symbol.toStringTag, { value: "Module" }));
    const _LayoutService = class _LayoutService {
      /**
       * @description initialize default layout
       */
      static init() {
        this.bodyStore = useBodyStore();
        this.configStore = useConfigStore();
        _LayoutService.emptyElementClassesAndAttributes(document.body);
        _LayoutService.initLayoutSettings();
        _LayoutService.initToolbarSettings();
        _LayoutService.initWidthSettings();
        _LayoutService.initDefaultLayout();
        _LayoutService.initToolbar();
        _LayoutService.initSidebar();
        _LayoutService.initSidebarPanel();
        _LayoutService.initHeader();
        _LayoutService.initFooter();
      }
      // Init Layout settings
      static initLayoutSettings() {
        const pageWidth = objectPath.get(config.value, "general.pageWidth");
        const layout2 = objectPath.get(config.value, "general.layout");
        this.bodyStore.addBodyAttribute({
          qualifiedName: "id",
          value: "kt_app_body"
        });
        this.bodyStore.addBodyClassname("app-" + layout2);
        this.bodyStore.addBodyAttribute({
          qualifiedName: "data-kt-app-layout",
          value: layout2
        });
        if (layout2 === "light-sidebar") {
          this.configStore.setLayoutConfigProperty(
            "header.default.fixed.desktop",
            false
          );
          this.configStore.setLayoutConfigProperty(
            "header.default.fixed.mobile",
            false
          );
        }
        if (layout2 === "light-sidebar" || layout2 === "dark-sidebar") {
          if (pageWidth === "default") {
            this.configStore.setLayoutConfigProperty(
              "header.default.container",
              "fluid"
            );
            this.configStore.setLayoutConfigProperty("toolbar.container", "fluid");
            this.configStore.setLayoutConfigProperty("content.container", "fluid");
            this.configStore.setLayoutConfigProperty("footer.container", "fluid");
          }
        }
        if (layout2 === "light-sidebar" || layout2 === "dark-sidebar") {
          this.configStore.setLayoutConfigProperty("sidebar.display", true);
        }
        if (layout2 === "light-header" || layout2 === "dark-header") {
          this.configStore.setLayoutConfigProperty("sidebar.display", false);
          if (pageWidth === "default") {
            this.configStore.setLayoutConfigProperty(
              "header.default.container",
              "fixed"
            );
            this.configStore.setLayoutConfigProperty("toolbar.container", "fixed");
            this.configStore.setLayoutConfigProperty("content.container", "fixed");
            this.configStore.setLayoutConfigProperty("footer.container", "fixed");
          }
        }
      }
      // Init toolbar settings
      static initToolbarSettings() {
        const defaultContent = objectPath.get(
          config.value,
          "header.default.content"
        );
        if (defaultContent === "pageTitle") {
          this.configStore.setLayoutConfigProperty("footer.container", "fixed");
        }
      }
      // Init page width settings
      static initWidthSettings() {
        const pageWidth = objectPath.get(config.value, "general.pageWidth");
        if (pageWidth !== "default") {
          const container = pageWidth === "fluid" ? "fluid" : "fixed";
          this.configStore.setLayoutConfigProperty(
            "header.default.container",
            container
          );
          this.configStore.setLayoutConfigProperty("toolbar.container", container);
          this.configStore.setLayoutConfigProperty("content.container", container);
          this.configStore.setLayoutConfigProperty("footer.container", container);
        }
      }
      static initDefaultLayout() {
        if (objectPath.get(config.value, "page.class")) {
          this.bodyStore.addClassname({
            position: "page",
            className: objectPath.get(config.value, "page.class")
          });
        }
        if (objectPath.get(config.value, "page.container") === "fixed") {
          this.bodyStore.addClassname({
            position: "page-container",
            className: "container-xxl"
          });
        } else if (objectPath.get(config.value, "page.container") === "fluid") {
          this.bodyStore.addClassname({
            position: "page-container",
            className: "container-fluid"
          });
        }
        if (objectPath.get(config.value, "page.containerClass")) {
          this.bodyStore.addClassname({
            position: "page-container",
            className: objectPath.get(config.value, "page.containerClass")
          });
        }
        if (objectPath.get(config.value, "wrapper.class")) {
          this.bodyStore.addClassname({
            position: "wrapper",
            className: objectPath.get(config.value, "wrapper.class")
          });
        }
        if (objectPath.get(config.value, "wrapper.container") === "fixed") {
          this.bodyStore.addClassname({
            position: "wrapper-container",
            className: "container-xxl"
          });
        } else if (objectPath.get(config.value, "wrapper.container") === "fluid") {
          this.bodyStore.addClassname({
            position: "wrapper-container",
            className: "container-fluid"
          });
        }
        if (objectPath.get(config.value, "wrapper.containerClass")) {
          this.bodyStore.addClassname({
            position: "wrapper-container",
            className: "container-fluid"
          });
        }
      }
      static initToolbar() {
        this.bodyStore.addBodyAttribute({
          qualifiedName: "data-kt-app-toolbar-enabled",
          value: "true"
        });
        if (objectPath.get(config.value, "toolbar.class")) {
          this.bodyStore.addClassname({
            position: "toolbar",
            className: objectPath.get(config.value, "toolbar.class")
          });
        }
        if (objectPath.get(config.value, "toolbar.container") === "fixed") {
          this.bodyStore.addClassname({
            position: "toolbar-container",
            className: "container-xxl"
          });
        } else if (objectPath.get(config.value, "toolbar.container") === "fluid") {
          this.bodyStore.addClassname({
            position: "toolbar-container",
            className: "container-fluid"
          });
        }
        if (objectPath.get(config.value, "toolbar.containerClass")) {
          this.bodyStore.addClassname({
            position: "toolbar-container",
            className: objectPath.get(config.value, "toolbar.containerClass")
          });
        }
        if (objectPath.get(config.value, "toolbar.fixed.desktop")) {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-toolbar-fixed",
            value: "true"
          });
        }
        if (objectPath.get(config.value, "toolbar.fixed.mobile")) {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-toolbar-fixed-mobile",
            value: "true"
          });
        }
      }
      static initSidebar() {
        if (!objectPath.get(config.value, "sidebar.display")) {
          return;
        }
        this.bodyStore.addBodyAttribute({
          qualifiedName: "data-kt-app-sidebar-enabled",
          value: "true"
        });
        this.bodyStore.addBodyAttribute({
          qualifiedName: "data-kt-app-sidebar-fixed",
          value: "true"
        });
        if (objectPath.get(config.value, "sidebar.default.minimize.desktop.hoverable")) {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-sidebar-hoverable",
            value: "true"
          });
        }
        this.bodyStore.addBodyAttribute({
          qualifiedName: "data-kt-app-sidebar-push-header",
          value: "true"
        });
        this.bodyStore.addBodyAttribute({
          qualifiedName: "data-kt-app-sidebar-push-toolbar",
          value: "true"
        });
        this.bodyStore.addBodyAttribute({
          qualifiedName: "data-kt-app-sidebar-push-footer",
          value: "true"
        });
        if (objectPath.get(config.value, "sidebar.primary.minimize.desktop.enabled")) {
          if (objectPath.get(config.value, "sidebar.primary.minimize.desktop.default")) {
            this.bodyStore.addBodyAttribute({
              qualifiedName: "data-kt-app-sidebar-primary-minimize",
              value: "on"
            });
          }
          if (objectPath.get(
            config.value,
            "sidebar.primary.minimize.desktop.hoverable"
          )) {
            this.bodyStore.addBodyAttribute({
              qualifiedName: "data-kt-app-sidebar-primary-hoverable",
              value: "on"
            });
          }
          if (objectPath.get(config.value, "sidebar.primary.minimize.mobile.enabled")) {
            if (objectPath.get(
              config.value,
              "sidebar.primary.minimize.desktop.default"
            )) {
              this.bodyStore.addBodyAttribute({
                qualifiedName: "data-kt-app-sidebar-primary-minimize-mobile",
                value: "on"
              });
            }
            if (objectPath.get(
              config.value,
              "sidebar.primary.minimize.mobile.hoverable"
            )) {
              this.bodyStore.addBodyAttribute({
                qualifiedName: "data-kt-app-sidebar-primary-hoverable-mobile",
                value: "on"
              });
            }
          }
          if (objectPath.get(config.value, "sidebar.primary.collapse.desktop.enabled")) {
            if (objectPath.get(
              config.value,
              "sidebar.primary.collapse.desktop.default"
            )) {
              this.bodyStore.addBodyAttribute({
                qualifiedName: "data-kt-app-sidebar-primary-collapse",
                value: "on"
              });
            }
          }
          if (objectPath.get(config.value, "sidebar.primary.collapse.mobile.enabled")) {
            if (objectPath.get(
              config.value,
              "sidebar.primary.collapse.mobile.default"
            )) {
              this.bodyStore.addBodyAttribute({
                qualifiedName: "data-kt-app-sidebar-primary-collapse-mobile",
                value: "on"
              });
            }
          }
        }
      }
      static initSidebarPanel() {
        if (objectPath.get(config.value, "sidebarPanel.class")) {
          this.bodyStore.addClassname({
            position: "sidebar-panel",
            className: objectPath.get(config.value, "sidebarPanel.class")
          });
        }
        if (objectPath.get(config.value, "sidebarPanel.fixed.desktop")) {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-sidebar-panel-fixed",
            value: "true"
          });
        } else {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-sidebar-panel-fixed",
            value: "false"
          });
        }
        if (objectPath.get(config.value, "sidebarPanel.minimize.desktop.enabled")) {
          if (objectPath.get(config.value, "sidebarPanel.minimize.desktop.default")) {
            this.bodyStore.addBodyAttribute({
              qualifiedName: "data-kt-app-sidebar-panel-minimize",
              value: "on"
            });
          }
          if (objectPath.get(config.value, "sidebarPanel.minimize.desktop.hoverable")) {
            this.bodyStore.addBodyAttribute({
              qualifiedName: "data-kt-app-sidebar-panel-hoverable",
              value: "on"
            });
          }
          if (objectPath.get(config.value, "sidebarPanel.minimize.mobile.enabled")) {
            if (objectPath.get(
              config.value,
              "sidebarPanel.minimize.desktop.hoverable"
            )) {
              this.bodyStore.addBodyAttribute({
                qualifiedName: "data-kt-app-sidebar-panel-hoverable",
                value: "on"
              });
            }
          }
        }
      }
      static initHeader() {
        if (!objectPath.get(config.value, "header.display")) {
          return;
        }
        if (objectPath.get(config.value, "header.default.fixed.desktop")) {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-header-fixed",
            value: "true"
          });
        }
        if (objectPath.get(config.value, "header.default.fixed.mobile")) {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-header-fixed-mobile",
            value: "true"
          });
        }
        if (objectPath.get(config.value, "header.default.fixed.mobile")) {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-header-fixed-mobile",
            value: "true"
          });
        }
      }
      static initFooter() {
        if (objectPath.get(config.value, "footer.fixed.desktop")) {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-footer-fixed",
            value: "true"
          });
        }
        if (objectPath.get(config.value, "footer.fixed.mobile")) {
          this.bodyStore.addBodyAttribute({
            qualifiedName: "data-kt-app-footer-fixed-mobile",
            value: "true"
          });
        }
      }
      static emptyElementClassesAndAttributes(element) {
        element.className = "";
        for (let i = element.attributes.length; i-- > 0; )
          element.removeAttributeNode(element.attributes[i]);
      }
    };
    __publicField(_LayoutService, "bodyStore");
    __publicField(_LayoutService, "configStore");
    let LayoutService = _LayoutService;
    const _sfc_main$19 = vueExports$1.defineComponent({
      name: "auth-layout",
      components: {},
      setup() {
        const store = useBodyStore();
        vueExports$1.onMounted(() => {
          LayoutService.emptyElementClassesAndAttributes(document.body);
          store.addBodyClassname("app-blank");
          store.addBodyClassname("bg-body");
        });
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$16(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_view = vueExports$1.resolveComponent("router-view");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "d-flex flex-column flex-lg-row flex-column-fluid" }, _attrs))}><div class="d-flex flex-column flex-lg-row-fluid w-lg-50 p-10 order-2 order-lg-1"><div class="d-flex flex-center flex-column flex-lg-row-fluid"><div class="w-lg-500px p-10">`);
      _push(ssrRenderComponent(_component_router_view, null, null, _parent));
      _push(`</div></div><div class="d-flex flex-center flex-wrap px-5"><div class="d-flex fw-semibold text-primary fs-base"><a href="#" class="px-5" target="_blank">Terms</a><a href="#" class="px-5" target="_blank">Plans</a><a href="#" class="px-5" target="_blank">Contact Us</a></div></div></div><div class="d-flex flex-lg-row-fluid w-lg-50 bgi-size-cover bgi-position-center order-1 order-lg-2" style="${ssrRenderStyle(`background-image: url('${_ctx.getAssetPath(
        "/media/misc/auth-bg.png"
      )}')`)}"><div class="d-flex flex-column flex-center py-7 py-lg-15 px-5 px-md-15 w-100">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/",
        class: "mb-0 mb-lg-12"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/logos/custom-1.png"))} class="h-60px h-lg-75px"${_scopeId}>`);
          } else {
            return [
              vueExports$1.createVNode("img", {
                alt: "Logo",
                src: _ctx.getAssetPath("media/logos/custom-1.png"),
                class: "h-60px h-lg-75px"
              }, null, 8, ["src"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<img class="d-none d-lg-block mx-auto w-275px w-md-50 w-xl-500px mb-10 mb-lg-20"${ssrRenderAttr("src", _ctx.getAssetPath("media/misc/auth-screens.png"))} alt=""><h1 class="d-none d-lg-block text-white fs-2qx fw-bolder text-center mb-7"> Fast, Efficient and Productive </h1><div class="d-none d-lg-block text-white fs-base text-center"> In this kind of post, <a href="#" class="opacity-75-hover text-warning fw-bold me-1">the blogger</a> introduces a person they’ve interviewed <br> and provides some background information about <a href="#" class="opacity-75-hover text-warning fw-bold me-1">the interviewee</a> and their <br> work following this is a transcript of the interview. </div></div></div></div>`);
    }
    const _sfc_setup$19 = _sfc_main$19.setup;
    _sfc_main$19.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/AuthLayout.vue");
      return _sfc_setup$19 ? _sfc_setup$19(props, ctx) : void 0;
    };
    const AuthLayout = /* @__PURE__ */ _export_sfc(_sfc_main$19, [["ssrRender", _sfc_ssrRender$16]]);
    const __vite_glob_0_153 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: AuthLayout
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$18 = vueExports$1.defineComponent({
      name: "system-layout",
      components: {},
      setup() {
        const store = useBodyStore();
        vueExports$1.onMounted(() => {
          store.addBodyClassname("app-blank");
          store.addBodyClassname("bgi-size-cover");
          store.addBodyClassname("bgi-position-center");
          store.addBodyClassname("bgi-no-repeat");
        });
      }
    });
    function _sfc_ssrRender$15(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_view = vueExports$1.resolveComponent("router-view");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "d-flex flex-column flex-root",
        id: "kt_app_root"
      }, _attrs))}>`);
      _push(ssrRenderComponent(_component_router_view, null, null, _parent));
      _push(`</div>`);
    }
    const _sfc_setup$18 = _sfc_main$18.setup;
    _sfc_main$18.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/SystemLayout.vue");
      return _sfc_setup$18 ? _sfc_setup$18(props, ctx) : void 0;
    };
    const SystemLayout = /* @__PURE__ */ _export_sfc(_sfc_main$18, [["ssrRender", _sfc_ssrRender$15]]);
    const __vite_glob_0_154 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: SystemLayout
    }, Symbol.toStringTag, { value: "Module" }));
    const MainMenuConfig = [
      {
        pages: [
          {
            heading: "Dashboard",
            route: "/dashboard",
            keenthemesIcon: "element-11",
            bootstrapIcon: "bi-app-indicator"
          }
        ]
      }
    ];
    const _sfc_main$17 = vueExports$1.defineComponent({
      name: "KTMenu",
      components: {},
      setup() {
        const { t, te } = useI18n();
        const route2 = useRoute();
        const hasActiveChildren = (match) => {
          return route2.path.indexOf(match) !== -1;
        };
        const translate = (text2) => {
          if (te(text2)) {
            return t(text2);
          } else {
            return text2;
          }
        };
        return {
          hasActiveChildren,
          headerMenuIcons,
          MainMenuConfig,
          translate,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$14(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<!--[--><!--[-->`);
      ssrRenderList(_ctx.MainMenuConfig, (item, i) => {
        _push(`<!--[-->`);
        if (!item.heading) {
          _push(`<!--[-->`);
          ssrRenderList(item.pages, (menuItem, j) => {
            _push(`<!--[-->`);
            if (menuItem.heading) {
              _push(`<div class="menu-item me-lg-1">`);
              if (menuItem.route) {
                _push(ssrRenderComponent(_component_router_link, {
                  class: "menu-link",
                  to: menuItem.route,
                  "active-class": "active"
                }, {
                  default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
                    if (_push2) {
                      _push2(`<span class="menu-title"${_scopeId}>${ssrInterpolate(_ctx.translate(menuItem.heading))}</span>`);
                    } else {
                      return [
                        vueExports$1.createVNode("span", { class: "menu-title" }, vueExports$1.toDisplayString(_ctx.translate(menuItem.heading)), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent));
              } else {
                _push(`<!---->`);
              }
              _push(`</div>`);
            } else {
              _push(`<!---->`);
            }
            _push(`<!--]-->`);
          });
          _push(`<!--]-->`);
        } else {
          _push(`<!---->`);
        }
        if (item.heading) {
          _push(`<div data-kt-menu-trigger="click" data-kt-menu-placement="bottom-start" class="menu-item menu-lg-down-accordion me-lg-1">`);
          if (item.route) {
            _push(`<span class="${ssrRenderClass([{ active: _ctx.hasActiveChildren(item.route) }, "menu-link py-3"])}"><span class="menu-title">${ssrInterpolate(_ctx.translate(item.heading))}</span><span class="menu-arrow d-lg-none"></span></span>`);
          } else {
            _push(`<!---->`);
          }
          _push(`<div class="menu-sub menu-sub-lg-down-accordion menu-sub-lg-dropdown menu-rounded-0 py-lg-4 w-lg-225px"><!--[-->`);
          ssrRenderList(item.pages, (menuItem, j) => {
            _push(`<!--[-->`);
            if (menuItem.sectionTitle) {
              _push(`<div data-kt-menu-trigger="{default:&#39;click&#39;, lg: &#39;hover&#39;}" data-kt-menu-placement="right-start" class="menu-item menu-lg-down-accordion">`);
              if (menuItem.route) {
                _push(`<span class="${ssrRenderClass([{ active: _ctx.hasActiveChildren(menuItem.route) }, "menu-link py-3"])}"><span class="menu-icon">`);
                if (_ctx.headerMenuIcons === "bootstrap") {
                  _push(`<i class="${ssrRenderClass([menuItem.bootstrapIcon, "bi fs-3"])}"></i>`);
                } else {
                  _push(`<!---->`);
                }
                if (_ctx.headerMenuIcons === "keenthemes") {
                  _push(ssrRenderComponent(_component_KTIcon, {
                    "icon-name": menuItem.keenthemesIcon,
                    "icon-class": "fs-2"
                  }, null, _parent));
                } else {
                  _push(`<!---->`);
                }
                _push(`</span><span class="menu-title">${ssrInterpolate(_ctx.translate(menuItem.sectionTitle))}</span><span class="menu-arrow"></span></span>`);
              } else {
                _push(`<!---->`);
              }
              _push(`<div class="menu-sub menu-sub-lg-down-accordion menu-sub-lg-dropdown menu-active-bg py-lg-4 w-lg-225px"><!--[-->`);
              ssrRenderList(menuItem.sub, (menuItem1, k) => {
                _push(`<!--[-->`);
                if (menuItem1.sectionTitle) {
                  _push(`<div data-kt-menu-trigger="{default:&#39;click&#39;, lg: &#39;hover&#39;}" data-kt-menu-placement="right-start" class="menu-item menu-lg-down-accordion">`);
                  if (menuItem1.route) {
                    _push(`<span class="${ssrRenderClass([{ active: _ctx.hasActiveChildren(menuItem1.route) }, "menu-link py-3"])}"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate(menuItem1.sectionTitle))}</span><span class="menu-arrow"></span></span>`);
                  } else {
                    _push(`<!---->`);
                  }
                  _push(`<div class="menu-sub menu-sub-lg-down-accordion menu-sub-lg-dropdown menu-active-bg py-lg-4 w-lg-225px"><!--[-->`);
                  ssrRenderList(menuItem1.sub, (menuItem2, l) => {
                    _push(`<div class="menu-item">`);
                    if (menuItem2.route && menuItem2.heading) {
                      _push(ssrRenderComponent(_component_router_link, {
                        class: "menu-link py-3",
                        "active-class": "active",
                        to: menuItem2.route
                      }, {
                        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
                          if (_push2) {
                            _push2(`<span class="menu-bullet"${_scopeId}><span class="bullet bullet-dot"${_scopeId}></span></span><span class="menu-title"${_scopeId}>${ssrInterpolate(_ctx.translate(menuItem2.heading))}</span>`);
                          } else {
                            return [
                              vueExports$1.createVNode("span", { class: "menu-bullet" }, [
                                vueExports$1.createVNode("span", { class: "bullet bullet-dot" })
                              ]),
                              vueExports$1.createVNode("span", { class: "menu-title" }, vueExports$1.toDisplayString(_ctx.translate(menuItem2.heading)), 1)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent));
                    } else {
                      _push(`<!---->`);
                    }
                    _push(`</div>`);
                  });
                  _push(`<!--]--></div></div>`);
                } else {
                  _push(`<!---->`);
                }
                if (menuItem1.heading) {
                  _push(`<div class="menu-item">`);
                  if (menuItem1.route) {
                    _push(ssrRenderComponent(_component_router_link, {
                      class: "menu-link",
                      "active-class": "active",
                      to: menuItem1.route
                    }, {
                      default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
                        if (_push2) {
                          _push2(`<span class="menu-bullet"${_scopeId}><span class="bullet bullet-dot"${_scopeId}></span></span><span class="menu-title"${_scopeId}>${ssrInterpolate(_ctx.translate(menuItem1.heading))}</span>`);
                        } else {
                          return [
                            vueExports$1.createVNode("span", { class: "menu-bullet" }, [
                              vueExports$1.createVNode("span", { class: "bullet bullet-dot" })
                            ]),
                            vueExports$1.createVNode("span", { class: "menu-title" }, vueExports$1.toDisplayString(_ctx.translate(menuItem1.heading)), 1)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent));
                  } else {
                    _push(`<!---->`);
                  }
                  _push(`</div>`);
                } else {
                  _push(`<!---->`);
                }
                _push(`<!--]-->`);
              });
              _push(`<!--]--></div></div>`);
            } else {
              _push(`<!---->`);
            }
            if (menuItem.heading) {
              _push(`<div class="menu-item">`);
              if (menuItem.route && menuItem.route) {
                _push(ssrRenderComponent(_component_router_link, {
                  class: "menu-link",
                  "active-class": "active",
                  to: menuItem.route
                }, {
                  default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
                    if (_push2) {
                      _push2(`<span class="menu-icon"${_scopeId}>`);
                      _push2(ssrRenderComponent(_component_KTIcon, {
                        "icon-name": "element-8",
                        "icon-class": "fs-2"
                      }, null, _parent2, _scopeId));
                      _push2(`</span><span class="menu-title"${_scopeId}>${ssrInterpolate(_ctx.translate(menuItem.heading))}</span>`);
                    } else {
                      return [
                        vueExports$1.createVNode("span", { class: "menu-icon" }, [
                          vueExports$1.createVNode(_component_KTIcon, {
                            "icon-name": "element-8",
                            "icon-class": "fs-2"
                          })
                        ]),
                        vueExports$1.createVNode("span", { class: "menu-title" }, vueExports$1.toDisplayString(_ctx.translate(menuItem.heading)), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent));
              } else {
                _push(`<!---->`);
              }
              _push(`</div>`);
            } else {
              _push(`<!---->`);
            }
            _push(`<!--]-->`);
          });
          _push(`<!--]--></div></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--><div data-kt-menu-trigger="click" data-kt-menu-placement="bottom-start" class="menu-item menu-lg-down-accordion me-lg-1"><span class="menu-link py-3"><span class="menu-title">${ssrInterpolate(_ctx.translate("megaMenu"))}</span><span class="menu-arrow d-lg-none"></span></span><div class="menu-sub menu-sub-lg-down-accordion menu-sub-lg-dropdown w-100 w-lg-600px p-5 p-lg-5" style="${ssrRenderStyle({})}"><div class="row" data-kt-menu-dismiss="true"><div class="col-lg-4 border-left-lg-1"><div class="menu-inline menu-column menu-active-bg"><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div></div></div><div class="col-lg-4 border-left-lg-1"><div class="menu-inline menu-column menu-active-bg"><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div></div></div><div class="col-lg-4 border-left-lg-1"><div class="menu-inline menu-column menu-active-bg"><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div><div class="menu-item"><a href="#" class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate("exampleLink"))}</span></a></div></div></div></div></div></div><!--]-->`);
    }
    const _sfc_setup$17 = _sfc_main$17.setup;
    _sfc_main$17.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/header/menu/MenuPages.vue");
      return _sfc_setup$17 ? _sfc_setup$17(props, ctx) : void 0;
    };
    const KTMenuPages = /* @__PURE__ */ _export_sfc(_sfc_main$17, [["ssrRender", _sfc_ssrRender$14]]);
    const __vite_glob_0_168 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTMenuPages
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$16 = vueExports$1.defineComponent({
      name: "header-menu",
      components: {
        KTMenuPages
      },
      setup() {
        return {
          version,
          headerMenuDisplay,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$13(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTMenuPages = vueExports$1.resolveComponent("KTMenuPages");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      if (_ctx.headerMenuDisplay) {
        _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
          class: "app-header-menu app-header-mobile-drawer align-items-stretch",
          "data-kt-drawer": "true",
          "data-kt-drawer-name": "app-header-menu",
          "data-kt-drawer-activate": "{default: true, lg: false}",
          "data-kt-drawer-overlay": "true",
          "data-kt-drawer-width": "225px",
          "data-kt-drawer-direction": "end",
          "data-kt-drawer-toggle": "#kt_app_header_menu_toggle",
          "data-kt-swapper": "true",
          "data-kt-swapper-mode": "{default: 'append', lg: 'prepend'}",
          "data-kt-swapper-parent": "{default: '#kt_app_body', lg: '#kt_app_header_wrapper'}"
        }, _attrs))}><div class="menu menu-rounded menu-column menu-lg-row my-5 my-lg-0 align-items-stretch fw-semibold px-2 px-lg-0" id="kt_app_header_menu" data-kt-menu="true">`);
        _push(ssrRenderComponent(_component_KTMenuPages, null, null, _parent));
        _push(`<div data-kt-menu-trigger="{default: &#39;click&#39;, lg: &#39;hover&#39;}" data-kt-menu-placement="bottom-start" class="menu-item menu-lg-down-accordion menu-sub-lg-down-indention me-0 me-lg-2"><span class="menu-link"><span class="menu-title">Help</span><span class="menu-arrow d-lg-none"></span></span><div class="menu-sub menu-sub-lg-down-accordion menu-sub-lg-dropdown px-lg-2 py-lg-4 w-lg-200px"><div class="menu-item"><a class="menu-link" href="https://preview.keenthemes.com/metronic8/vue/docs/base/utilities" title="Check out over 200 in-house components, plugins and ready for use solutions" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-dismiss="click" data-bs-placement="right"><span class="menu-icon">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "rocket",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</span><span class="menu-title">Components</span></a></div><div class="menu-item"><a class="menu-link" href="https://preview.keenthemes.com/metronic8/vue/docs/index" title="Check out the complete documentation" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-dismiss="click" data-bs-placement="right"><span class="menu-icon">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "abstract-26",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</span><span class="menu-title">Documentation</span></a></div><div class="menu-item"><a class="menu-link" href="https://preview.keenthemes.com/metronic8/vue/docs/getting-started/changelog"><span class="menu-icon">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "code",
          "icon-class": "fs-3"
        }, null, _parent));
        _push(`</span><span class="menu-title">Changelog v${ssrInterpolate(_ctx.version)}</span></a></div></div></div></div></div>`);
      } else {
        _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "align-items-stretch" }, _attrs))}></div>`);
      }
    }
    const _sfc_setup$16 = _sfc_main$16.setup;
    _sfc_main$16.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/header/menu/Menu.vue");
      return _sfc_setup$16 ? _sfc_setup$16(props, ctx) : void 0;
    };
    const KTHeaderMenu = /* @__PURE__ */ _export_sfc(_sfc_main$16, [["ssrRender", _sfc_ssrRender$13]]);
    const __vite_glob_0_167 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTHeaderMenu
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$15 = vueExports$1.defineComponent({
      name: "kt-results",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$12(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(_attrs)}><div class="scroll-y mh-200px mh-lg-325px"><h3 class="fs-5 text-muted m-0 pb-5">Users</h3><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-6.jpg"))} alt=""></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">Karina Clark</span><span class="fs-7 fw-semibold text-muted">Marketing Manager</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-2.jpg"))} alt=""></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">Olivia Bold</span><span class="fs-7 fw-semibold text-muted">Software Engineer</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-9.jpg"))} alt=""></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">Ana Clark</span><span class="fs-7 fw-semibold text-muted">UI/UX Designer</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-14.jpg"))} alt=""></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">Nick Pitola</span><span class="fs-7 fw-semibold text-muted">Art Director</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-11.jpg"))} alt=""></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">Edward Kulnic</span><span class="fs-7 fw-semibold text-muted">System Administrator</span></div></a><h3 class="fs-5 text-muted m-0 pt-5 pb-5">Customers</h3><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light"><img class="w-20px h-20px"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/volicity-9.svg"))} alt=""></span></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">Company Rbranding</span><span class="fs-7 fw-semibold text-muted">UI Design</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light"><img class="w-20px h-20px"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/tvit.svg"))} alt=""></span></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">Company Re-branding</span><span class="fs-7 fw-semibold text-muted">Web Development</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light"><img class="w-20px h-20px"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/misc/infography.svg"))} alt=""></span></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">Business Analytics App</span><span class="fs-7 fw-semibold text-muted">Administration</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light"><img class="w-20px h-20px"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/leaf.svg"))} alt=""></span></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">EcoLeaf App Launch</span><span class="fs-7 fw-semibold text-muted">Marketing</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light"><img class="w-20px h-20px"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/tower.svg"))} alt=""></span></div><div class="d-flex flex-column justify-content-start fw-semibold"><span class="fs-6 fw-semibold">Tower Group Website</span><span class="fs-7 fw-semibold text-muted">Google Adwords</span></div></a><h3 class="fs-5 text-muted m-0 pt-5 pb-5">Projects</h3><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "document",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><span class="fs-6 fw-semibold">Si-Fi Project by AU Themes</span><span class="fs-7 fw-semibold text-muted">#45670</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "chart-simple",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><span class="fs-6 fw-semibold">Shopix Mobile App Planning</span><span class="fs-7 fw-semibold text-muted">#45690</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "message-text-2",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><span class="fs-6 fw-semibold">Finance Monitoring SAAS Discussion</span><span class="fs-7 fw-semibold text-muted">#21090</span></div></a><a href="#" class="d-flex text-gray-900 text-hover-primary align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "profile-circle",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><span class="fs-6 fw-semibold">Dashboard Analitics Launch</span><span class="fs-7 fw-semibold text-muted">#34560</span></div></a></div></div>`);
    }
    const _sfc_setup$15 = _sfc_main$15.setup;
    _sfc_main$15.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/search/partials/Results.vue");
      return _sfc_setup$15 ? _sfc_setup$15(props, ctx) : void 0;
    };
    const Results = /* @__PURE__ */ _export_sfc(_sfc_main$15, [["ssrRender", _sfc_ssrRender$12]]);
    const __vite_glob_0_176 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Results
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$14 = vueExports$1.defineComponent({
      name: "kt-main",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$11(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "mb-4" }, _attrs))}><div class="d-flex flex-stack fw-semibold mb-4"><span class="text-muted fs-6 me-2">Recently Searched:</span></div><div class="scroll-y mh-200px mh-lg-325px"><div class="d-flex align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "phone",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-semibold">BoomApp by Keenthemes</a><span class="fs-7 text-muted fw-semibold">#45789</span></div></div><div class="d-flex align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "chart-simple",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-semibold">&quot;Kept API Project Meeting</a><span class="fs-7 text-muted fw-semibold">#84050</span></div></div><div class="d-flex align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "chart",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-semibold">&quot;KPI Monitoring App Launch</a><span class="fs-7 text-muted fw-semibold">#84250</span></div></div><div class="d-flex align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "chart-pie-4",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-semibold">Project Reference FAQ</a><span class="fs-7 text-muted fw-semibold">#67945</span></div></div><div class="d-flex align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "sms",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-semibold">&quot;FitPro App Development</a><span class="fs-7 text-muted fw-semibold">#84250</span></div></div><div class="d-flex align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "bank",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-semibold">Shopix Mobile App</a><span class="fs-7 text-muted fw-semibold">#45690</span></div></div><div class="d-flex align-items-center mb-5"><div class="symbol symbol-40px symbol-circle me-4"><span class="symbol-label bg-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "chart",
        "icon-class": "fs-2 text-primary"
      }, null, _parent));
      _push(`</span></div><div class="d-flex flex-column"><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-semibold">&quot;Landing UI Design&quot; Launch</a><span class="fs-7 text-muted fw-semibold">#24005</span></div></div></div></div>`);
    }
    const _sfc_setup$14 = _sfc_main$14.setup;
    _sfc_main$14.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/search/partials/Main.vue");
      return _sfc_setup$14 ? _sfc_setup$14(props, ctx) : void 0;
    };
    const PartialMain = /* @__PURE__ */ _export_sfc(_sfc_main$14, [["ssrRender", _sfc_ssrRender$11]]);
    const __vite_glob_0_175 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: PartialMain
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$13 = vueExports$1.defineComponent({
      name: "kt-empty",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$10(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "text-center" }, _attrs))}><div class="pt-10 pb-10">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "search-list",
        "icon-class": "fs-4x opacity-50"
      }, null, _parent));
      _push(`</div><div class="pb-15 fw-semibold"><h3 class="text-gray-600 fs-5 mb-2">No result found</h3><div class="text-muted fs-7">Please try again with a different query</div></div></div>`);
    }
    const _sfc_setup$13 = _sfc_main$13.setup;
    _sfc_main$13.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/search/partials/Empty.vue");
      return _sfc_setup$13 ? _sfc_setup$13(props, ctx) : void 0;
    };
    const Empty = /* @__PURE__ */ _export_sfc(_sfc_main$13, [["ssrRender", _sfc_ssrRender$10]]);
    const __vite_glob_0_174 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Empty
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$12 = vueExports$1.defineComponent({
      name: "kt-search",
      components: {
        Results,
        PartialMain,
        Empty,
        MenuComponent
      },
      setup() {
        const search = vueExports$1.ref("");
        const state = vueExports$1.ref("main");
        const loading2 = vueExports$1.ref(false);
        const inputRef = vueExports$1.ref(null);
        const searching = (e) => {
          const target = e.target;
          if (target.value.length <= 1) {
            load("main");
          } else {
            if (target.value.length > 5) {
              load("empty");
              return;
            }
            load("results");
          }
        };
        const load = (current) => {
          loading2.value = true;
          setTimeout(() => {
            state.value = current;
            loading2.value = false;
          }, 1e3);
        };
        const reset = () => {
          search.value = "";
          state.value = "main";
        };
        const setState = (curr) => {
          state.value = curr;
        };
        return {
          search,
          state,
          loading: loading2,
          searching,
          reset,
          inputRef,
          setState,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$$(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_MenuComponent = vueExports$1.resolveComponent("MenuComponent");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Results = vueExports$1.resolveComponent("Results");
      const _component_PartialMain = vueExports$1.resolveComponent("PartialMain");
      const _component_Empty = vueExports$1.resolveComponent("Empty");
      _push(ssrRenderComponent(_component_MenuComponent, vueExports$1.mergeProps({ "menu-selector": "#kt-search-menu" }, _attrs), {
        toggle: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div id="kt_header_search" class="header-search d-flex align-items-stretch" data-kt-menu-target="#kt-search-menu" data-kt-menu-trigger="click" data-kt-menu-attach="parent" data-kt-menu-placement="bottom-end" data-kt-menu-flip="bottom"${_scopeId}><div class="d-flex align-items-center" id="kt_header_search_toggle"${_scopeId}><div class="btn btn-icon btn-custom btn-icon-muted btn-active-light btn-active-color-primary w-35px h-35px"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "magnifier",
              "icon-class": "fs-2"
            }, null, _parent2, _scopeId));
            _push2(`</div></div></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", {
                id: "kt_header_search",
                class: "header-search d-flex align-items-stretch",
                "data-kt-menu-target": "#kt-search-menu",
                "data-kt-menu-trigger": "click",
                "data-kt-menu-attach": "parent",
                "data-kt-menu-placement": "bottom-end",
                "data-kt-menu-flip": "bottom"
              }, [
                vueExports$1.createVNode("div", {
                  class: "d-flex align-items-center",
                  id: "kt_header_search_toggle"
                }, [
                  vueExports$1.createVNode("div", { class: "btn btn-icon btn-custom btn-icon-muted btn-active-light btn-active-color-primary w-35px h-35px" }, [
                    vueExports$1.createVNode(_component_KTIcon, {
                      "icon-name": "magnifier",
                      "icon-class": "fs-2"
                    })
                  ])
                ])
              ])
            ];
          }
        }),
        content: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="menu menu-sub menu-sub-dropdown menu-column p-7 w-325px w-md-375px" data-kt-menu="true" id="kt-search-menu"${_scopeId}><div${_scopeId}><form class="w-100 position-relative mb-3" autocomplete="off"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "magnifier",
              "icon-class": "fs-2 fs-lg-1 text-gray-500 position-absolute top-50 translate-middle-y ms-0"
            }, null, _parent2, _scopeId));
            _push2(`<input${ssrRenderAttr("value", _ctx.search)} type="text" class="form-control form-control-flush ps-10" name="search" placeholder="Search..."${_scopeId}>`);
            if (_ctx.loading) {
              _push2(`<span class="position-absolute top-50 end-0 translate-middle-y lh-0 me-1"${_scopeId}><span class="spinner-border h-15px w-15px align-middle text-gray-500"${_scopeId}></span></span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<span style="${ssrRenderStyle(_ctx.search.length && !_ctx.loading ? null : { display: "none" })}" class="btn btn-flush btn-active-color-primary position-absolute top-50 end-0 translate-middle-y lh-0"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "cross",
              "icon-class": "fs-2 fs-lg-1 me-0"
            }, null, _parent2, _scopeId));
            _push2(`</span><div class="position-absolute top-50 end-0 translate-middle-y"${_scopeId}>`);
            if (!_ctx.search && !_ctx.loading) {
              _push2(`<div class="btn btn-icon w-20px btn-sm btn-active-color-primary me-1" data-bs-toggle="tooltip" title="Show search preferences"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_KTIcon, {
                "icon-name": "setting-2",
                "icon-class": "fs-1"
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            if (!_ctx.search && !_ctx.loading) {
              _push2(`<div class="btn btn-icon w-20px btn-sm btn-active-color-primary" data-bs-toggle="tooltip" title="Show more search options"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_KTIcon, {
                "icon-name": "down",
                "icon-class": "fs-2"
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></form><div class="separator border-gray-200 mb-6"${_scopeId}></div>`);
            if (_ctx.state === "results") {
              _push2(ssrRenderComponent(_component_Results, null, null, _parent2, _scopeId));
            } else if (_ctx.state === "main") {
              _push2(ssrRenderComponent(_component_PartialMain, null, null, _parent2, _scopeId));
            } else if (_ctx.state === "empty") {
              _push2(ssrRenderComponent(_component_Empty, null, null, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
            if (_ctx.state === "advanced-options") {
              _push2(`<form class="pt-1"${_scopeId}><h3 class="fw-semibold text-dark mb-7"${_scopeId}>Advanced Search</h3><div class="mb-5"${_scopeId}><input type="text" class="form-control form-control-sm form-control-solid" placeholder="Contains the word" name="query"${_scopeId}></div><div class="mb-5"${_scopeId}><div class="nav-group nav-group-fluid"${_scopeId}><label${_scopeId}><input type="radio" class="btn-check" name="type" value="has" checked${_scopeId}><span class="btn btn-sm btn-color-muted btn-active btn-active-primary"${_scopeId}> All </span></label><label${_scopeId}><input type="radio" class="btn-check" name="type" value="users"${_scopeId}><span class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4"${_scopeId}> Users </span></label><label${_scopeId}><input type="radio" class="btn-check" name="type" value="orders"${_scopeId}><span class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4"${_scopeId}> Orders </span></label><label${_scopeId}><input type="radio" class="btn-check" name="type" value="projects"${_scopeId}><span class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4"${_scopeId}> Projects </span></label></div></div><div class="mb-5"${_scopeId}><input type="text" name="assignedto" class="form-control form-control-sm form-control-solid" placeholder="Assigned to" value=""${_scopeId}></div><div class="mb-5"${_scopeId}><input type="text" name="collaborators" class="form-control form-control-sm form-control-solid" placeholder="Collaborators" value=""${_scopeId}></div><div class="mb-5"${_scopeId}><div class="nav-group nav-group-fluid"${_scopeId}><label${_scopeId}><input type="radio" class="btn-check" name="attachment" value="has" checked${_scopeId}><span class="btn btn-sm btn-color-muted btn-active btn-active-primary"${_scopeId}> Has attachment </span></label><label${_scopeId}><input type="radio" class="btn-check" name="attachment" value="any"${_scopeId}><span class="btn btn-sm btn-color-muted btn-active btn-active-primary px-4"${_scopeId}> Any </span></label></div></div><div class="mb-5"${_scopeId}><select name="timezone" aria-label="Select a Timezone" data-control="select2" data-placeholder="date_period" class="form-select form-select-sm form-select-solid"${_scopeId}><option value="next"${_scopeId}>Within the next</option><option value="last"${_scopeId}>Within the last</option><option value="between"${_scopeId}>Between</option><option value="on"${_scopeId}>On</option></select></div><div class="row mb-8"${_scopeId}><div class="col-6"${_scopeId}><input type="number" name="date_number" class="form-control form-control-sm form-control-solid" placeholder="Lenght" value=""${_scopeId}></div><div class="col-6"${_scopeId}><select name="date_typer" aria-label="Select a Timezone" data-control="select2" data-placeholder="Period" class="form-select form-select-sm form-select-solid"${_scopeId}><option value="days"${_scopeId}>Days</option><option value="weeks"${_scopeId}>Weeks</option><option value="months"${_scopeId}>Months</option><option value="years"${_scopeId}>Years</option></select></div></div><div class="d-flex justify-content-end"${_scopeId}><button class="btn btn-sm btn-light fw-bold btn-active-light-primary me-2"${_scopeId}> Cancel </button><a href="#" class="btn btn-sm fw-bold btn-primary"${_scopeId}>Search</a></div></form>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.state === "preferences") {
              _push2(`<form class="pt-1"${_scopeId}><h3 class="fw-semibold text-dark mb-7"${_scopeId}>Search Preferences</h3><div class="pb-4 border-bottom"${_scopeId}><label class="form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack"${_scopeId}><span class="form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2"${_scopeId}> Projects </span><input class="form-check-input" type="checkbox" value="1" checked${_scopeId}></label></div><div class="py-4 border-bottom"${_scopeId}><label class="form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack"${_scopeId}><span class="form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2"${_scopeId}> Targets </span><input class="form-check-input" type="checkbox" value="1" checked${_scopeId}></label></div><div class="py-4 border-bottom"${_scopeId}><label class="form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack"${_scopeId}><span class="form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2"${_scopeId}> Affiliate Programs </span><input class="form-check-input" type="checkbox" value="1"${_scopeId}></label></div><div class="py-4 border-bottom"${_scopeId}><label class="form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack"${_scopeId}><span class="form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2"${_scopeId}> Referrals </span><input class="form-check-input" type="checkbox" value="1" checked${_scopeId}></label></div><div class="py-4 border-bottom"${_scopeId}><label class="form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack"${_scopeId}><span class="form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2"${_scopeId}> Users </span><input class="form-check-input" type="checkbox" value="1"${_scopeId}></label></div><div class="d-flex justify-content-end pt-7"${_scopeId}><div class="btn btn-sm btn-light fw-bold btn-active-light-primary me-2"${_scopeId}> Cancel </div><button class="btn btn-sm fw-bold btn-primary"${_scopeId}>Save Changes</button></div></form>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
          } else {
            return [
              vueExports$1.createVNode("div", {
                class: "menu menu-sub menu-sub-dropdown menu-column p-7 w-325px w-md-375px",
                "data-kt-menu": "true",
                id: "kt-search-menu"
              }, [
                vueExports$1.createVNode("div", null, [
                  vueExports$1.createVNode("form", {
                    class: "w-100 position-relative mb-3",
                    autocomplete: "off"
                  }, [
                    vueExports$1.createVNode(_component_KTIcon, {
                      "icon-name": "magnifier",
                      "icon-class": "fs-2 fs-lg-1 text-gray-500 position-absolute top-50 translate-middle-y ms-0"
                    }),
                    vueExports$1.withDirectives(vueExports$1.createVNode("input", {
                      ref: "inputRef",
                      "onUpdate:modelValue": ($event) => _ctx.search = $event,
                      onInput: _ctx.searching,
                      type: "text",
                      class: "form-control form-control-flush ps-10",
                      name: "search",
                      placeholder: "Search..."
                    }, null, 40, ["onUpdate:modelValue", "onInput"]), [
                      [vueExports$1.vModelText, _ctx.search]
                    ]),
                    _ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                      key: 0,
                      class: "position-absolute top-50 end-0 translate-middle-y lh-0 me-1"
                    }, [
                      vueExports$1.createVNode("span", { class: "spinner-border h-15px w-15px align-middle text-gray-500" })
                    ])) : vueExports$1.createCommentVNode("", true),
                    vueExports$1.withDirectives(vueExports$1.createVNode("span", {
                      onClick: ($event) => _ctx.reset(),
                      class: "btn btn-flush btn-active-color-primary position-absolute top-50 end-0 translate-middle-y lh-0"
                    }, [
                      vueExports$1.createVNode(_component_KTIcon, {
                        "icon-name": "cross",
                        "icon-class": "fs-2 fs-lg-1 me-0"
                      })
                    ], 8, ["onClick"]), [
                      [vueExports$1.vShow, _ctx.search.length && !_ctx.loading]
                    ]),
                    vueExports$1.createVNode("div", { class: "position-absolute top-50 end-0 translate-middle-y" }, [
                      !_ctx.search && !_ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("div", {
                        key: 0,
                        onClick: ($event) => _ctx.state = "preferences",
                        class: "btn btn-icon w-20px btn-sm btn-active-color-primary me-1",
                        "data-bs-toggle": "tooltip",
                        title: "Show search preferences"
                      }, [
                        vueExports$1.createVNode(_component_KTIcon, {
                          "icon-name": "setting-2",
                          "icon-class": "fs-1"
                        })
                      ], 8, ["onClick"])) : vueExports$1.createCommentVNode("", true),
                      !_ctx.search && !_ctx.loading ? (vueExports$1.openBlock(), vueExports$1.createBlock("div", {
                        key: 1,
                        onClick: ($event) => _ctx.state = "advanced-options",
                        class: "btn btn-icon w-20px btn-sm btn-active-color-primary",
                        "data-bs-toggle": "tooltip",
                        title: "Show more search options"
                      }, [
                        vueExports$1.createVNode(_component_KTIcon, {
                          "icon-name": "down",
                          "icon-class": "fs-2"
                        })
                      ], 8, ["onClick"])) : vueExports$1.createCommentVNode("", true)
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "separator border-gray-200 mb-6" }),
                  _ctx.state === "results" ? (vueExports$1.openBlock(), vueExports$1.createBlock(_component_Results, { key: 0 })) : _ctx.state === "main" ? (vueExports$1.openBlock(), vueExports$1.createBlock(_component_PartialMain, { key: 1 })) : _ctx.state === "empty" ? (vueExports$1.openBlock(), vueExports$1.createBlock(_component_Empty, { key: 2 })) : vueExports$1.createCommentVNode("", true)
                ]),
                _ctx.state === "advanced-options" ? (vueExports$1.openBlock(), vueExports$1.createBlock("form", {
                  key: 0,
                  class: "pt-1"
                }, [
                  vueExports$1.createVNode("h3", { class: "fw-semibold text-dark mb-7" }, "Advanced Search"),
                  vueExports$1.createVNode("div", { class: "mb-5" }, [
                    vueExports$1.createVNode("input", {
                      type: "text",
                      class: "form-control form-control-sm form-control-solid",
                      placeholder: "Contains the word",
                      name: "query"
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "mb-5" }, [
                    vueExports$1.createVNode("div", { class: "nav-group nav-group-fluid" }, [
                      vueExports$1.createVNode("label", null, [
                        vueExports$1.createVNode("input", {
                          type: "radio",
                          class: "btn-check",
                          name: "type",
                          value: "has",
                          checked: ""
                        }),
                        vueExports$1.createVNode("span", { class: "btn btn-sm btn-color-muted btn-active btn-active-primary" }, " All ")
                      ]),
                      vueExports$1.createVNode("label", null, [
                        vueExports$1.createVNode("input", {
                          type: "radio",
                          class: "btn-check",
                          name: "type",
                          value: "users"
                        }),
                        vueExports$1.createVNode("span", { class: "btn btn-sm btn-color-muted btn-active btn-active-primary px-4" }, " Users ")
                      ]),
                      vueExports$1.createVNode("label", null, [
                        vueExports$1.createVNode("input", {
                          type: "radio",
                          class: "btn-check",
                          name: "type",
                          value: "orders"
                        }),
                        vueExports$1.createVNode("span", { class: "btn btn-sm btn-color-muted btn-active btn-active-primary px-4" }, " Orders ")
                      ]),
                      vueExports$1.createVNode("label", null, [
                        vueExports$1.createVNode("input", {
                          type: "radio",
                          class: "btn-check",
                          name: "type",
                          value: "projects"
                        }),
                        vueExports$1.createVNode("span", { class: "btn btn-sm btn-color-muted btn-active btn-active-primary px-4" }, " Projects ")
                      ])
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "mb-5" }, [
                    vueExports$1.createVNode("input", {
                      type: "text",
                      name: "assignedto",
                      class: "form-control form-control-sm form-control-solid",
                      placeholder: "Assigned to",
                      value: ""
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "mb-5" }, [
                    vueExports$1.createVNode("input", {
                      type: "text",
                      name: "collaborators",
                      class: "form-control form-control-sm form-control-solid",
                      placeholder: "Collaborators",
                      value: ""
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "mb-5" }, [
                    vueExports$1.createVNode("div", { class: "nav-group nav-group-fluid" }, [
                      vueExports$1.createVNode("label", null, [
                        vueExports$1.createVNode("input", {
                          type: "radio",
                          class: "btn-check",
                          name: "attachment",
                          value: "has",
                          checked: ""
                        }),
                        vueExports$1.createVNode("span", { class: "btn btn-sm btn-color-muted btn-active btn-active-primary" }, " Has attachment ")
                      ]),
                      vueExports$1.createVNode("label", null, [
                        vueExports$1.createVNode("input", {
                          type: "radio",
                          class: "btn-check",
                          name: "attachment",
                          value: "any"
                        }),
                        vueExports$1.createVNode("span", { class: "btn btn-sm btn-color-muted btn-active btn-active-primary px-4" }, " Any ")
                      ])
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "mb-5" }, [
                    vueExports$1.createVNode("select", {
                      name: "timezone",
                      "aria-label": "Select a Timezone",
                      "data-control": "select2",
                      "data-placeholder": "date_period",
                      class: "form-select form-select-sm form-select-solid"
                    }, [
                      vueExports$1.createVNode("option", { value: "next" }, "Within the next"),
                      vueExports$1.createVNode("option", { value: "last" }, "Within the last"),
                      vueExports$1.createVNode("option", { value: "between" }, "Between"),
                      vueExports$1.createVNode("option", { value: "on" }, "On")
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "row mb-8" }, [
                    vueExports$1.createVNode("div", { class: "col-6" }, [
                      vueExports$1.createVNode("input", {
                        type: "number",
                        name: "date_number",
                        class: "form-control form-control-sm form-control-solid",
                        placeholder: "Lenght",
                        value: ""
                      })
                    ]),
                    vueExports$1.createVNode("div", { class: "col-6" }, [
                      vueExports$1.createVNode("select", {
                        name: "date_typer",
                        "aria-label": "Select a Timezone",
                        "data-control": "select2",
                        "data-placeholder": "Period",
                        class: "form-select form-select-sm form-select-solid"
                      }, [
                        vueExports$1.createVNode("option", { value: "days" }, "Days"),
                        vueExports$1.createVNode("option", { value: "weeks" }, "Weeks"),
                        vueExports$1.createVNode("option", { value: "months" }, "Months"),
                        vueExports$1.createVNode("option", { value: "years" }, "Years")
                      ])
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "d-flex justify-content-end" }, [
                    vueExports$1.createVNode("button", {
                      onClick: ($event) => _ctx.state = "main",
                      class: "btn btn-sm btn-light fw-bold btn-active-light-primary me-2"
                    }, " Cancel ", 8, ["onClick"]),
                    vueExports$1.createVNode("a", {
                      href: "#",
                      class: "btn btn-sm fw-bold btn-primary"
                    }, "Search")
                  ])
                ])) : vueExports$1.createCommentVNode("", true),
                _ctx.state === "preferences" ? (vueExports$1.openBlock(), vueExports$1.createBlock("form", {
                  key: 1,
                  class: "pt-1"
                }, [
                  vueExports$1.createVNode("h3", { class: "fw-semibold text-dark mb-7" }, "Search Preferences"),
                  vueExports$1.createVNode("div", { class: "pb-4 border-bottom" }, [
                    vueExports$1.createVNode("label", { class: "form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack" }, [
                      vueExports$1.createVNode("span", { class: "form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2" }, " Projects "),
                      vueExports$1.createVNode("input", {
                        class: "form-check-input",
                        type: "checkbox",
                        value: "1",
                        checked: ""
                      })
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "py-4 border-bottom" }, [
                    vueExports$1.createVNode("label", { class: "form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack" }, [
                      vueExports$1.createVNode("span", { class: "form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2" }, " Targets "),
                      vueExports$1.createVNode("input", {
                        class: "form-check-input",
                        type: "checkbox",
                        value: "1",
                        checked: ""
                      })
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "py-4 border-bottom" }, [
                    vueExports$1.createVNode("label", { class: "form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack" }, [
                      vueExports$1.createVNode("span", { class: "form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2" }, " Affiliate Programs "),
                      vueExports$1.createVNode("input", {
                        class: "form-check-input",
                        type: "checkbox",
                        value: "1"
                      })
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "py-4 border-bottom" }, [
                    vueExports$1.createVNode("label", { class: "form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack" }, [
                      vueExports$1.createVNode("span", { class: "form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2" }, " Referrals "),
                      vueExports$1.createVNode("input", {
                        class: "form-check-input",
                        type: "checkbox",
                        value: "1",
                        checked: ""
                      })
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "py-4 border-bottom" }, [
                    vueExports$1.createVNode("label", { class: "form-check form-switch form-switch-sm form-check-custom form-check-solid flex-stack" }, [
                      vueExports$1.createVNode("span", { class: "form-check-label text-gray-700 fs-6 fw-semibold ms-0 me-2" }, " Users "),
                      vueExports$1.createVNode("input", {
                        class: "form-check-input",
                        type: "checkbox",
                        value: "1"
                      })
                    ])
                  ]),
                  vueExports$1.createVNode("div", { class: "d-flex justify-content-end pt-7" }, [
                    vueExports$1.createVNode("div", {
                      onClick: ($event) => _ctx.state = "main",
                      class: "btn btn-sm btn-light fw-bold btn-active-light-primary me-2"
                    }, " Cancel ", 8, ["onClick"]),
                    vueExports$1.createVNode("button", { class: "btn btn-sm fw-bold btn-primary" }, "Save Changes")
                  ])
                ])) : vueExports$1.createCommentVNode("", true)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    }
    const _sfc_setup$12 = _sfc_main$12.setup;
    _sfc_main$12.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/search/Search.vue");
      return _sfc_setup$12 ? _sfc_setup$12(props, ctx) : void 0;
    };
    const KTSearch = /* @__PURE__ */ _export_sfc(_sfc_main$12, [["ssrRender", _sfc_ssrRender$$]]);
    const __vite_glob_0_173 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTSearch
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$11 = vueExports$1.defineComponent({
      name: "notifications-menu",
      components: {},
      setup() {
        const data1 = [
          {
            title: "Project Alice",
            description: "Phase 1 development",
            time: "1 hr",
            icon: "technology-2",
            state: "primary"
          },
          {
            title: "HR Confidential",
            description: "Confidential staff documents",
            time: "2 hrs",
            icon: "information-5",
            state: "danger"
          },
          {
            title: "Company HR",
            description: "Corporeate staff profiles",
            time: "5 hrs",
            icon: "briefcase",
            state: "warning"
          },
          {
            title: "Project Redux",
            description: "New frontend admin theme",
            time: "2 days",
            icon: "cloud-change",
            state: "success"
          },
          {
            title: "Project Breafing",
            description: "Product launch status update",
            time: "21 Jan",
            icon: "map",
            state: "primary"
          },
          {
            title: "Banner Assets",
            description: "Collection of banner images",
            time: "21 Jan",
            icon: "graph-3",
            state: "info"
          },
          {
            title: "Icon Assets",
            description: "Collection of SVG icons",
            time: "20 March",
            icon: "color-swatch",
            state: "warning"
          }
        ];
        const data2 = [
          {
            code: "200 OK",
            state: "success",
            message: "New order",
            time: "Just now"
          },
          {
            code: "500 ERR",
            state: "danger",
            message: "New customer",
            time: "2 hrs"
          },
          {
            code: "200 OK",
            state: "success",
            message: "Payment process",
            time: "5 hrs"
          },
          {
            code: "300 WRN",
            state: "warning",
            message: "Search query",
            time: "2 days"
          },
          {
            code: "200 OK",
            state: "success",
            message: "API connection",
            time: "1 week"
          },
          {
            code: "200 OK",
            state: "success",
            message: "Database restore",
            time: "Mar 5"
          },
          {
            code: "300 WRN",
            state: "warning",
            message: "System update",
            time: "May 15"
          },
          {
            code: "300 WRN",
            state: "warning",
            message: "Server OS update",
            time: "Apr 3"
          },
          {
            code: "300 WRN",
            state: "warning",
            message: "API rollback",
            time: "Jun 30"
          },
          {
            code: "500 ERR",
            state: "danger",
            message: "Refund process",
            time: "Jul 10"
          },
          {
            code: "500 ERR",
            state: "danger",
            message: "Withdrawal process",
            time: "Sep 10"
          },
          {
            code: "500 ERR",
            state: "danger",
            message: "Mail tasks",
            time: "Dec 10"
          }
        ];
        return {
          data1,
          data2,
          getIllustrationsPath,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "menu menu-sub menu-sub-dropdown menu-column w-350px w-lg-375px",
        "data-kt-menu": "true"
      }, _attrs))}><div class="d-flex flex-column bgi-no-repeat rounded-top" style="${ssrRenderStyle(`background-image: url('${_ctx.getAssetPath(
        "/media/misc/menu-header-bg.jpg"
      )}')`)}"><h3 class="text-white fw-semibold px-9 mt-10 mb-6"> Notifications <span class="fs-8 opacity-75 ps-3">24 reports</span></h3><ul class="nav nav-line-tabs nav-line-tabs-2x nav-stretch fw-semibold px-9"><li class="nav-item"><a class="nav-link text-white opacity-75 opacity-state-100 pb-4" data-bs-toggle="tab" href="#kt_topbar_notifications_1">Alerts</a></li><li class="nav-item"><a class="nav-link text-white opacity-75 opacity-state-100 pb-4 active" data-bs-toggle="tab" href="#kt_topbar_notifications_2">Updates</a></li><li class="nav-item"><a class="nav-link text-white opacity-75 opacity-state-100 pb-4" data-bs-toggle="tab" href="#kt_topbar_notifications_3">Logs</a></li></ul></div><div class="tab-content"><div class="tab-pane fade" id="kt_topbar_notifications_1" role="tabpanel"><div class="scroll-y mh-325px my-5 px-8"><!--[-->`);
      ssrRenderList(_ctx.data1, (item, index) => {
        _push(`<div class="d-flex flex-stack py-4"><div class="d-flex align-items-center"><div class="symbol symbol-35px me-4"><span class="${ssrRenderClass([`bg-light-${item.state}`, "symbol-label"])}">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": item.icon,
          "icon-class": `text-${item.state}`
        }, null, _parent));
        _push(`</span></div><div class="mb-0 me-2"><a href="#" class="fs-6 text-gray-800 text-hover-primary fw-bold">${ssrInterpolate(item.title)}</a><div class="text-gray-500 fs-7">${ssrInterpolate(item.description)}</div></div></div><span class="badge badge-light fs-8">${ssrInterpolate(item.time)}</span></div>`);
      });
      _push(`<!--]--></div><div class="py-3 text-center border-top"><a href="#" class="btn btn-color-gray-600 btn-active-color-primary"> View All `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-5"
      }, null, _parent));
      _push(`</a></div></div><div class="tab-pane fade show active" id="kt_topbar_notifications_2" role="tabpanel"><div class="d-flex flex-column px-9"><div class="pt-10 pb-0"><h3 class="text-gray-900 text-center fw-bold">Get Pro Access</h3><div class="text-center text-gray-600 fw-semibold pt-1"> Outlines keep you honest. They stoping you from amazing poorly about drive </div><div class="text-center mt-5 mb-9"><a href="#" class="btn btn-sm btn-primary px-6" data-bs-toggle="modal" data-bs-target="#kt_modal_upgrade_plan">Upgrade</a></div></div><img class="mw-100 mh-200px" alt="metronic"${ssrRenderAttr("src", _ctx.getIllustrationsPath("1.png"))}></div></div><div class="tab-pane fade" id="kt_topbar_notifications_3" role="tabpanel"><div class="scroll-y mh-325px my-5 px-8"><!--[-->`);
      ssrRenderList(_ctx.data2, (item, index) => {
        _push(`<div class="d-flex flex-stack py-4"><div class="d-flex align-items-center me-2"><span class="${ssrRenderClass([`badge-light-${item.state}`, "w-70px badge me-4"])}">${ssrInterpolate(item.code)}</span><a href="#" class="text-gray-800 text-hover-primary fw-semibold">${ssrInterpolate(item.message)}</a></div><span class="badge badge-light fs-8">${ssrInterpolate(item.time)}</span></div>`);
      });
      _push(`<!--]--></div><div class="py-3 text-center border-top"><a href="#" class="btn btn-color-gray-600 btn-active-color-primary"> View All `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-5"
      }, null, _parent));
      _push(`</a></div></div></div></div>`);
    }
    const _sfc_setup$11 = _sfc_main$11.setup;
    _sfc_main$11.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/menus/NotificationsMenu.vue");
      return _sfc_setup$11 ? _sfc_setup$11(props, ctx) : void 0;
    };
    const KTNotificationMenu = /* @__PURE__ */ _export_sfc(_sfc_main$11, [["ssrRender", _sfc_ssrRender$_]]);
    const __vite_glob_0_169 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTNotificationMenu
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$10 = vueExports$1.defineComponent({
      name: "kt-theme-switcher",
      component: {},
      setup() {
        const storeTheme = useThemeStore();
        const storeConfig = useConfigStore();
        const route2 = useRoute();
        const themeMode2 = vueExports$1.computed(() => {
          return storeTheme.mode;
        });
        const path = vueExports$1.computed(() => route2.path);
        const setMode = (mode) => {
          let configMode = mode;
          storeConfig.setLayoutConfigProperty("general.mode", configMode);
          storeTheme.setThemeMode(configMode);
        };
        return {
          themeMode: themeMode2,
          setMode,
          path,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$Z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-title-gray-700 menu-icon-muted menu-active-bg menu-state-primary fw-semibold py-4 fs-base w-175px",
        "data-kt-menu": "true",
        "data-kt-element": "theme-mode-menu"
      }, _attrs))}><div class="menu-item px-3 my-0">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: _ctx.path,
        class: [{ active: _ctx.themeMode === "light" }, "menu-link px-3 py-2"],
        onClick: ($event) => _ctx.setMode("light")
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="menu-icon" data-kt-element="icon"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "night-day",
              "icon-class": "fs-2"
            }, null, _parent2, _scopeId));
            _push2(`</span><span class="menu-title"${_scopeId}>Light</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: "menu-icon",
                "data-kt-element": "icon"
              }, [
                vueExports$1.createVNode(_component_KTIcon, {
                  "icon-name": "night-day",
                  "icon-class": "fs-2"
                })
              ]),
              vueExports$1.createVNode("span", { class: "menu-title" }, "Light")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="menu-item px-3 my-0">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: _ctx.path,
        class: [{ active: _ctx.themeMode === "dark" }, "menu-link px-3 py-2"],
        onClick: ($event) => _ctx.setMode("dark")
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="menu-icon" data-kt-element="icon"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "moon",
              "icon-class": "fs-2"
            }, null, _parent2, _scopeId));
            _push2(`</span><span class="menu-title"${_scopeId}>Dark</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: "menu-icon",
                "data-kt-element": "icon"
              }, [
                vueExports$1.createVNode(_component_KTIcon, {
                  "icon-name": "moon",
                  "icon-class": "fs-2"
                })
              ]),
              vueExports$1.createVNode("span", { class: "menu-title" }, "Dark")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="menu-item px-3 my-0">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: _ctx.path,
        class: [{ active: _ctx.themeMode === "system" }, "menu-link px-3 py-2"],
        onClick: ($event) => _ctx.setMode("system")
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="menu-icon" data-kt-element="icon"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "screen",
              "icon-class": "fs-2"
            }, null, _parent2, _scopeId));
            _push2(`</span><span class="menu-title"${_scopeId}>System</span>`);
          } else {
            return [
              vueExports$1.createVNode("span", {
                class: "menu-icon",
                "data-kt-element": "icon"
              }, [
                vueExports$1.createVNode(_component_KTIcon, {
                  "icon-name": "screen",
                  "icon-class": "fs-2"
                })
              ]),
              vueExports$1.createVNode("span", { class: "menu-title" }, "System")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$10 = _sfc_main$10.setup;
    _sfc_main$10.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/theme-mode/ThemeModeSwitcher.vue");
      return _sfc_setup$10 ? _sfc_setup$10(props, ctx) : void 0;
    };
    const KTThemeModeSwitcher = /* @__PURE__ */ _export_sfc(_sfc_main$10, [["ssrRender", _sfc_ssrRender$Z]]);
    const __vite_glob_0_181 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTThemeModeSwitcher
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$$ = vueExports$1.defineComponent({
      name: "header-navbar",
      components: {
        KTSearch,
        KTNotificationMenu,
        KTUserMenu,
        KTThemeModeSwitcher
      },
      setup() {
        const store = useThemeStore();
        const themeMode2 = vueExports$1.computed(() => {
          if (store.mode === "system") {
            return ThemeModeComponent.getSystemMode();
          }
          return store.mode;
        });
        return {
          themeMode: themeMode2,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTSearch = vueExports$1.resolveComponent("KTSearch");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_KTNotificationMenu = vueExports$1.resolveComponent("KTNotificationMenu");
      const _component_KTThemeModeSwitcher = vueExports$1.resolveComponent("KTThemeModeSwitcher");
      const _component_KTUserMenu = vueExports$1.resolveComponent("KTUserMenu");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "app-navbar flex-shrink-0" }, _attrs))}><div class="app-navbar-item align-items-stretch ms-1 ms-md-4">`);
      _push(ssrRenderComponent(_component_KTSearch, null, null, _parent));
      _push(`</div><div class="app-navbar-item ms-1 ms-md-4"><div class="btn btn-icon btn-custom btn-icon-muted btn-active-light btn-active-color-primary w-35px h-35px" id="kt_activities_toggle">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "messages",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</div></div><div class="app-navbar-item ms-1 ms-md-4"><div class="btn btn-icon btn-custom btn-icon-muted btn-active-light btn-active-color-primary w-35px h-35px" data-kt-menu-trigger="{default: &#39;click&#39;, lg: &#39;hover&#39;}" data-kt-menu-attach="parent" data-kt-menu-placement="bottom-end" id="kt_menu_item_wow">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "notification-status",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</div>`);
      _push(ssrRenderComponent(_component_KTNotificationMenu, null, null, _parent));
      _push(`</div><div class="app-navbar-item ms-1 ms-md-4"><div class="btn btn-icon btn-custom btn-icon-muted btn-active-light btn-active-color-primary w-35px h-35px position-relative" id="kt_drawer_chat_toggle">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "message-text-2",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`<span class="bullet bullet-dot bg-success h-6px w-6px position-absolute translate-middle top-0 start-50 animation-blink"></span></div></div><div class="app-navbar-item ms-1 ms-md-3"><a href="#" class="btn btn-icon btn-custom btn-icon-muted btn-active-light btn-active-color-primary w-30px h-30px w-md-40px h-md-40px" data-kt-menu-trigger="{default:&#39;click&#39;, lg: &#39;hover&#39;}" data-kt-menu-attach="parent" data-kt-menu-placement="bottom-end">`);
      if (_ctx.themeMode === "light") {
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "night-day",
          "icon-class": "fs-2"
        }, null, _parent));
      } else {
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "moon",
          "icon-class": "fs-2"
        }, null, _parent));
      }
      _push(`</a>`);
      _push(ssrRenderComponent(_component_KTThemeModeSwitcher, null, null, _parent));
      _push(`</div><div class="app-navbar-item ms-1 ms-md-4" id="kt_header_user_menu_toggle"><div class="cursor-pointer symbol symbol-35px" data-kt-menu-trigger="{default: &#39;click&#39;, lg: &#39;hover&#39;}" data-kt-menu-attach="parent" data-kt-menu-placement="bottom-end"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-3.jpg"))} class="rounded-3" alt="user"></div>`);
      _push(ssrRenderComponent(_component_KTUserMenu, null, null, _parent));
      _push(`</div><div class="app-navbar-item d-lg-none ms-2 me-n2"><div class="btn btn-flex btn-icon btn-active-color-primary w-30px h-30px" id="kt_app_header_menu_toggle">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "element-4",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</div></div></div>`);
    }
    const _sfc_setup$$ = _sfc_main$$.setup;
    _sfc_main$$.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/header/Navbar.vue");
      return _sfc_setup$$ ? _sfc_setup$$(props, ctx) : void 0;
    };
    const KTHeaderNavbar = /* @__PURE__ */ _export_sfc(_sfc_main$$, [["ssrRender", _sfc_ssrRender$Y]]);
    const __vite_glob_0_166 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTHeaderNavbar
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$_ = vueExports$1.defineComponent({
      name: "layout-header",
      components: {
        KTHeaderMenu,
        KTHeaderNavbar
      },
      setup() {
        return {
          layout,
          headerWidthFluid,
          headerDisplay,
          themeMode,
          getAssetPath,
          headerDesktopFixed,
          headerMobileFixed
        };
      }
    });
    function _sfc_ssrRender$X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_KTHeaderMenu = vueExports$1.resolveComponent("KTHeaderMenu");
      const _component_KTHeaderNavbar = vueExports$1.resolveComponent("KTHeaderNavbar");
      if (_ctx.headerDisplay) {
        _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
          id: "kt_app_header",
          class: "app-header",
          "data-kt-sticky": "true",
          "data-kt-sticky-activate": "{default: true, lg: true}",
          "data-kt-sticky-name": "app-header-minimize",
          "data-kt-sticky-offset": "{default: '200px', lg: '0'}",
          "data-kt-sticky-animation": "false"
        }, _attrs))}><div class="${ssrRenderClass([{
          "container-fluid": _ctx.headerWidthFluid,
          "container-xxl": !_ctx.headerWidthFluid
        }, "app-container d-flex align-items-stretch justify-content-between"])}">`);
        if (_ctx.layout === "light-header" || _ctx.layout === "dark-header") {
          _push(`<div class="d-flex align-items-center flex-grow-1 flex-lg-grow-0 me-lg-15">`);
          _push(ssrRenderComponent(_component_router_link, { to: "/" }, {
            default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                if (_ctx.themeMode === "light" && _ctx.layout === "light-header") {
                  _push2(`<img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/logos/default.svg"))} class="h-20px h-lg-30px app-sidebar-logo-default theme-light-show"${_scopeId}>`);
                } else {
                  _push2(`<!---->`);
                }
                if (_ctx.layout === "dark-header" || _ctx.themeMode === "dark" && _ctx.layout === "light-header") {
                  _push2(`<img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/logos/default-dark.svg"))} class="h-20px h-lg-30px app-sidebar-logo-default"${_scopeId}>`);
                } else {
                  _push2(`<!---->`);
                }
              } else {
                return [
                  _ctx.themeMode === "light" && _ctx.layout === "light-header" ? (vueExports$1.openBlock(), vueExports$1.createBlock("img", {
                    key: 0,
                    alt: "Logo",
                    src: _ctx.getAssetPath("media/logos/default.svg"),
                    class: "h-20px h-lg-30px app-sidebar-logo-default theme-light-show"
                  }, null, 8, ["src"])) : vueExports$1.createCommentVNode("", true),
                  _ctx.layout === "dark-header" || _ctx.themeMode === "dark" && _ctx.layout === "light-header" ? (vueExports$1.openBlock(), vueExports$1.createBlock("img", {
                    key: 1,
                    alt: "Logo",
                    src: _ctx.getAssetPath("media/logos/default-dark.svg"),
                    class: "h-20px h-lg-30px app-sidebar-logo-default"
                  }, null, 8, ["src"])) : vueExports$1.createCommentVNode("", true)
                ];
              }
            }),
            _: 1
          }, _parent));
          _push(`</div>`);
        } else {
          _push(`<!--[--><div class="d-flex align-items-center d-lg-none ms-n3 me-1 me-md-2"><div class="btn btn-icon btn-active-color-primary w-35px h-35px" id="kt_app_sidebar_mobile_toggle">`);
          _push(ssrRenderComponent(_component_KTIcon, {
            "icon-name": "abstract-14",
            "icon-class": "fs-2 fs-md-1"
          }, null, _parent));
          _push(`</div></div><div class="d-flex align-items-center flex-grow-1 flex-lg-grow-0">`);
          _push(ssrRenderComponent(_component_router_link, {
            to: "/",
            class: "d-lg-none"
          }, {
            default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`<img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/logos/default-small.svg"))} class="h-30px"${_scopeId}>`);
              } else {
                return [
                  vueExports$1.createVNode("img", {
                    alt: "Logo",
                    src: _ctx.getAssetPath("media/logos/default-small.svg"),
                    class: "h-30px"
                  }, null, 8, ["src"])
                ];
              }
            }),
            _: 1
          }, _parent));
          _push(`</div><!--]-->`);
        }
        _push(`<div class="d-flex align-items-stretch justify-content-between flex-lg-grow-1" id="kt_app_header_wrapper">`);
        _push(ssrRenderComponent(_component_KTHeaderMenu, null, null, _parent));
        _push(ssrRenderComponent(_component_KTHeaderNavbar, null, null, _parent));
        _push(`</div></div></div>`);
      } else {
        _push(`<!---->`);
      }
    }
    const _sfc_setup$_ = _sfc_main$_.setup;
    _sfc_main$_.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/header/Header.vue");
      return _sfc_setup$_ ? _sfc_setup$_(props, ctx) : void 0;
    };
    const KTHeader = /* @__PURE__ */ _export_sfc(_sfc_main$_, [["ssrRender", _sfc_ssrRender$X]]);
    const __vite_glob_0_165 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTHeader
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$Z = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "SidebarLogo",
      __ssrInlineRender: true,
      props: {
        sidebarRef: {}
      },
      setup(__props) {
        const props = __props;
        const toggleRef = vueExports$1.ref(null);
        vueExports$1.onMounted(() => {
          setTimeout(() => {
            const toggleObj = ToggleComponent.getInstance(
              toggleRef.value
            );
            if (toggleObj === null) {
              return;
            }
            toggleObj.on("kt.toggle.change", function() {
              var _a2;
              (_a2 = props.sidebarRef) == null ? void 0 : _a2.classList.add("animating");
              setTimeout(function() {
                var _a3;
                (_a3 = props.sidebarRef) == null ? void 0 : _a3.classList.remove("animating");
              }, 300);
            });
          }, 1);
        });
        return (_ctx, _push, _parent, _attrs) => {
          const _component_router_link = vueExports$1.resolveComponent("router-link");
          const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
            class: "app-sidebar-logo px-6",
            id: "kt_app_sidebar_logo"
          }, _attrs))}>`);
          _push(ssrRenderComponent(_component_router_link, { to: "/" }, {
            default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                if (vueExports$1.unref(layout) === "dark-sidebar" || vueExports$1.unref(themeMode) === "dark" && vueExports$1.unref(layout) === "light-sidebar") {
                  _push2(`<img alt="Logo"${ssrRenderAttr("src", vueExports$1.unref(getAssetPath)("media/logos/default-dark.svg"))} class="h-25px app-sidebar-logo-default"${_scopeId}>`);
                } else {
                  _push2(`<!---->`);
                }
                if (vueExports$1.unref(themeMode) === "light" && vueExports$1.unref(layout) === "light-sidebar") {
                  _push2(`<img alt="Logo"${ssrRenderAttr("src", vueExports$1.unref(getAssetPath)("media/logos/default.svg"))} class="h-25px app-sidebar-logo-default"${_scopeId}>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`<img alt="Logo"${ssrRenderAttr("src", vueExports$1.unref(getAssetPath)("media/logos/default-small.svg"))} class="h-20px app-sidebar-logo-minimize"${_scopeId}>`);
              } else {
                return [
                  vueExports$1.unref(layout) === "dark-sidebar" || vueExports$1.unref(themeMode) === "dark" && vueExports$1.unref(layout) === "light-sidebar" ? (vueExports$1.openBlock(), vueExports$1.createBlock("img", {
                    key: 0,
                    alt: "Logo",
                    src: vueExports$1.unref(getAssetPath)("media/logos/default-dark.svg"),
                    class: "h-25px app-sidebar-logo-default"
                  }, null, 8, ["src"])) : vueExports$1.createCommentVNode("", true),
                  vueExports$1.unref(themeMode) === "light" && vueExports$1.unref(layout) === "light-sidebar" ? (vueExports$1.openBlock(), vueExports$1.createBlock("img", {
                    key: 1,
                    alt: "Logo",
                    src: vueExports$1.unref(getAssetPath)("media/logos/default.svg"),
                    class: "h-25px app-sidebar-logo-default"
                  }, null, 8, ["src"])) : vueExports$1.createCommentVNode("", true),
                  vueExports$1.createVNode("img", {
                    alt: "Logo",
                    src: vueExports$1.unref(getAssetPath)("media/logos/default-small.svg"),
                    class: "h-20px app-sidebar-logo-minimize"
                  }, null, 8, ["src"])
                ];
              }
            }),
            _: 1
          }, _parent));
          if (vueExports$1.unref(sidebarToggleDisplay)) {
            _push(`<div id="kt_app_sidebar_toggle" class="app-sidebar-toggle btn btn-icon btn-shadow btn-sm btn-color-muted btn-active-color-primary h-30px w-30px position-absolute top-50 start-100 translate-middle rotate" data-kt-toggle="true" data-kt-toggle-state="active" data-kt-toggle-target="body" data-kt-toggle-name="app-sidebar-minimize">`);
            _push(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "black-left-line",
              "icon-class": "fs-3 rotate-180 ms-1"
            }, null, _parent));
            _push(`</div>`);
          } else {
            _push(`<!---->`);
          }
          _push(`</div>`);
        };
      }
    });
    const _sfc_setup$Z = _sfc_main$Z.setup;
    _sfc_main$Z.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/sidebar/SidebarLogo.vue");
      return _sfc_setup$Z ? _sfc_setup$Z(props, ctx) : void 0;
    };
    const __vite_glob_0_179 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$Z
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$Y = vueExports$1.defineComponent({
      name: "sidebar-menu",
      components: {},
      setup() {
        const { t, te } = useI18n();
        const route2 = useRoute();
        const scrollElRef = vueExports$1.ref(null);
        vueExports$1.onMounted(() => {
          if (scrollElRef.value) {
            scrollElRef.value.scrollTop = 0;
          }
        });
        const translate = (text2) => {
          if (te(text2)) {
            return t(text2);
          } else {
            return text2;
          }
        };
        const hasActiveChildren = (match) => {
          return route2.path.indexOf(match) !== -1;
        };
        return {
          hasActiveChildren,
          MainMenuConfig,
          sidebarMenuIcons,
          translate,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$W(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "app-sidebar-menu overflow-hidden flex-column-fluid" }, _attrs))}><div id="kt_app_sidebar_menu_wrapper" class="app-sidebar-wrapper hover-scroll-overlay-y my-5" data-kt-scroll="true" data-kt-scroll-activate="true" data-kt-scroll-height="auto" data-kt-scroll-dependencies="#kt_app_sidebar_logo, #kt_app_sidebar_footer" data-kt-scroll-wrappers="#kt_app_sidebar_menu" data-kt-scroll-offset="5px" data-kt-scroll-save-state="true"><div id="#kt_app_sidebar_menu" class="menu menu-column menu-rounded menu-sub-indention px-3" data-kt-menu="true"><!--[-->`);
      ssrRenderList(_ctx.MainMenuConfig, (item, i) => {
        _push(`<!--[-->`);
        if (item.heading) {
          _push(`<div class="menu-item pt-5"><div class="menu-content"><span class="menu-heading fw-bold text-uppercase fs-7">${ssrInterpolate(_ctx.translate(item.heading))}</span></div></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<!--[-->`);
        ssrRenderList(item.pages, (menuItem, j) => {
          _push(`<!--[-->`);
          if (menuItem.heading) {
            _push(`<div class="menu-item">`);
            if (menuItem.route) {
              _push(ssrRenderComponent(_component_router_link, {
                class: "menu-link",
                "active-class": "active",
                to: menuItem.route
              }, {
                default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
                  if (_push2) {
                    if (menuItem.keenthemesIcon || menuItem.bootstrapIcon) {
                      _push2(`<span class="menu-icon"${_scopeId}>`);
                      if (_ctx.sidebarMenuIcons === "bootstrap") {
                        _push2(`<i class="${ssrRenderClass([menuItem.bootstrapIcon, "bi fs-3"])}"${_scopeId}></i>`);
                      } else if (_ctx.sidebarMenuIcons === "keenthemes") {
                        _push2(ssrRenderComponent(_component_KTIcon, {
                          "icon-name": menuItem.keenthemesIcon,
                          "icon-class": "fs-2"
                        }, null, _parent2, _scopeId));
                      } else {
                        _push2(`<!---->`);
                      }
                      _push2(`</span>`);
                    } else {
                      _push2(`<!---->`);
                    }
                    _push2(`<span class="menu-title"${_scopeId}>${ssrInterpolate(_ctx.translate(menuItem.heading))}</span>`);
                  } else {
                    return [
                      menuItem.keenthemesIcon || menuItem.bootstrapIcon ? (vueExports$1.openBlock(), vueExports$1.createBlock("span", {
                        key: 0,
                        class: "menu-icon"
                      }, [
                        _ctx.sidebarMenuIcons === "bootstrap" ? (vueExports$1.openBlock(), vueExports$1.createBlock("i", {
                          key: 0,
                          class: [menuItem.bootstrapIcon, "bi fs-3"]
                        }, null, 2)) : _ctx.sidebarMenuIcons === "keenthemes" ? (vueExports$1.openBlock(), vueExports$1.createBlock(_component_KTIcon, {
                          key: 1,
                          "icon-name": menuItem.keenthemesIcon,
                          "icon-class": "fs-2"
                        }, null, 8, ["icon-name"])) : vueExports$1.createCommentVNode("", true)
                      ])) : vueExports$1.createCommentVNode("", true),
                      vueExports$1.createVNode("span", { class: "menu-title" }, vueExports$1.toDisplayString(_ctx.translate(menuItem.heading)), 1)
                    ];
                  }
                }),
                _: 2
              }, _parent));
            } else {
              _push(`<!---->`);
            }
            _push(`</div>`);
          } else {
            _push(`<!---->`);
          }
          if (menuItem.sectionTitle && menuItem.route) {
            _push(`<div class="${ssrRenderClass([{ show: _ctx.hasActiveChildren(menuItem.route) }, "menu-item menu-accordion"])}" data-kt-menu-sub="accordion" data-kt-menu-trigger="click"><span class="menu-link">`);
            if (menuItem.keenthemesIcon || menuItem.bootstrapIcon) {
              _push(`<span class="menu-icon">`);
              if (_ctx.sidebarMenuIcons === "bootstrap") {
                _push(`<i class="${ssrRenderClass([menuItem.bootstrapIcon, "bi fs-3"])}"></i>`);
              } else if (_ctx.sidebarMenuIcons === "keenthemes") {
                _push(ssrRenderComponent(_component_KTIcon, {
                  "icon-name": menuItem.keenthemesIcon,
                  "icon-class": "fs-2"
                }, null, _parent));
              } else {
                _push(`<!---->`);
              }
              _push(`</span>`);
            } else {
              _push(`<!---->`);
            }
            _push(`<span class="menu-title">${ssrInterpolate(_ctx.translate(menuItem.sectionTitle))}</span><span class="menu-arrow"></span></span><div class="${ssrRenderClass([{ show: _ctx.hasActiveChildren(menuItem.route) }, "menu-sub menu-sub-accordion"])}"><!--[-->`);
            ssrRenderList(menuItem.sub, (item2, k) => {
              _push(`<!--[-->`);
              if (item2.heading) {
                _push(`<div class="menu-item">`);
                if (item2.route) {
                  _push(ssrRenderComponent(_component_router_link, {
                    class: "menu-link",
                    "active-class": "active",
                    to: item2.route
                  }, {
                    default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
                      if (_push2) {
                        _push2(`<span class="menu-bullet"${_scopeId}><span class="bullet bullet-dot"${_scopeId}></span></span><span class="menu-title"${_scopeId}>${ssrInterpolate(_ctx.translate(item2.heading))}</span>`);
                      } else {
                        return [
                          vueExports$1.createVNode("span", { class: "menu-bullet" }, [
                            vueExports$1.createVNode("span", { class: "bullet bullet-dot" })
                          ]),
                          vueExports$1.createVNode("span", { class: "menu-title" }, vueExports$1.toDisplayString(_ctx.translate(item2.heading)), 1)
                        ];
                      }
                    }),
                    _: 2
                  }, _parent));
                } else {
                  _push(`<!---->`);
                }
                _push(`</div>`);
              } else {
                _push(`<!---->`);
              }
              if (item2.sectionTitle && item2.route) {
                _push(`<div class="${ssrRenderClass([{ show: _ctx.hasActiveChildren(item2.route) }, "menu-item menu-accordion"])}" data-kt-menu-sub="accordion" data-kt-menu-trigger="click"><span class="menu-link"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">${ssrInterpolate(_ctx.translate(item2.sectionTitle))}</span><span class="menu-arrow"></span></span><div class="${ssrRenderClass([{ show: _ctx.hasActiveChildren(item2.route) }, "menu-sub menu-sub-accordion"])}"><!--[-->`);
                ssrRenderList(item2.sub, (item3, k2) => {
                  _push(`<!--[-->`);
                  if (item3.heading) {
                    _push(`<div class="menu-item">`);
                    if (item3.route) {
                      _push(ssrRenderComponent(_component_router_link, {
                        class: "menu-link",
                        "active-class": "active",
                        to: item3.route
                      }, {
                        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
                          if (_push2) {
                            _push2(`<span class="menu-bullet"${_scopeId}><span class="bullet bullet-dot"${_scopeId}></span></span><span class="menu-title"${_scopeId}>${ssrInterpolate(_ctx.translate(item3.heading))}</span>`);
                          } else {
                            return [
                              vueExports$1.createVNode("span", { class: "menu-bullet" }, [
                                vueExports$1.createVNode("span", { class: "bullet bullet-dot" })
                              ]),
                              vueExports$1.createVNode("span", { class: "menu-title" }, vueExports$1.toDisplayString(_ctx.translate(item3.heading)), 1)
                            ];
                          }
                        }),
                        _: 2
                      }, _parent));
                    } else {
                      _push(`<!---->`);
                    }
                    _push(`</div>`);
                  } else {
                    _push(`<!---->`);
                  }
                  _push(`<!--]-->`);
                });
                _push(`<!--]--></div></div>`);
              } else {
                _push(`<!---->`);
              }
              _push(`<!--]-->`);
            });
            _push(`<!--]--></div></div>`);
          } else {
            _push(`<!---->`);
          }
          _push(`<!--]-->`);
        });
        _push(`<!--]--><!--]-->`);
      });
      _push(`<!--]--><div class="menu-item pt-5"><div class="menu-content"><span class="menu-heading fw-bold text-uppercase fs-7">Help</span></div></div><div class="menu-item"><a class="menu-link" href="https://preview.keenthemes.com/metronic8/vue/docs/base/utilities"><span class="menu-icon">`);
      if (_ctx.sidebarMenuIcons === "bootstrap") {
        _push(`<i class="bi bi-briefcase fs-3"></i>`);
      } else if (_ctx.sidebarMenuIcons === "keenthemes") {
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "rocket",
          "icon-class": "fs-2"
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</span><span class="menu-title">Components</span></a></div><div class="menu-item"><a class="menu-link" href="https://preview.keenthemes.com/metronic8/vue/docs/index"><span class="menu-icon">`);
      if (_ctx.sidebarMenuIcons === "bootstrap") {
        _push(`<i class="bi bi-box fs-3"></i>`);
      } else if (_ctx.sidebarMenuIcons === "keenthemes") {
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "abstract-26",
          "icon-class": "fs-2"
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</span><span class="menu-title">Documentation</span></a></div><div class="menu-item"><a class="menu-link" href="https://preview.keenthemes.com/metronic8/vue/docs/getting-started/changelog"><span class="menu-icon">`);
      if (_ctx.sidebarMenuIcons === "bootstrap") {
        _push(`<i class="bi bi-diagram-3 fs-3"></i>`);
      } else if (_ctx.sidebarMenuIcons === "keenthemes") {
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "code",
          "icon-class": "fs-2"
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`</span><span class="menu-title">Changelog</span></a></div></div></div></div>`);
    }
    const _sfc_setup$Y = _sfc_main$Y.setup;
    _sfc_main$Y.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/sidebar/SidebarMenu.vue");
      return _sfc_setup$Y ? _sfc_setup$Y(props, ctx) : void 0;
    };
    const KTSidebarMenu = /* @__PURE__ */ _export_sfc(_sfc_main$Y, [["ssrRender", _sfc_ssrRender$W]]);
    const __vite_glob_0_180 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTSidebarMenu
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$X = vueExports$1.defineComponent({
      name: "sidebar-footer",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$V(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "app-sidebar-footer flex-column-auto pt-2 pb-6 px-6",
        id: "kt_app_sidebar_footer"
      }, _attrs))}><a href="https://preview.keenthemes.com/metronic8/vue/docs/index" class="btn btn-flex flex-center btn-custom btn-primary overflow-hidden text-nowrap px-0 h-40px w-100" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-dismiss-="click" title="200+ in-house components and 3rd-party plugins"><span class="btn-label">Docs &amp; Components</span>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "document",
        "icon-class": "btn-icon fs-2 m-0"
      }, null, _parent));
      _push(`</a></div>`);
    }
    const _sfc_setup$X = _sfc_main$X.setup;
    _sfc_main$X.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/sidebar/SidebarFooter.vue");
      return _sfc_setup$X ? _sfc_setup$X(props, ctx) : void 0;
    };
    const KTSidebarFooter = /* @__PURE__ */ _export_sfc(_sfc_main$X, [["ssrRender", _sfc_ssrRender$V]]);
    const __vite_glob_0_178 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTSidebarFooter
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$W = vueExports$1.defineComponent({
      name: "theme-sidebar",
      components: {
        KTSidebarLogo: _sfc_main$Z,
        KTSidebarMenu,
        KTSidebarFooter
      },
      setup() {
        const sidebarRef = vueExports$1.ref(null);
        return {
          displaySidebar,
          sidebarRef
        };
      }
    });
    function _sfc_ssrRender$U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTSidebarLogo = vueExports$1.resolveComponent("KTSidebarLogo");
      const _component_KTSidebarMenu = vueExports$1.resolveComponent("KTSidebarMenu");
      const _component_KTSidebarFooter = vueExports$1.resolveComponent("KTSidebarFooter");
      if (_ctx.displaySidebar) {
        _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
          ref: "sidebarRef",
          id: "kt_app_sidebar",
          class: "app-sidebar flex-column",
          "data-kt-drawer": "true",
          "data-kt-drawer-name": "app-sidebar",
          "data-kt-drawer-activate": "{default: true, lg: false}",
          "data-kt-drawer-overlay": "true",
          "data-kt-drawer-width": "225px",
          "data-kt-drawer-direction": "start",
          "data-kt-drawer-toggle": "#kt_app_sidebar_mobile_toggle"
        }, _attrs))}>`);
        _push(ssrRenderComponent(_component_KTSidebarLogo, { "sidebar-ref": _ctx.sidebarRef }, null, _parent));
        _push(ssrRenderComponent(_component_KTSidebarMenu, null, null, _parent));
        _push(ssrRenderComponent(_component_KTSidebarFooter, null, null, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
    }
    const _sfc_setup$W = _sfc_main$W.setup;
    _sfc_main$W.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/sidebar/Sidebar.vue");
      return _sfc_setup$W ? _sfc_setup$W(props, ctx) : void 0;
    };
    const KTSidebar = /* @__PURE__ */ _export_sfc(_sfc_main$W, [["ssrRender", _sfc_ssrRender$U]]);
    const __vite_glob_0_177 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTSidebar
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$V = vueExports$1.defineComponent({
      name: "default-layout-content",
      components: {
        RouterView
      },
      setup() {
        return {
          contentWidthFluid
        };
      }
    });
    function _sfc_ssrRender$T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_RouterView = vueExports$1.resolveComponent("RouterView");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        id: "kt_app_content",
        class: "app-content flex-column-fluid"
      }, _attrs))}><div id="kt_app_content_container" class="${ssrRenderClass([{
        "container-fluid": _ctx.contentWidthFluid,
        "container-xxl": !_ctx.contentWidthFluid
      }, "app-container"])}">`);
      _push(ssrRenderComponent(_component_RouterView, null, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$V = _sfc_main$V.setup;
    _sfc_main$V.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/content/Content.vue");
      return _sfc_setup$V ? _sfc_setup$V(props, ctx) : void 0;
    };
    const KTContent = /* @__PURE__ */ _export_sfc(_sfc_main$V, [["ssrRender", _sfc_ssrRender$T]]);
    const __vite_glob_0_156 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTContent
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$U = vueExports$1.defineComponent({
      name: "layout-page-title",
      components: {},
      setup() {
        const route2 = useRoute();
        const pageTitle = vueExports$1.computed(() => {
          return route2.meta.pageTitle;
        });
        const breadcrumbs = vueExports$1.computed(() => {
          return route2.meta.breadcrumbs;
        });
        return {
          pageTitle,
          breadcrumbs,
          pageTitleDisplay,
          pageTitleBreadcrumbDisplay,
          pageTitleDirection
        };
      }
    });
    function _sfc_ssrRender$S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      if (_ctx.pageTitleDisplay) {
        _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
          class: `page-title d-flex flex-${_ctx.pageTitleDirection} justify-content-center flex-wrap me-3`
        }, _attrs))}>`);
        if (_ctx.pageTitle) {
          _push(`<!--[--><h1 class="page-heading d-flex text-gray-900 fw-bold fs-3 flex-column justify-content-center my-0">${ssrInterpolate(_ctx.pageTitle)}</h1>`);
          if (_ctx.pageTitleDirection === "row" && _ctx.pageTitleBreadcrumbDisplay) {
            _push(`<span class="h-20px border-gray-200 border-start mx-3"></span>`);
          } else {
            _push(`<!---->`);
          }
          if (_ctx.breadcrumbs && _ctx.pageTitleBreadcrumbDisplay) {
            _push(`<ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1"><li class="breadcrumb-item text-muted">`);
            _push(ssrRenderComponent(_component_router_link, {
              to: "/",
              class: "text-muted text-hover-primary"
            }, {
              default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
                if (_push2) {
                  _push2(`Home`);
                } else {
                  return [
                    vueExports$1.createTextVNode("Home")
                  ];
                }
              }),
              _: 1
            }, _parent));
            _push(`</li><!--[-->`);
            ssrRenderList(_ctx.breadcrumbs, (item, i) => {
              _push(`<!--[--><li class="breadcrumb-item"><span class="bullet bg-gray-500 w-5px h-2px"></span></li><li class="breadcrumb-item text-muted">${ssrInterpolate(item)}</li><!--]-->`);
            });
            _push(`<!--]--></ul>`);
          } else {
            _push(`<!---->`);
          }
          _push(`<!--]-->`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div>`);
      } else {
        _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "align-items-stretch" }, _attrs))}></div>`);
      }
    }
    const _sfc_setup$U = _sfc_main$U.setup;
    _sfc_main$U.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/toolbar/PageTitle.vue");
      return _sfc_setup$U ? _sfc_setup$U(props, ctx) : void 0;
    };
    const KTPageTitle = /* @__PURE__ */ _export_sfc(_sfc_main$U, [["ssrRender", _sfc_ssrRender$S]]);
    const __vite_glob_0_182 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTPageTitle
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$T = vueExports$1.defineComponent({
      name: "layout-toolbar",
      components: {
        KTPageTitle
      },
      setup() {
        return {
          toolbarWidthFluid
        };
      }
    });
    function _sfc_ssrRender$R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTPageTitle = vueExports$1.resolveComponent("KTPageTitle");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        id: "kt_app_toolbar",
        class: "app-toolbar py-3 py-lg-6"
      }, _attrs))}><div id="kt_app_toolbar_container" class="${ssrRenderClass([{
        "container-fluid": _ctx.toolbarWidthFluid,
        "container-xxl": !_ctx.toolbarWidthFluid
      }, "app-container d-flex flex-stack"])}">`);
      _push(ssrRenderComponent(_component_KTPageTitle, null, null, _parent));
      _push(`<div class="d-flex align-items-center gap-2 gap-lg-3"><a href="#" class="btn btn-sm fw-bold bg-body btn-color-gray-700 btn-active-color-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_create_app">Rollover</a><a href="#" class="btn btn-sm fw-bold btn-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_new_target">Add Target</a></div></div></div>`);
    }
    const _sfc_setup$T = _sfc_main$T.setup;
    _sfc_main$T.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/toolbar/Toolbar.vue");
      return _sfc_setup$T ? _sfc_setup$T(props, ctx) : void 0;
    };
    const KTToolbar = /* @__PURE__ */ _export_sfc(_sfc_main$T, [["ssrRender", _sfc_ssrRender$R]]);
    const __vite_glob_0_183 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTToolbar
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$S = vueExports$1.defineComponent({
      name: "theme-footer",
      components: {},
      setup() {
        return {
          footerWidthFluid,
          footerDisplay
        };
      }
    });
    function _sfc_ssrRender$Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      if (_ctx.footerDisplay) {
        _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
          id: "kt_app_footer",
          class: "app-footer"
        }, _attrs))}><div class="${ssrRenderClass([{
          "container-fluid": _ctx.footerWidthFluid,
          "container-xxl": !_ctx.footerWidthFluid
        }, "app-container d-flex flex-column flex-md-row flex-center flex-md-stack py-3"])}"><div class="text-gray-900 order-2 order-md-1"><span class="text-muted fw-semibold me-1">2022©</span><a href="https://keenthemes.com" target="_blank" class="text-gray-800 text-hover-primary">Keenthemes</a></div><ul class="menu menu-gray-600 menu-hover-primary fw-semibold order-1"><li class="menu-item"><a href="https://keenthemes.com" target="_blank" class="menu-link px-2">About</a></li><li class="menu-item"><a href="https://devs.keenthemes.com" target="_blank" class="menu-link px-2">Support</a></li><li class="menu-item"><a href="https://1.envato.market/EA4JP" target="_blank" class="menu-link px-2">Purchase</a></li></ul></div></div>`);
      } else {
        _push(`<!---->`);
      }
    }
    const _sfc_setup$S = _sfc_main$S.setup;
    _sfc_main$S.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/footer/Footer.vue");
      return _sfc_setup$S ? _sfc_setup$S(props, ctx) : void 0;
    };
    const KTFooter = /* @__PURE__ */ _export_sfc(_sfc_main$S, [["ssrRender", _sfc_ssrRender$Q]]);
    const __vite_glob_0_164 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTFooter
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$R = vueExports$1.defineComponent({
      name: "upgrade-to-pro",
      components: {
        MessageIn,
        MessageOut,
        Dropdown4
      },
      setup() {
        const messagesRef = vueExports$1.ref(null);
        const messagesInRef = vueExports$1.ref(null);
        const messagesOutRef = vueExports$1.ref(null);
        const messages2 = vueExports$1.ref([
          {
            type: "in",
            name: "Brian Cox",
            image: getAssetPath("media/avatars/300-25.jpg"),
            time: "5 Hours",
            text: "How likely are you to recommend our company to your friends and family ?"
          },
          {
            type: "out",
            image: getAssetPath("media/avatars/300-1.jpg"),
            time: "2 Hours",
            text: "Hey there, we’re just writing to let you know that you’ve been subscribed to a repository on GitHub."
          },
          {
            type: "in",
            name: "Brian Cox",
            image: getAssetPath("media/avatars/300-25.jpg"),
            time: "2 Hour",
            text: "Ok, Understood!"
          },
          {
            type: "out",
            image: getAssetPath("media/avatars/300-1.jpg"),
            time: "2 Hours",
            text: "You’ll receive notifications for all issues, pull requests!"
          },
          {
            type: "in",
            name: "Brian Cox",
            image: getAssetPath("media/avatars/300-25.jpg"),
            time: "1 Hour",
            text: "You can unwatch this repository immediately by clicking here: Keenthemes.com"
          },
          {
            type: "out",
            image: getAssetPath("media/avatars/300-1.jpg"),
            time: "4 mins",
            text: "Most purchased Business courses during this sale!"
          },
          {
            type: "in",
            name: "Brian Cox",
            image: getAssetPath("media/avatars/300-25.jpg"),
            time: "2 mins",
            text: "Company BBQ to celebrate the last quater achievements and goals. Food and drinks provided"
          }
        ]);
        const newMessageText = vueExports$1.ref("");
        const addNewMessage = () => {
          if (!newMessageText.value) {
            return;
          }
          messages2.value.push({
            type: "out",
            image: getAssetPath("media/avatars/300-1.jpg"),
            time: "Just now",
            text: newMessageText.value
          });
          setTimeout(() => {
            if (messagesRef.value) {
              messagesRef.value.scrollTop = messagesRef.value.scrollHeight;
            }
          }, 1);
          newMessageText.value = "";
          setTimeout(() => {
            messages2.value.push({
              type: "in",
              name: "Ja Morant",
              image: getAssetPath("media/avatars/300-25.jpg"),
              time: "Just now",
              text: "Thank you for your awesome support!"
            });
            setTimeout(() => {
              if (messagesRef.value) {
                messagesRef.value.scrollTop = messagesRef.value.scrollHeight;
              }
            }, 1);
          }, 2e3);
        };
        return {
          messages: messages2,
          messagesRef,
          newMessageText,
          addNewMessage,
          messagesInRef,
          messagesOutRef,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_Dropdown4 = vueExports$1.resolveComponent("Dropdown4");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_MessageIn = vueExports$1.resolveComponent("MessageIn");
      const _component_MessageOut = vueExports$1.resolveComponent("MessageOut");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        id: "kt_drawer_chat",
        class: "bg-body",
        "data-kt-drawer": "true",
        "data-kt-drawer-name": "chat",
        "data-kt-drawer-activate": "true",
        "data-kt-drawer-overlay": "true",
        "data-kt-drawer-width": "{default:'300px', 'md': '500px'}",
        "data-kt-drawer-direction": "end",
        "data-kt-drawer-toggle": "#kt_drawer_chat_toggle",
        "data-kt-drawer-close": "#kt_drawer_chat_close"
      }, _attrs))}><div class="card w-100" id="kt_drawer_chat_messenger"><div class="card-header pe-5" id="kt_drawer_chat_messenger_header"><div class="card-title"><div class="d-flex justify-content-center flex-column me-3"><a href="#" class="fs-4 fw-bold text-gray-900 text-hover-primary me-1 mb-2 lh-1">Brian Cox</a><div class="mb-0 lh-1"><span class="badge badge-success badge-circle w-10px h-10px me-1"></span><span class="fs-7 fw-semibold text-gray-500">Active</span></div></div></div><div class="card-toolbar"><div class="me-2"><button class="btn btn-sm btn-icon btn-active-icon-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end"><i class="bi bi-three-dots fs-3"></i></button>`);
      _push(ssrRenderComponent(_component_Dropdown4, null, null, _parent));
      _push(`</div><div class="btn btn-sm btn-icon btn-active-icon-primary" id="kt_drawer_chat_close">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-2x"
      }, null, _parent));
      _push(`</div></div></div><div class="card-body" id="kt_drawer_chat_messenger_body"><div class="scroll-y me-n5 pe-5" data-kt-element="messages" data-kt-scroll="true" data-kt-scroll-activate="true" data-kt-scroll-height="auto" data-kt-scroll-dependencies="#kt_drawer_chat_messenger_header, #kt_drawer_chat_messenger_footer" data-kt-scroll-wrappers="#kt_drawer_chat_messenger_body" data-kt-scroll-offset="0px"><!--[-->`);
      ssrRenderList(_ctx.messages, (item, index) => {
        _push(`<!--[-->`);
        if (item.type === "in") {
          _push(ssrRenderComponent(_component_MessageIn, {
            ref_for: true,
            ref: "messagesInRef",
            name: item.name,
            image: item.image,
            time: item.time,
            text: item.text
          }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        if (item.type === "out") {
          _push(ssrRenderComponent(_component_MessageOut, {
            ref_for: true,
            ref: "messagesOutRef",
            image: item.image,
            time: item.time,
            text: item.text
          }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div></div><div class="card-footer pt-4" id="kt_drawer_chat_messenger_footer"><input class="form-control form-control-flush mb-3" data-kt-element="input" placeholder="Type a message"${ssrRenderAttr("value", _ctx.newMessageText)}><div class="d-flex flex-stack"><div class="d-flex align-items-center me-2"><button class="btn btn-sm btn-icon btn-active-light-primary me-1" type="button" data-bs-toggle="tooltip" title="Coming soon"><i class="bi bi-paperclip fs-3"></i></button><button class="btn btn-sm btn-icon btn-active-light-primary me-1" type="button" data-bs-toggle="tooltip" title="Coming soon"><i class="bi bi-upload fs-3"></i></button></div><button class="btn btn-primary" type="button" data-kt-element="send"> Send </button></div></div></div></div>`);
    }
    const _sfc_setup$R = _sfc_main$R.setup;
    _sfc_main$R.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/extras/MessengerDrawer.vue");
      return _sfc_setup$R ? _sfc_setup$R(props, ctx) : void 0;
    };
    const KTMessengerDrawer = /* @__PURE__ */ _export_sfc(_sfc_main$R, [["ssrRender", _sfc_ssrRender$P]]);
    const __vite_glob_0_161 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTMessengerDrawer
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$Q = vueExports$1.defineComponent({
      name: "kt-activity-drawer",
      components: {
        Item1: KTActivityItem1,
        Item2: KTActivityItem2,
        Item3: KTActivityItem3,
        Item4: KTActivityItem4,
        Item5: KTActivityItem5,
        Item6: KTActivityItem6,
        Item7: KTActivityItem7,
        Item8: KTActivityItem8
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Item1 = vueExports$1.resolveComponent("Item1");
      const _component_Item2 = vueExports$1.resolveComponent("Item2");
      const _component_Item3 = vueExports$1.resolveComponent("Item3");
      const _component_Item4 = vueExports$1.resolveComponent("Item4");
      const _component_Item5 = vueExports$1.resolveComponent("Item5");
      const _component_Item6 = vueExports$1.resolveComponent("Item6");
      const _component_Item7 = vueExports$1.resolveComponent("Item7");
      const _component_Item8 = vueExports$1.resolveComponent("Item8");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        id: "kt_activities",
        class: "bg-body",
        "data-kt-drawer": "true",
        "data-kt-drawer-name": "activities",
        "data-kt-drawer-activate": "true",
        "data-kt-drawer-overlay": "true",
        "data-kt-drawer-width": "{default:'300px', 'lg': '900px'}",
        "data-kt-drawer-direction": "end",
        "data-kt-drawer-toggle": "#kt_activities_toggle",
        "data-kt-drawer-close": "#kt_activities_close"
      }, _attrs))}><div class="card shadow-none"><div class="card-header" id="kt_activities_header"><h3 class="card-title fw-bold text-gray-900">Activity Logs</h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-active-light-primary me-n5" id="kt_activities_close">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-1"
      }, null, _parent));
      _push(`</button></div></div><div class="card-body position-relative" id="kt_activities_body"><div id="kt_activities_scroll" class="position-relative scroll-y me-n5 pe-5" data-kt-scroll="true" data-kt-scroll-height="auto" data-kt-scroll-wrappers="#kt_activities_body" data-kt-scroll-dependencies="#kt_activities_header, #kt_activities_footer" data-kt-scroll-offset="5px"><div class="timeline">`);
      _push(ssrRenderComponent(_component_Item1, null, null, _parent));
      _push(ssrRenderComponent(_component_Item2, null, null, _parent));
      _push(ssrRenderComponent(_component_Item3, null, null, _parent));
      _push(ssrRenderComponent(_component_Item4, null, null, _parent));
      _push(ssrRenderComponent(_component_Item5, null, null, _parent));
      _push(ssrRenderComponent(_component_Item6, null, null, _parent));
      _push(ssrRenderComponent(_component_Item7, null, null, _parent));
      _push(ssrRenderComponent(_component_Item8, null, null, _parent));
      _push(`</div></div></div><div class="card-footer py-5 text-center" id="kt_activities_footer"><a href="#" class="btn btn-bg-body text-primary"> View All Activities `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-3 text-primary"
      }, null, _parent));
      _push(`</a></div></div></div>`);
    }
    const _sfc_setup$Q = _sfc_main$Q.setup;
    _sfc_main$Q.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/drawers/ActivityDrawer.vue");
      return _sfc_setup$Q ? _sfc_setup$Q(props, ctx) : void 0;
    };
    const KTActivityDrawer = /* @__PURE__ */ _export_sfc(_sfc_main$Q, [["ssrRender", _sfc_ssrRender$O]]);
    const __vite_glob_0_157 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTActivityDrawer
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$P = vueExports$1.defineComponent({
      name: "kt-help-drawer",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        id: "kt_help",
        class: "bg-body",
        "data-kt-drawer": "true",
        "data-kt-drawer-name": "help",
        "data-kt-drawer-activate": "true",
        "data-kt-drawer-overlay": "true",
        "data-kt-drawer-width": "{default:'350px', 'md': '525px'}",
        "data-kt-drawer-direction": "end",
        "data-kt-drawer-toggle": "#kt_help_toggle",
        "data-kt-drawer-close": "#kt_help_close"
      }, _attrs))}><div class="card shadow-none rounded-0 w-100"><div class="card-header" id="kt_help_header"><h5 class="card-title fw-semibold text-gray-600"> Learn &amp; Get Inspired </h5><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon explore-btn-dismiss me-n5" id="kt_help_close">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button></div></div><div class="card-body" id="kt_help_body"><div id="kt_help_scroll" class="hover-scroll-overlay-y" data-kt-scroll="true" data-kt-scroll-height="auto" data-kt-scroll-wrappers="#kt_help_body" data-kt-scroll-dependencies="#kt_help_header" data-kt-scroll-offset="5px"><div class="rounded border border-dashed border-gray-300 p-6 p-lg-8 mb-10"><h2 class="fw-bold mb-5"> Support at <a href="https://devs.keenthemes.com" class="">devs.keenthemes.com</a></h2><div class="fs-5 fw-semibold mb-5"><span class="text-gray-500">Join our developers community to find answer to your question and help others.</span><a class="explore-link d-none" href="https://keenthemes.com/licensing">FAQs</a></div><a href="https://devs.keenthemes.com" class="btn btn-lg explore-btn-primary w-100">Get Support</a></div><div class="d-flex align-items-center mb-7"><div class="d-flex flex-center w-50px h-50px w-lg-75px h-lg-75px flex-shrink-0 rounded bg-light-warning">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-26",
        "icon-class": "text-warning fs-2x fs-lg-3x"
      }, null, _parent));
      _push(`</div><div class="d-flex flex-stack flex-grow-1 ms-4 ms-lg-6"><div class="d-flex flex-column me-2 me-lg-5"><a href="https://preview.keenthemes.com/metronic8/vue/docs/getting-started/build" class="text-gray-900 text-hover-primary fw-bold fs-6 fs-lg-4 mb-1">Documentation &amp; Videos</a><div class="text-muted fw-semibold fs-7 fs-lg-6"> From guides and video tutorials, to live demos and code examples to get started. </div></div>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "text-gray-500 fs-2"
      }, null, _parent));
      _push(`</div></div><div class="d-flex align-items-center mb-7"><div class="d-flex flex-center w-50px h-50px w-lg-75px h-lg-75px flex-shrink-0 rounded bg-light-primary">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "gift",
        "icon-class": "text-primary fs-2x fs-lg-3x"
      }, null, _parent));
      _push(`</div><div class="d-flex flex-stack flex-grow-1 ms-4 ms-lg-6"><div class="d-flex flex-column me-2 me-lg-5"><a href="https://preview.keenthemes.com/metronic8/vue/docs/base/utilities" class="text-gray-900 text-hover-primary fw-bold fs-6 fs-lg-4 mb-1">Plugins &amp; Components</a><div class="text-muted fw-semibold fs-7 fs-lg-6"> Check out our 300+ in-house components and customized 3rd-party plugins. </div></div>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "text-gray-500 fs-2"
      }, null, _parent));
      _push(`</div></div><div class="d-flex align-items-center mb-7"><div class="d-flex flex-center w-50px h-50px w-lg-75px h-lg-75px flex-shrink-0 rounded bg-light-info">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "design-frame",
        "icon-class": "text-info fs-2x fs-lg-3x"
      }, null, _parent));
      _push(`</div><div class="d-flex flex-stack flex-grow-1 ms-4 ms-lg-6"><div class="d-flex flex-column me-2 me-lg-5">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/builder",
        class: "text-gray-900 text-hover-primary fw-bold fs-6 fs-lg-4 mb-1"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Layout Builder`);
          } else {
            return [
              vueExports$1.createTextVNode("Layout Builder")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="text-muted fw-semibold fs-7 fs-lg-6"> Dynamically modify and preview layout </div></div>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "phone",
        "icon-class": "text-gray-500 fs-2"
      }, null, _parent));
      _push(`</div></div><div class="d-flex align-items-center mb-7"><div class="d-flex flex-center w-50px h-50px w-lg-75px h-lg-75px flex-shrink-0 rounded bg-light-danger">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "wifi",
        "icon-class": "text-danger fs-2x fs-lg-3x"
      }, null, _parent));
      _push(`</div><div class="d-flex flex-stack flex-grow-1 ms-4 ms-lg-6"><div class="d-flex flex-column me-2 me-lg-5"><a href="https://preview.keenthemes.com/metronic8/vue/docs/getting-started/changelog" class="text-gray-900 text-hover-primary fw-bold fs-6 fs-lg-4 mb-1">What&#39;s New</a><div class="text-muted fw-semibold fs-7 fs-lg-6"> Latest features and improvements added with our users feedback in mind. </div></div>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "text-gray-500 fs-2"
      }, null, _parent));
      _push(`</div></div></div></div></div></div>`);
    }
    const _sfc_setup$P = _sfc_main$P.setup;
    _sfc_main$P.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/extras/HelpDrawer.vue");
      return _sfc_setup$P ? _sfc_setup$P(props, ctx) : void 0;
    };
    const KTHelpDrawer = /* @__PURE__ */ _export_sfc(_sfc_main$P, [["ssrRender", _sfc_ssrRender$N]]);
    const __vite_glob_0_160 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTHelpDrawer
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$O = vueExports$1.defineComponent({
      name: "kt-toolbar-buttons",
      components: {}
    });
    function _sfc_ssrRender$M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "engage-toolbar d-flex position-fixed px-5 fw-bold zindex-2 top-50 end-0 transform-90 mt-20 gap-2" }, _attrs))}><button id="kt_help_toggle" class="engage-help-toggle btn btn-flex h-35px bg-body btn-color-gray-700 btn-active-color-gray-900 shadow-sm px-5 rounded-top-0" title="Learn &amp; Get Inspired" data-bs-toggle="tooltip" data-bs-placement="left" data-bs-dismiss="click" data-bs-trigger="hover"> Help </button><a href="https://1.envato.market/EA4JP" target="_blank" class="engage-purchase-link btn btn-flex h-35px bg-body btn-color-gray-700 btn-active-color-gray-900 px-5 shadow-sm rounded-top-0"> Buy Now </a></div>`);
    }
    const _sfc_setup$O = _sfc_main$O.setup;
    _sfc_main$O.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/extras/ToolButtons.vue");
      return _sfc_setup$O ? _sfc_setup$O(props, ctx) : void 0;
    };
    const KTToolButtons = /* @__PURE__ */ _export_sfc(_sfc_main$O, [["ssrRender", _sfc_ssrRender$M]]);
    const __vite_glob_0_163 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTToolButtons
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$N = vueExports$1.defineComponent({
      name: "global-drawers",
      components: {
        KTMessengerDrawer,
        KTActivityDrawer,
        KTHelpDrawer,
        KTToolButtons
      }
    });
    function _sfc_ssrRender$L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTMessengerDrawer = vueExports$1.resolveComponent("KTMessengerDrawer");
      const _component_KTActivityDrawer = vueExports$1.resolveComponent("KTActivityDrawer");
      const _component_KTToolButtons = vueExports$1.resolveComponent("KTToolButtons");
      const _component_KTHelpDrawer = vueExports$1.resolveComponent("KTHelpDrawer");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTMessengerDrawer, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityDrawer, null, null, _parent));
      _push(ssrRenderComponent(_component_KTToolButtons, null, null, _parent));
      _push(ssrRenderComponent(_component_KTHelpDrawer, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$N = _sfc_main$N.setup;
    _sfc_main$N.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/drawers/Drawers.vue");
      return _sfc_setup$N ? _sfc_setup$N(props, ctx) : void 0;
    };
    const KTDrawers = /* @__PURE__ */ _export_sfc(_sfc_main$N, [["ssrRender", _sfc_ssrRender$L]]);
    const __vite_glob_0_158 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTDrawers
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$M = vueExports$1.defineComponent({
      name: "global-modals",
      components: {
        KTUpgradePlanModal,
        KTCreateAppModal: _sfc_main$2f,
        KTNewTargetModal,
        KTViewUsersModal,
        KTInviteFriendsModal
      }
    });
    function _sfc_ssrRender$K(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTUpgradePlanModal = vueExports$1.resolveComponent("KTUpgradePlanModal");
      const _component_KTCreateAppModal = vueExports$1.resolveComponent("KTCreateAppModal");
      const _component_KTNewTargetModal = vueExports$1.resolveComponent("KTNewTargetModal");
      const _component_KTViewUsersModal = vueExports$1.resolveComponent("KTViewUsersModal");
      const _component_KTInviteFriendsModal = vueExports$1.resolveComponent("KTInviteFriendsModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTUpgradePlanModal, null, null, _parent));
      _push(ssrRenderComponent(_component_KTCreateAppModal, null, null, _parent));
      _push(ssrRenderComponent(_component_KTNewTargetModal, null, null, _parent));
      _push(ssrRenderComponent(_component_KTViewUsersModal, null, null, _parent));
      _push(ssrRenderComponent(_component_KTInviteFriendsModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$M = _sfc_main$M.setup;
    _sfc_main$M.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/modals/Modals.vue");
      return _sfc_setup$M ? _sfc_setup$M(props, ctx) : void 0;
    };
    const KTModals = /* @__PURE__ */ _export_sfc(_sfc_main$M, [["ssrRender", _sfc_ssrRender$K]]);
    const __vite_glob_0_172 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTModals
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$L = vueExports$1.defineComponent({
      name: "KTScrollTop",
      components: {},
      setup() {
        vueExports$1.onMounted(() => {
          ScrollTopComponent.reinitialization();
        });
        return {
          scrolltopDispaly,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      if (_ctx.scrolltopDispaly) {
        _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
          id: "kt_scrolltop",
          ref: "kt_scrolltop",
          class: "scrolltop",
          "data-kt-scrolltop": "true"
        }, _attrs))}>`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "arrow-up",
          "icon-class": "fs-2x"
        }, null, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
    }
    const _sfc_setup$L = _sfc_main$L.setup;
    _sfc_main$L.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/extras/ScrollTop.vue");
      return _sfc_setup$L ? _sfc_setup$L(props, ctx) : void 0;
    };
    const KTScrollTop = /* @__PURE__ */ _export_sfc(_sfc_main$L, [["ssrRender", _sfc_ssrRender$J]]);
    const __vite_glob_0_162 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTScrollTop
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$K = vueExports$1.defineComponent({
      name: "customize-layout",
      components: {},
      setup() {
        const storeConfig = useConfigStore();
        const storeTheme = useThemeStore();
        const layoutType = vueExports$1.ref(layout.value);
        const reset = (e) => {
          e.preventDefault();
          localStorage.removeItem(LS_CONFIG_NAME_KEY);
          window.location.reload();
        };
        const onThemeModeChange = (e) => {
          const target = e.target;
          storeConfig.setLayoutConfigProperty("general.mode", target.value);
          storeTheme.setThemeMode(target.value);
          localStorage.setItem(LS_CONFIG_NAME_KEY, JSON.stringify(config.value));
        };
        const submit = (event) => {
          event.preventDefault();
          storeConfig.setLayoutConfigProperty("general.layout", layoutType);
          localStorage.setItem(LS_CONFIG_NAME_KEY, JSON.stringify(config.value));
          window.location.reload();
        };
        return {
          reset,
          onThemeModeChange,
          submit,
          config,
          layoutType,
          themeMode,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<!--[--><button id="kt_app_layout_builder_toggle" class="btn btn-dark app-layout-builder-toggle lh-1 py-4" data-bs-toggle="tooltip" data-bs-placement="left" data-bs-dismiss="click" data-bs-trigger="hover">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "setting-4",
        "icon-class": "fs-4 me-1"
      }, null, _parent));
      _push(`Customize </button><div id="kt_app_layout_builder" class="bg-body drawer drawer-end" data-kt-drawer="true" data-kt-drawer-name="app-settings" data-kt-drawer-activate="true" data-kt-drawer-overlay="true" data-kt-drawer-width="{default:&#39;300px&#39;, &#39;lg&#39;: &#39;380px&#39;}" data-kt-drawer-direction="end" data-kt-drawer-toggle="#kt_app_layout_builder_toggle" data-kt-drawer-close="#kt_app_layout_builder_close"><div class="card border-0 shadow-none rounded-0 w-100"><div class="card-header bgi-position-y-bottom bgi-position-x-end bgi-size-cover bgi-no-repeat rounded-0 border-0 py-4" id="kt_app_layout_builder_header" style="${ssrRenderStyle({
        backgroundImage: `url(
            ${_ctx.getAssetPath("media/misc/layout/customizer-header-bg.jpg")}
          )`
      })}"><h3 class="card-title fs-3 fw-bold text-white flex-column m-0"> Metronic Builder <small class="text-white opacity-50 fs-7 fw-semibold pt-1">Get your product deeply customized</small></h3><div class="card-toolbar"><button type="button" class="btn btn-sm btn-icon btn-color-white p-0 w-20px h-20px rounded-1" id="kt_app_layout_builder_close">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "cross-square",
        "icon-class": "fs-2"
      }, null, _parent));
      _push(`</button></div></div><div class="card-body position-relative" id="kt_app_layout_builder_body"><div id="kt_app_settings_content" class="position-relative scroll-y me-n5 pe-5" data-kt-scroll="true" data-kt-scroll-height="auto" data-kt-scroll-wrappers="#kt_app_layout_builder_body" data-kt-scroll-dependencies="#kt_app_layout_builder_header, #kt_app_layout_builder_footer" data-kt-scroll-offset="5px" style="${ssrRenderStyle({ "height": "710px" })}"><form class="form" id="kt_app_layout_builder_form"><input type="hidden" id="kt_app_layout_builder_action" name="layout-builder[action]"><div class="card-body p-0"><div class="form-group"><div class="mb-6"><h4 class="fw-bold text-gray-900">Theme Mode</h4><div class="fw-semibold text-muted fs-7 d-block lh-1"> Enjoy Dark &amp; Light modes. </div></div><div class="row" data-kt-buttons="true" data-kt-buttons-target=".form-check-image,.form-check-input" data-kt-initialized="1"><div class="col-6"><label class="${ssrRenderClass([[_ctx.themeMode === "light" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/misc/layout/demo1-light.png")
      )} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-solid form-check-sm form-check-success"><input${ssrIncludeBooleanAttr(_ctx.themeMode === "light") ? " checked" : ""} class="form-check-input" type="radio" value="light" name="theme_mode"><div class="form-check-label text-gray-700">Light</div></div></label></div><div class="col-6"><label class="${ssrRenderClass([[_ctx.themeMode === "dark" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/misc/layout/demo1-dark.png")
      )} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-solid form-check-sm form-check-success"><input${ssrIncludeBooleanAttr(_ctx.themeMode === "dark") ? " checked" : ""} class="form-check-input" type="radio" value="dark" name="theme_mode"><div class="form-check-label text-gray-700">Dark</div></div></label></div></div></div><div class="separator separator-dashed my-5"></div><div class="form-group"><div class="d-flex flex-column mb-4"><h4 class="fw-bold text-gray-900">Width Mode</h4><div class="fs-7 fw-semibold text-muted"> Page width options </div></div><div class="d-flex"><div class="form-check form-check-custom form-check-success form-check-solid form-check-sm me-5"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.pageWidth, "default")) ? " checked" : ""} class="form-check-input" type="radio" value="default" id="kt_builder_page_width_default"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_page_width_default">Default</label></div><div class="form-check form-check-custom form-check-success form-check-solid form-check-sm me-5"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.pageWidth, "fluid")) ? " checked" : ""} class="form-check-input" type="radio" value="fluid" id="kt_builder_page_width_fluid"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_page_width_fluid">Fluid</label></div><div class="form-check form-check-custom form-check-success form-check-solid form-check-sm me-5"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.pageWidth, "fixed")) ? " checked" : ""} class="form-check-input" type="radio" value="fixed" id="kt_builder_page_width_fixed"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_page_width_fixed">Fixed</label></div></div></div><div class="separator separator-dashed my-5"></div><div class="form-group"><div class="d-flex flex-column mb-4"><h4 class="fw-bold text-gray-900">Keenicons Style</h4><div><span class="fs-7 fw-semibold text-muted">Select global UI icons style.</span><a class="fw-semibold" href="https://preview.keenthemes.com/html/metronic/docs/icons/keenicons" target="_blank">Learn more</a></div></div><div class="d-flex flex-stack gap-3"><label class="${ssrRenderClass([_ctx.config.general.iconsType === "duotone" && "active", "form-check-image form-check-success w-100 parent-active parent-hover"])}"><div class="form-check-wrapper d-flex flex-center border-gray-200 border-2 mb-0 py-3 px-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-type": "duotone",
        "icon-name": "picture",
        "icon-class": "fs-1 text-gray-500 parent-active-gray-700 parent-hover-gray-700"
      }, null, _parent));
      _push(`<span class="fs-7 fw-semibold ms-2 text-gray-500 parent-active-gray-700 parent-hover-gray-700">Duotone</span></div><div style="${ssrRenderStyle({ "visibility": "hidden", "height": "0", "width": "0", "overflow": "hidden" })}"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.iconsType, "duotone")) ? " checked" : ""} class="form-check-input" type="radio" value="duotone"${ssrIncludeBooleanAttr(_ctx.config.general.iconsType === "duotone") ? " checked" : ""} name="duotone"></div></label><label class="${ssrRenderClass([_ctx.config.general.iconsType === "outline" && "active", "form-check-image form-check-success w-100 parent-active parent-hover"])}"><div class="form-check-wrapper d-flex flex-center border-gray-200 border-2 mb-0 py-3 px-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-type": "outline",
        "icon-name": "picture",
        "icon-class": "fs-1 text-gray-500 parent-active-gray-700 parent-hover-gray-700"
      }, null, _parent));
      _push(`<span class="fs-7 fw-semibold ms-2 text-gray-500 parent-active-gray-700 parent-hover-gray-700">Outline</span></div><div style="${ssrRenderStyle({ "visibility": "hidden", "height": "0", "width": "0", "overflow": "hidden" })}"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.iconsType, "outline")) ? " checked" : ""} class="form-check-input" type="radio" value="outline" name="outline"${ssrIncludeBooleanAttr(_ctx.config.general.iconsType === "outline") ? " checked" : ""}></div></label><label class="${ssrRenderClass([_ctx.config.general.iconsType === "solid" && "active", "form-check-image form-check-success w-100 parent-active parent-hover"])}"><div class="form-check-wrapper d-flex flex-center border-gray-200 border-2 mb-0 py-3 px-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-type": "solid",
        "icon-name": "picture",
        "icon-class": "fs-1 text-gray-500 parent-active-gray-700 parent-hover-gray-700"
      }, null, _parent));
      _push(`<span class="fs-7 fw-semibold ms-2 text-gray-500 parent-active-gray-700 parent-hover-gray-700">Solid</span></div><div style="${ssrRenderStyle({ "visibility": "hidden", "height": "0", "width": "0", "overflow": "hidden" })}"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.iconsType, "solid")) ? " checked" : ""} class="form-check-input" type="radio" value="solid" name="solid"${ssrIncludeBooleanAttr(_ctx.config.general.iconsType === "solid") ? " checked" : ""}></div></label></div></div><div class="separator separator-dashed my-5"></div><div class="form-group"><div class="d-flex flex-column mb-4"><h4 class="fw-bold text-gray-900">Menu Icon</h4><div class="fs-7 fw-semibold text-muted"> Sidebar menu icon options </div></div><div class="d-flex"><div class="form-check form-check-custom form-check-success form-check-solid form-check-sm me-5"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.sidebar.default.menu.iconType, "keenthemes")) ? " checked" : ""} class="form-check-input" type="radio" value="keenthemes" id="kt_builder_keenthemes_icons"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_keenthemes_icons">Keenthemes Icons</label></div><div class="form-check form-check-custom form-check-success form-check-solid form-check-sm me-5"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.sidebar.default.menu.iconType, "bootstrap")) ? " checked" : ""} class="form-check-input" type="radio" value="bootstrap" id="kt_builder_bootstrap_icons"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_bootstrap_icons">Bootstrap Icons</label></div></div></div><div class="separator separator-dashed my-5"></div><div class="form-group"><div class="mb-6"><h4 class="fw-bold text-gray-900">Layouts</h4><span class="fw-semibold text-muted fs-7 lh-1">4 main layouts.${ssrInterpolate(" ")}</span>`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/builder",
        class: "text-primary"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`More layout options`);
          } else {
            return [
              vueExports$1.createTextVNode("More layout options")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="row gy-3" data-kt-buttons="true" data-kt-buttons-target=".form-check-image:not(.disabled),.form-check-input:not([disabled])" data-kt-initialized="1"><div class="col-6"><label class="${ssrRenderClass([[_ctx.layoutType === "dark-sidebar" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/misc/layout/dark-sidebar.png")
      )} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-success form-check-sm form-check-solid"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.layoutType, "dark-sidebar")) ? " checked" : ""} class="form-check-input" type="radio" value="dark-sidebar" name="layoutType"><div class="form-check-label text-gray-700"> Dark Sidebar </div></div></label></div><div class="col-6"><label class="${ssrRenderClass([[_ctx.layoutType === "light-sidebar" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/misc/layout/light-sidebar.png")
      )} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-success form-check-sm form-check-solid"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.layoutType, "light-sidebar")) ? " checked" : ""} class="form-check-input" type="radio" value="light-sidebar" name="layoutType"><div class="form-check-label text-gray-700"> Light Sidebar </div></div></label></div><div class="col-6"><label class="${ssrRenderClass([[_ctx.layoutType === "dark-header" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/misc/layout/dark-header.png")
      )} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-success form-check-sm form-check-solid"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.layoutType, "dark-header")) ? " checked" : ""} class="form-check-input" type="radio" value="dark-header" name="layoutType"><div class="form-check-label text-gray-700"> Dark Header </div></div></label></div><div class="col-6"><label class="${ssrRenderClass([[_ctx.layoutType === "light-header" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/misc/layout/light-header.png")
      )} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-success form-check-sm form-check-solid"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.layoutType, "light-header")) ? " checked" : ""} class="form-check-input" type="radio" value="light-header" name="layoutType"><div class="form-check-label text-gray-700"> Light Header </div></div></label></div></div></div></div></form></div></div><div class="card-footer border-0 d-flex gap-3 pb-9 pt-0" id="kt_app_layout_builder_footer"><button type="button" id="kt_app_layout_builder_preview" class="btn btn-primary flex-grow-1 fw-semibold"><span class="indicator-label">Preview</span></button><button type="button" id="kt_app_layout_builder_reset" class="btn btn-light flex-grow-1 fw-semibold"><span class="indicator-label">Reset</span><span class="indicator-progress">Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span></button></div></div></div><!--]-->`);
    }
    const _sfc_setup$K = _sfc_main$K.setup;
    _sfc_main$K.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/extras/Customize.vue");
      return _sfc_setup$K ? _sfc_setup$K(props, ctx) : void 0;
    };
    const KTCustomize = /* @__PURE__ */ _export_sfc(_sfc_main$K, [["ssrRender", _sfc_ssrRender$I]]);
    const __vite_glob_0_159 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: KTCustomize
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$J = vueExports$1.defineComponent({
      name: "default-layout",
      components: {
        KTHeader,
        KTSidebar,
        KTContent,
        KTToolbar,
        KTFooter,
        KTDrawers,
        KTScrollTop,
        KTModals,
        KTCustomize
      },
      setup() {
        const route2 = useRoute();
        vueExports$1.onBeforeMount(() => {
          LayoutService.init();
        });
        vueExports$1.onMounted(() => {
          vueExports$1.nextTick(() => {
            reinitializeComponents();
          });
        });
        vueExports$1.watch(
          () => route2.path,
          () => {
            vueExports$1.nextTick(() => {
              reinitializeComponents();
            });
          }
        );
      }
    });
    function _sfc_ssrRender$H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTHeader = vueExports$1.resolveComponent("KTHeader");
      const _component_KTSidebar = vueExports$1.resolveComponent("KTSidebar");
      const _component_KTToolbar = vueExports$1.resolveComponent("KTToolbar");
      const _component_KTContent = vueExports$1.resolveComponent("KTContent");
      const _component_KTFooter = vueExports$1.resolveComponent("KTFooter");
      const _component_KTDrawers = vueExports$1.resolveComponent("KTDrawers");
      const _component_KTScrollTop = vueExports$1.resolveComponent("KTScrollTop");
      const _component_KTModals = vueExports$1.resolveComponent("KTModals");
      const _component_KTCustomize = vueExports$1.resolveComponent("KTCustomize");
      _push(`<!--[--><div class="d-flex flex-column flex-root app-root" id="kt_app_root"><div class="app-page flex-column flex-column-fluid" id="kt_app_page">`);
      _push(ssrRenderComponent(_component_KTHeader, null, null, _parent));
      _push(`<div class="app-wrapper flex-column flex-row-fluid" id="kt_app_wrapper">`);
      _push(ssrRenderComponent(_component_KTSidebar, null, null, _parent));
      _push(`<div class="app-main flex-column flex-row-fluid" id="kt_app_main"><div class="d-flex flex-column flex-column-fluid">`);
      _push(ssrRenderComponent(_component_KTToolbar, null, null, _parent));
      _push(`<div id="kt_app_content" class="app-content flex-column-fluid">`);
      _push(ssrRenderComponent(_component_KTContent, null, null, _parent));
      _push(`</div></div>`);
      _push(ssrRenderComponent(_component_KTFooter, null, null, _parent));
      _push(`</div></div></div></div>`);
      _push(ssrRenderComponent(_component_KTDrawers, null, null, _parent));
      _push(ssrRenderComponent(_component_KTScrollTop, null, null, _parent));
      _push(ssrRenderComponent(_component_KTModals, null, null, _parent));
      _push(ssrRenderComponent(_component_KTCustomize, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$J = _sfc_main$J.setup;
    _sfc_main$J.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/DefaultLayout.vue");
      return _sfc_setup$J ? _sfc_setup$J(props, ctx) : void 0;
    };
    const DefaultLayout = /* @__PURE__ */ _export_sfc(_sfc_main$J, [["ssrRender", _sfc_ssrRender$H]]);
    const __vite_glob_0_155 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: DefaultLayout
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$I = vueExports$1.defineComponent({
      name: "kt-quick-links-menu",
      components: {},
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({
        class: "menu menu-sub menu-sub-dropdown menu-column w-250px w-lg-325px",
        "data-kt-menu": "true"
      }, _attrs))}><div class="d-flex flex-column flex-center bgi-no-repeat rounded-top px-9 py-10" style="${ssrRenderStyle({
        backgroundImage: `url(${_ctx.getAssetPath(
          "/media/misc/menu-header-bg.jpg"
        )})`
      })}"><h3 class="text-white fw-semibold mb-3">Quick Links</h3><span class="badge bg-success py-2 px-3">25 pending tasks</span></div><div class="row g-0"><div class="col-6"><a href="#" class="d-flex flex-column flex-center h-100 p-6 bg-hover-light border-end border-bottom">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "euro",
        "icon-class": "fs-3x text-success mb-2"
      }, null, _parent));
      _push(`<span class="fs-5 fw-semibold text-gray-800 mb-0">Accounting</span><span class="fs-7 text-gray-500">eCommerce</span></a></div><div class="col-6"><a href="#" class="d-flex flex-column flex-center h-100 p-6 bg-hover-light border-bottom">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "sms",
        "icon-class": "fs-3x text-success mb-2"
      }, null, _parent));
      _push(`<span class="fs-5 fw-semibold text-gray-800 mb-0">Administration</span><span class="fs-7 text-gray-500">Console</span></a></div><div class="col-6"><a href="#" class="d-flex flex-column flex-center h-100 p-6 bg-hover-light border-end">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "abstract-41",
        "icon-class": "fs-3x text-success mb-2"
      }, null, _parent));
      _push(`<span class="fs-5 fw-semibold text-gray-800 mb-0">Projects</span><span class="fs-7 text-gray-500">Pending Tasks</span></a></div><div class="col-6"><a href="#" class="d-flex flex-column flex-center h-100 p-6 bg-hover-light">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "briefcase",
        "icon-class": "fs-3x text-success mb-2"
      }, null, _parent));
      _push(`<span class="fs-5 fw-semibold text-gray-800 mb-0">Customers</span><span class="fs-7 text-gray-500">Latest cases</span></a></div></div><div class="py-2 text-center border-top"><a href="#" class="btn btn-color-gray-600 btn-active-color-primary"> View All `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-right",
        "icon-class": "fs-5"
      }, null, _parent));
      _push(`</a></div></div>`);
    }
    const _sfc_setup$I = _sfc_main$I.setup;
    _sfc_main$I.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/layouts/default-layout/components/menus/QuickLinksMenu.vue");
      return _sfc_setup$I ? _sfc_setup$I(props, ctx) : void 0;
    };
    const QuickLinksMenu = /* @__PURE__ */ _export_sfc(_sfc_main$I, [["ssrRender", _sfc_ssrRender$G]]);
    const __vite_glob_0_170 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: QuickLinksMenu
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$H = vueExports$1.defineComponent({
      name: "main-dashboard",
      components: {
        Widget1,
        Widget2,
        Widget3,
        Widget4,
        Widget5,
        Widget6,
        Widget7,
        Widget8,
        Widget9,
        Widget10,
        MixedWidget5
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_Widget1 = vueExports$1.resolveComponent("Widget1");
      const _component_Widget2 = vueExports$1.resolveComponent("Widget2");
      const _component_Widget3 = vueExports$1.resolveComponent("Widget3");
      const _component_Widget4 = vueExports$1.resolveComponent("Widget4");
      const _component_Widget5 = vueExports$1.resolveComponent("Widget5");
      const _component_Widget6 = vueExports$1.resolveComponent("Widget6");
      const _component_Widget7 = vueExports$1.resolveComponent("Widget7");
      const _component_Widget8 = vueExports$1.resolveComponent("Widget8");
      const _component_Widget9 = vueExports$1.resolveComponent("Widget9");
      const _component_MixedWidget5 = vueExports$1.resolveComponent("MixedWidget5");
      const _component_Widget10 = vueExports$1.resolveComponent("Widget10");
      _push(`<!--[--><div class="row g-5 g-xl-10 mb-5 mb-xl-10"><div class="col-md-6 col-lg-6 col-xl-6 col-xxl-3 mb-md-5 mb-xl-10">`);
      _push(ssrRenderComponent(_component_Widget1, {
        className: "h-md-50 mb-5 mb-xl-10",
        description: "Active Projects",
        bgColor: "#F1416C",
        bgImage: _ctx.getAssetPath("media/patterns/vector-1.png")
      }, null, _parent));
      _push(ssrRenderComponent(_component_Widget2, {
        className: "h-md-50 mb-5 mb-xl-10",
        icon: false,
        stats: "357",
        description: "Professionals",
        labelColor: "dark",
        textColor: "gray-300"
      }, null, _parent));
      _push(`</div><div class="col-md-6 col-lg-6 col-xl-6 col-xxl-3 mb-md-5 mb-xl-10">`);
      _push(ssrRenderComponent(_component_Widget3, {
        className: "h-md-50 mb-5 mb-xl-10",
        chartSize: 70
      }, null, _parent));
      _push(ssrRenderComponent(_component_Widget4, { className: "h-lg-50" }, null, _parent));
      _push(`</div><div class="col-xxl-6">`);
      _push(ssrRenderComponent(_component_Widget5, { className: "h-md-100" }, null, _parent));
      _push(`</div></div><div class="row gx-5 gx-xl-10"><div class="col-xxl-6 mb-5 mb-xl-10">`);
      _push(ssrRenderComponent(_component_Widget6, {
        className: "h-xl-100",
        height: "275px"
      }, null, _parent));
      _push(`</div><div class="col-xl-6 mb-5 mb-xl-10">`);
      _push(ssrRenderComponent(_component_Widget7, { className: "h-xl-100" }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-10 mb-5 mb-xl-10"><div class="col-xxl-6">`);
      _push(ssrRenderComponent(_component_Widget8, {
        className: "h-xl-100",
        image: _ctx.getAssetPath("media/stock/600x600/img-65.jpg")
      }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_Widget9, {
        className: "h-lg-100",
        height: 300
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-10 mb-5 mb-xl-10"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget5, {
        "widget-classes": "card-xl-stretch mb-xl-8 h-md-100",
        "chart-color": "primary",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div><div class="col-xl-8">`);
      _push(ssrRenderComponent(_component_Widget10, { className: "h-md-100" }, null, _parent));
      _push(`</div></div><!--]-->`);
    }
    const _sfc_setup$H = _sfc_main$H.setup;
    _sfc_main$H.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/Dashboard.vue");
      return _sfc_setup$H ? _sfc_setup$H(props, ctx) : void 0;
    };
    const Dashboard = /* @__PURE__ */ _export_sfc(_sfc_main$H, [["ssrRender", _sfc_ssrRender$F]]);
    const __vite_glob_0_184 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Dashboard
    }, Symbol.toStringTag, { value: "Module" }));
    const LS_BUILDER_TAB_NAME = "layoutBuilderTabIndex_" + {}.VITE_APP_DEMO;
    const _sfc_main$G = vueExports$1.defineComponent({
      name: "layout-builder",
      components: {
        CodeHighlighter
      },
      setup() {
        const storeTheme = useThemeStore();
        const storeBody = useConfigStore();
        const tabIndex = vueExports$1.ref("main");
        const layoutType = vueExports$1.ref(layout.value);
        vueExports$1.onMounted(() => {
          tabIndex.value = localStorage.getItem(LS_BUILDER_TAB_NAME) || "main";
        });
        const reset = (e) => {
          e.preventDefault();
          localStorage.removeItem(LS_CONFIG_NAME_KEY);
          window.location.reload();
        };
        const setActiveTab = (e) => {
          const target = e.target;
          tabIndex.value = target.getAttribute("data-tab-index");
          localStorage.setItem(LS_BUILDER_TAB_NAME, tabIndex.value);
        };
        const onThemeModeChange = (e) => {
          const target = e.target;
          storeBody.setLayoutConfigProperty("general.mode", target.value);
          storeTheme.setThemeMode(target.value);
          localStorage.setItem(LS_CONFIG_NAME_KEY, JSON.stringify(config.value));
        };
        const submit = (event) => {
          event.preventDefault();
          storeBody.setLayoutConfigProperty("general.layout", layoutType);
          localStorage.setItem(LS_CONFIG_NAME_KEY, JSON.stringify(config.value));
          window.location.reload();
        };
        return {
          tabIndex,
          config,
          reset,
          setActiveTab,
          submit,
          themeMode,
          themeName,
          layout,
          layoutType,
          onThemeModeChange,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_CodeHighlighter = vueExports$1.resolveComponent("CodeHighlighter");
      _push(`<!--[--><div class="card mb-10"><div class="card-body d-flex align-items-center py-8"><div class="d-flex h-50px w-50px h-lg-80px w-lg-80px flex-shrink-0 flex-center position-relative align-self-start align-self-lg-center mt-3 mt-lg-0"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="text-primary h-75px w-75px h-lg-100px w-lg-100px position-absolute opacity-5"><path fill="currentColor" d="M10.2,21.23,4.91,18.17a3.58,3.58,0,0,1-1.8-3.11V8.94a3.58,3.58,0,0,1,1.8-3.11L10.2,2.77a3.62,3.62,0,0,1,3.6,0l5.29,3.06a3.58,3.58,0,0,1,1.8,3.11v6.12a3.58,3.58,0,0,1-1.8,3.11L13.8,21.23A3.62,3.62,0,0,1,10.2,21.23Z"></path></svg>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "wrench",
        "icon-class": "fs-2x fs-lg-3x text-primary position-absolute"
      }, null, _parent));
      _push(`</div><div class="ms-6"><p class="list-unstyled text-gray-600 fw-semibold fs-6 p-0 m-0"> The layout builder will assist you in setting up your preferred layout for your project, generating a layout configuration, and previewing it in real-time. To preview the default layout configuration, simply empty your localStorage or press the &#39;Reset&#39; button. </p></div></div></div><div class="card mb-10"><div class="card-header card-header-stretch"><ul class="nav nav-stretch nav-line-tabs fw-semibold border-0" role="tablist" id="kt_layout_builder_tabs"><li class="nav-item"><a class="${ssrRenderClass([{ active: _ctx.tabIndex === "main" }, "nav-link cursor-pointer"])}" data-bs-toggle="tab" data-tab-index="main" role="tab"> Main </a></li><li class="nav-item"><a class="${ssrRenderClass([{ active: _ctx.tabIndex === "layout" }, "nav-link cursor-pointer"])}" data-bs-toggle="tab" data-tab-index="layout" role="tab"> Layout </a></li><li class="nav-item"><a class="${ssrRenderClass([{ active: _ctx.tabIndex === "sidebar" }, "nav-link cursor-pointer"])}" data-bs-toggle="tab" data-tab-index="sidebar" role="tab"> Sidebar </a></li><li class="nav-item"><a class="${ssrRenderClass([{ active: _ctx.tabIndex === "header" }, "nav-link cursor-pointer"])}" data-bs-toggle="tab" data-tab-index="header" role="tab"> Header </a></li></ul></div><form class="form" id="kt_layout_builder_form"><div class="card-body"><div class="tab-content pt-3" id="kt_tabs"><div class="${ssrRenderClass([{ active: _ctx.tabIndex === "main" }, "tab-pane"])}" id="kt_builder_main"><div class="row"><div class="col-lg-6 pe-lg-15"><div class="form-group"><div class="mb-6"><h4 class="fw-bold text-gray-900">Theme Mode</h4><div class="fw-semibold text-muted fs-7 d-block lh-1"> Enjoy Dark &amp; Light modes. </div></div><div class="row" data-kt-buttons="true" data-kt-buttons-target=".form-check-image,.form-check-input" data-kt-initialized="1"><div class="col-6"><label class="${ssrRenderClass([[_ctx.themeMode === "light" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/misc/layout/demo1-light.png")
      )} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-solid form-check-sm form-check-success"><input class="form-check-input" type="radio"${ssrIncludeBooleanAttr(_ctx.themeMode === "light") ? " checked" : ""} value="light" name="theme_mode"><div class="form-check-label text-gray-700"> Light </div></div></label></div><div class="col-6"><label class="${ssrRenderClass([[_ctx.themeMode === "dark" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr(
        "src",
        _ctx.getAssetPath("media/misc/layout/demo1-dark.png")
      )} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-solid form-check-sm form-check-success"><input class="form-check-input" type="radio"${ssrIncludeBooleanAttr(_ctx.themeMode === "dark") ? " checked" : ""} value="dark" name="theme_mode"><div class="form-check-label text-gray-700">Dark</div></div></label></div></div></div></div></div><div class="separator separator-dashed my-6"></div><div class="form-group"><div class="d-flex flex-column mb-4"><h4 class="fw-bold text-gray-900">Width Mode</h4><div class="fs-7 fw-semibold text-muted"> Page width options </div></div><div class="d-flex"><div class="form-check form-check-custom form-check-success form-check-solid form-check-sm me-7"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.pageWidth, "default")) ? " checked" : ""} class="form-check-input" type="radio" value="default" id="kt_builder_page_width_default"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_page_width_default">Default</label></div><div class="form-check form-check-custom form-check-success form-check-solid form-check-sm me-7"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.pageWidth, "fluid")) ? " checked" : ""} class="form-check-input" type="radio" value="fluid" id="kt_builder_page_width_fluid"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_page_width_fluid">Fluid</label></div><div class="form-check form-check-custom form-check-success form-check-solid form-check-sm me-7"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.pageWidth, "fixed")) ? " checked" : ""} class="form-check-input" type="radio" value="fixed" id="kt_builder_page_width_fixed"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_page_width_fixed">Fixed</label></div></div></div><div class="separator separator-dashed my-6"></div><div class="form-group d-flex flex-stack"><div class="d-flex flex-column"><h4 class="fw-bold text-gray-900">Keenicons Style</h4><div><span class="fs-7 fw-semibold text-muted">Select global UI icons style.</span>${ssrInterpolate(" ")} <a class="fw-semibold" href="https://preview.keenthemes.com/html/metronic/docs/icons/keenicons" target="_blank">Learn more</a></div></div><div class="d-flex flex-stack gap-3 mw-lg-600px" data-kt-buttons="true" data-kt-buttons-target=".form-check-image,.form-check-input" data-kt-initialized="1"><label class="${ssrRenderClass([_ctx.config.general.iconsType === "duotone" && "active", "form-check-image form-check-success w-100 parent-active parent-hover"])}"><div class="form-check-wrapper d-flex flex-center border-gray-200 border-2 mb-0 py-3 px-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-type": "duotone",
        "icon-name": "picture",
        "icon-class": "fs-1 text-gray-500 parent-active-gray-700 parent-hover-gray-700"
      }, null, _parent));
      _push(`<span class="fs-7 fw-semibold ms-2 text-gray-500 parent-active-gray-700 parent-hover-gray-700">Duotone</span></div><div style="${ssrRenderStyle({ "visibility": "hidden", "height": "0", "width": "0", "overflow": "hidden" })}"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.iconsType, "duotone")) ? " checked" : ""} class="form-check-input" type="radio" value="duotone"${ssrIncludeBooleanAttr(_ctx.config.general.iconsType === "duotone") ? " checked" : ""}></div></label><label class="${ssrRenderClass([_ctx.config.general.iconsType === "outline" && "active", "form-check-image form-check-success w-100 parent-active parent-hover"])}"><div class="form-check-wrapper d-flex flex-center border-gray-200 border-2 mb-0 py-3 px-4"><i class="ki-outline ki-picture fs-1 text-gray-500 parent-active-gray-700 parent-hover-gray-700"></i><span class="fs-7 fw-semibold ms-2 text-gray-500 parent-active-gray-700 parent-hover-gray-700">Outline</span></div><div style="${ssrRenderStyle({ "visibility": "hidden", "height": "0", "width": "0", "overflow": "hidden" })}"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.iconsType, "outline")) ? " checked" : ""} class="form-check-input" type="radio" value="outline" name="outline"${ssrIncludeBooleanAttr(_ctx.config.general.iconsType === "outline") ? " checked" : ""}></div></label><label class="${ssrRenderClass([_ctx.config.general.iconsType === "solid" && "active", "form-check-image form-check-success w-100 parent-active parent-hover"])}"><div class="form-check-wrapper d-flex flex-center border-gray-200 border-2 mb-0 py-3 px-4"><i class="ki-solid ki-picture fs-1 text-gray-500 parent-active-gray-700 parent-hover-gray-700"></i><span class="fs-7 fw-semibold ms-2 text-gray-500 parent-active-gray-700 parent-hover-gray-700">Solid</span></div><div style="${ssrRenderStyle({ "visibility": "hidden", "height": "0", "width": "0", "overflow": "hidden" })}"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.general.iconsType, "solid")) ? " checked" : ""} class="form-check-input" type="radio" value="solid" name="solid"${ssrIncludeBooleanAttr(_ctx.config.general.iconsType === "solid") ? " checked" : ""}></div></label></div></div><div class="separator separator-dashed my-6"></div><div class="form-group d-flex flex-stack"><div class="d-flex flex-column"><h4 class="fw-bold text-gray-900">Menu Icon</h4><div class="fs-7 fw-semibold text-muted"> Sidebar menu icon options </div></div><div class="d-flex justify-content-end"><div class="form-check form-check-custom form-check-success form-check-solid me-7" data-bs-toggle="tooltip" data-kt-initialized="1"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.sidebar.default.menu.iconType, "bootstrap")) ? " checked" : ""} class="form-check-input w-20px h-20px" type="radio" value="bootstrap" id="kt_builder_icon_svg"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_icon_svg">Bootstrap</label></div><div class="form-check form-check-custom form-check-success form-check-solid me-7" data-bs-toggle="tooltip" data-kt-initialized="1"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.sidebar.default.menu.iconType, "keenthemes")) ? " checked" : ""} class="form-check-input w-20px h-20px" type="radio" value="keenthemes" id="kt_builder_icon_font"><label class="form-check-label text-gray-700 fw-bold text-nowrap" for="kt_builder_icon_font">Keenthemes</label></div></div></div></div><div class="${ssrRenderClass([{ active: _ctx.tabIndex === "layout" }, "tab-pane"])}" id="kt_builder_layout"><div class="mb-6"><h4 class="fw-bold text-gray-900">Layouts</h4><span class="fw-semibold text-muted fs-7 lh-1">4 main layout options.</span></div><div class="row gy-5" data-kt-buttons="true" data-kt-buttons-target=".form-check-image:not(.disabled),.form-check-input:not([disabled])" data-kt-initialized="1"><div class="col-lg-3"><label class="${ssrRenderClass([[_ctx.layoutType === "dark-sidebar" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/misc/layout/dark-sidebar.png"))} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-success form-check-sm form-check-solid"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.layoutType, "dark-sidebar")) ? " checked" : ""} class="form-check-input" type="radio" value="dark-sidebar" name="layoutType"><div class="form-check-label text-gray-800"> Dark Sidebar </div></div></label></div><div class="col-lg-3"><label class="${ssrRenderClass([[_ctx.layoutType === "light-sidebar" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/misc/layout/light-sidebar.png"))} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-success form-check-sm form-check-solid"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.layoutType, "light-sidebar")) ? " checked" : ""} class="form-check-input" type="radio" value="light-sidebar" name="layoutType"><div class="form-check-label text-gray-800"> Light Sidebar </div></div></label></div><div class="col-lg-3"><label class="${ssrRenderClass([[_ctx.layoutType === "dark-header" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/misc/layout/dark-header.png"))} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-success form-check-sm form-check-solid"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.layoutType, "dark-header")) ? " checked" : ""} class="form-check-input" type="radio" value="dark-header" name="layoutType"><div class="form-check-label text-gray-800"> Dark Header </div></div></label></div><div class="col-lg-3"><label class="${ssrRenderClass([[_ctx.layoutType === "light-header" && "active"], "form-check-image form-check-success"])}"><div class="form-check-wrapper"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/misc/layout/light-header.png"))} class="mw-100" alt=""></div><div class="form-check form-check-custom form-check-success form-check-sm form-check-solid"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.layoutType, "light-header")) ? " checked" : ""} class="form-check-input" type="radio" value="light-header" name="layoutType"><div class="form-check-label text-gray-800"> Light Header </div></div></label></div></div></div><div class="${ssrRenderClass([{ active: _ctx.tabIndex === "sidebar" }, "tab-pane"])}" id="kt_builder_sidebar"><div class="form-group d-flex flex-stack"><div class="d-flex flex-column"><h4 class="fw-bold text-gray-900">Minimize</h4><div class="fs-7 fw-semibold text-muted"> Sidebar minimize mode </div></div><div class="d-flex justify-content-end"><div class="form-check form-check-custom form-check-solid form-check-success form-switch"><input${ssrIncludeBooleanAttr(Array.isArray(_ctx.config.sidebar.default.minimize.desktop.enabled) ? ssrLooseContain(_ctx.config.sidebar.default.minimize.desktop.enabled, "true") : _ctx.config.sidebar.default.minimize.desktop.enabled) ? " checked" : ""} class="form-check-input w-45px h-30px" type="checkbox" value="true" id="kt_builder_sidebar_minimize_desktop_enabled"><label class="form-check-label text-gray-700 fw-bold" for="kt_builder_sidebar_minimize_desktop_enabled" data-bs-toggle="tooltip" data-kt-initialized="1">Minimize Toggle</label></div><div class="form-check form-check-custom form-check-solid form-check-success form-switch ms-10"><input${ssrIncludeBooleanAttr(Array.isArray(_ctx.config.sidebar.default.minimize.desktop.hoverable) ? ssrLooseContain(_ctx.config.sidebar.default.minimize.desktop.hoverable, "true") : _ctx.config.sidebar.default.minimize.desktop.hoverable) ? " checked" : ""} class="form-check-input w-45px h-30px" type="checkbox" value="true" id="kt_builder_sidebar_minimize_desktop_hoverable"><label class="form-check-label text-gray-700 fw-bold" for="kt_builder_sidebar_minimize_desktop_hoverable" data-bs-toggle="tooltip" data-kt-initialized="1">Hoverable</label></div><div class="form-check form-check-custom form-check-solid form-check-success form-switch ms-10"><input${ssrIncludeBooleanAttr(Array.isArray(_ctx.config.sidebar.default.minimize.desktop.default) ? ssrLooseContain(_ctx.config.sidebar.default.minimize.desktop.default, "true") : _ctx.config.sidebar.default.minimize.desktop.default) ? " checked" : ""} class="form-check-input w-45px h-30px" type="checkbox" value="true" id="kt_builder_sidebar_minimize_desktop_default"><label class="form-check-label text-gray-700 fw-bold" for="kt_builder_sidebar_minimize_desktop_default" data-bs-toggle="tooltip" data-kt-initialized="1">Default Minimized</label></div></div></div></div><div class="${ssrRenderClass([{ active: _ctx.tabIndex === "header" }, "tab-pane"])}" id="kt_builder_header"><div class="tab-pane active show" id="kt_builder_header" role="tabpanel"><div class="form-group d-flex flex-stack"><div class="d-flex flex-column"><h4 class="fw-bold text-gray-900">Fixed</h4><div class="fs-7 fw-semibold text-muted"> Fixed toolbar mode </div></div><div class="d-flex justify-content-end"><div class="form-check form-check-custom form-check-solid form-check-success form-switch me-10"><input${ssrIncludeBooleanAttr(Array.isArray(_ctx.config.header.default.fixed.desktop) ? ssrLooseContain(_ctx.config.header.default.fixed.desktop, "true") : _ctx.config.header.default.fixed.desktop) ? " checked" : ""} class="form-check-input w-45px h-30px" type="checkbox" value="true" id="kt_builder_header_fixed_desktop"><label class="form-check-label text-gray-700 fw-bold" for="kt_builder_header_fixed_desktop">Desktop Mode</label></div><div class="form-check form-check-custom form-check-solid form-check-success form-switch"><input${ssrIncludeBooleanAttr(Array.isArray(_ctx.config.header.default.fixed.mobile) ? ssrLooseContain(_ctx.config.header.default.fixed.mobile, "true") : _ctx.config.header.default.fixed.mobile) ? " checked" : ""} class="form-check-input w-45px h-30px" type="checkbox" value="true" id="kt_builder_header_fixed_mobile"><label class="form-check-label text-gray-700 fw-bold" for="kt_builder_header_fixed_mobile">Mobile Mode</label></div></div></div><div class="separator separator-dashed my-6"></div><div class="form-group d-flex flex-stack"><div class="d-flex flex-column"><h4 class="fw-bold text-gray-900">Page Title</h4><div class="fs-7 fw-semibold text-muted"> Page title layout options </div></div><div class="d-flex justify-content-end"><div class="form-check form-check-custom form-check-solid form-check-success form-check-sm me-10"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.pageTitle.direction, "column")) ? " checked" : ""} class="form-check-input" type="radio" value="column" id="kt_builder_page_title_direction_column"><label class="form-check-label text-gray-700 fw-bold" for="kt_builder_page_title_direction_column" data-bs-toggle="tooltip" data-kt-initialized="1">Column</label></div><div class="form-check form-check-custom form-check-solid form-check-success"><input${ssrIncludeBooleanAttr(ssrLooseEqual(_ctx.config.pageTitle.direction, "row")) ? " checked" : ""} class="form-check-input" type="radio" value="row" id="kt_builder_page_title_direction_row"><label class="form-check-label text-gray-700 fw-bold" for="kt_builder_page_title_direction_row" data-bs-toggle="tooltip" data-kt-initialized="1">Row</label></div></div></div></div></div></div></div><div class="card-footer py-6"><div class="row"><div class="col-lg-9"><button type="submit" id="kt_layout_builder_preview" class="btn btn-primary me-2"><span class="indicator-label"> Preview </span><span class="indicator-progress"> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span></button><button type="button" id="kt_layout_builder_reset" class="btn btn-active-light btn-color-muted fw-semibold"> Reset </button></div></div></div></form></div><div class="card"><div class="card-body p-10 p-lg-15"><h1 class="anchor fw-bold mb-5" id="overview">Generated configuration</h1><div class="py-5"> This config is used as a <b>${ssrInterpolate(_ctx.themeName)}</b> layout config, you can update default values inside file <code>src/layouts/default-layout/config/DefaultLayoutConfig.ts</code></div>`);
      _push(ssrRenderComponent(_component_CodeHighlighter, { lang: "json" }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(_ctx.config)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(_ctx.config), 1)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div><!--]-->`);
    }
    const _sfc_setup$G = _sfc_main$G.setup;
    _sfc_main$G.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/LayoutBuilder.vue");
      return _sfc_setup$G ? _sfc_setup$G(props, ctx) : void 0;
    };
    const LayoutBuilder = /* @__PURE__ */ _export_sfc(_sfc_main$G, [["ssrRender", _sfc_ssrRender$E]]);
    const __vite_glob_0_185 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: LayoutBuilder
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$F = vueExports$1.defineComponent({
      name: "apps-calendar",
      components: {
        CalendarApp1
      }
    });
    function _sfc_ssrRender$D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_CalendarApp1 = vueExports$1.resolveComponent("CalendarApp1");
      _push(ssrRenderComponent(_component_CalendarApp1, _attrs, null, _parent));
    }
    const _sfc_setup$F = _sfc_main$F.setup;
    _sfc_main$F.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/Calendar.vue");
      return _sfc_setup$F ? _sfc_setup$F(props, ctx) : void 0;
    };
    const Calendar = /* @__PURE__ */ _export_sfc(_sfc_main$F, [["ssrRender", _sfc_ssrRender$D]]);
    const __vite_glob_0_186 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Calendar
    }, Symbol.toStringTag, { value: "Module" }));
    const contacts = [
      {
        name: "Melody Macy",
        email: "melody@altbox.com",
        time: "1 week",
        color: "danger"
      },
      {
        image: getAssetPath("media/avatars/300-1.jpg"),
        name: "Max Smith",
        email: "max@kt.com",
        time: "5 hrs",
        color: "danger"
      },
      {
        image: getAssetPath("media/avatars/300-5.jpg"),
        name: "Sean Bean",
        email: "sean@dellito.com",
        time: "20 hrs",
        color: "danger"
      },
      {
        image: getAssetPath("media/avatars/300-25.jpg"),
        name: "Brian Cox",
        email: "brian@exchange.com",
        time: "2 weeks",
        online: true,
        color: "danger"
      },
      {
        name: "Mikaela Collins",
        email: "mikaela@pexcom.com",
        time: "5 hrs",
        online: true,
        color: "warning"
      },
      {
        image: getAssetPath("media/avatars/300-9.jpg"),
        name: "Francis Mitcham",
        email: "f.mitcham@kpmg.com.au",
        time: "20 hrs",
        online: true,
        color: "danger"
      },
      {
        name: "Olivia Wild",
        email: "olivia@corpmail.com",
        time: "3 hrs",
        color: "danger"
      },
      {
        name: "Neil Owen",
        email: "owen.neil@gmail.com",
        time: "3 hrs",
        color: "primary"
      },
      {
        image: getAssetPath("media/avatars/300-23.jpg"),
        name: "Dan Wilson",
        email: "dam@consilting.com",
        time: "3 hrs",
        color: "danger"
      },
      {
        name: "Emma Bold",
        email: "emma@intenso.com",
        time: "1 week",
        online: true,
        color: "danger"
      }
    ];
    const _sfc_main$E = vueExports$1.defineComponent({
      name: "private-chat",
      components: {
        MessageIn,
        MessageOut,
        Dropdown4
      },
      setup() {
        const messagesRef = vueExports$1.ref(null);
        const messagesInRef = vueExports$1.ref(null);
        const messagesOutRef = vueExports$1.ref(null);
        const route2 = useRoute();
        const messages2 = vueExports$1.ref([
          {
            type: "in",
            name: "Brian Cox",
            image: getAssetPath("media/avatars/300-25.jpg"),
            time: "5 Hours",
            text: "How likely are you to recommend our company to your friends and family ?"
          },
          {
            type: "out",
            image: getAssetPath("media/avatars/300-1.jpg"),
            time: "2 Hours",
            text: "Hey there, we’re just writing to let you know that you’ve been subscribed to a repository on GitHub."
          },
          {
            type: "in",
            name: "Brian Cox",
            image: getAssetPath("media/avatars/300-25.jpg"),
            time: "2 Hour",
            text: "Ok, Understood!"
          },
          {
            type: "out",
            image: getAssetPath("media/avatars/300-1.jpg"),
            time: "2 Hours",
            text: "You’ll receive notifications for all issues, pull requests!"
          },
          {
            type: "in",
            name: "Brian Cox",
            image: getAssetPath("media/avatars/300-25.jpg"),
            time: "1 Hour",
            text: "You can unwatch this repository immediately by clicking here: Keenthemes.com"
          },
          {
            type: "out",
            image: getAssetPath("media/avatars/300-1.jpg"),
            time: "4 mins",
            text: "Most purchased Business courses during this sale!"
          },
          {
            type: "in",
            name: "Brian Cox",
            image: getAssetPath("media/avatars/300-25.jpg"),
            time: "2 mins",
            text: "Company BBQ to celebrate the last quater achievements and goals. Food and drinks provided"
          }
        ]);
        const newMessageText = vueExports$1.ref("");
        const addNewMessage = () => {
          if (!newMessageText.value) {
            return;
          }
          messages2.value.push({
            type: "out",
            image: getAssetPath("media/avatars/300-1.jpg"),
            time: "Just now",
            text: newMessageText.value
          });
          setTimeout(() => {
            if (messagesRef.value) {
              messagesRef.value.scrollTop = messagesRef.value.scrollHeight;
            }
          }, 1);
          newMessageText.value = "";
          setTimeout(() => {
            messages2.value.push({
              type: "in",
              name: "Ja Morant",
              image: getAssetPath("media/avatars/300-25.jpg"),
              time: "Just now",
              text: "Thank you for your awesome support!"
            });
            setTimeout(() => {
              if (messagesRef.value) {
                messagesRef.value.scrollTop = messagesRef.value.scrollHeight;
              }
            }, 1);
          }, 2e3);
        };
        const isGroupChat = vueExports$1.computed(() => {
          return route2.path.indexOf("/group-chat") !== -1;
        });
        return {
          messages: messages2,
          messagesRef,
          newMessageText,
          addNewMessage,
          messagesInRef,
          messagesOutRef,
          contacts,
          isGroupChat,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown4 = vueExports$1.resolveComponent("Dropdown4");
      const _component_MessageIn = vueExports$1.resolveComponent("MessageIn");
      const _component_MessageOut = vueExports$1.resolveComponent("MessageOut");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "d-flex flex-column flex-lg-row" }, _attrs))}><div class="flex-column flex-lg-row-auto w-100 w-lg-300px w-xl-400px mb-10 mb-lg-0"><div class="card card-flush"><div class="card-header pt-7" id="kt_chat_contacts_header"><form class="w-100 position-relative" autocomplete="off">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "magnifier",
        "icon-class": "fs-2 fs-lg-1 text-gray-500 position-absolute top-50 ms-5 translate-middle-y"
      }, null, _parent));
      _push(`<input type="text" class="form-control form-control-solid px-15" name="search" value="" placeholder="Search by username or email..."></form></div><div class="card-body pt-5" id="kt_chat_contacts_body"><div class="scroll-y me-n5 pe-5 h-200px h-lg-auto" data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_header, #kt_toolbar, #kt_footer, #kt_chat_contacts_header" data-kt-scroll-wrappers="#kt_content, #kt_chat_contacts_body" data-kt-scroll-offset="0px"><!--[-->`);
      ssrRenderList(_ctx.contacts, (item, index) => {
        _push(`<div class="d-flex flex-stack py-4"><div class="d-flex align-items-center"><div class="symbol symbol-45px symbol-circle">`);
        if (item.image) {
          _push(`<img${ssrRenderAttr("src", item.image)} alt="">`);
        } else {
          _push(`<span class="${ssrRenderClass([`bg-light-${item.color} text-${item.color}`, "symbol-label fs-6 fw-bold"])}">${ssrInterpolate(item.name.charAt(0))}</span>`);
        }
        if (item.online) {
          _push(`<div class="symbol-badge bg-success start-100 top-100 border-4 h-15px w-15px ms-n2 mt-n2"></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div><div class="ms-5"><a href="#" class="fs-5 fw-bold text-gray-900 text-hover-primary mb-2">${ssrInterpolate(item.name)}</a><div class="fw-semibold text-gray-500">${ssrInterpolate(item.email)}</div></div></div><div class="d-flex flex-column align-items-end ms-2"><span class="text-muted fs-7 mb-1">${ssrInterpolate(item.time)}</span></div></div>`);
      });
      _push(`<!--]--></div></div></div></div><div class="flex-lg-row-fluid ms-lg-7 ms-xl-10"><div class="card" id="kt_chat_messenger"><div class="card-header" id="kt_chat_messenger_header"><div class="card-title"><div class="d-flex justify-content-center flex-column me-3">`);
      if (_ctx.isGroupChat) {
        _push(`<div class="symbol-group symbol-hover"><div class="symbol symbol-35px symbol-circle"><img alt="Pic"${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-5.jpg"))}></div><div class="symbol symbol-35px symbol-circle"><img alt="Pic"${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-25.jpg"))}></div><div class="symbol symbol-35px symbol-circle"><span class="symbol-label bg-light-warning text-warning 40px">M</span></div><div class="symbol symbol-35px symbol-circle"><img alt="Pic"${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-9.jpg"))}></div><div class="symbol symbol-35px symbol-circle"><span class="symbol-label bg-light-danger text-danger 40px">O</span></div><div class="symbol symbol-35px symbol-circle"><span class="symbol-label bg-light-primary text-primary 40px">N</span></div><div class="symbol symbol-35px symbol-circle"><img alt="Pic"${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-23.jpg"))}></div><a href="#" class="symbol symbol-35px symbol-circle" data-bs-toggle="modal" data-bs-target="#kt_modal_view_users"><span class="symbol-label fs-8 fw-bold" data-bs-toggle="tooltip" data-bs-trigger="hover" title="" data-bs-original-title="View more users">+42</span></a></div>`);
      } else {
        _push(`<!--[--><a href="#" class="fs-4 fw-bold text-gray-900 text-hover-primary me-1 mb-2 lh-1">Brian Cox</a><div class="mb-0 lh-1"><span class="badge badge-success badge-circle w-10px h-10px me-1"></span><span class="fs-7 fw-semibold text-gray-500">Active</span></div><!--]-->`);
      }
      _push(`</div></div><div class="card-toolbar"><div class="me-n3"><button class="btn btn-sm btn-icon btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end"><i class="bi bi-three-dots fs-2"></i></button>`);
      _push(ssrRenderComponent(_component_Dropdown4, null, null, _parent));
      _push(`</div></div></div><div class="card-body" id="kt_chat_messenger_body"><div class="scroll-y me-n5 pe-5 h-300px h-lg-auto" data-kt-element="messages" data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_header, #kt_app_header, #kt_app_toolbar, #kt_toolbar, #kt_footer, #kt_app_footer, #kt_chat_messenger_header, #kt_chat_messenger_footer" data-kt-scroll-wrappers="#kt_content, #kt_app_content, #kt_chat_messenger_body" data-kt-scroll-offset="5px"><!--[-->`);
      ssrRenderList(_ctx.messages, (item, index) => {
        _push(`<!--[-->`);
        if (item.type === "in") {
          _push(ssrRenderComponent(_component_MessageIn, {
            ref_for: true,
            ref: "messagesInRef",
            name: item.name,
            image: item.image,
            time: item.time,
            text: item.text
          }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        if (item.type === "out") {
          _push(ssrRenderComponent(_component_MessageOut, {
            ref_for: true,
            ref: "messagesOutRef",
            image: item.image,
            time: item.time,
            text: item.text
          }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div></div><div class="card-footer pt-4" id="kt_chat_messenger_footer"><input${ssrRenderAttr("value", _ctx.newMessageText)} class="form-control form-control-flush mb-3" data-kt-element="input" placeholder="Type a message"><div class="d-flex flex-stack"><div class="d-flex align-items-center me-2"><button class="btn btn-sm btn-icon btn-active-light-primary me-1" type="button" data-bs-toggle="tooltip" title="Coming soon"><i class="bi bi-paperclip fs-3"></i></button><button class="btn btn-sm btn-icon btn-active-light-primary me-1" type="button" data-bs-toggle="tooltip" title="Coming soon"><i class="bi bi-upload fs-3"></i></button></div><button class="btn btn-primary" type="button" data-kt-element="send"> Send </button></div></div></div></div></div>`);
    }
    const _sfc_setup$E = _sfc_main$E.setup;
    _sfc_main$E.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/chat/Chat.vue");
      return _sfc_setup$E ? _sfc_setup$E(props, ctx) : void 0;
    };
    const Chat = /* @__PURE__ */ _export_sfc(_sfc_main$E, [["ssrRender", _sfc_ssrRender$C]]);
    const __vite_glob_0_187 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Chat
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$D = vueExports$1.defineComponent({
      name: "drawer-chat",
      components: {
        Card4
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_Card4 = vueExports$1.resolveComponent("Card4");
      _push(`<!--[--><div class="d-flex flex-wrap flex-stack mb-6"><h3 class="fw-bold my-2"> My Contacts <span class="fs-6 text-gray-400 fw-semibold ms-1">(59)</span></h3><div class="d-flex my-2"><select name="status" data-control="select2" data-hide-search="true" class="form-select form-select-white form-select-sm w-125px"><option value="Online" selected>Online</option><option value="Pending">Pending</option><option value="Declined">Declined</option><option value="Accepted">Accepted</option></select></div></div><div class="row g-6 g-xl-9">`);
      _push(ssrRenderComponent(_component_Card4, {
        name: "Emma Smith",
        position: "Art Director",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-6.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Melody Macy",
        position: "Marketing Analytic",
        online: true,
        initials: "M",
        color: "danger",
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Max Smith",
        position: "Software Enginer",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-1.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Sean Bean",
        position: "Web Developer",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-5.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Brian Cox",
        position: "UI/UX Designer",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-25.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Mikaela Collins",
        position: "Head Of Marketing",
        online: true,
        initials: "M",
        color: "warning",
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Francis Mitcham",
        position: "Software Arcitect",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-9.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Olivia Wild",
        position: "System Admin",
        online: true,
        initials: "O",
        color: "danger",
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Neil Owen",
        position: "Account Manager",
        online: true,
        initials: "N",
        color: "primary",
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Dan Wilson",
        position: "Web Desinger",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-23.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Emma Bold",
        position: "Corporate Finance",
        online: true,
        initials: "E",
        color: "danger",
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card4, {
        name: "Ana Crown",
        position: "Customer Relationship",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-12.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(`</div><div class="d-flex flex-stack flex-wrap pt-10"><div class="fs-6 fw-semibold text-gray-700"> Showing 1 to 10 of 50 entries </div><ul class="pagination"><li class="page-item previous"><a href="#" class="page-link"><i class="previous"></i></a></li><li class="page-item active"><a href="#" class="page-link">1</a></li><li class="page-item"><a href="#" class="page-link">2</a></li><li class="page-item"><a href="#" class="page-link">3</a></li><li class="page-item"><a href="#" class="page-link">4</a></li><li class="page-item"><a href="#" class="page-link">5</a></li><li class="page-item"><a href="#" class="page-link">6</a></li><li class="page-item next"><a href="#" class="page-link"><i class="next"></i></a></li></ul></div><!--]-->`);
    }
    const _sfc_setup$D = _sfc_main$D.setup;
    _sfc_main$D.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/chat/DrawerChat.vue");
      return _sfc_setup$D ? _sfc_setup$D(props, ctx) : void 0;
    };
    const DrawerChat = /* @__PURE__ */ _export_sfc(_sfc_main$D, [["ssrRender", _sfc_ssrRender$B]]);
    const __vite_glob_0_188 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: DrawerChat
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$C = vueExports$1.defineComponent({
      name: "customer-details",
      components: {
        PaymentRecords,
        PaymentMethods,
        CreditBalance,
        Invoices: Invoices$1,
        Events: Events$1,
        Logs,
        Earnings,
        Statement,
        Dropdown3,
        NewCardModal: KTNewCardModal
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      const _component_PaymentRecords = vueExports$1.resolveComponent("PaymentRecords");
      const _component_PaymentMethods = vueExports$1.resolveComponent("PaymentMethods");
      const _component_CreditBalance = vueExports$1.resolveComponent("CreditBalance");
      const _component_Invoices = vueExports$1.resolveComponent("Invoices");
      const _component_Logs = vueExports$1.resolveComponent("Logs");
      const _component_Events = vueExports$1.resolveComponent("Events");
      const _component_Earnings = vueExports$1.resolveComponent("Earnings");
      const _component_Statement = vueExports$1.resolveComponent("Statement");
      const _component_NewCardModal = vueExports$1.resolveComponent("NewCardModal");
      _push(`<!--[--><div class="d-flex flex-column flex-xl-row"><div class="flex-column flex-lg-row-auto w-100 w-xl-350px mb-10"><div class="card mb-5 mb-xl-8"><div class="card-body pt-15"><div class="d-flex flex-center flex-column mb-5"><div class="symbol symbol-100px symbol-circle mb-7"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-1.jpg"))} alt="image"></div><a href="#" class="fs-3 text-gray-800 text-hover-primary fw-bold mb-1"> Max Smith </a><div class="fs-5 fw-semibold text-muted mb-6">Software Enginer</div><div class="d-flex flex-wrap flex-center"><div class="border border-gray-300 border-dashed rounded py-3 px-3 mb-3"><div class="fs-4 fw-bold text-gray-700"><span class="w-75px">6,900</span>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-3 text-success"
      }, null, _parent));
      _push(`</div><div class="fw-semibold text-muted">Earnings</div></div><div class="border border-gray-300 border-dashed rounded py-3 px-3 mx-4 mb-3"><div class="fs-4 fw-bold text-gray-700"><span class="w-50px">130</span>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-down",
        "icon-class": "fs-3 text-danger"
      }, null, _parent));
      _push(`</div><div class="fw-semibold text-muted">Tasks</div></div><div class="border border-gray-300 border-dashed rounded py-3 px-3 mb-3"><div class="fs-4 fw-bold text-gray-700"><span class="w-50px">500</span>`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-3 text-success"
      }, null, _parent));
      _push(`</div><div class="fw-semibold text-muted">Hours</div></div></div></div><div class="d-flex flex-stack fs-4 py-3"><div class="fw-bold rotate collapsible" data-bs-toggle="collapse" href="#kt_customer_view_details" role="button" aria-expanded="false" aria-controls="kt_customer_view_details"> Details <span class="ms-2 rotate-180">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "down",
        "icon-class": "fs-3"
      }, null, _parent));
      _push(`</span></div><span data-bs-toggle="tooltip" data-bs-trigger="hover" title="Edit customer details"><a href="#" class="btn btn-sm btn-light-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_update_customer"> Edit </a></span></div><div class="separator separator-dashed my-3"></div><div id="kt_customer_view_details" class="collapse show"><div class="py-5 fs-6"><div class="badge badge-light-info d-inline">Premium user</div><div class="fw-bold mt-5">Account ID</div><div class="text-gray-600">ID-45453423</div><div class="fw-bold mt-5">Billing Email</div><div class="text-gray-600"><a href="#" class="text-gray-600 text-hover-primary">info@keenthemes.com</a></div><div class="fw-bold mt-5">Billing Address</div><div class="text-gray-600"> 101 Collin Street, <br>Melbourne 3000 VIC <br>Australia </div><div class="fw-bold mt-5">Language</div><div class="text-gray-600">English</div><div class="fw-bold mt-5">Upcoming Invoice</div><div class="text-gray-600">54238-8693</div><div class="fw-bold mt-5">Tax ID</div><div class="text-gray-600">TX-8674</div></div></div></div></div><div class="card mb-5 mb-xl-8"><div class="card-header border-0"><div class="card-title"><h3 class="fw-bold m-0">Connected Accounts</h3></div></div><div class="card-body pt-2"><div class="notice d-flex bg-light-primary rounded border-primary border border-dashed mb-9 p-6">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "design-frame",
        "icon-class": "fs-2tx text-primary me-4"
      }, null, _parent));
      _push(`<div class="d-flex flex-stack flex-grow-1"><div class="fw-semibold"><div class="fs-6 text-gray-700"> By connecting an account, you hereby agree to our <a href="#" class="me-1">privacy policy</a>and <a href="#">terms of use</a>. </div></div></div></div><div class="py-2"><div class="d-flex flex-stack"><div class="d-flex"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/google-icon.svg"))} class="w-30px me-6" alt=""><div class="d-flex flex-column"><a href="#" class="fs-5 text-gray-900 text-hover-primary fw-bold">Google</a><div class="fs-6 fw-semibold text-muted"> Plan properly your workflow </div></div></div><div class="d-flex justify-content-end"><label class="form-check form-switch form-switch-sm form-check-custom form-check-solid"><input class="form-check-input" name="google" type="checkbox" value="1" id="kt_modal_connected_accounts_google" checked><span class="form-check-label fw-semibold text-muted" for="kt_modal_connected_accounts_google"></span></label></div></div><div class="separator separator-dashed my-5"></div><div class="d-flex flex-stack"><div class="d-flex"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/github.svg"))} class="w-30px me-6" alt=""><div class="d-flex flex-column"><a href="#" class="fs-5 text-gray-900 text-hover-primary fw-bold">Github</a><div class="fs-6 fw-semibold text-muted"> Keep eye on on your Repositories </div></div></div><div class="d-flex justify-content-end"><label class="form-check form-switch form-switch-sm form-check-custom form-check-solid"><input class="form-check-input" name="github" type="checkbox" value="1" id="kt_modal_connected_accounts_github" checked><span class="form-check-label fw-semibold text-muted" for="kt_modal_connected_accounts_github"></span></label></div></div><div class="separator separator-dashed my-5"></div><div class="d-flex flex-stack"><div class="d-flex"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/slack-icon.svg"))} class="w-30px me-6" alt=""><div class="d-flex flex-column"><a href="#" class="fs-5 text-gray-900 text-hover-primary fw-bold">Slack</a><div class="fs-6 fw-semibold text-muted"> Integrate Projects Discussions </div></div></div><div class="d-flex justify-content-end"><label class="form-check form-switch form-switch-sm form-check-custom form-check-solid"><input class="form-check-input" name="slack" type="checkbox" value="1" id="kt_modal_connected_accounts_slack"><span class="form-check-label fw-semibold text-muted" for="kt_modal_connected_accounts_slack"></span></label></div></div></div></div><div class="card-footer border-0 d-flex justify-content-center pt-0"><button class="btn btn-sm btn-light-primary">Save Changes</button></div></div></div><div class="flex-lg-row-fluid ms-lg-15"><ul class="nav nav-custom nav-tabs nav-line-tabs nav-line-tabs-2x border-0 fs-4 fw-semibold mb-8"><li class="nav-item"><a class="nav-link text-active-primary pb-4 active" data-bs-toggle="tab" href="#kt_customer_view_overview_tab">Overview</a></li><li class="nav-item"><a class="nav-link text-active-primary pb-4" data-bs-toggle="tab" href="#kt_customer_view_overview_events_and_logs_tab">Events &amp; Logs</a></li><li class="nav-item"><a class="nav-link text-active-primary pb-4" data-kt-countup-tabs="true" data-bs-toggle="tab" href="#kt_customer_view_overview_statements">Statements</a></li><li class="nav-item ms-auto"><a href="#" class="btn btn-primary ps-7" data-kt-menu-trigger="click" data-kt-menu-attach="parent" data-kt-menu-placement="bottom-end"> Actions `);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "down",
        "icon-class": "fs-2 me-0"
      }, null, _parent));
      _push(`</a>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</li></ul><div class="tab-content" id="myTabContent"><div class="tab-pane fade show active" id="kt_customer_view_overview_tab" role="tabpanel">`);
      _push(ssrRenderComponent(_component_PaymentRecords, { "card-classes": "mb-6 mb-xl-9" }, null, _parent));
      _push(ssrRenderComponent(_component_PaymentMethods, { "card-classes": "mb-6 mb-xl-9" }, null, _parent));
      _push(ssrRenderComponent(_component_CreditBalance, { "card-classes": "mb-6 mb-xl-9" }, null, _parent));
      _push(ssrRenderComponent(_component_Invoices, { "card-classes": "mb-6 mb-xl-9" }, null, _parent));
      _push(`</div><div class="tab-pane fade" id="kt_customer_view_overview_events_and_logs_tab" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Logs, { "card-classes": "mb-6 mb-xl-9" }, null, _parent));
      _push(ssrRenderComponent(_component_Events, { "card-classes": "mb-6 mb-xl-9" }, null, _parent));
      _push(`</div><div class="tab-pane fade" id="kt_customer_view_overview_statements" role="tabpanel">`);
      _push(ssrRenderComponent(_component_Earnings, { "card-classes": "mb-6 mb-xl-9" }, null, _parent));
      _push(ssrRenderComponent(_component_Statement, { "card-classes": "mb-6 mb-xl-9" }, null, _parent));
      _push(`</div></div></div></div>`);
      _push(ssrRenderComponent(_component_NewCardModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$C = _sfc_main$C.setup;
    _sfc_main$C.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/customers/CustomerDetails.vue");
      return _sfc_setup$C ? _sfc_setup$C(props, ctx) : void 0;
    };
    const CustomerDetails = /* @__PURE__ */ _export_sfc(_sfc_main$C, [["ssrRender", _sfc_ssrRender$A]]);
    const __vite_glob_0_189 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CustomerDetails
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$B = vueExports$1.defineComponent({
      name: "getting-started",
      components: {
        KTModalCard,
        AddCustomerModal
      },
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_AddCustomerModal = vueExports$1.resolveComponent("AddCustomerModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "Welcome!",
        description: "There are no customers added yet. <br/>Kickstart your CRM by adding a your first customer",
        image: _ctx.getIllustrationsPath("2.png"),
        "button-text": "Add Customer",
        "modal-id": "kt_modal_add_customer"
      }, null, _parent));
      _push(ssrRenderComponent(_component_AddCustomerModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$B = _sfc_main$B.setup;
    _sfc_main$B.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/customers/GettingStarted.vue");
      return _sfc_setup$B ? _sfc_setup$B(props, ctx) : void 0;
    };
    const GettingStarted$1 = /* @__PURE__ */ _export_sfc(_sfc_main$B, [["ssrRender", _sfc_ssrRender$z]]);
    const __vite_glob_0_191 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: GettingStarted$1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$A = vueExports$1.defineComponent({
      name: "kt-add-subscription",
      components: {
        AddSummary,
        Customer,
        Products,
        PaymentMethod,
        NewCardModal: KTNewCardModal,
        CreateAccountModal: _sfc_main$2n
      }
    });
    function _sfc_ssrRender$y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_Customer = vueExports$1.resolveComponent("Customer");
      const _component_Products = vueExports$1.resolveComponent("Products");
      const _component_PaymentMethod = vueExports$1.resolveComponent("PaymentMethod");
      const _component_AddSummary = vueExports$1.resolveComponent("AddSummary");
      const _component_NewCardModal = vueExports$1.resolveComponent("NewCardModal");
      const _component_CreateAccountModal = vueExports$1.resolveComponent("CreateAccountModal");
      _push(`<!--[--><div class="d-flex flex-column flex-lg-row"><div class="flex-lg-row-fluid me-lg-15 order-2 order-lg-1 mb-10 mb-lg-0"><form class="form" action="#" id="kt_subscriptions_create_new">`);
      _push(ssrRenderComponent(_component_Customer, null, null, _parent));
      _push(ssrRenderComponent(_component_Products, null, null, _parent));
      _push(ssrRenderComponent(_component_PaymentMethod, null, null, _parent));
      _push(`</form></div><div class="flex-column flex-lg-row-auto w-100 w-lg-250px w-xl-300px mb-10 order-1 order-lg-2">`);
      _push(ssrRenderComponent(_component_AddSummary, null, null, _parent));
      _push(`</div></div>`);
      _push(ssrRenderComponent(_component_NewCardModal, null, null, _parent));
      _push(ssrRenderComponent(_component_CreateAccountModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$A = _sfc_main$A.setup;
    _sfc_main$A.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/subscriptions/AddSubscription.vue");
      return _sfc_setup$A ? _sfc_setup$A(props, ctx) : void 0;
    };
    const AddSubscription = /* @__PURE__ */ _export_sfc(_sfc_main$A, [["ssrRender", _sfc_ssrRender$y]]);
    const __vite_glob_0_192 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: AddSubscription
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$z = vueExports$1.defineComponent({
      name: "kt-getting-started",
      components: {},
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card" }, _attrs))}><div class="card-body p-0"><div class="card-px text-center py-20 my-10"><h2 class="fs-2x fw-bold mb-10">Welcome!</h2><p class="text-gray-500 fs-4 fw-semibold mb-10"> There are no subscriptions added yet.<br> Kickstart your business by adding a your first subscription </p>`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/apps/subscriptions/add-subscription",
        class: "btn btn-primary"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Add Subscription`);
          } else {
            return [
              vueExports$1.createTextVNode("Add Subscription")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="text-center px-4"><img class="mw-100 mh-300px" alt=""${ssrRenderAttr("src", _ctx.getIllustrationsPath("5.png"))}></div></div></div>`);
    }
    const _sfc_setup$z = _sfc_main$z.setup;
    _sfc_main$z.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/subscriptions/GettingStarted.vue");
      return _sfc_setup$z ? _sfc_setup$z(props, ctx) : void 0;
    };
    const GettingStarted = /* @__PURE__ */ _export_sfc(_sfc_main$z, [["ssrRender", _sfc_ssrRender$x]]);
    const __vite_glob_0_193 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: GettingStarted
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$y = vueExports$1.defineComponent({
      name: "kt-subscription-list",
      components: {
        KTDatatable
      },
      setup() {
        const data2 = vueExports$1.ref([
          {
            id: 1,
            customer: "Emma Smith",
            status: "Active",
            color: "success",
            billing: "Auto-debit",
            product: "Basic",
            createdDate: "Oct 25, 2021"
          },
          {
            id: 2,
            customer: "Melody Macy",
            status: "Active",
            color: "success",
            billing: "Manual - Credit Card",
            product: "Basic",
            createdDate: "Mar 10, 2021"
          },
          {
            id: 3,
            customer: "Max Smith",
            status: "Active",
            color: "primary",
            billing: "Manual - Cash",
            product: "Teams Bundle",
            createdDate: "Jul 25, 2021"
          },
          {
            id: 4,
            customer: "Sean Bean",
            status: "Expiring",
            color: "warning",
            billing: "Manual - Paypal",
            product: "Enterprise",
            createdDate: "Aug 19, 2021"
          },
          {
            id: 5,
            customer: "Brian Cox",
            status: "Expiring",
            color: "warning",
            billing: "Auto-debit",
            product: "Basic",
            createdDate: "May 05, 2021"
          },
          {
            id: 6,
            customer: "Mikaela Collins",
            status: "Active",
            color: "success",
            billing: "Auto-debit",
            product: "Enterprise Bundle",
            createdDate: "Aug 19, 2021"
          },
          {
            id: 7,
            customer: "Francis Mitcham",
            status: "Active",
            color: "success",
            billing: "Auto-debit",
            product: "Teams",
            createdDate: "Jun 20, 2021"
          },
          {
            id: 8,
            customer: "Olivia Wild",
            status: "Suspended",
            color: "danger",
            billing: "--",
            product: "Enterprise",
            createdDate: "Jun 24, 2021"
          },
          {
            id: 9,
            customer: "Neil Owen",
            status: "Expiring",
            color: "warning",
            billing: "Auto-debit",
            product: "Basic",
            createdDate: "Aug 19, 2021"
          },
          {
            id: 10,
            customer: "Dan Wilson",
            status: "Active",
            color: "success",
            billing: "Auto-debit",
            product: "Enterprise Bundle",
            createdDate: "Feb 21, 2021"
          },
          {
            id: 11,
            customer: "Emma Bold",
            status: "Active",
            color: "success",
            billing: "Manual - Credit Card",
            product: "Enterprise",
            createdDate: "May 05, 2021"
          },
          {
            id: 12,
            customer: "Ana Crown",
            status: "Active",
            color: "success",
            billing: "Manual - Credit Card",
            product: "Basic",
            createdDate: "Jun 24, 2021"
          },
          {
            id: 13,
            customer: "Robert Doe",
            status: "Suspended",
            color: "danger",
            billing: "--",
            product: "Teams Bundle",
            createdDate: "Jul 25, 2021"
          },
          {
            id: 14,
            customer: "John Miller",
            status: "Active",
            color: "success",
            billing: "Manual - Paypal",
            product: "Enterprise",
            createdDate: "Sep 22, 2021"
          },
          {
            id: 15,
            customer: "Lucy Kunic",
            status: "Active",
            color: "success",
            billing: "Manual - Credit Card",
            product: "Basic",
            createdDate: "Nov 10, 2021"
          },
          {
            id: 16,
            customer: "Neil Owen",
            status: "Suspended",
            color: "danger",
            billing: "--",
            product: "Basic Bundle",
            createdDate: "Jun 20, 2021"
          },
          {
            id: 17,
            customer: "Dan Wilson",
            status: "Expiring",
            color: "warning",
            billing: "Manual - Paypal",
            product: "Enterprise",
            createdDate: "May 05, 2021"
          },
          {
            id: 18,
            customer: "Emma Smith",
            status: "Active",
            color: "success",
            billing: "Auto-debit",
            product: "Teams",
            createdDate: "Apr 15, 2021"
          },
          {
            id: 19,
            customer: "Melody Macy",
            status: "Active",
            color: "success",
            billing: "Manual - Credit Card",
            product: "Basic",
            createdDate: "Oct 25, 2021"
          },
          {
            id: 20,
            customer: "Max Smith",
            status: "Suspended",
            color: "danger",
            billing: "--",
            product: "Basic Bundle",
            createdDate: "Feb 21, 2021"
          }
        ]);
        const headerConfig = vueExports$1.ref([
          {
            columnName: "Customer",
            columnLabel: "customer",
            sortEnabled: true
          },
          {
            columnName: "Status",
            columnLabel: "status",
            sortEnabled: true
          },
          {
            columnName: "Billing",
            columnLabel: "billing",
            sortEnabled: true
          },
          {
            columnName: "Product",
            columnLabel: "product",
            sortEnabled: true
          },
          {
            columnName: "Created Date",
            columnLabel: "createdDate",
            sortEnabled: true
          },
          {
            columnName: "Actions",
            columnLabel: "actions"
          }
        ]);
        const initData = vueExports$1.ref([]);
        vueExports$1.onMounted(() => {
          initData.value.splice(0, data2.value.length, ...data2.value);
        });
        const selectedIds = vueExports$1.ref([]);
        const deleteFewSubscriptions = () => {
          selectedIds.value.forEach((item) => {
            deleteSubscription(item);
          });
          selectedIds.value.length = 0;
        };
        const deleteSubscription = (id) => {
          for (let i = 0; i < data2.value.length; i++) {
            if (data2.value[i].id === id) {
              data2.value.splice(i, 1);
            }
          }
        };
        const sort2 = (sort22) => {
          const reverse = sort22.order === "asc";
          if (sort22.label) {
            arraySort(data2.value, sort22.label, { reverse });
          }
        };
        const onItemSelect = (selectedItems) => {
          selectedIds.value = selectedItems;
        };
        const search = vueExports$1.ref("");
        const searchItems = () => {
          data2.value.splice(0, data2.value.length, ...initData.value);
          if (search.value !== "") {
            let results = [];
            for (let j = 0; j < initData.value.length; j++) {
              if (searchingFunc(initData.value[j], search.value)) {
                results.push(initData.value[j]);
              }
            }
            data2.value.splice(0, data2.value.length, ...results);
          }
          MenuComponent$1.reinitialization();
        };
        const searchingFunc = (obj, value) => {
          for (let key2 in obj) {
            if (!Number.isInteger(obj[key2]) && !(typeof obj[key2] === "object")) {
              if (obj[key2].toLowerCase().indexOf(value.toLowerCase()) != -1) {
                return true;
              }
            }
          }
          return false;
        };
        const onItemsPerPageChange = () => {
          setTimeout(() => {
            MenuComponent$1.reinitialization();
          }, 0);
        };
        return {
          search,
          searchItems,
          data: data2,
          headerConfig,
          sort: sort2,
          onItemSelect,
          selectedIds,
          deleteFewSubscriptions,
          deleteSubscription,
          getAssetPath,
          onItemsPerPageChange
        };
      }
    });
    function _sfc_ssrRender$w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTDatatable = vueExports$1.resolveComponent("KTDatatable");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card" }, _attrs))}><div class="card-header border-0 pt-6"><div class="card-title"><div class="d-flex align-items-center position-relative my-1">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "magnifier",
        "icon-class": "fs-1 position-absolute ms-6"
      }, null, _parent));
      _push(`<input${ssrRenderAttr("value", _ctx.search)} type="text" data-kt-subscription-table-filter="search" class="form-control form-control-solid w-250px ps-14" placeholder="Search Subscriptions"></div></div><div class="card-toolbar">`);
      if (_ctx.selectedIds.length === 0) {
        _push(`<div class="d-flex justify-content-end" data-kt-subscription-table-toolbar="base"><button type="button" class="btn btn-light-primary me-3" data-bs-toggle="modal" data-bs-target="#kt_subscriptions_export_modal">`);
        _push(ssrRenderComponent(_component_KTIcon, {
          "icon-name": "exit-up",
          "icon-class": "fs-2"
        }, null, _parent));
        _push(` Export </button>`);
        _push(ssrRenderComponent(_component_router_link, {
          to: "/apps/subscriptions/add-subscription",
          class: "btn btn-primary"
        }, {
          default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(ssrRenderComponent(_component_KTIcon, {
                "icon-name": "plus",
                "icon-class": "fs-2"
              }, null, _parent2, _scopeId));
              _push2(` Add Subscription `);
            } else {
              return [
                vueExports$1.createVNode(_component_KTIcon, {
                  "icon-name": "plus",
                  "icon-class": "fs-2"
                }),
                vueExports$1.createTextVNode(" Add Subscription ")
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      } else {
        _push(`<div class="d-flex justify-content-end align-items-center"><div class="fw-bold me-5"><span class="me-2">${ssrInterpolate(_ctx.selectedIds.length)}</span>Selected </div><button type="button" class="btn btn-danger"> Delete Selected </button></div>`);
      }
      _push(`</div></div><div class="card-body pt-0">`);
      _push(ssrRenderComponent(_component_KTDatatable, {
        onOnSort: _ctx.sort,
        onOnItemsSelect: _ctx.onItemSelect,
        onOnItemsPerPageChange: _ctx.onItemsPerPageChange,
        data: _ctx.data,
        header: _ctx.headerConfig,
        "checkbox-enabled": true
      }, {
        customer: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_router_link, {
              to: "/apps/subscriptions/view-subscription",
              href: "",
              class: "text-gray-800 text-hover-primary mb-1"
            }, {
              default: vueExports$1.withCtx((_, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`${ssrInterpolate(customer.customer)}`);
                } else {
                  return [
                    vueExports$1.createTextVNode(vueExports$1.toDisplayString(customer.customer), 1)
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
          } else {
            return [
              vueExports$1.createVNode(_component_router_link, {
                to: "/apps/subscriptions/view-subscription",
                href: "",
                class: "text-gray-800 text-hover-primary mb-1"
              }, {
                default: vueExports$1.withCtx(() => [
                  vueExports$1.createTextVNode(vueExports$1.toDisplayString(customer.customer), 1)
                ]),
                _: 2
              }, 1024)
            ];
          }
        }),
        status: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<a href="#" class="text-gray-600 text-hover-primary mb-1"${_scopeId}><div class="${ssrRenderClass(`badge badge-light-${customer.color}`)}"${_scopeId}>${ssrInterpolate(customer.status)}</div></a>`);
          } else {
            return [
              vueExports$1.createVNode("a", {
                href: "#",
                class: "text-gray-600 text-hover-primary mb-1"
              }, [
                vueExports$1.createVNode("div", {
                  class: `badge badge-light-${customer.color}`
                }, vueExports$1.toDisplayString(customer.status), 3)
              ])
            ];
          }
        }),
        billing: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="badge badge-light"${_scopeId}>${ssrInterpolate(customer.billing)}</div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "badge badge-light" }, vueExports$1.toDisplayString(customer.billing), 1)
            ];
          }
        }),
        product: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(customer.product)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(customer.product), 1)
            ];
          }
        }),
        createdDate: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(customer.createdDate)}`);
          } else {
            return [
              vueExports$1.createTextVNode(vueExports$1.toDisplayString(customer.createdDate), 1)
            ];
          }
        }),
        actions: vueExports$1.withCtx(({ row: customer }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<a href="#" class="btn btn-sm btn-light btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end"${_scopeId}>Actions `);
            _push2(ssrRenderComponent(_component_KTIcon, {
              "icon-name": "down",
              "icon-class": "fs-5 m-0"
            }, null, _parent2, _scopeId));
            _push2(`</a><div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4" data-kt-menu="true"${_scopeId}><div class="menu-item px-3"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_router_link, {
              to: "/apps/customers/customer-details",
              class: "menu-link px-3"
            }, {
              default: vueExports$1.withCtx((_, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`View`);
                } else {
                  return [
                    vueExports$1.createTextVNode("View")
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</div><div class="menu-item px-3"${_scopeId}><a class="menu-link px-3"${_scopeId}>Delete</a></div></div>`);
          } else {
            return [
              vueExports$1.createVNode("a", {
                href: "#",
                class: "btn btn-sm btn-light btn-active-light-primary",
                "data-kt-menu-trigger": "click",
                "data-kt-menu-placement": "bottom-end",
                "data-kt-menu-flip": "top-end"
              }, [
                vueExports$1.createTextVNode("Actions "),
                vueExports$1.createVNode(_component_KTIcon, {
                  "icon-name": "down",
                  "icon-class": "fs-5 m-0"
                })
              ]),
              vueExports$1.createVNode("div", {
                class: "menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg-light-primary fw-semibold fs-7 w-125px py-4",
                "data-kt-menu": "true"
              }, [
                vueExports$1.createVNode("div", { class: "menu-item px-3" }, [
                  vueExports$1.createVNode(_component_router_link, {
                    to: "/apps/customers/customer-details",
                    class: "menu-link px-3"
                  }, {
                    default: vueExports$1.withCtx(() => [
                      vueExports$1.createTextVNode("View")
                    ]),
                    _: 1
                  })
                ]),
                vueExports$1.createVNode("div", { class: "menu-item px-3" }, [
                  vueExports$1.createVNode("a", {
                    onClick: ($event) => _ctx.deleteSubscription(customer.id),
                    class: "menu-link px-3"
                  }, "Delete", 8, ["onClick"])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$y = _sfc_main$y.setup;
    _sfc_main$y.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/subscriptions/SubscriptionList.vue");
      return _sfc_setup$y ? _sfc_setup$y(props, ctx) : void 0;
    };
    const SubscriptionList = /* @__PURE__ */ _export_sfc(_sfc_main$y, [["ssrRender", _sfc_ssrRender$w]]);
    const __vite_glob_0_194 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: SubscriptionList
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$x = vueExports$1.defineComponent({
      name: "kt-view-subscription",
      components: {
        ViewDetails,
        Events,
        Invoices,
        ViewSummary
      }
    });
    function _sfc_ssrRender$v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_ViewDetails = vueExports$1.resolveComponent("ViewDetails");
      const _component_Events = vueExports$1.resolveComponent("Events");
      const _component_Invoices = vueExports$1.resolveComponent("Invoices");
      const _component_ViewSummary = vueExports$1.resolveComponent("ViewSummary");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "d-flex flex-column flex-lg-row" }, _attrs))}><div class="flex-lg-row-fluid me-lg-15 order-2 order-lg-1 mb-10 mb-lg-0">`);
      _push(ssrRenderComponent(_component_ViewDetails, null, null, _parent));
      _push(ssrRenderComponent(_component_Events, null, null, _parent));
      _push(ssrRenderComponent(_component_Invoices, null, null, _parent));
      _push(`</div><div class="flex-column flex-lg-row-auto w-lg-250px w-xl-300px mb-10 order-1 order-lg-2">`);
      _push(ssrRenderComponent(_component_ViewSummary, null, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$x = _sfc_main$x.setup;
    _sfc_main$x.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/apps/subscriptions/ViewSubscription.vue");
      return _sfc_setup$x ? _sfc_setup$x(props, ctx) : void 0;
    };
    const ViewSubscription = /* @__PURE__ */ _export_sfc(_sfc_main$x, [["ssrRender", _sfc_ssrRender$v]]);
    const __vite_glob_0_195 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ViewSubscription
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$w = vueExports$1.defineComponent({
      name: "kt-account",
      components: {
        Dropdown3
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_Dropdown3 = vueExports$1.resolveComponent("Dropdown3");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_router_view = vueExports$1.resolveComponent("router-view");
      _push(`<!--[--><div class="card mb-5 mb-xl-10"><div class="card-body pt-9 pb-0"><div class="d-flex flex-wrap flex-sm-nowrap mb-3"><div class="me-7 mb-4"><div class="symbol symbol-100px symbol-lg-160px symbol-fixed position-relative"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/avatars/300-1.jpg"))} alt="image"><div class="position-absolute translate-middle bottom-0 start-100 mb-6 bg-success rounded-circle border border-4 border-white h-20px w-20px"></div></div></div><div class="flex-grow-1"><div class="d-flex justify-content-between align-items-start flex-wrap mb-2"><div class="d-flex flex-column"><div class="d-flex align-items-center mb-2"><a href="#" class="text-gray-800 text-hover-primary fs-2 fw-bold me-1">Max Smith</a><a href="#">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "verify",
        "icon-class": "fs-1 text-primary"
      }, null, _parent));
      _push(`</a><a href="#" class="btn btn-sm btn-light-success fw-bold ms-2 fs-8 py-1 px-3" data-bs-toggle="modal" data-bs-target="#kt_modal_upgrade_plan">Upgrade to Pro</a></div><div class="d-flex flex-wrap fw-semibold fs-6 mb-4 pe-2"><a href="#" class="d-flex align-items-center text-gray-500 text-hover-primary me-5 mb-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "profile-circle",
        "icon-class": "fs-4 me-1"
      }, null, _parent));
      _push(` Developer </a><a href="#" class="d-flex align-items-center text-gray-500 text-hover-primary me-5 mb-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "geolocation",
        "icon-class": "fs-4 me-1"
      }, null, _parent));
      _push(` SF, Bay Area </a><a href="#" class="d-flex align-items-center text-gray-500 text-hover-primary mb-2">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "sms",
        "icon-class": "fs-4 me-1"
      }, null, _parent));
      _push(` max@kt.com </a></div></div><div class="d-flex my-4"><a href="#" class="btn btn-sm btn-light me-2" id="kt_user_follow_button">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "check",
        "icon-class": "fs-3 d-none"
      }, null, _parent));
      _push(` Follow </a><a href="#" class="btn btn-sm btn-primary me-3" data-bs-toggle="modal" data-bs-target="#kt_modal_offer_a_deal">Hire Me</a><div class="me-0"><button class="btn btn-sm btn-icon btn-bg-light btn-active-color-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-flip="top-end"><i class="bi bi-three-dots fs-3"></i></button>`);
      _push(ssrRenderComponent(_component_Dropdown3, null, null, _parent));
      _push(`</div></div></div><div class="d-flex flex-wrap flex-stack"><div class="d-flex flex-column flex-grow-1 pe-8"><div class="d-flex flex-wrap"><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 px-4 me-6 mb-3"><div class="d-flex align-items-center">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-3 text-success me-2"
      }, null, _parent));
      _push(`<div class="fs-2 fw-bold">4500$</div></div><div class="fw-semibold fs-6 text-gray-500">Earnings</div></div><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 px-4 me-6 mb-3"><div class="d-flex align-items-center">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-down",
        "icon-class": "fs-3 text-danger me-2"
      }, null, _parent));
      _push(`<div class="fs-2 fw-bold" data-kt-countup="true" data-kt-countup-value="75"> 75 </div></div><div class="fw-semibold fs-6 text-gray-500">Projects</div></div><div class="border border-gray-300 border-dashed rounded min-w-125px py-3 px-4 me-6 mb-3"><div class="d-flex align-items-center">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "arrow-up",
        "icon-class": "fs-3 text-success me-2"
      }, null, _parent));
      _push(`<div class="fs-2 fw-bold" data-kt-countup="true" data-kt-countup-value="60" data-kt-countup-prefix="%"> 60% </div></div><div class="fw-semibold fs-6 text-gray-500">Success Rate</div></div></div></div><div class="d-flex align-items-center w-200px w-sm-300px flex-column mt-3"><div class="d-flex justify-content-between w-100 mt-auto mb-2"><span class="fw-semibold fs-6 text-gray-500">Profile Compleation</span><span class="fw-bold fs-6">50%</span></div><div class="h-5px mx-3 w-100 bg-light mb-3"><div class="bg-success rounded h-5px" role="progressbar" style="${ssrRenderStyle({ "width": "50%" })}" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div></div></div></div></div></div><div class="d-flex overflow-auto h-55px"><ul class="nav nav-stretch nav-line-tabs nav-line-tabs-2x border-transparent fs-5 fw-bold flex-nowrap"><li class="nav-item">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/crafted/account/overview",
        class: "nav-link text-active-primary me-6",
        "active-class": "active"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Overview `);
          } else {
            return [
              vueExports$1.createTextVNode(" Overview ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li><li class="nav-item">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/crafted/account/settings",
        class: "nav-link text-active-primary me-6",
        "active-class": "active"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(` Settings `);
          } else {
            return [
              vueExports$1.createTextVNode(" Settings ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</li></ul></div></div></div>`);
      _push(ssrRenderComponent(_component_router_view, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$w = _sfc_main$w.setup;
    _sfc_main$w.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/account/Account.vue");
      return _sfc_setup$w ? _sfc_setup$w(props, ctx) : void 0;
    };
    const Account = /* @__PURE__ */ _export_sfc(_sfc_main$w, [["ssrRender", _sfc_ssrRender$u]]);
    const __vite_glob_0_196 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Account
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$v = vueExports$1.defineComponent({
      name: "account-overview",
      components: {
        KTChartWidget1: ChartsWidget1,
        KTListWidget5: ListsWidget5,
        KTTableWidget5: TablesWidget5,
        KTListWidget1: ListsWidget1
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_KTChartWidget1 = vueExports$1.resolveComponent("KTChartWidget1");
      const _component_KTListWidget1 = vueExports$1.resolveComponent("KTListWidget1");
      const _component_KTListWidget5 = vueExports$1.resolveComponent("KTListWidget5");
      const _component_KTTableWidget5 = vueExports$1.resolveComponent("KTTableWidget5");
      const _directive_tooltip = vueExports$1.resolveDirective("tooltip");
      let _temp0, _temp1;
      _push(`<!--[--><div class="card mb-5 mb-xl-10" id="kt_profile_details_view"><div class="card-header cursor-pointer"><div class="card-title m-0"><h3 class="fw-bold m-0">Profile Details</h3></div>`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/account/settings",
        class: "btn btn-primary align-self-center"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Edit Profile`);
          } else {
            return [
              vueExports$1.createTextVNode("Edit Profile")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div class="card-body p-9"><div class="row mb-7"><label class="col-lg-4 fw-semibold text-muted">Full Name</label><div class="col-lg-8"><span class="fw-bold fs-6 text-gray-900">Max Smith</span></div></div><div class="row mb-7"><label class="col-lg-4 fw-semibold text-muted">Company</label><div class="col-lg-8 fv-row"><span class="fw-semibold fs-6">Keenthemes</span></div></div><div class="row mb-7"><label class="col-lg-4 fw-semibold text-muted"> Contact Phone <i${ssrRenderAttrs(_temp0 = vueExports$1.mergeProps({
        class: "fas fa-exclamation-circle ms-1 fs-7",
        title: "Phone number must be active"
      }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp0 ? ssrInterpolate(_temp0.textContent) : _temp0.innerHTML ?? ""}</i></label><div class="col-lg-8 d-flex align-items-center"><span class="fw-bold fs-6 me-2">044 3276 454 935</span><span class="badge badge-success">Verified</span></div></div><div class="row mb-7"><label class="col-lg-4 fw-semibold text-muted">Company Site</label><div class="col-lg-8"><a href="#" class="fw-semibold fs-6 text-dark text-hover-primary">keenthemes.com</a></div></div><div class="row mb-7"><label class="col-lg-4 fw-semibold text-muted"> Country <i${ssrRenderAttrs(_temp1 = vueExports$1.mergeProps({
        class: "fas fa-exclamation-circle ms-1 fs-7",
        title: "Country of origination"
      }, ssrGetDirectiveProps(_ctx, _directive_tooltip)))}>${"textContent" in _temp1 ? ssrInterpolate(_temp1.textContent) : _temp1.innerHTML ?? ""}</i></label><div class="col-lg-8"><span class="fw-bold fs-6 text-gray-900">Germany</span></div></div><div class="row mb-7"><label class="col-lg-4 fw-semibold text-muted">Communication</label><div class="col-lg-8"><span class="fw-bold fs-6 text-gray-900">Email, Phone</span></div></div><div class="row mb-10"><label class="col-lg-4 fw-semibold text-muted">Allow Changes</label><div class="col-lg-8"><span class="fw-semibold fs-6">Yes</span></div></div><div class="notice d-flex bg-light-warning rounded border-warning border border-dashed p-6">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "information-5",
        "icon-class": "fs-2tx text-warning me-4"
      }, null, _parent));
      _push(`<div class="d-flex flex-stack flex-grow-1"><div class="fw-semibold"><h4 class="text-gray-800 fw-bold">We need your attention!</h4><div class="fs-6 text-gray-600"> Your payment was declined. To start using tools, please <a class="fw-bold" href="#">Add Payment Method</a>. </div></div></div></div></div></div><div class="row gy-10 gx-xl-10"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_KTChartWidget1, { "widget-classes": "card-xxl-stretch mb-5 mb-xl-10" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_KTListWidget1, { "widget-classes": "card-xxl-stretch mb-5 mb-xl-10'" }, null, _parent));
      _push(`</div></div><div class="row gy-10 gx-xl-10"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_KTListWidget5, { "widget-classes": "card-xxl-stretch mb-5 mb-xl-10" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_KTTableWidget5, { "widget-classes": "card-xxl-stretch mb-5 mb-xl-10" }, null, _parent));
      _push(`</div></div><!--]-->`);
    }
    const _sfc_setup$v = _sfc_main$v.setup;
    _sfc_main$v.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/account/Overview.vue");
      return _sfc_setup$v ? _sfc_setup$v(props, ctx) : void 0;
    };
    const Overview$1 = /* @__PURE__ */ _export_sfc(_sfc_main$v, [["ssrRender", _sfc_ssrRender$t]]);
    const __vite_glob_0_197 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Overview$1
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$u = vueExports$1.defineComponent({
      name: "account-settings",
      components: {
        ErrorMessage,
        Field,
        VForm: Form
      },
      setup() {
        const submitButton1 = vueExports$1.ref(null);
        const submitButton2 = vueExports$1.ref(null);
        const submitButton3 = vueExports$1.ref(null);
        const submitButton4 = vueExports$1.ref(null);
        const submitButton5 = vueExports$1.ref(null);
        const updateEmailButton = vueExports$1.ref(null);
        const updatePasswordButton = vueExports$1.ref(null);
        const emailFormDisplay = vueExports$1.ref(false);
        const passwordFormDisplay = vueExports$1.ref(false);
        const profileDetailsValidator = Yup.object().shape({
          fname: Yup.string().required().label("First name"),
          lname: Yup.string().required().label("Last name"),
          company: Yup.string().required().label("Company"),
          phone: Yup.string().required().label("Contact phone"),
          website: Yup.string().label("Webside"),
          country: Yup.string().required().label("Country"),
          language: Yup.string().required().label("Language"),
          timezone: Yup.string().required().label("Timezone"),
          currency: Yup.string().required().label("Currency")
        });
        const changeEmail = Yup.object().shape({
          emailaddress: Yup.string().required().email().label("Email"),
          confirmemailpassword: Yup.string().required().label("Password")
        });
        const changePassword = Yup.object().shape({
          currentpassword: Yup.string().required().label("Current password"),
          newpassword: Yup.string().min(4).required().label("Password"),
          confirmpassword: Yup.string().min(4).required().oneOf([Yup.ref("newpassword")], "Passwords must match").label("Password Confirmation")
        });
        const profileDetails = vueExports$1.ref({
          avatar: getAssetPath("media/avatars/300-1.jpg"),
          name: "Max",
          surname: "Smith",
          company: "Keenthemes",
          contactPhone: "044 3276 454 935",
          companySite: "keenthemes.com",
          country: "MY",
          language: "msa",
          timezone: "Kuala Lumpur",
          currency: "USD",
          communications: {
            email: false,
            phone: false
          },
          allowMarketing: false
        });
        const saveChanges1 = () => {
          if (submitButton1.value) {
            submitButton1.value.setAttribute("data-kt-indicator", "on");
            setTimeout(() => {
              var _a2;
              (_a2 = submitButton1.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
            }, 2e3);
          }
        };
        const saveChanges2 = () => {
          if (submitButton2.value) {
            submitButton2.value.setAttribute("data-kt-indicator", "on");
            setTimeout(() => {
              var _a2;
              (_a2 = submitButton2.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
            }, 2e3);
          }
        };
        const saveChanges3 = () => {
          if (submitButton3.value) {
            submitButton3.value.setAttribute("data-kt-indicator", "on");
            setTimeout(() => {
              var _a2;
              (_a2 = submitButton3.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
            }, 2e3);
          }
        };
        const saveChanges4 = () => {
          if (submitButton4.value) {
            submitButton4.value.setAttribute("data-kt-indicator", "on");
            setTimeout(() => {
              var _a2;
              (_a2 = submitButton4.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
            }, 2e3);
          }
        };
        const deactivateAccount = () => {
          if (submitButton5.value) {
            submitButton5.value.setAttribute("data-kt-indicator", "on");
            setTimeout(() => {
              var _a2;
              (_a2 = submitButton5.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
              Swal.fire({
                text: "Email is successfully changed!",
                icon: "success",
                confirmButtonText: "Ok",
                buttonsStyling: false,
                heightAuto: false,
                customClass: {
                  confirmButton: "btn btn-light-primary"
                }
              }).then(() => {
                emailFormDisplay.value = false;
              });
            }, 2e3);
          }
        };
        const updateEmail = () => {
          if (updateEmailButton.value) {
            updateEmailButton.value.setAttribute("data-kt-indicator", "on");
            setTimeout(() => {
              var _a2;
              (_a2 = updateEmailButton.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
              emailFormDisplay.value = false;
            }, 2e3);
          }
        };
        const updatePassword = () => {
          if (updatePasswordButton.value) {
            updatePasswordButton.value.setAttribute("data-kt-indicator", "on");
            setTimeout(() => {
              var _a2;
              (_a2 = updatePasswordButton.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
              Swal.fire({
                text: "Password is successfully changed!",
                icon: "success",
                confirmButtonText: "Ok",
                buttonsStyling: false,
                heightAuto: false,
                customClass: {
                  confirmButton: "btn btn-light-primary"
                }
              }).then(() => {
                passwordFormDisplay.value = false;
              });
            }, 2e3);
          }
        };
        const removeImage = () => {
          profileDetails.value.avatar = "/media/avatars/blank.png";
        };
        return {
          submitButton1,
          submitButton2,
          submitButton3,
          submitButton4,
          submitButton5,
          saveChanges1,
          saveChanges2,
          saveChanges3,
          saveChanges4,
          deactivateAccount,
          profileDetails,
          emailFormDisplay,
          passwordFormDisplay,
          removeImage,
          profileDetailsValidator,
          changeEmail,
          changePassword,
          updateEmailButton,
          updatePasswordButton,
          updateEmail,
          updatePassword,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_VForm = vueExports$1.resolveComponent("VForm");
      const _component_Field = vueExports$1.resolveComponent("Field");
      const _component_ErrorMessage = vueExports$1.resolveComponent("ErrorMessage");
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      _push(`<!--[--><div class="card mb-5 mb-xl-10"><div class="card-header border-0 cursor-pointer" role="button" data-bs-toggle="collapse" data-bs-target="#kt_account_profile_details" aria-expanded="true" aria-controls="kt_account_profile_details"><div class="card-title m-0"><h3 class="fw-bold m-0">Profile Details</h3></div></div><div id="kt_account_profile_details" class="collapse show">`);
      _push(ssrRenderComponent(_component_VForm, {
        id: "kt_account_profile_details_form",
        class: "form",
        novalidate: "",
        onSubmit: ($event) => _ctx.saveChanges1(),
        "validation-schema": _ctx.profileDetailsValidator
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="card-body border-top p-9"${_scopeId}><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label fw-semibold fs-6"${_scopeId}>Avatar</label><div class="col-lg-8"${_scopeId}><div class="image-input image-input-outline" data-kt-image-input="true" style="${ssrRenderStyle({
              backgroundImage: `url(${_ctx.getAssetPath(
                "/media/avatars/blank.png"
              )})`
            })}"${_scopeId}><div class="image-input-wrapper w-125px h-125px" style="${ssrRenderStyle(`background-image: url(${_ctx.profileDetails.avatar})`)}"${_scopeId}></div><label class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow" data-kt-image-input-action="change" data-bs-toggle="tooltip" title="Change avatar"${_scopeId}><i class="bi bi-pencil-fill fs-7"${_scopeId}></i><input type="file" name="avatar" accept=".png, .jpg, .jpeg"${_scopeId}><input type="hidden" name="avatar_remove"${_scopeId}></label><span class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow" data-kt-image-input-action="remove" data-bs-toggle="tooltip" title="Remove avatar"${_scopeId}><i class="bi bi-x fs-2"${_scopeId}></i></span></div><div class="form-text"${_scopeId}>Allowed file types: png, jpg, jpeg.</div></div></div><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label required fw-semibold fs-6"${_scopeId}>Full Name</label><div class="col-lg-8"${_scopeId}><div class="row"${_scopeId}><div class="col-lg-6 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              name: "fname",
              class: "form-control form-control-lg form-control-solid mb-3 mb-lg-0",
              placeholder: "First name",
              modelValue: _ctx.profileDetails.name,
              "onUpdate:modelValue": ($event) => _ctx.profileDetails.name = $event
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "fname" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="col-lg-6 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              name: "lname",
              class: "form-control form-control-lg form-control-solid",
              placeholder: "Last name",
              modelValue: _ctx.profileDetails.surname,
              "onUpdate:modelValue": ($event) => _ctx.profileDetails.surname = $event
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "lname" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div></div></div><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label required fw-semibold fs-6"${_scopeId}>Company</label><div class="col-lg-8 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              name: "company",
              class: "form-control form-control-lg form-control-solid",
              placeholder: "Company name",
              modelValue: _ctx.profileDetails.company,
              "onUpdate:modelValue": ($event) => _ctx.profileDetails.company = $event
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "company" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label fw-semibold fs-6"${_scopeId}><span class="required"${_scopeId}>Contact Phone</span><i class="fas fa-exclamation-circle ms-1 fs-7" data-bs-toggle="tooltip" title="Phone number must be active"${_scopeId}></i></label><div class="col-lg-8 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "tel",
              name: "phone",
              class: "form-control form-control-lg form-control-solid",
              placeholder: "Phone number",
              modelValue: _ctx.profileDetails.contactPhone,
              "onUpdate:modelValue": ($event) => _ctx.profileDetails.contactPhone = $event
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "phone" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label fw-semibold fs-6"${_scopeId}>Company Site</label><div class="col-lg-8 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "text",
              name: "website",
              class: "form-control form-control-lg form-control-solid",
              placeholder: "Company website",
              modelValue: _ctx.profileDetails.companySite,
              "onUpdate:modelValue": ($event) => _ctx.profileDetails.companySite = $event
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "website" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label fw-semibold fs-6"${_scopeId}><span class="required"${_scopeId}>Country</span><i class="fas fa-exclamation-circle ms-1 fs-7" data-bs-toggle="tooltip" title="Country of origination"${_scopeId}></i></label><div class="col-lg-8 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              as: "select",
              name: "country",
              class: "form-select form-select-solid form-select-lg fw-semibold",
              modelValue: _ctx.profileDetails.country,
              "onUpdate:modelValue": ($event) => _ctx.profileDetails.country = $event
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<option value="AF"${_scopeId2}>Afghanistan</option><option value="AX"${_scopeId2}>Aland Islands</option><option value="AL"${_scopeId2}>Albania</option><option value="DZ"${_scopeId2}>Algeria</option><option value="AS"${_scopeId2}>American Samoa</option><option value="AD"${_scopeId2}>Andorra</option><option value="AO"${_scopeId2}>Angola</option><option value="AI"${_scopeId2}>Anguilla</option><option value="AQ"${_scopeId2}>Antarctica</option><option value="AG"${_scopeId2}>Antigua and Barbuda</option><option value="AR"${_scopeId2}>Argentina</option><option value="AM"${_scopeId2}>Armenia</option><option value="AW"${_scopeId2}>Aruba</option><option value="AU"${_scopeId2}>Australia</option><option value="AT"${_scopeId2}>Austria</option><option value="AZ"${_scopeId2}>Azerbaijan</option><option value="BS"${_scopeId2}>Bahamas</option><option value="BH"${_scopeId2}>Bahrain</option><option value="BD"${_scopeId2}>Bangladesh</option><option value="BB"${_scopeId2}>Barbados</option><option value="BY"${_scopeId2}>Belarus</option><option value="BE"${_scopeId2}>Belgium</option><option value="BZ"${_scopeId2}>Belize</option><option value="BJ"${_scopeId2}>Benin</option><option value="BM"${_scopeId2}>Bermuda</option><option value="BT"${_scopeId2}>Bhutan</option><option value="BO"${_scopeId2}>Bolivia, Plurinational State of</option><option value="BQ"${_scopeId2}>Bonaire, Sint Eustatius and Saba</option><option value="BA"${_scopeId2}>Bosnia and Herzegovina</option><option value="BW"${_scopeId2}>Botswana</option><option value="BV"${_scopeId2}>Bouvet Island</option><option value="BR"${_scopeId2}>Brazil</option><option value="IO"${_scopeId2}>British Indian Ocean Territory</option><option value="BN"${_scopeId2}>Brunei Darussalam</option><option value="BG"${_scopeId2}>Bulgaria</option><option value="BF"${_scopeId2}>Burkina Faso</option><option value="BI"${_scopeId2}>Burundi</option><option value="KH"${_scopeId2}>Cambodia</option><option value="CM"${_scopeId2}>Cameroon</option><option value="CA"${_scopeId2}>Canada</option><option value="CV"${_scopeId2}>Cape Verde</option><option value="KY"${_scopeId2}>Cayman Islands</option><option value="CF"${_scopeId2}>Central African Republic</option><option value="TD"${_scopeId2}>Chad</option><option value="CL"${_scopeId2}>Chile</option><option value="CN"${_scopeId2}>China</option><option value="CX"${_scopeId2}>Christmas Island</option><option value="CC"${_scopeId2}>Cocos (Keeling) Islands</option><option value="CO"${_scopeId2}>Colombia</option><option value="KM"${_scopeId2}>Comoros</option><option value="CG"${_scopeId2}>Congo</option><option value="CD"${_scopeId2}> Congo, the Democratic Republic of the </option><option value="CK"${_scopeId2}>Cook Islands</option><option value="CR"${_scopeId2}>Costa Rica</option><option value="CI"${_scopeId2}>Côte d&#39;Ivoire</option><option value="HR"${_scopeId2}>Croatia</option><option value="CU"${_scopeId2}>Cuba</option><option value="CW"${_scopeId2}>Curaçao</option><option value="CY"${_scopeId2}>Cyprus</option><option value="CZ"${_scopeId2}>Czech Republic</option><option value="DK"${_scopeId2}>Denmark</option><option value="DJ"${_scopeId2}>Djibouti</option><option value="DM"${_scopeId2}>Dominica</option><option value="DO"${_scopeId2}>Dominican Republic</option><option value="EC"${_scopeId2}>Ecuador</option><option value="EG"${_scopeId2}>Egypt</option><option value="SV"${_scopeId2}>El Salvador</option><option value="GQ"${_scopeId2}>Equatorial Guinea</option><option value="ER"${_scopeId2}>Eritrea</option><option value="EE"${_scopeId2}>Estonia</option><option value="ET"${_scopeId2}>Ethiopia</option><option value="FK"${_scopeId2}>Falkland Islands (Malvinas)</option><option value="FO"${_scopeId2}>Faroe Islands</option><option value="FJ"${_scopeId2}>Fiji</option><option value="FI"${_scopeId2}>Finland</option><option value="FR"${_scopeId2}>France</option><option value="GF"${_scopeId2}>French Guiana</option><option value="PF"${_scopeId2}>French Polynesia</option><option value="TF"${_scopeId2}>French Southern Territories</option><option value="GA"${_scopeId2}>Gabon</option><option value="GM"${_scopeId2}>Gambia</option><option value="GE"${_scopeId2}>Georgia</option><option value="DE"${_scopeId2}>Germany</option><option value="GH"${_scopeId2}>Ghana</option><option value="GI"${_scopeId2}>Gibraltar</option><option value="GR"${_scopeId2}>Greece</option><option value="GL"${_scopeId2}>Greenland</option><option value="GD"${_scopeId2}>Grenada</option><option value="GP"${_scopeId2}>Guadeloupe</option><option value="GU"${_scopeId2}>Guam</option><option value="GT"${_scopeId2}>Guatemala</option><option value="GG"${_scopeId2}>Guernsey</option><option value="GN"${_scopeId2}>Guinea</option><option value="GW"${_scopeId2}>Guinea-Bissau</option><option value="GY"${_scopeId2}>Guyana</option><option value="HT"${_scopeId2}>Haiti</option><option value="HM"${_scopeId2}>Heard Island and McDonald Islands</option><option value="VA"${_scopeId2}>Holy See (Vatican City State)</option><option value="HN"${_scopeId2}>Honduras</option><option value="HK"${_scopeId2}>Hong Kong</option><option value="HU"${_scopeId2}>Hungary</option><option value="IS"${_scopeId2}>Iceland</option><option value="IN"${_scopeId2}>India</option><option value="ID"${_scopeId2}>Indonesia</option><option value="IR"${_scopeId2}>Iran, Islamic Republic of</option><option value="IQ"${_scopeId2}>Iraq</option><option value="IE"${_scopeId2}>Ireland</option><option value="IM"${_scopeId2}>Isle of Man</option><option value="IL"${_scopeId2}>Israel</option><option value="IT"${_scopeId2}>Italy</option><option value="JM"${_scopeId2}>Jamaica</option><option value="JP"${_scopeId2}>Japan</option><option value="JE"${_scopeId2}>Jersey</option><option value="JO"${_scopeId2}>Jordan</option><option value="KZ"${_scopeId2}>Kazakhstan</option><option value="KE"${_scopeId2}>Kenya</option><option ue="KI"${_scopeId2}>Kiribati</option><option value="KP"${_scopeId2}> Korea, Democratic People&#39;s Republic of </option><option value="KW"${_scopeId2}>Kuwait</option><option value="KG"${_scopeId2}>Kyrgyzstan</option><option value="LA"${_scopeId2}>Lao People&#39;s Democratic Republic</option><option value="LV"${_scopeId2}>Latvia</option><option value="LB"${_scopeId2}>Lebanon</option><option value="LS"${_scopeId2}>Lesotho</option><option value="LR"${_scopeId2}>Liberia</option><option value="LY"${_scopeId2}>Libya</option><option value="LI"${_scopeId2}>Liechtenstein</option><option value="LT"${_scopeId2}>Lithuania</option><option value="LU"${_scopeId2}>Luxembourg</option><option value="MO"${_scopeId2}>Macao</option><option value="MK"${_scopeId2}> Macedonia, the former Yugoslav Republic of </option><option value="MG"${_scopeId2}>Madagascar</option><option value="MW"${_scopeId2}>Malawi</option><option value="MY"${_scopeId2}>Malaysia</option><option value="MV"${_scopeId2}>Maldives</option><option value="ML"${_scopeId2}>Mali</option><option value="MT"${_scopeId2}>Malta</option><option value="MH"${_scopeId2}>Marshall Islands</option><option value="MQ"${_scopeId2}>Martinique</option><option value="MR"${_scopeId2}>Mauritania</option><option value="MU"${_scopeId2}>Mauritius</option><option value="YT"${_scopeId2}>Mayotte</option><option value="MX"${_scopeId2}>Mexico</option><option value="FM"${_scopeId2}>Micronesia, Federated States of</option><option value="MD"${_scopeId2}>Moldova, Republic of</option><option value="MC"${_scopeId2}>Monaco</option><option value="MN"${_scopeId2}>Mongolia</option><option value="ME"${_scopeId2}>Montenegro</option><option value="MS"${_scopeId2}>Montserrat</option><option value="MA"${_scopeId2}>Morocco</option><option value="MZ"${_scopeId2}>Mozambique</option><option value="MM"${_scopeId2}>Myanmar</option><option value="NA"${_scopeId2}>Namibia</option><option value="NR"${_scopeId2}>Nauru</option><option value="NP"${_scopeId2}>Nepal</option><option value="NL"${_scopeId2}>Netherlands</option><option value="NC"${_scopeId2}>New Caledonia</option><option value="NZ"${_scopeId2}>New Zealand</option><option value="NI"${_scopeId2}>Nicaragua</option><option value="NE"${_scopeId2}>Niger</option><option value="NG"${_scopeId2}>Nigeria</option><option value="NU"${_scopeId2}>Niue</option><option value="NF"${_scopeId2}>Norfolk Island</option><option value="MP"${_scopeId2}>Northern Mariana Islands</option><option value="NO"${_scopeId2}>Norway</option><option value="OM"${_scopeId2}>Oman</option><option value="PK"${_scopeId2}>Pakistan</option><option value="PW"${_scopeId2}>Palau</option><option value="PS"${_scopeId2}>Palestinian Territory, Occupied</option><option value="PA"${_scopeId2}>Panama</option><option value="PG"${_scopeId2}>Papua New Guinea</option><option value="PY"${_scopeId2}>Paraguay</option><option value="PE"${_scopeId2}>Peru</option><option value="PH"${_scopeId2}>Philippines</option><option value="PN"${_scopeId2}>Pitcairn</option><option value="PL"${_scopeId2}>Poland</option><option value="PT"${_scopeId2}>Portugal</option><option value="PR"${_scopeId2}>Puerto Rico</option><option value="QA"${_scopeId2}>Qatar</option><option value="RE"${_scopeId2}>Réunion</option><option value="RO"${_scopeId2}>Romania</option><option value="RU"${_scopeId2}>Russian Federation</option><option value="RW"${_scopeId2}>Rwanda</option><option value="BL"${_scopeId2}>Saint Barthélemy</option><option value="SH"${_scopeId2}> Saint Helena, Ascension and Tristan da Cunha </option><option value="KN"${_scopeId2}>Saint Kitts and Nevis</option><option value="LC"${_scopeId2}>Saint Lucia</option><option value="MF"${_scopeId2}>Saint Martin (French part)</option><option value="PM"${_scopeId2}>Saint Pierre and Miquelon</option><option value="VC"${_scopeId2}>Saint Vincent and the Grenadines</option><option value="WS"${_scopeId2}>Samoa</option><option value="SM"${_scopeId2}>San Marino</option><option value="ST"${_scopeId2}>Sao Tome and Principe</option><option value="SA"${_scopeId2}>Saudi Arabia</option><option value="SN"${_scopeId2}>Senegal</option><option value="RS"${_scopeId2}>Serbia</option><option value="SC"${_scopeId2}>Seychelles</option><option value="SL"${_scopeId2}>Sierra Leone</option><option value="SG"${_scopeId2}>Singapore</option><option value="SX"${_scopeId2}>Sint Maarten (Dutch part)</option><option value="SK"${_scopeId2}>Slovakia</option><option value="SI"${_scopeId2}>Slovenia</option><option value="SB"${_scopeId2}>Solomon Islands</option><option value="SO"${_scopeId2}>Somalia</option><option value="ZA"${_scopeId2}>South Africa</option><option value="GS"${_scopeId2}> South Georgia and the South Sandwich Islands </option><option value="KR"${_scopeId2}>South Korea</option><option value="SS"${_scopeId2}>South Sudan</option><option value="ES"${_scopeId2}>Spain</option><option value="LK"${_scopeId2}>Sri Lanka</option><option value="SD"${_scopeId2}>Sudan</option><option value="SR"${_scopeId2}>Suriname</option><option value="SJ"${_scopeId2}>Svalbard and Jan Mayen</option><option value="SZ"${_scopeId2}>Swaziland</option><option value="SE"${_scopeId2}>Sweden</option><option value="CH"${_scopeId2}>Switzerland</option><option value="SY"${_scopeId2}>Syrian Arab Republic</option><option value="TW"${_scopeId2}>Taiwan, Province of China</option><option value="TJ"${_scopeId2}>Tajikistan</option><option value="TZ"${_scopeId2}>Tanzania, United Republic of</option><option value="TH"${_scopeId2}>Thailand</option><option value="TL"${_scopeId2}>Timor-Leste</option><option value="TG"${_scopeId2}>Togo</option><option value="TK"${_scopeId2}>Tokelau</option><option value="TO"${_scopeId2}>Tonga</option><option value="TT"${_scopeId2}>Trinidad and Tobago</option><option value="TN"${_scopeId2}>Tunisia</option><option value="TR"${_scopeId2}>Turkey</option><option value="TM"${_scopeId2}>Turkmenistan</option><option value="TC"${_scopeId2}>Turks and Caicos Islands</option><option value="TV"${_scopeId2}>Tuvalu</option><option value="UG"${_scopeId2}>Uganda</option><option value="UA"${_scopeId2}>Ukraine</option><option value="AE"${_scopeId2}>United Arab Emirates</option><option value="GB"${_scopeId2}>United Kingdom</option><option value="US"${_scopeId2}>United States</option><option value="UY"${_scopeId2}>Uruguay</option><option value="UZ"${_scopeId2}>Uzbekistan</option><option value="VU"${_scopeId2}>Vanuatu</option><option value="VE"${_scopeId2}>Venezuela, Bolivarian Republic of</option><option value="VN"${_scopeId2}>Vietnam</option><option value="VI"${_scopeId2}>Virgin Islands</option><option value="WF"${_scopeId2}>Wallis and Futuna</option><option value="EH"${_scopeId2}>Western Sahara</option><option value="YE"${_scopeId2}>Yemen</option><option value="ZM"${_scopeId2}>Zambia</option><option value="ZW"${_scopeId2}>Zimbabwe</option>`);
                } else {
                  return [
                    vueExports$1.createVNode("option", { value: "AF" }, "Afghanistan"),
                    vueExports$1.createVNode("option", { value: "AX" }, "Aland Islands"),
                    vueExports$1.createVNode("option", { value: "AL" }, "Albania"),
                    vueExports$1.createVNode("option", { value: "DZ" }, "Algeria"),
                    vueExports$1.createVNode("option", { value: "AS" }, "American Samoa"),
                    vueExports$1.createVNode("option", { value: "AD" }, "Andorra"),
                    vueExports$1.createVNode("option", { value: "AO" }, "Angola"),
                    vueExports$1.createVNode("option", { value: "AI" }, "Anguilla"),
                    vueExports$1.createVNode("option", { value: "AQ" }, "Antarctica"),
                    vueExports$1.createVNode("option", { value: "AG" }, "Antigua and Barbuda"),
                    vueExports$1.createVNode("option", { value: "AR" }, "Argentina"),
                    vueExports$1.createVNode("option", { value: "AM" }, "Armenia"),
                    vueExports$1.createVNode("option", { value: "AW" }, "Aruba"),
                    vueExports$1.createVNode("option", { value: "AU" }, "Australia"),
                    vueExports$1.createVNode("option", { value: "AT" }, "Austria"),
                    vueExports$1.createVNode("option", { value: "AZ" }, "Azerbaijan"),
                    vueExports$1.createVNode("option", { value: "BS" }, "Bahamas"),
                    vueExports$1.createVNode("option", { value: "BH" }, "Bahrain"),
                    vueExports$1.createVNode("option", { value: "BD" }, "Bangladesh"),
                    vueExports$1.createVNode("option", { value: "BB" }, "Barbados"),
                    vueExports$1.createVNode("option", { value: "BY" }, "Belarus"),
                    vueExports$1.createVNode("option", { value: "BE" }, "Belgium"),
                    vueExports$1.createVNode("option", { value: "BZ" }, "Belize"),
                    vueExports$1.createVNode("option", { value: "BJ" }, "Benin"),
                    vueExports$1.createVNode("option", { value: "BM" }, "Bermuda"),
                    vueExports$1.createVNode("option", { value: "BT" }, "Bhutan"),
                    vueExports$1.createVNode("option", { value: "BO" }, "Bolivia, Plurinational State of"),
                    vueExports$1.createVNode("option", { value: "BQ" }, "Bonaire, Sint Eustatius and Saba"),
                    vueExports$1.createVNode("option", { value: "BA" }, "Bosnia and Herzegovina"),
                    vueExports$1.createVNode("option", { value: "BW" }, "Botswana"),
                    vueExports$1.createVNode("option", { value: "BV" }, "Bouvet Island"),
                    vueExports$1.createVNode("option", { value: "BR" }, "Brazil"),
                    vueExports$1.createVNode("option", { value: "IO" }, "British Indian Ocean Territory"),
                    vueExports$1.createVNode("option", { value: "BN" }, "Brunei Darussalam"),
                    vueExports$1.createVNode("option", { value: "BG" }, "Bulgaria"),
                    vueExports$1.createVNode("option", { value: "BF" }, "Burkina Faso"),
                    vueExports$1.createVNode("option", { value: "BI" }, "Burundi"),
                    vueExports$1.createVNode("option", { value: "KH" }, "Cambodia"),
                    vueExports$1.createVNode("option", { value: "CM" }, "Cameroon"),
                    vueExports$1.createVNode("option", { value: "CA" }, "Canada"),
                    vueExports$1.createVNode("option", { value: "CV" }, "Cape Verde"),
                    vueExports$1.createVNode("option", { value: "KY" }, "Cayman Islands"),
                    vueExports$1.createVNode("option", { value: "CF" }, "Central African Republic"),
                    vueExports$1.createVNode("option", { value: "TD" }, "Chad"),
                    vueExports$1.createVNode("option", { value: "CL" }, "Chile"),
                    vueExports$1.createVNode("option", { value: "CN" }, "China"),
                    vueExports$1.createVNode("option", { value: "CX" }, "Christmas Island"),
                    vueExports$1.createVNode("option", { value: "CC" }, "Cocos (Keeling) Islands"),
                    vueExports$1.createVNode("option", { value: "CO" }, "Colombia"),
                    vueExports$1.createVNode("option", { value: "KM" }, "Comoros"),
                    vueExports$1.createVNode("option", { value: "CG" }, "Congo"),
                    vueExports$1.createVNode("option", { value: "CD" }, " Congo, the Democratic Republic of the "),
                    vueExports$1.createVNode("option", { value: "CK" }, "Cook Islands"),
                    vueExports$1.createVNode("option", { value: "CR" }, "Costa Rica"),
                    vueExports$1.createVNode("option", { value: "CI" }, "Côte d'Ivoire"),
                    vueExports$1.createVNode("option", { value: "HR" }, "Croatia"),
                    vueExports$1.createVNode("option", { value: "CU" }, "Cuba"),
                    vueExports$1.createVNode("option", { value: "CW" }, "Curaçao"),
                    vueExports$1.createVNode("option", { value: "CY" }, "Cyprus"),
                    vueExports$1.createVNode("option", { value: "CZ" }, "Czech Republic"),
                    vueExports$1.createVNode("option", { value: "DK" }, "Denmark"),
                    vueExports$1.createVNode("option", { value: "DJ" }, "Djibouti"),
                    vueExports$1.createVNode("option", { value: "DM" }, "Dominica"),
                    vueExports$1.createVNode("option", { value: "DO" }, "Dominican Republic"),
                    vueExports$1.createVNode("option", { value: "EC" }, "Ecuador"),
                    vueExports$1.createVNode("option", { value: "EG" }, "Egypt"),
                    vueExports$1.createVNode("option", { value: "SV" }, "El Salvador"),
                    vueExports$1.createVNode("option", { value: "GQ" }, "Equatorial Guinea"),
                    vueExports$1.createVNode("option", { value: "ER" }, "Eritrea"),
                    vueExports$1.createVNode("option", { value: "EE" }, "Estonia"),
                    vueExports$1.createVNode("option", { value: "ET" }, "Ethiopia"),
                    vueExports$1.createVNode("option", { value: "FK" }, "Falkland Islands (Malvinas)"),
                    vueExports$1.createVNode("option", { value: "FO" }, "Faroe Islands"),
                    vueExports$1.createVNode("option", { value: "FJ" }, "Fiji"),
                    vueExports$1.createVNode("option", { value: "FI" }, "Finland"),
                    vueExports$1.createVNode("option", { value: "FR" }, "France"),
                    vueExports$1.createVNode("option", { value: "GF" }, "French Guiana"),
                    vueExports$1.createVNode("option", { value: "PF" }, "French Polynesia"),
                    vueExports$1.createVNode("option", { value: "TF" }, "French Southern Territories"),
                    vueExports$1.createVNode("option", { value: "GA" }, "Gabon"),
                    vueExports$1.createVNode("option", { value: "GM" }, "Gambia"),
                    vueExports$1.createVNode("option", { value: "GE" }, "Georgia"),
                    vueExports$1.createVNode("option", { value: "DE" }, "Germany"),
                    vueExports$1.createVNode("option", { value: "GH" }, "Ghana"),
                    vueExports$1.createVNode("option", { value: "GI" }, "Gibraltar"),
                    vueExports$1.createVNode("option", { value: "GR" }, "Greece"),
                    vueExports$1.createVNode("option", { value: "GL" }, "Greenland"),
                    vueExports$1.createVNode("option", { value: "GD" }, "Grenada"),
                    vueExports$1.createVNode("option", { value: "GP" }, "Guadeloupe"),
                    vueExports$1.createVNode("option", { value: "GU" }, "Guam"),
                    vueExports$1.createVNode("option", { value: "GT" }, "Guatemala"),
                    vueExports$1.createVNode("option", { value: "GG" }, "Guernsey"),
                    vueExports$1.createVNode("option", { value: "GN" }, "Guinea"),
                    vueExports$1.createVNode("option", { value: "GW" }, "Guinea-Bissau"),
                    vueExports$1.createVNode("option", { value: "GY" }, "Guyana"),
                    vueExports$1.createVNode("option", { value: "HT" }, "Haiti"),
                    vueExports$1.createVNode("option", { value: "HM" }, "Heard Island and McDonald Islands"),
                    vueExports$1.createVNode("option", { value: "VA" }, "Holy See (Vatican City State)"),
                    vueExports$1.createVNode("option", { value: "HN" }, "Honduras"),
                    vueExports$1.createVNode("option", { value: "HK" }, "Hong Kong"),
                    vueExports$1.createVNode("option", { value: "HU" }, "Hungary"),
                    vueExports$1.createVNode("option", { value: "IS" }, "Iceland"),
                    vueExports$1.createVNode("option", { value: "IN" }, "India"),
                    vueExports$1.createVNode("option", { value: "ID" }, "Indonesia"),
                    vueExports$1.createVNode("option", { value: "IR" }, "Iran, Islamic Republic of"),
                    vueExports$1.createVNode("option", { value: "IQ" }, "Iraq"),
                    vueExports$1.createVNode("option", { value: "IE" }, "Ireland"),
                    vueExports$1.createVNode("option", { value: "IM" }, "Isle of Man"),
                    vueExports$1.createVNode("option", { value: "IL" }, "Israel"),
                    vueExports$1.createVNode("option", { value: "IT" }, "Italy"),
                    vueExports$1.createVNode("option", { value: "JM" }, "Jamaica"),
                    vueExports$1.createVNode("option", { value: "JP" }, "Japan"),
                    vueExports$1.createVNode("option", { value: "JE" }, "Jersey"),
                    vueExports$1.createVNode("option", { value: "JO" }, "Jordan"),
                    vueExports$1.createVNode("option", { value: "KZ" }, "Kazakhstan"),
                    vueExports$1.createVNode("option", { value: "KE" }, "Kenya"),
                    vueExports$1.createVNode("option", { ue: "KI" }, "Kiribati"),
                    vueExports$1.createVNode("option", { value: "KP" }, " Korea, Democratic People's Republic of "),
                    vueExports$1.createVNode("option", { value: "KW" }, "Kuwait"),
                    vueExports$1.createVNode("option", { value: "KG" }, "Kyrgyzstan"),
                    vueExports$1.createVNode("option", { value: "LA" }, "Lao People's Democratic Republic"),
                    vueExports$1.createVNode("option", { value: "LV" }, "Latvia"),
                    vueExports$1.createVNode("option", { value: "LB" }, "Lebanon"),
                    vueExports$1.createVNode("option", { value: "LS" }, "Lesotho"),
                    vueExports$1.createVNode("option", { value: "LR" }, "Liberia"),
                    vueExports$1.createVNode("option", { value: "LY" }, "Libya"),
                    vueExports$1.createVNode("option", { value: "LI" }, "Liechtenstein"),
                    vueExports$1.createVNode("option", { value: "LT" }, "Lithuania"),
                    vueExports$1.createVNode("option", { value: "LU" }, "Luxembourg"),
                    vueExports$1.createVNode("option", { value: "MO" }, "Macao"),
                    vueExports$1.createVNode("option", { value: "MK" }, " Macedonia, the former Yugoslav Republic of "),
                    vueExports$1.createVNode("option", { value: "MG" }, "Madagascar"),
                    vueExports$1.createVNode("option", { value: "MW" }, "Malawi"),
                    vueExports$1.createVNode("option", { value: "MY" }, "Malaysia"),
                    vueExports$1.createVNode("option", { value: "MV" }, "Maldives"),
                    vueExports$1.createVNode("option", { value: "ML" }, "Mali"),
                    vueExports$1.createVNode("option", { value: "MT" }, "Malta"),
                    vueExports$1.createVNode("option", { value: "MH" }, "Marshall Islands"),
                    vueExports$1.createVNode("option", { value: "MQ" }, "Martinique"),
                    vueExports$1.createVNode("option", { value: "MR" }, "Mauritania"),
                    vueExports$1.createVNode("option", { value: "MU" }, "Mauritius"),
                    vueExports$1.createVNode("option", { value: "YT" }, "Mayotte"),
                    vueExports$1.createVNode("option", { value: "MX" }, "Mexico"),
                    vueExports$1.createVNode("option", { value: "FM" }, "Micronesia, Federated States of"),
                    vueExports$1.createVNode("option", { value: "MD" }, "Moldova, Republic of"),
                    vueExports$1.createVNode("option", { value: "MC" }, "Monaco"),
                    vueExports$1.createVNode("option", { value: "MN" }, "Mongolia"),
                    vueExports$1.createVNode("option", { value: "ME" }, "Montenegro"),
                    vueExports$1.createVNode("option", { value: "MS" }, "Montserrat"),
                    vueExports$1.createVNode("option", { value: "MA" }, "Morocco"),
                    vueExports$1.createVNode("option", { value: "MZ" }, "Mozambique"),
                    vueExports$1.createVNode("option", { value: "MM" }, "Myanmar"),
                    vueExports$1.createVNode("option", { value: "NA" }, "Namibia"),
                    vueExports$1.createVNode("option", { value: "NR" }, "Nauru"),
                    vueExports$1.createVNode("option", { value: "NP" }, "Nepal"),
                    vueExports$1.createVNode("option", { value: "NL" }, "Netherlands"),
                    vueExports$1.createVNode("option", { value: "NC" }, "New Caledonia"),
                    vueExports$1.createVNode("option", { value: "NZ" }, "New Zealand"),
                    vueExports$1.createVNode("option", { value: "NI" }, "Nicaragua"),
                    vueExports$1.createVNode("option", { value: "NE" }, "Niger"),
                    vueExports$1.createVNode("option", { value: "NG" }, "Nigeria"),
                    vueExports$1.createVNode("option", { value: "NU" }, "Niue"),
                    vueExports$1.createVNode("option", { value: "NF" }, "Norfolk Island"),
                    vueExports$1.createVNode("option", { value: "MP" }, "Northern Mariana Islands"),
                    vueExports$1.createVNode("option", { value: "NO" }, "Norway"),
                    vueExports$1.createVNode("option", { value: "OM" }, "Oman"),
                    vueExports$1.createVNode("option", { value: "PK" }, "Pakistan"),
                    vueExports$1.createVNode("option", { value: "PW" }, "Palau"),
                    vueExports$1.createVNode("option", { value: "PS" }, "Palestinian Territory, Occupied"),
                    vueExports$1.createVNode("option", { value: "PA" }, "Panama"),
                    vueExports$1.createVNode("option", { value: "PG" }, "Papua New Guinea"),
                    vueExports$1.createVNode("option", { value: "PY" }, "Paraguay"),
                    vueExports$1.createVNode("option", { value: "PE" }, "Peru"),
                    vueExports$1.createVNode("option", { value: "PH" }, "Philippines"),
                    vueExports$1.createVNode("option", { value: "PN" }, "Pitcairn"),
                    vueExports$1.createVNode("option", { value: "PL" }, "Poland"),
                    vueExports$1.createVNode("option", { value: "PT" }, "Portugal"),
                    vueExports$1.createVNode("option", { value: "PR" }, "Puerto Rico"),
                    vueExports$1.createVNode("option", { value: "QA" }, "Qatar"),
                    vueExports$1.createVNode("option", { value: "RE" }, "Réunion"),
                    vueExports$1.createVNode("option", { value: "RO" }, "Romania"),
                    vueExports$1.createVNode("option", { value: "RU" }, "Russian Federation"),
                    vueExports$1.createVNode("option", { value: "RW" }, "Rwanda"),
                    vueExports$1.createVNode("option", { value: "BL" }, "Saint Barthélemy"),
                    vueExports$1.createVNode("option", { value: "SH" }, " Saint Helena, Ascension and Tristan da Cunha "),
                    vueExports$1.createVNode("option", { value: "KN" }, "Saint Kitts and Nevis"),
                    vueExports$1.createVNode("option", { value: "LC" }, "Saint Lucia"),
                    vueExports$1.createVNode("option", { value: "MF" }, "Saint Martin (French part)"),
                    vueExports$1.createVNode("option", { value: "PM" }, "Saint Pierre and Miquelon"),
                    vueExports$1.createVNode("option", { value: "VC" }, "Saint Vincent and the Grenadines"),
                    vueExports$1.createVNode("option", { value: "WS" }, "Samoa"),
                    vueExports$1.createVNode("option", { value: "SM" }, "San Marino"),
                    vueExports$1.createVNode("option", { value: "ST" }, "Sao Tome and Principe"),
                    vueExports$1.createVNode("option", { value: "SA" }, "Saudi Arabia"),
                    vueExports$1.createVNode("option", { value: "SN" }, "Senegal"),
                    vueExports$1.createVNode("option", { value: "RS" }, "Serbia"),
                    vueExports$1.createVNode("option", { value: "SC" }, "Seychelles"),
                    vueExports$1.createVNode("option", { value: "SL" }, "Sierra Leone"),
                    vueExports$1.createVNode("option", { value: "SG" }, "Singapore"),
                    vueExports$1.createVNode("option", { value: "SX" }, "Sint Maarten (Dutch part)"),
                    vueExports$1.createVNode("option", { value: "SK" }, "Slovakia"),
                    vueExports$1.createVNode("option", { value: "SI" }, "Slovenia"),
                    vueExports$1.createVNode("option", { value: "SB" }, "Solomon Islands"),
                    vueExports$1.createVNode("option", { value: "SO" }, "Somalia"),
                    vueExports$1.createVNode("option", { value: "ZA" }, "South Africa"),
                    vueExports$1.createVNode("option", { value: "GS" }, " South Georgia and the South Sandwich Islands "),
                    vueExports$1.createVNode("option", { value: "KR" }, "South Korea"),
                    vueExports$1.createVNode("option", { value: "SS" }, "South Sudan"),
                    vueExports$1.createVNode("option", { value: "ES" }, "Spain"),
                    vueExports$1.createVNode("option", { value: "LK" }, "Sri Lanka"),
                    vueExports$1.createVNode("option", { value: "SD" }, "Sudan"),
                    vueExports$1.createVNode("option", { value: "SR" }, "Suriname"),
                    vueExports$1.createVNode("option", { value: "SJ" }, "Svalbard and Jan Mayen"),
                    vueExports$1.createVNode("option", { value: "SZ" }, "Swaziland"),
                    vueExports$1.createVNode("option", { value: "SE" }, "Sweden"),
                    vueExports$1.createVNode("option", { value: "CH" }, "Switzerland"),
                    vueExports$1.createVNode("option", { value: "SY" }, "Syrian Arab Republic"),
                    vueExports$1.createVNode("option", { value: "TW" }, "Taiwan, Province of China"),
                    vueExports$1.createVNode("option", { value: "TJ" }, "Tajikistan"),
                    vueExports$1.createVNode("option", { value: "TZ" }, "Tanzania, United Republic of"),
                    vueExports$1.createVNode("option", { value: "TH" }, "Thailand"),
                    vueExports$1.createVNode("option", { value: "TL" }, "Timor-Leste"),
                    vueExports$1.createVNode("option", { value: "TG" }, "Togo"),
                    vueExports$1.createVNode("option", { value: "TK" }, "Tokelau"),
                    vueExports$1.createVNode("option", { value: "TO" }, "Tonga"),
                    vueExports$1.createVNode("option", { value: "TT" }, "Trinidad and Tobago"),
                    vueExports$1.createVNode("option", { value: "TN" }, "Tunisia"),
                    vueExports$1.createVNode("option", { value: "TR" }, "Turkey"),
                    vueExports$1.createVNode("option", { value: "TM" }, "Turkmenistan"),
                    vueExports$1.createVNode("option", { value: "TC" }, "Turks and Caicos Islands"),
                    vueExports$1.createVNode("option", { value: "TV" }, "Tuvalu"),
                    vueExports$1.createVNode("option", { value: "UG" }, "Uganda"),
                    vueExports$1.createVNode("option", { value: "UA" }, "Ukraine"),
                    vueExports$1.createVNode("option", { value: "AE" }, "United Arab Emirates"),
                    vueExports$1.createVNode("option", { value: "GB" }, "United Kingdom"),
                    vueExports$1.createVNode("option", { value: "US" }, "United States"),
                    vueExports$1.createVNode("option", { value: "UY" }, "Uruguay"),
                    vueExports$1.createVNode("option", { value: "UZ" }, "Uzbekistan"),
                    vueExports$1.createVNode("option", { value: "VU" }, "Vanuatu"),
                    vueExports$1.createVNode("option", { value: "VE" }, "Venezuela, Bolivarian Republic of"),
                    vueExports$1.createVNode("option", { value: "VN" }, "Vietnam"),
                    vueExports$1.createVNode("option", { value: "VI" }, "Virgin Islands"),
                    vueExports$1.createVNode("option", { value: "WF" }, "Wallis and Futuna"),
                    vueExports$1.createVNode("option", { value: "EH" }, "Western Sahara"),
                    vueExports$1.createVNode("option", { value: "YE" }, "Yemen"),
                    vueExports$1.createVNode("option", { value: "ZM" }, "Zambia"),
                    vueExports$1.createVNode("option", { value: "ZW" }, "Zimbabwe")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "country" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label required fw-semibold fs-6"${_scopeId}>Language</label><div class="col-lg-8 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              as: "select",
              name: "language",
              class: "form-select form-select-solid form-select-lg",
              modelValue: _ctx.profileDetails.language,
              "onUpdate:modelValue": ($event) => _ctx.profileDetails.language = $event
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<option value="id"${_scopeId2}>Bahasa Indonesia - Indonesian</option><option value="msa"${_scopeId2}>Bahasa Melayu - Malay</option><option value="ca"${_scopeId2}>Català - Catalan</option><option value="cs"${_scopeId2}>Čeština - Czech</option><option value="da"${_scopeId2}>Dansk - Danish</option><option value="de"${_scopeId2}>Deutsch - German</option><option value="en"${_scopeId2}>English</option><option value="en-gb"${_scopeId2}>English UK - British English</option><option value="es"${_scopeId2}>Español - Spanish</option><option value="fil"${_scopeId2}>Filipino</option><option value="fr"${_scopeId2}>Français - French</option><option value="ga"${_scopeId2}>Gaeilge - Irish (beta)</option><option value="gl"${_scopeId2}>Galego - Galician (beta)</option><option value="hr"${_scopeId2}>Hrvatski - Croatian</option><option value="it"${_scopeId2}>Italiano - Italian</option><option value="hu"${_scopeId2}>Magyar - Hungarian</option><option value="nl"${_scopeId2}>Nederlands - Dutch</option><option value="no"${_scopeId2}>Norsk - Norwegian</option><option value="pl"${_scopeId2}>Polski - Polish</option><option value="pt"${_scopeId2}>Português - Portuguese</option><option value="ro"${_scopeId2}>Română - Romanian</option><option value="sk"${_scopeId2}>Slovenčina - Slovak</option><option value="fi"${_scopeId2}>Suomi - Finnish</option><option value="sv"${_scopeId2}>Svenska - Swedish</option><option value="vi"${_scopeId2}>Tiếng Việt - Vietnamese</option><option value="tr"${_scopeId2}>Türkçe - Turkish</option><option value="el"${_scopeId2}>Ελληνικά - Greek</option><option value="bg"${_scopeId2}>Български език - Bulgarian</option><option value="ru"${_scopeId2}>Русский - Russian</option><option value="sr"${_scopeId2}>Српски - Serbian</option><option value="uk"${_scopeId2}>Українська мова - Ukrainian</option><option value="he"${_scopeId2}>עִבְרִית - Hebrew</option><option value="ur"${_scopeId2}>اردو - Urdu (beta)</option><option value="ar"${_scopeId2}>العربية - Arabic</option><option value="fa"${_scopeId2}>فارسی - Persian</option><option value="mr"${_scopeId2}>मराठी - Marathi</option><option value="hi"${_scopeId2}>हिन्दी - Hindi</option><option value="bn"${_scopeId2}>বাংলা - Bangla</option><option value="gu"${_scopeId2}>ગુજરાતી - Gujarati</option><option value="ta"${_scopeId2}>தமிழ் - Tamil</option><option value="kn"${_scopeId2}>ಕನ್ನಡ - Kannada</option><option value="th"${_scopeId2}>ภาษาไทย - Thai</option><option value="ko"${_scopeId2}>한국어 - Korean</option><option value="ja"${_scopeId2}>日本語 - Japanese</option><option value="zh-cn"${_scopeId2}>简体中文 - Simplified Chinese</option><option value="zh-tw"${_scopeId2}>繁體中文 - Traditional Chinese</option>`);
                } else {
                  return [
                    vueExports$1.createVNode("option", { value: "id" }, "Bahasa Indonesia - Indonesian"),
                    vueExports$1.createVNode("option", { value: "msa" }, "Bahasa Melayu - Malay"),
                    vueExports$1.createVNode("option", { value: "ca" }, "Català - Catalan"),
                    vueExports$1.createVNode("option", { value: "cs" }, "Čeština - Czech"),
                    vueExports$1.createVNode("option", { value: "da" }, "Dansk - Danish"),
                    vueExports$1.createVNode("option", { value: "de" }, "Deutsch - German"),
                    vueExports$1.createVNode("option", { value: "en" }, "English"),
                    vueExports$1.createVNode("option", { value: "en-gb" }, "English UK - British English"),
                    vueExports$1.createVNode("option", { value: "es" }, "Español - Spanish"),
                    vueExports$1.createVNode("option", { value: "fil" }, "Filipino"),
                    vueExports$1.createVNode("option", { value: "fr" }, "Français - French"),
                    vueExports$1.createVNode("option", { value: "ga" }, "Gaeilge - Irish (beta)"),
                    vueExports$1.createVNode("option", { value: "gl" }, "Galego - Galician (beta)"),
                    vueExports$1.createVNode("option", { value: "hr" }, "Hrvatski - Croatian"),
                    vueExports$1.createVNode("option", { value: "it" }, "Italiano - Italian"),
                    vueExports$1.createVNode("option", { value: "hu" }, "Magyar - Hungarian"),
                    vueExports$1.createVNode("option", { value: "nl" }, "Nederlands - Dutch"),
                    vueExports$1.createVNode("option", { value: "no" }, "Norsk - Norwegian"),
                    vueExports$1.createVNode("option", { value: "pl" }, "Polski - Polish"),
                    vueExports$1.createVNode("option", { value: "pt" }, "Português - Portuguese"),
                    vueExports$1.createVNode("option", { value: "ro" }, "Română - Romanian"),
                    vueExports$1.createVNode("option", { value: "sk" }, "Slovenčina - Slovak"),
                    vueExports$1.createVNode("option", { value: "fi" }, "Suomi - Finnish"),
                    vueExports$1.createVNode("option", { value: "sv" }, "Svenska - Swedish"),
                    vueExports$1.createVNode("option", { value: "vi" }, "Tiếng Việt - Vietnamese"),
                    vueExports$1.createVNode("option", { value: "tr" }, "Türkçe - Turkish"),
                    vueExports$1.createVNode("option", { value: "el" }, "Ελληνικά - Greek"),
                    vueExports$1.createVNode("option", { value: "bg" }, "Български език - Bulgarian"),
                    vueExports$1.createVNode("option", { value: "ru" }, "Русский - Russian"),
                    vueExports$1.createVNode("option", { value: "sr" }, "Српски - Serbian"),
                    vueExports$1.createVNode("option", { value: "uk" }, "Українська мова - Ukrainian"),
                    vueExports$1.createVNode("option", { value: "he" }, "עִבְרִית - Hebrew"),
                    vueExports$1.createVNode("option", { value: "ur" }, "اردو - Urdu (beta)"),
                    vueExports$1.createVNode("option", { value: "ar" }, "العربية - Arabic"),
                    vueExports$1.createVNode("option", { value: "fa" }, "فارسی - Persian"),
                    vueExports$1.createVNode("option", { value: "mr" }, "मराठी - Marathi"),
                    vueExports$1.createVNode("option", { value: "hi" }, "हिन्दी - Hindi"),
                    vueExports$1.createVNode("option", { value: "bn" }, "বাংলা - Bangla"),
                    vueExports$1.createVNode("option", { value: "gu" }, "ગુજરાતી - Gujarati"),
                    vueExports$1.createVNode("option", { value: "ta" }, "தமிழ் - Tamil"),
                    vueExports$1.createVNode("option", { value: "kn" }, "ಕನ್ನಡ - Kannada"),
                    vueExports$1.createVNode("option", { value: "th" }, "ภาษาไทย - Thai"),
                    vueExports$1.createVNode("option", { value: "ko" }, "한국어 - Korean"),
                    vueExports$1.createVNode("option", { value: "ja" }, "日本語 - Japanese"),
                    vueExports$1.createVNode("option", { value: "zh-cn" }, "简体中文 - Simplified Chinese"),
                    vueExports$1.createVNode("option", { value: "zh-tw" }, "繁體中文 - Traditional Chinese")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "language" }, null, _parent2, _scopeId));
            _push2(`</div></div><div class="form-text"${_scopeId}> Please select a preferred language, including date, time, and number formatting. </div></div></div><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label required fw-semibold fs-6"${_scopeId}>Time Zone</label><div class="col-lg-8 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              as: "select",
              name: "timezone",
              class: "form-select form-select-solid form-select-lg",
              modelValue: _ctx.profileDetails.timezone,
              "onUpdate:modelValue": ($event) => _ctx.profileDetails.timezone = $event
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<option data-bs-offset="-39600" value="International Date Line West"${_scopeId2}> (GMT-11:00) International Date Line West </option><option data-bs-offset="-39600" value="Midway Island"${_scopeId2}> (GMT-11:00) Midway Island </option><option data-bs-offset="-39600" value="Samoa"${_scopeId2}> (GMT-11:00) Samoa </option><option data-bs-offset="-36000" value="Hawaii"${_scopeId2}> (GMT-10:00) Hawaii </option><option data-bs-offset="-28800" value="Alaska"${_scopeId2}> (GMT-08:00) Alaska </option><option data-bs-offset="-25200" value="Pacific Time (US &amp; Canada)"${_scopeId2}> (GMT-07:00) Pacific Time (US &amp; Canada) </option><option data-bs-offset="-25200" value="Tijuana"${_scopeId2}> (GMT-07:00) Tijuana </option><option data-bs-offset="-25200" value="Arizona"${_scopeId2}> (GMT-07:00) Arizona </option><option data-bs-offset="-21600" value="Mountain Time (US &amp; Canada)"${_scopeId2}> (GMT-06:00) Mountain Time (US &amp; Canada) </option><option data-bs-offset="-21600" value="Chihuahua"${_scopeId2}> (GMT-06:00) Chihuahua </option><option data-bs-offset="-21600" value="Mazatlan"${_scopeId2}> (GMT-06:00) Mazatlan </option><option data-bs-offset="-21600" value="Saskatchewan"${_scopeId2}> (GMT-06:00) Saskatchewan </option><option data-bs-offset="-21600" value="Central America"${_scopeId2}> (GMT-06:00) Central America </option><option data-bs-offset="-18000" value="Central Time (US &amp; Canada)"${_scopeId2}> (GMT-05:00) Central Time (US &amp; Canada) </option><option data-bs-offset="-18000" value="Guadalajara"${_scopeId2}> (GMT-05:00) Guadalajara </option><option data-bs-offset="-18000" value="Mexico City"${_scopeId2}> (GMT-05:00) Mexico City </option><option data-bs-offset="-18000" value="Monterrey"${_scopeId2}> (GMT-05:00) Monterrey </option><option data-bs-offset="-18000" value="Bogota"${_scopeId2}> (GMT-05:00) Bogota </option><option data-bs-offset="-18000" value="Lima"${_scopeId2}> (GMT-05:00) Lima </option><option data-bs-offset="-18000" value="Quito"${_scopeId2}> (GMT-05:00) Quito </option><option data-bs-offset="-14400" value="Eastern Time (US &amp; Canada)"${_scopeId2}> (GMT-04:00) Eastern Time (US &amp; Canada) </option><option data-bs-offset="-14400" value="Indiana (East)"${_scopeId2}> (GMT-04:00) Indiana (East) </option><option data-bs-offset="-14400" value="Caracas"${_scopeId2}> (GMT-04:00) Caracas </option><option data-bs-offset="-14400" value="La Paz"${_scopeId2}> (GMT-04:00) La Paz </option><option data-bs-offset="-14400" value="Georgetown"${_scopeId2}> (GMT-04:00) Georgetown </option><option data-bs-offset="-10800" value="Atlantic Time (Canada)"${_scopeId2}> (GMT-03:00) Atlantic Time (Canada) </option><option data-bs-offset="-10800" value="Santiago"${_scopeId2}> (GMT-03:00) Santiago </option><option data-bs-offset="-10800" value="Brasilia"${_scopeId2}> (GMT-03:00) Brasilia </option><option data-bs-offset="-10800" value="Buenos Aires"${_scopeId2}> (GMT-03:00) Buenos Aires </option><option data-bs-offset="-9000" value="Newfoundland"${_scopeId2}> (GMT-02:30) Newfoundland </option><option data-bs-offset="-7200" value="Greenland"${_scopeId2}> (GMT-02:00) Greenland </option><option data-bs-offset="-7200" value="Mid-Atlantic"${_scopeId2}> (GMT-02:00) Mid-Atlantic </option><option data-bs-offset="-3600" value="Cape Verde Is."${_scopeId2}> (GMT-01:00) Cape Verde Is. </option><option data-bs-offset="0" value="Azores"${_scopeId2}>(GMT) Azores</option><option data-bs-offset="0" value="Monrovia"${_scopeId2}> (GMT) Monrovia </option><option data-bs-offset="0" value="UTC"${_scopeId2}>(GMT) UTC</option><option data-bs-offset="3600" value="Dublin"${_scopeId2}> (GMT+01:00) Dublin </option><option data-bs-offset="3600" value="Edinburgh"${_scopeId2}> (GMT+01:00) Edinburgh </option><option data-bs-offset="3600" value="Lisbon"${_scopeId2}> (GMT+01:00) Lisbon </option><option data-bs-offset="3600" value="London"${_scopeId2}> (GMT+01:00) London </option><option data-bs-offset="3600" value="Casablanca"${_scopeId2}> (GMT+01:00) Casablanca </option><option data-bs-offset="3600" value="West Central Africa"${_scopeId2}> (GMT+01:00) West Central Africa </option><option data-bs-offset="7200" value="Belgrade"${_scopeId2}> (GMT+02:00) Belgrade </option><option data-bs-offset="7200" value="Bratislava"${_scopeId2}> (GMT+02:00) Bratislava </option><option data-bs-offset="7200" value="Budapest"${_scopeId2}> (GMT+02:00) Budapest </option><option data-bs-offset="7200" value="Ljubljana"${_scopeId2}> (GMT+02:00) Ljubljana </option><option data-bs-offset="7200" value="Prague"${_scopeId2}> (GMT+02:00) Prague </option><option data-bs-offset="7200" value="Sarajevo"${_scopeId2}> (GMT+02:00) Sarajevo </option><option data-bs-offset="7200" value="Skopje"${_scopeId2}> (GMT+02:00) Skopje </option><option data-bs-offset="7200" value="Warsaw"${_scopeId2}> (GMT+02:00) Warsaw </option><option data-bs-offset="7200" value="Zagreb"${_scopeId2}> (GMT+02:00) Zagreb </option><option data-bs-offset="7200" value="Brussels"${_scopeId2}> (GMT+02:00) Brussels </option><option data-bs-offset="7200" value="Copenhagen"${_scopeId2}> (GMT+02:00) Copenhagen </option><option data-bs-offset="7200" value="Madrid"${_scopeId2}> (GMT+02:00) Madrid </option><option data-bs-offset="7200" value="Paris"${_scopeId2}> (GMT+02:00) Paris </option><option data-bs-offset="7200" value="Amsterdam"${_scopeId2}> (GMT+02:00) Amsterdam </option><option data-bs-offset="7200" value="Berlin"${_scopeId2}> (GMT+02:00) Berlin </option><option data-bs-offset="7200" value="Bern"${_scopeId2}> (GMT+02:00) Bern </option><option data-bs-offset="7200" value="Rome"${_scopeId2}> (GMT+02:00) Rome </option><option data-bs-offset="7200" value="Stockholm"${_scopeId2}> (GMT+02:00) Stockholm </option><option data-bs-offset="7200" value="Vienna"${_scopeId2}> (GMT+02:00) Vienna </option><option data-bs-offset="7200" value="Cairo"${_scopeId2}> (GMT+02:00) Cairo </option><option data-bs-offset="7200" value="Harare"${_scopeId2}> (GMT+02:00) Harare </option><option data-bs-offset="7200" value="Pretoria"${_scopeId2}> (GMT+02:00) Pretoria </option><option data-bs-offset="10800" value="Bucharest"${_scopeId2}> (GMT+03:00) Bucharest </option><option data-bs-offset="10800" value="Helsinki"${_scopeId2}> (GMT+03:00) Helsinki </option><option data-bs-offset="10800" value="Kiev"${_scopeId2}> (GMT+03:00) Kiev </option><option data-bs-offset="10800" value="Kyiv"${_scopeId2}> (GMT+03:00) Kyiv </option><option data-bs-offset="10800" value="Riga"${_scopeId2}> (GMT+03:00) Riga </option><option data-bs-offset="10800" value="Sofia"${_scopeId2}> (GMT+03:00) Sofia </option><option data-bs-offset="10800" value="Tallinn"${_scopeId2}> (GMT+03:00) Tallinn </option><option data-bs-offset="10800" value="Vilnius"${_scopeId2}> (GMT+03:00) Vilnius </option><option data-bs-offset="10800" value="Athens"${_scopeId2}> (GMT+03:00) Athens </option><option data-bs-offset="10800" value="Istanbul"${_scopeId2}> (GMT+03:00) Istanbul </option><option data-bs-offset="10800" value="Minsk"${_scopeId2}> (GMT+03:00) Minsk </option><option data-bs-offset="10800" value="Jerusalem"${_scopeId2}> (GMT+03:00) Jerusalem </option><option data-bs-offset="10800" value="Moscow"${_scopeId2}> (GMT+03:00) Moscow </option><option data-bs-offset="10800" value="St. Petersburg"${_scopeId2}> (GMT+03:00) St. Petersburg </option><option data-bs-offset="10800" value="Volgograd"${_scopeId2}> (GMT+03:00) Volgograd </option><option data-bs-offset="10800" value="Kuwait"${_scopeId2}> (GMT+03:00) Kuwait </option><option data-bs-offset="10800" value="Riyadh"${_scopeId2}> (GMT+03:00) Riyadh </option><option data-bs-offset="10800" value="Nairobi"${_scopeId2}> (GMT+03:00) Nairobi </option><option data-bs-offset="10800" value="Baghdad"${_scopeId2}> (GMT+03:00) Baghdad </option><option data-bs-offset="14400" value="Abu Dhabi"${_scopeId2}> (GMT+04:00) Abu Dhabi </option><option data-bs-offset="14400" value="Muscat"${_scopeId2}> (GMT+04:00) Muscat </option><option data-bs-offset="14400" value="Baku"${_scopeId2}> (GMT+04:00) Baku </option><option data-bs-offset="14400" value="Tbilisi"${_scopeId2}> (GMT+04:00) Tbilisi </option><option data-bs-offset="14400" value="Yerevan"${_scopeId2}> (GMT+04:00) Yerevan </option><option data-bs-offset="16200" value="Tehran"${_scopeId2}> (GMT+04:30) Tehran </option><option data-bs-offset="16200" value="Kabul"${_scopeId2}> (GMT+04:30) Kabul </option><option data-bs-offset="18000" value="Ekaterinburg"${_scopeId2}> (GMT+05:00) Ekaterinburg </option><option data-bs-offset="18000" value="Islamabad"${_scopeId2}> (GMT+05:00) Islamabad </option><option data-bs-offset="18000" value="Karachi"${_scopeId2}> (GMT+05:00) Karachi </option><option data-bs-offset="18000" value="Tashkent"${_scopeId2}> (GMT+05:00) Tashkent </option><option data-bs-offset="19800" value="Chennai"${_scopeId2}> (GMT+05:30) Chennai </option><option data-bs-offset="19800" value="Kolkata"${_scopeId2}> (GMT+05:30) Kolkata </option><option data-bs-offset="19800" value="Mumbai"${_scopeId2}> (GMT+05:30) Mumbai </option><option data-bs-offset="19800" value="New Delhi"${_scopeId2}> (GMT+05:30) New Delhi </option><option data-bs-offset="19800" value="Sri Jayawardenepura"${_scopeId2}> (GMT+05:30) Sri Jayawardenepura </option><option data-bs-offset="20700" value="Kathmandu"${_scopeId2}> (GMT+05:45) Kathmandu </option><option data-bs-offset="21600" value="Astana"${_scopeId2}> (GMT+06:00) Astana </option><option data-bs-offset="21600" value="Dhaka"${_scopeId2}> (GMT+06:00) Dhaka </option><option data-bs-offset="21600" value="Almaty"${_scopeId2}> (GMT+06:00) Almaty </option><option data-bs-offset="21600" value="Urumqi"${_scopeId2}> (GMT+06:00) Urumqi </option><option data-bs-offset="23400" value="Rangoon"${_scopeId2}> (GMT+06:30) Rangoon </option><option data-bs-offset="25200" value="Novosibirsk"${_scopeId2}> (GMT+07:00) Novosibirsk </option><option data-bs-offset="25200" value="Bangkok"${_scopeId2}> (GMT+07:00) Bangkok </option><option data-bs-offset="25200" value="Hanoi"${_scopeId2}> (GMT+07:00) Hanoi </option><option data-bs-offset="25200" value="Jakarta"${_scopeId2}> (GMT+07:00) Jakarta </option><option data-bs-offset="25200" value="Krasnoyarsk"${_scopeId2}> (GMT+07:00) Krasnoyarsk </option><option data-bs-offset="28800" value="Beijing"${_scopeId2}> (GMT+08:00) Beijing </option><option data-bs-offset="28800" value="Chongqing"${_scopeId2}> (GMT+08:00) Chongqing </option><option data-bs-offset="28800" value="Hong Kong"${_scopeId2}> (GMT+08:00) Hong Kong </option><option data-bs-offset="28800" value="Kuala Lumpur"${_scopeId2}> (GMT+08:00) Kuala Lumpur </option><option data-bs-offset="28800" value="Singapore"${_scopeId2}> (GMT+08:00) Singapore </option><option data-bs-offset="28800" value="Taipei"${_scopeId2}> (GMT+08:00) Taipei </option><option data-bs-offset="28800" value="Perth"${_scopeId2}> (GMT+08:00) Perth </option><option data-bs-offset="28800" value="Irkutsk"${_scopeId2}> (GMT+08:00) Irkutsk </option><option data-bs-offset="28800" value="Ulaan Bataar"${_scopeId2}> (GMT+08:00) Ulaan Bataar </option><option data-bs-offset="32400" value="Seoul"${_scopeId2}> (GMT+09:00) Seoul </option><option data-bs-offset="32400" value="Osaka"${_scopeId2}> (GMT+09:00) Osaka </option><option data-bs-offset="32400" value="Sapporo"${_scopeId2}> (GMT+09:00) Sapporo </option><option data-bs-offset="32400" value="Tokyo"${_scopeId2}> (GMT+09:00) Tokyo </option><option data-bs-offset="32400" value="Yakutsk"${_scopeId2}> (GMT+09:00) Yakutsk </option><option data-bs-offset="34200" value="Darwin"${_scopeId2}> (GMT+09:30) Darwin </option><option data-bs-offset="34200" value="Adelaide"${_scopeId2}> (GMT+09:30) Adelaide </option><option data-bs-offset="36000" value="Canberra"${_scopeId2}> (GMT+10:00) Canberra </option><option data-bs-offset="36000" value="Melbourne"${_scopeId2}> (GMT+10:00) Melbourne </option><option data-bs-offset="36000" value="Sydney"${_scopeId2}> (GMT+10:00) Sydney </option><option data-bs-offset="36000" value="Brisbane"${_scopeId2}> (GMT+10:00) Brisbane </option><option data-bs-offset="36000" value="Hobart"${_scopeId2}> (GMT+10:00) Hobart </option><option data-bs-offset="36000" value="Vladivostok"${_scopeId2}> (GMT+10:00) Vladivostok </option><option data-bs-offset="36000" value="Guam"${_scopeId2}> (GMT+10:00) Guam </option><option data-bs-offset="36000" value="Port Moresby"${_scopeId2}> (GMT+10:00) Port Moresby </option><option data-bs-offset="36000" value="Solomon Is."${_scopeId2}> (GMT+10:00) Solomon Is. </option><option data-bs-offset="39600" value="Magadan"${_scopeId2}> (GMT+11:00) Magadan </option><option data-bs-offset="39600" value="New Caledonia"${_scopeId2}> (GMT+11:00) New Caledonia </option><option data-bs-offset="43200" value="Fiji"${_scopeId2}> (GMT+12:00) Fiji </option><option data-bs-offset="43200" value="Kamchatka"${_scopeId2}> (GMT+12:00) Kamchatka </option><option data-bs-offset="43200" value="Marshall Is."${_scopeId2}> (GMT+12:00) Marshall Is. </option><option data-bs-offset="43200" value="Auckland"${_scopeId2}> (GMT+12:00) Auckland </option><option data-bs-offset="43200" value="Wellington"${_scopeId2}> (GMT+12:00) Wellington </option><option data-bs-offset="46800" value="Nuku&#39;alofa"${_scopeId2}> (GMT+13:00) Nuku&#39;alofa </option>`);
                } else {
                  return [
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-39600",
                      value: "International Date Line West"
                    }, " (GMT-11:00) International Date Line West "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-39600",
                      value: "Midway Island"
                    }, " (GMT-11:00) Midway Island "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-39600",
                      value: "Samoa"
                    }, " (GMT-11:00) Samoa "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-36000",
                      value: "Hawaii"
                    }, " (GMT-10:00) Hawaii "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-28800",
                      value: "Alaska"
                    }, " (GMT-08:00) Alaska "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-25200",
                      value: "Pacific Time (US & Canada)"
                    }, " (GMT-07:00) Pacific Time (US & Canada) "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-25200",
                      value: "Tijuana"
                    }, " (GMT-07:00) Tijuana "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-25200",
                      value: "Arizona"
                    }, " (GMT-07:00) Arizona "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-21600",
                      value: "Mountain Time (US & Canada)"
                    }, " (GMT-06:00) Mountain Time (US & Canada) "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-21600",
                      value: "Chihuahua"
                    }, " (GMT-06:00) Chihuahua "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-21600",
                      value: "Mazatlan"
                    }, " (GMT-06:00) Mazatlan "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-21600",
                      value: "Saskatchewan"
                    }, " (GMT-06:00) Saskatchewan "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-21600",
                      value: "Central America"
                    }, " (GMT-06:00) Central America "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-18000",
                      value: "Central Time (US & Canada)"
                    }, " (GMT-05:00) Central Time (US & Canada) "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-18000",
                      value: "Guadalajara"
                    }, " (GMT-05:00) Guadalajara "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-18000",
                      value: "Mexico City"
                    }, " (GMT-05:00) Mexico City "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-18000",
                      value: "Monterrey"
                    }, " (GMT-05:00) Monterrey "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-18000",
                      value: "Bogota"
                    }, " (GMT-05:00) Bogota "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-18000",
                      value: "Lima"
                    }, " (GMT-05:00) Lima "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-18000",
                      value: "Quito"
                    }, " (GMT-05:00) Quito "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-14400",
                      value: "Eastern Time (US & Canada)"
                    }, " (GMT-04:00) Eastern Time (US & Canada) "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-14400",
                      value: "Indiana (East)"
                    }, " (GMT-04:00) Indiana (East) "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-14400",
                      value: "Caracas"
                    }, " (GMT-04:00) Caracas "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-14400",
                      value: "La Paz"
                    }, " (GMT-04:00) La Paz "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-14400",
                      value: "Georgetown"
                    }, " (GMT-04:00) Georgetown "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-10800",
                      value: "Atlantic Time (Canada)"
                    }, " (GMT-03:00) Atlantic Time (Canada) "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-10800",
                      value: "Santiago"
                    }, " (GMT-03:00) Santiago "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-10800",
                      value: "Brasilia"
                    }, " (GMT-03:00) Brasilia "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-10800",
                      value: "Buenos Aires"
                    }, " (GMT-03:00) Buenos Aires "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-9000",
                      value: "Newfoundland"
                    }, " (GMT-02:30) Newfoundland "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-7200",
                      value: "Greenland"
                    }, " (GMT-02:00) Greenland "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-7200",
                      value: "Mid-Atlantic"
                    }, " (GMT-02:00) Mid-Atlantic "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "-3600",
                      value: "Cape Verde Is."
                    }, " (GMT-01:00) Cape Verde Is. "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "0",
                      value: "Azores"
                    }, "(GMT) Azores"),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "0",
                      value: "Monrovia"
                    }, " (GMT) Monrovia "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "0",
                      value: "UTC"
                    }, "(GMT) UTC"),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "3600",
                      value: "Dublin"
                    }, " (GMT+01:00) Dublin "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "3600",
                      value: "Edinburgh"
                    }, " (GMT+01:00) Edinburgh "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "3600",
                      value: "Lisbon"
                    }, " (GMT+01:00) Lisbon "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "3600",
                      value: "London"
                    }, " (GMT+01:00) London "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "3600",
                      value: "Casablanca"
                    }, " (GMT+01:00) Casablanca "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "3600",
                      value: "West Central Africa"
                    }, " (GMT+01:00) West Central Africa "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Belgrade"
                    }, " (GMT+02:00) Belgrade "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Bratislava"
                    }, " (GMT+02:00) Bratislava "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Budapest"
                    }, " (GMT+02:00) Budapest "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Ljubljana"
                    }, " (GMT+02:00) Ljubljana "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Prague"
                    }, " (GMT+02:00) Prague "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Sarajevo"
                    }, " (GMT+02:00) Sarajevo "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Skopje"
                    }, " (GMT+02:00) Skopje "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Warsaw"
                    }, " (GMT+02:00) Warsaw "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Zagreb"
                    }, " (GMT+02:00) Zagreb "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Brussels"
                    }, " (GMT+02:00) Brussels "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Copenhagen"
                    }, " (GMT+02:00) Copenhagen "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Madrid"
                    }, " (GMT+02:00) Madrid "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Paris"
                    }, " (GMT+02:00) Paris "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Amsterdam"
                    }, " (GMT+02:00) Amsterdam "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Berlin"
                    }, " (GMT+02:00) Berlin "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Bern"
                    }, " (GMT+02:00) Bern "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Rome"
                    }, " (GMT+02:00) Rome "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Stockholm"
                    }, " (GMT+02:00) Stockholm "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Vienna"
                    }, " (GMT+02:00) Vienna "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Cairo"
                    }, " (GMT+02:00) Cairo "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Harare"
                    }, " (GMT+02:00) Harare "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "7200",
                      value: "Pretoria"
                    }, " (GMT+02:00) Pretoria "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Bucharest"
                    }, " (GMT+03:00) Bucharest "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Helsinki"
                    }, " (GMT+03:00) Helsinki "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Kiev"
                    }, " (GMT+03:00) Kiev "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Kyiv"
                    }, " (GMT+03:00) Kyiv "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Riga"
                    }, " (GMT+03:00) Riga "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Sofia"
                    }, " (GMT+03:00) Sofia "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Tallinn"
                    }, " (GMT+03:00) Tallinn "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Vilnius"
                    }, " (GMT+03:00) Vilnius "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Athens"
                    }, " (GMT+03:00) Athens "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Istanbul"
                    }, " (GMT+03:00) Istanbul "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Minsk"
                    }, " (GMT+03:00) Minsk "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Jerusalem"
                    }, " (GMT+03:00) Jerusalem "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Moscow"
                    }, " (GMT+03:00) Moscow "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "St. Petersburg"
                    }, " (GMT+03:00) St. Petersburg "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Volgograd"
                    }, " (GMT+03:00) Volgograd "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Kuwait"
                    }, " (GMT+03:00) Kuwait "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Riyadh"
                    }, " (GMT+03:00) Riyadh "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Nairobi"
                    }, " (GMT+03:00) Nairobi "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "10800",
                      value: "Baghdad"
                    }, " (GMT+03:00) Baghdad "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "14400",
                      value: "Abu Dhabi"
                    }, " (GMT+04:00) Abu Dhabi "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "14400",
                      value: "Muscat"
                    }, " (GMT+04:00) Muscat "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "14400",
                      value: "Baku"
                    }, " (GMT+04:00) Baku "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "14400",
                      value: "Tbilisi"
                    }, " (GMT+04:00) Tbilisi "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "14400",
                      value: "Yerevan"
                    }, " (GMT+04:00) Yerevan "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "16200",
                      value: "Tehran"
                    }, " (GMT+04:30) Tehran "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "16200",
                      value: "Kabul"
                    }, " (GMT+04:30) Kabul "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "18000",
                      value: "Ekaterinburg"
                    }, " (GMT+05:00) Ekaterinburg "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "18000",
                      value: "Islamabad"
                    }, " (GMT+05:00) Islamabad "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "18000",
                      value: "Karachi"
                    }, " (GMT+05:00) Karachi "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "18000",
                      value: "Tashkent"
                    }, " (GMT+05:00) Tashkent "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "19800",
                      value: "Chennai"
                    }, " (GMT+05:30) Chennai "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "19800",
                      value: "Kolkata"
                    }, " (GMT+05:30) Kolkata "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "19800",
                      value: "Mumbai"
                    }, " (GMT+05:30) Mumbai "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "19800",
                      value: "New Delhi"
                    }, " (GMT+05:30) New Delhi "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "19800",
                      value: "Sri Jayawardenepura"
                    }, " (GMT+05:30) Sri Jayawardenepura "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "20700",
                      value: "Kathmandu"
                    }, " (GMT+05:45) Kathmandu "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "21600",
                      value: "Astana"
                    }, " (GMT+06:00) Astana "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "21600",
                      value: "Dhaka"
                    }, " (GMT+06:00) Dhaka "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "21600",
                      value: "Almaty"
                    }, " (GMT+06:00) Almaty "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "21600",
                      value: "Urumqi"
                    }, " (GMT+06:00) Urumqi "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "23400",
                      value: "Rangoon"
                    }, " (GMT+06:30) Rangoon "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "25200",
                      value: "Novosibirsk"
                    }, " (GMT+07:00) Novosibirsk "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "25200",
                      value: "Bangkok"
                    }, " (GMT+07:00) Bangkok "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "25200",
                      value: "Hanoi"
                    }, " (GMT+07:00) Hanoi "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "25200",
                      value: "Jakarta"
                    }, " (GMT+07:00) Jakarta "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "25200",
                      value: "Krasnoyarsk"
                    }, " (GMT+07:00) Krasnoyarsk "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "28800",
                      value: "Beijing"
                    }, " (GMT+08:00) Beijing "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "28800",
                      value: "Chongqing"
                    }, " (GMT+08:00) Chongqing "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "28800",
                      value: "Hong Kong"
                    }, " (GMT+08:00) Hong Kong "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "28800",
                      value: "Kuala Lumpur"
                    }, " (GMT+08:00) Kuala Lumpur "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "28800",
                      value: "Singapore"
                    }, " (GMT+08:00) Singapore "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "28800",
                      value: "Taipei"
                    }, " (GMT+08:00) Taipei "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "28800",
                      value: "Perth"
                    }, " (GMT+08:00) Perth "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "28800",
                      value: "Irkutsk"
                    }, " (GMT+08:00) Irkutsk "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "28800",
                      value: "Ulaan Bataar"
                    }, " (GMT+08:00) Ulaan Bataar "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "32400",
                      value: "Seoul"
                    }, " (GMT+09:00) Seoul "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "32400",
                      value: "Osaka"
                    }, " (GMT+09:00) Osaka "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "32400",
                      value: "Sapporo"
                    }, " (GMT+09:00) Sapporo "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "32400",
                      value: "Tokyo"
                    }, " (GMT+09:00) Tokyo "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "32400",
                      value: "Yakutsk"
                    }, " (GMT+09:00) Yakutsk "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "34200",
                      value: "Darwin"
                    }, " (GMT+09:30) Darwin "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "34200",
                      value: "Adelaide"
                    }, " (GMT+09:30) Adelaide "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "36000",
                      value: "Canberra"
                    }, " (GMT+10:00) Canberra "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "36000",
                      value: "Melbourne"
                    }, " (GMT+10:00) Melbourne "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "36000",
                      value: "Sydney"
                    }, " (GMT+10:00) Sydney "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "36000",
                      value: "Brisbane"
                    }, " (GMT+10:00) Brisbane "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "36000",
                      value: "Hobart"
                    }, " (GMT+10:00) Hobart "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "36000",
                      value: "Vladivostok"
                    }, " (GMT+10:00) Vladivostok "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "36000",
                      value: "Guam"
                    }, " (GMT+10:00) Guam "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "36000",
                      value: "Port Moresby"
                    }, " (GMT+10:00) Port Moresby "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "36000",
                      value: "Solomon Is."
                    }, " (GMT+10:00) Solomon Is. "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "39600",
                      value: "Magadan"
                    }, " (GMT+11:00) Magadan "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "39600",
                      value: "New Caledonia"
                    }, " (GMT+11:00) New Caledonia "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "43200",
                      value: "Fiji"
                    }, " (GMT+12:00) Fiji "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "43200",
                      value: "Kamchatka"
                    }, " (GMT+12:00) Kamchatka "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "43200",
                      value: "Marshall Is."
                    }, " (GMT+12:00) Marshall Is. "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "43200",
                      value: "Auckland"
                    }, " (GMT+12:00) Auckland "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "43200",
                      value: "Wellington"
                    }, " (GMT+12:00) Wellington "),
                    vueExports$1.createVNode("option", {
                      "data-bs-offset": "46800",
                      value: "Nuku'alofa"
                    }, " (GMT+13:00) Nuku'alofa ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "timezone" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label required fw-semibold fs-6"${_scopeId}>Currency</label><div class="col-lg-8 fv-row"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              as: "select",
              name: "currency",
              class: "form-select form-select-solid form-select-lg",
              modelValue: _ctx.profileDetails.currency,
              "onUpdate:modelValue": ($event) => _ctx.profileDetails.currency = $event
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<option value="USD"${_scopeId2}><b${_scopeId2}>USD</b> - USA dollar</option><option value="GBP"${_scopeId2}><b${_scopeId2}>GBP</b> - British pound </option><option value="AUD"${_scopeId2}><b${_scopeId2}>AUD</b> - Australian dollar </option><option value="JPY"${_scopeId2}><b${_scopeId2}>JPY</b> - Japanese yen</option><option value="SEK"${_scopeId2}><b${_scopeId2}>SEK</b> - Swedish krona </option><option value="CAD"${_scopeId2}><b${_scopeId2}>CAD</b> - Canadian dollar </option><option value="CHF"${_scopeId2}><b${_scopeId2}>CHF</b> - Swiss franc</option>`);
                } else {
                  return [
                    vueExports$1.createVNode("option", { value: "USD" }, [
                      vueExports$1.createVNode("b", null, "USD"),
                      vueExports$1.createTextVNode(" - USA dollar")
                    ]),
                    vueExports$1.createVNode("option", { value: "GBP" }, [
                      vueExports$1.createVNode("b", null, "GBP"),
                      vueExports$1.createTextVNode(" - British pound ")
                    ]),
                    vueExports$1.createVNode("option", { value: "AUD" }, [
                      vueExports$1.createVNode("b", null, "AUD"),
                      vueExports$1.createTextVNode(" - Australian dollar ")
                    ]),
                    vueExports$1.createVNode("option", { value: "JPY" }, [
                      vueExports$1.createVNode("b", null, "JPY"),
                      vueExports$1.createTextVNode(" - Japanese yen")
                    ]),
                    vueExports$1.createVNode("option", { value: "SEK" }, [
                      vueExports$1.createVNode("b", null, "SEK"),
                      vueExports$1.createTextVNode(" - Swedish krona ")
                    ]),
                    vueExports$1.createVNode("option", { value: "CAD" }, [
                      vueExports$1.createVNode("b", null, "CAD"),
                      vueExports$1.createTextVNode(" - Canadian dollar ")
                    ]),
                    vueExports$1.createVNode("option", { value: "CHF" }, [
                      vueExports$1.createVNode("b", null, "CHF"),
                      vueExports$1.createTextVNode(" - Swiss franc")
                    ])
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "currency" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="row mb-6"${_scopeId}><label class="col-lg-4 col-form-label fw-semibold fs-6"${_scopeId}>Communication</label><div class="col-lg-8 fv-row"${_scopeId}><div class="d-flex align-items-center mt-3"${_scopeId}><label class="form-check form-check-inline form-check-solid me-5"${_scopeId}><input class="form-check-input" name="communication[]" type="checkbox"${_scopeId}><span class="fw-semibold ps-2 fs-6"${_scopeId}> Email </span></label><label class="form-check form-check-inline form-check-solid"${_scopeId}><input class="form-check-input" name="communication[]" type="checkbox"${_scopeId}><span class="fw-semibold ps-2 fs-6"${_scopeId}> Phone </span></label></div></div></div><div class="row mb-0"${_scopeId}><label class="col-lg-4 col-form-label fw-semibold fs-6"${_scopeId}>Allow Marketing</label><div class="col-lg-8 d-flex align-items-center"${_scopeId}><div class="form-check form-check-solid form-switch fv-row"${_scopeId}><input class="form-check-input w-45px h-30px" type="checkbox" id="allowmarketing"${_scopeId}><label class="form-check-label" for="allowmarketing"${_scopeId}></label></div></div></div></div><div class="card-footer d-flex justify-content-end py-6 px-9"${_scopeId}><button type="reset" class="btn btn-light btn-active-light-primary me-2"${_scopeId}> Discard </button><button type="submit" id="kt_account_profile_details_submit" class="btn btn-primary"${_scopeId}><span class="indicator-label"${_scopeId}> Save Changes </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "card-body border-top p-9" }, [
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label fw-semibold fs-6" }, "Avatar"),
                  vueExports$1.createVNode("div", { class: "col-lg-8" }, [
                    vueExports$1.createVNode("div", {
                      class: "image-input image-input-outline",
                      "data-kt-image-input": "true",
                      style: {
                        backgroundImage: `url(${_ctx.getAssetPath(
                          "/media/avatars/blank.png"
                        )})`
                      }
                    }, [
                      vueExports$1.createVNode("div", {
                        class: "image-input-wrapper w-125px h-125px",
                        style: `background-image: url(${_ctx.profileDetails.avatar})`
                      }, null, 4),
                      vueExports$1.createVNode("label", {
                        class: "btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow",
                        "data-kt-image-input-action": "change",
                        "data-bs-toggle": "tooltip",
                        title: "Change avatar"
                      }, [
                        vueExports$1.createVNode("i", { class: "bi bi-pencil-fill fs-7" }),
                        vueExports$1.createVNode("input", {
                          type: "file",
                          name: "avatar",
                          accept: ".png, .jpg, .jpeg"
                        }),
                        vueExports$1.createVNode("input", {
                          type: "hidden",
                          name: "avatar_remove"
                        })
                      ]),
                      vueExports$1.createVNode("span", {
                        class: "btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow",
                        "data-kt-image-input-action": "remove",
                        "data-bs-toggle": "tooltip",
                        onClick: ($event) => _ctx.removeImage(),
                        title: "Remove avatar"
                      }, [
                        vueExports$1.createVNode("i", { class: "bi bi-x fs-2" })
                      ], 8, ["onClick"])
                    ], 4),
                    vueExports$1.createVNode("div", { class: "form-text" }, "Allowed file types: png, jpg, jpeg.")
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label required fw-semibold fs-6" }, "Full Name"),
                  vueExports$1.createVNode("div", { class: "col-lg-8" }, [
                    vueExports$1.createVNode("div", { class: "row" }, [
                      vueExports$1.createVNode("div", { class: "col-lg-6 fv-row" }, [
                        vueExports$1.createVNode(_component_Field, {
                          type: "text",
                          name: "fname",
                          class: "form-control form-control-lg form-control-solid mb-3 mb-lg-0",
                          placeholder: "First name",
                          modelValue: _ctx.profileDetails.name,
                          "onUpdate:modelValue": ($event) => _ctx.profileDetails.name = $event
                        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                        vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                          vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                            vueExports$1.createVNode(_component_ErrorMessage, { name: "fname" })
                          ])
                        ])
                      ]),
                      vueExports$1.createVNode("div", { class: "col-lg-6 fv-row" }, [
                        vueExports$1.createVNode(_component_Field, {
                          type: "text",
                          name: "lname",
                          class: "form-control form-control-lg form-control-solid",
                          placeholder: "Last name",
                          modelValue: _ctx.profileDetails.surname,
                          "onUpdate:modelValue": ($event) => _ctx.profileDetails.surname = $event
                        }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                        vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                          vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                            vueExports$1.createVNode(_component_ErrorMessage, { name: "lname" })
                          ])
                        ])
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label required fw-semibold fs-6" }, "Company"),
                  vueExports$1.createVNode("div", { class: "col-lg-8 fv-row" }, [
                    vueExports$1.createVNode(_component_Field, {
                      type: "text",
                      name: "company",
                      class: "form-control form-control-lg form-control-solid",
                      placeholder: "Company name",
                      modelValue: _ctx.profileDetails.company,
                      "onUpdate:modelValue": ($event) => _ctx.profileDetails.company = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "company" })
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label fw-semibold fs-6" }, [
                    vueExports$1.createVNode("span", { class: "required" }, "Contact Phone"),
                    vueExports$1.createVNode("i", {
                      class: "fas fa-exclamation-circle ms-1 fs-7",
                      "data-bs-toggle": "tooltip",
                      title: "Phone number must be active"
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "col-lg-8 fv-row" }, [
                    vueExports$1.createVNode(_component_Field, {
                      type: "tel",
                      name: "phone",
                      class: "form-control form-control-lg form-control-solid",
                      placeholder: "Phone number",
                      modelValue: _ctx.profileDetails.contactPhone,
                      "onUpdate:modelValue": ($event) => _ctx.profileDetails.contactPhone = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "phone" })
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label fw-semibold fs-6" }, "Company Site"),
                  vueExports$1.createVNode("div", { class: "col-lg-8 fv-row" }, [
                    vueExports$1.createVNode(_component_Field, {
                      type: "text",
                      name: "website",
                      class: "form-control form-control-lg form-control-solid",
                      placeholder: "Company website",
                      modelValue: _ctx.profileDetails.companySite,
                      "onUpdate:modelValue": ($event) => _ctx.profileDetails.companySite = $event
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "website" })
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label fw-semibold fs-6" }, [
                    vueExports$1.createVNode("span", { class: "required" }, "Country"),
                    vueExports$1.createVNode("i", {
                      class: "fas fa-exclamation-circle ms-1 fs-7",
                      "data-bs-toggle": "tooltip",
                      title: "Country of origination"
                    })
                  ]),
                  vueExports$1.createVNode("div", { class: "col-lg-8 fv-row" }, [
                    vueExports$1.createVNode(_component_Field, {
                      as: "select",
                      name: "country",
                      class: "form-select form-select-solid form-select-lg fw-semibold",
                      modelValue: _ctx.profileDetails.country,
                      "onUpdate:modelValue": ($event) => _ctx.profileDetails.country = $event
                    }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode("option", { value: "AF" }, "Afghanistan"),
                        vueExports$1.createVNode("option", { value: "AX" }, "Aland Islands"),
                        vueExports$1.createVNode("option", { value: "AL" }, "Albania"),
                        vueExports$1.createVNode("option", { value: "DZ" }, "Algeria"),
                        vueExports$1.createVNode("option", { value: "AS" }, "American Samoa"),
                        vueExports$1.createVNode("option", { value: "AD" }, "Andorra"),
                        vueExports$1.createVNode("option", { value: "AO" }, "Angola"),
                        vueExports$1.createVNode("option", { value: "AI" }, "Anguilla"),
                        vueExports$1.createVNode("option", { value: "AQ" }, "Antarctica"),
                        vueExports$1.createVNode("option", { value: "AG" }, "Antigua and Barbuda"),
                        vueExports$1.createVNode("option", { value: "AR" }, "Argentina"),
                        vueExports$1.createVNode("option", { value: "AM" }, "Armenia"),
                        vueExports$1.createVNode("option", { value: "AW" }, "Aruba"),
                        vueExports$1.createVNode("option", { value: "AU" }, "Australia"),
                        vueExports$1.createVNode("option", { value: "AT" }, "Austria"),
                        vueExports$1.createVNode("option", { value: "AZ" }, "Azerbaijan"),
                        vueExports$1.createVNode("option", { value: "BS" }, "Bahamas"),
                        vueExports$1.createVNode("option", { value: "BH" }, "Bahrain"),
                        vueExports$1.createVNode("option", { value: "BD" }, "Bangladesh"),
                        vueExports$1.createVNode("option", { value: "BB" }, "Barbados"),
                        vueExports$1.createVNode("option", { value: "BY" }, "Belarus"),
                        vueExports$1.createVNode("option", { value: "BE" }, "Belgium"),
                        vueExports$1.createVNode("option", { value: "BZ" }, "Belize"),
                        vueExports$1.createVNode("option", { value: "BJ" }, "Benin"),
                        vueExports$1.createVNode("option", { value: "BM" }, "Bermuda"),
                        vueExports$1.createVNode("option", { value: "BT" }, "Bhutan"),
                        vueExports$1.createVNode("option", { value: "BO" }, "Bolivia, Plurinational State of"),
                        vueExports$1.createVNode("option", { value: "BQ" }, "Bonaire, Sint Eustatius and Saba"),
                        vueExports$1.createVNode("option", { value: "BA" }, "Bosnia and Herzegovina"),
                        vueExports$1.createVNode("option", { value: "BW" }, "Botswana"),
                        vueExports$1.createVNode("option", { value: "BV" }, "Bouvet Island"),
                        vueExports$1.createVNode("option", { value: "BR" }, "Brazil"),
                        vueExports$1.createVNode("option", { value: "IO" }, "British Indian Ocean Territory"),
                        vueExports$1.createVNode("option", { value: "BN" }, "Brunei Darussalam"),
                        vueExports$1.createVNode("option", { value: "BG" }, "Bulgaria"),
                        vueExports$1.createVNode("option", { value: "BF" }, "Burkina Faso"),
                        vueExports$1.createVNode("option", { value: "BI" }, "Burundi"),
                        vueExports$1.createVNode("option", { value: "KH" }, "Cambodia"),
                        vueExports$1.createVNode("option", { value: "CM" }, "Cameroon"),
                        vueExports$1.createVNode("option", { value: "CA" }, "Canada"),
                        vueExports$1.createVNode("option", { value: "CV" }, "Cape Verde"),
                        vueExports$1.createVNode("option", { value: "KY" }, "Cayman Islands"),
                        vueExports$1.createVNode("option", { value: "CF" }, "Central African Republic"),
                        vueExports$1.createVNode("option", { value: "TD" }, "Chad"),
                        vueExports$1.createVNode("option", { value: "CL" }, "Chile"),
                        vueExports$1.createVNode("option", { value: "CN" }, "China"),
                        vueExports$1.createVNode("option", { value: "CX" }, "Christmas Island"),
                        vueExports$1.createVNode("option", { value: "CC" }, "Cocos (Keeling) Islands"),
                        vueExports$1.createVNode("option", { value: "CO" }, "Colombia"),
                        vueExports$1.createVNode("option", { value: "KM" }, "Comoros"),
                        vueExports$1.createVNode("option", { value: "CG" }, "Congo"),
                        vueExports$1.createVNode("option", { value: "CD" }, " Congo, the Democratic Republic of the "),
                        vueExports$1.createVNode("option", { value: "CK" }, "Cook Islands"),
                        vueExports$1.createVNode("option", { value: "CR" }, "Costa Rica"),
                        vueExports$1.createVNode("option", { value: "CI" }, "Côte d'Ivoire"),
                        vueExports$1.createVNode("option", { value: "HR" }, "Croatia"),
                        vueExports$1.createVNode("option", { value: "CU" }, "Cuba"),
                        vueExports$1.createVNode("option", { value: "CW" }, "Curaçao"),
                        vueExports$1.createVNode("option", { value: "CY" }, "Cyprus"),
                        vueExports$1.createVNode("option", { value: "CZ" }, "Czech Republic"),
                        vueExports$1.createVNode("option", { value: "DK" }, "Denmark"),
                        vueExports$1.createVNode("option", { value: "DJ" }, "Djibouti"),
                        vueExports$1.createVNode("option", { value: "DM" }, "Dominica"),
                        vueExports$1.createVNode("option", { value: "DO" }, "Dominican Republic"),
                        vueExports$1.createVNode("option", { value: "EC" }, "Ecuador"),
                        vueExports$1.createVNode("option", { value: "EG" }, "Egypt"),
                        vueExports$1.createVNode("option", { value: "SV" }, "El Salvador"),
                        vueExports$1.createVNode("option", { value: "GQ" }, "Equatorial Guinea"),
                        vueExports$1.createVNode("option", { value: "ER" }, "Eritrea"),
                        vueExports$1.createVNode("option", { value: "EE" }, "Estonia"),
                        vueExports$1.createVNode("option", { value: "ET" }, "Ethiopia"),
                        vueExports$1.createVNode("option", { value: "FK" }, "Falkland Islands (Malvinas)"),
                        vueExports$1.createVNode("option", { value: "FO" }, "Faroe Islands"),
                        vueExports$1.createVNode("option", { value: "FJ" }, "Fiji"),
                        vueExports$1.createVNode("option", { value: "FI" }, "Finland"),
                        vueExports$1.createVNode("option", { value: "FR" }, "France"),
                        vueExports$1.createVNode("option", { value: "GF" }, "French Guiana"),
                        vueExports$1.createVNode("option", { value: "PF" }, "French Polynesia"),
                        vueExports$1.createVNode("option", { value: "TF" }, "French Southern Territories"),
                        vueExports$1.createVNode("option", { value: "GA" }, "Gabon"),
                        vueExports$1.createVNode("option", { value: "GM" }, "Gambia"),
                        vueExports$1.createVNode("option", { value: "GE" }, "Georgia"),
                        vueExports$1.createVNode("option", { value: "DE" }, "Germany"),
                        vueExports$1.createVNode("option", { value: "GH" }, "Ghana"),
                        vueExports$1.createVNode("option", { value: "GI" }, "Gibraltar"),
                        vueExports$1.createVNode("option", { value: "GR" }, "Greece"),
                        vueExports$1.createVNode("option", { value: "GL" }, "Greenland"),
                        vueExports$1.createVNode("option", { value: "GD" }, "Grenada"),
                        vueExports$1.createVNode("option", { value: "GP" }, "Guadeloupe"),
                        vueExports$1.createVNode("option", { value: "GU" }, "Guam"),
                        vueExports$1.createVNode("option", { value: "GT" }, "Guatemala"),
                        vueExports$1.createVNode("option", { value: "GG" }, "Guernsey"),
                        vueExports$1.createVNode("option", { value: "GN" }, "Guinea"),
                        vueExports$1.createVNode("option", { value: "GW" }, "Guinea-Bissau"),
                        vueExports$1.createVNode("option", { value: "GY" }, "Guyana"),
                        vueExports$1.createVNode("option", { value: "HT" }, "Haiti"),
                        vueExports$1.createVNode("option", { value: "HM" }, "Heard Island and McDonald Islands"),
                        vueExports$1.createVNode("option", { value: "VA" }, "Holy See (Vatican City State)"),
                        vueExports$1.createVNode("option", { value: "HN" }, "Honduras"),
                        vueExports$1.createVNode("option", { value: "HK" }, "Hong Kong"),
                        vueExports$1.createVNode("option", { value: "HU" }, "Hungary"),
                        vueExports$1.createVNode("option", { value: "IS" }, "Iceland"),
                        vueExports$1.createVNode("option", { value: "IN" }, "India"),
                        vueExports$1.createVNode("option", { value: "ID" }, "Indonesia"),
                        vueExports$1.createVNode("option", { value: "IR" }, "Iran, Islamic Republic of"),
                        vueExports$1.createVNode("option", { value: "IQ" }, "Iraq"),
                        vueExports$1.createVNode("option", { value: "IE" }, "Ireland"),
                        vueExports$1.createVNode("option", { value: "IM" }, "Isle of Man"),
                        vueExports$1.createVNode("option", { value: "IL" }, "Israel"),
                        vueExports$1.createVNode("option", { value: "IT" }, "Italy"),
                        vueExports$1.createVNode("option", { value: "JM" }, "Jamaica"),
                        vueExports$1.createVNode("option", { value: "JP" }, "Japan"),
                        vueExports$1.createVNode("option", { value: "JE" }, "Jersey"),
                        vueExports$1.createVNode("option", { value: "JO" }, "Jordan"),
                        vueExports$1.createVNode("option", { value: "KZ" }, "Kazakhstan"),
                        vueExports$1.createVNode("option", { value: "KE" }, "Kenya"),
                        vueExports$1.createVNode("option", { ue: "KI" }, "Kiribati"),
                        vueExports$1.createVNode("option", { value: "KP" }, " Korea, Democratic People's Republic of "),
                        vueExports$1.createVNode("option", { value: "KW" }, "Kuwait"),
                        vueExports$1.createVNode("option", { value: "KG" }, "Kyrgyzstan"),
                        vueExports$1.createVNode("option", { value: "LA" }, "Lao People's Democratic Republic"),
                        vueExports$1.createVNode("option", { value: "LV" }, "Latvia"),
                        vueExports$1.createVNode("option", { value: "LB" }, "Lebanon"),
                        vueExports$1.createVNode("option", { value: "LS" }, "Lesotho"),
                        vueExports$1.createVNode("option", { value: "LR" }, "Liberia"),
                        vueExports$1.createVNode("option", { value: "LY" }, "Libya"),
                        vueExports$1.createVNode("option", { value: "LI" }, "Liechtenstein"),
                        vueExports$1.createVNode("option", { value: "LT" }, "Lithuania"),
                        vueExports$1.createVNode("option", { value: "LU" }, "Luxembourg"),
                        vueExports$1.createVNode("option", { value: "MO" }, "Macao"),
                        vueExports$1.createVNode("option", { value: "MK" }, " Macedonia, the former Yugoslav Republic of "),
                        vueExports$1.createVNode("option", { value: "MG" }, "Madagascar"),
                        vueExports$1.createVNode("option", { value: "MW" }, "Malawi"),
                        vueExports$1.createVNode("option", { value: "MY" }, "Malaysia"),
                        vueExports$1.createVNode("option", { value: "MV" }, "Maldives"),
                        vueExports$1.createVNode("option", { value: "ML" }, "Mali"),
                        vueExports$1.createVNode("option", { value: "MT" }, "Malta"),
                        vueExports$1.createVNode("option", { value: "MH" }, "Marshall Islands"),
                        vueExports$1.createVNode("option", { value: "MQ" }, "Martinique"),
                        vueExports$1.createVNode("option", { value: "MR" }, "Mauritania"),
                        vueExports$1.createVNode("option", { value: "MU" }, "Mauritius"),
                        vueExports$1.createVNode("option", { value: "YT" }, "Mayotte"),
                        vueExports$1.createVNode("option", { value: "MX" }, "Mexico"),
                        vueExports$1.createVNode("option", { value: "FM" }, "Micronesia, Federated States of"),
                        vueExports$1.createVNode("option", { value: "MD" }, "Moldova, Republic of"),
                        vueExports$1.createVNode("option", { value: "MC" }, "Monaco"),
                        vueExports$1.createVNode("option", { value: "MN" }, "Mongolia"),
                        vueExports$1.createVNode("option", { value: "ME" }, "Montenegro"),
                        vueExports$1.createVNode("option", { value: "MS" }, "Montserrat"),
                        vueExports$1.createVNode("option", { value: "MA" }, "Morocco"),
                        vueExports$1.createVNode("option", { value: "MZ" }, "Mozambique"),
                        vueExports$1.createVNode("option", { value: "MM" }, "Myanmar"),
                        vueExports$1.createVNode("option", { value: "NA" }, "Namibia"),
                        vueExports$1.createVNode("option", { value: "NR" }, "Nauru"),
                        vueExports$1.createVNode("option", { value: "NP" }, "Nepal"),
                        vueExports$1.createVNode("option", { value: "NL" }, "Netherlands"),
                        vueExports$1.createVNode("option", { value: "NC" }, "New Caledonia"),
                        vueExports$1.createVNode("option", { value: "NZ" }, "New Zealand"),
                        vueExports$1.createVNode("option", { value: "NI" }, "Nicaragua"),
                        vueExports$1.createVNode("option", { value: "NE" }, "Niger"),
                        vueExports$1.createVNode("option", { value: "NG" }, "Nigeria"),
                        vueExports$1.createVNode("option", { value: "NU" }, "Niue"),
                        vueExports$1.createVNode("option", { value: "NF" }, "Norfolk Island"),
                        vueExports$1.createVNode("option", { value: "MP" }, "Northern Mariana Islands"),
                        vueExports$1.createVNode("option", { value: "NO" }, "Norway"),
                        vueExports$1.createVNode("option", { value: "OM" }, "Oman"),
                        vueExports$1.createVNode("option", { value: "PK" }, "Pakistan"),
                        vueExports$1.createVNode("option", { value: "PW" }, "Palau"),
                        vueExports$1.createVNode("option", { value: "PS" }, "Palestinian Territory, Occupied"),
                        vueExports$1.createVNode("option", { value: "PA" }, "Panama"),
                        vueExports$1.createVNode("option", { value: "PG" }, "Papua New Guinea"),
                        vueExports$1.createVNode("option", { value: "PY" }, "Paraguay"),
                        vueExports$1.createVNode("option", { value: "PE" }, "Peru"),
                        vueExports$1.createVNode("option", { value: "PH" }, "Philippines"),
                        vueExports$1.createVNode("option", { value: "PN" }, "Pitcairn"),
                        vueExports$1.createVNode("option", { value: "PL" }, "Poland"),
                        vueExports$1.createVNode("option", { value: "PT" }, "Portugal"),
                        vueExports$1.createVNode("option", { value: "PR" }, "Puerto Rico"),
                        vueExports$1.createVNode("option", { value: "QA" }, "Qatar"),
                        vueExports$1.createVNode("option", { value: "RE" }, "Réunion"),
                        vueExports$1.createVNode("option", { value: "RO" }, "Romania"),
                        vueExports$1.createVNode("option", { value: "RU" }, "Russian Federation"),
                        vueExports$1.createVNode("option", { value: "RW" }, "Rwanda"),
                        vueExports$1.createVNode("option", { value: "BL" }, "Saint Barthélemy"),
                        vueExports$1.createVNode("option", { value: "SH" }, " Saint Helena, Ascension and Tristan da Cunha "),
                        vueExports$1.createVNode("option", { value: "KN" }, "Saint Kitts and Nevis"),
                        vueExports$1.createVNode("option", { value: "LC" }, "Saint Lucia"),
                        vueExports$1.createVNode("option", { value: "MF" }, "Saint Martin (French part)"),
                        vueExports$1.createVNode("option", { value: "PM" }, "Saint Pierre and Miquelon"),
                        vueExports$1.createVNode("option", { value: "VC" }, "Saint Vincent and the Grenadines"),
                        vueExports$1.createVNode("option", { value: "WS" }, "Samoa"),
                        vueExports$1.createVNode("option", { value: "SM" }, "San Marino"),
                        vueExports$1.createVNode("option", { value: "ST" }, "Sao Tome and Principe"),
                        vueExports$1.createVNode("option", { value: "SA" }, "Saudi Arabia"),
                        vueExports$1.createVNode("option", { value: "SN" }, "Senegal"),
                        vueExports$1.createVNode("option", { value: "RS" }, "Serbia"),
                        vueExports$1.createVNode("option", { value: "SC" }, "Seychelles"),
                        vueExports$1.createVNode("option", { value: "SL" }, "Sierra Leone"),
                        vueExports$1.createVNode("option", { value: "SG" }, "Singapore"),
                        vueExports$1.createVNode("option", { value: "SX" }, "Sint Maarten (Dutch part)"),
                        vueExports$1.createVNode("option", { value: "SK" }, "Slovakia"),
                        vueExports$1.createVNode("option", { value: "SI" }, "Slovenia"),
                        vueExports$1.createVNode("option", { value: "SB" }, "Solomon Islands"),
                        vueExports$1.createVNode("option", { value: "SO" }, "Somalia"),
                        vueExports$1.createVNode("option", { value: "ZA" }, "South Africa"),
                        vueExports$1.createVNode("option", { value: "GS" }, " South Georgia and the South Sandwich Islands "),
                        vueExports$1.createVNode("option", { value: "KR" }, "South Korea"),
                        vueExports$1.createVNode("option", { value: "SS" }, "South Sudan"),
                        vueExports$1.createVNode("option", { value: "ES" }, "Spain"),
                        vueExports$1.createVNode("option", { value: "LK" }, "Sri Lanka"),
                        vueExports$1.createVNode("option", { value: "SD" }, "Sudan"),
                        vueExports$1.createVNode("option", { value: "SR" }, "Suriname"),
                        vueExports$1.createVNode("option", { value: "SJ" }, "Svalbard and Jan Mayen"),
                        vueExports$1.createVNode("option", { value: "SZ" }, "Swaziland"),
                        vueExports$1.createVNode("option", { value: "SE" }, "Sweden"),
                        vueExports$1.createVNode("option", { value: "CH" }, "Switzerland"),
                        vueExports$1.createVNode("option", { value: "SY" }, "Syrian Arab Republic"),
                        vueExports$1.createVNode("option", { value: "TW" }, "Taiwan, Province of China"),
                        vueExports$1.createVNode("option", { value: "TJ" }, "Tajikistan"),
                        vueExports$1.createVNode("option", { value: "TZ" }, "Tanzania, United Republic of"),
                        vueExports$1.createVNode("option", { value: "TH" }, "Thailand"),
                        vueExports$1.createVNode("option", { value: "TL" }, "Timor-Leste"),
                        vueExports$1.createVNode("option", { value: "TG" }, "Togo"),
                        vueExports$1.createVNode("option", { value: "TK" }, "Tokelau"),
                        vueExports$1.createVNode("option", { value: "TO" }, "Tonga"),
                        vueExports$1.createVNode("option", { value: "TT" }, "Trinidad and Tobago"),
                        vueExports$1.createVNode("option", { value: "TN" }, "Tunisia"),
                        vueExports$1.createVNode("option", { value: "TR" }, "Turkey"),
                        vueExports$1.createVNode("option", { value: "TM" }, "Turkmenistan"),
                        vueExports$1.createVNode("option", { value: "TC" }, "Turks and Caicos Islands"),
                        vueExports$1.createVNode("option", { value: "TV" }, "Tuvalu"),
                        vueExports$1.createVNode("option", { value: "UG" }, "Uganda"),
                        vueExports$1.createVNode("option", { value: "UA" }, "Ukraine"),
                        vueExports$1.createVNode("option", { value: "AE" }, "United Arab Emirates"),
                        vueExports$1.createVNode("option", { value: "GB" }, "United Kingdom"),
                        vueExports$1.createVNode("option", { value: "US" }, "United States"),
                        vueExports$1.createVNode("option", { value: "UY" }, "Uruguay"),
                        vueExports$1.createVNode("option", { value: "UZ" }, "Uzbekistan"),
                        vueExports$1.createVNode("option", { value: "VU" }, "Vanuatu"),
                        vueExports$1.createVNode("option", { value: "VE" }, "Venezuela, Bolivarian Republic of"),
                        vueExports$1.createVNode("option", { value: "VN" }, "Vietnam"),
                        vueExports$1.createVNode("option", { value: "VI" }, "Virgin Islands"),
                        vueExports$1.createVNode("option", { value: "WF" }, "Wallis and Futuna"),
                        vueExports$1.createVNode("option", { value: "EH" }, "Western Sahara"),
                        vueExports$1.createVNode("option", { value: "YE" }, "Yemen"),
                        vueExports$1.createVNode("option", { value: "ZM" }, "Zambia"),
                        vueExports$1.createVNode("option", { value: "ZW" }, "Zimbabwe")
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "country" })
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label required fw-semibold fs-6" }, "Language"),
                  vueExports$1.createVNode("div", { class: "col-lg-8 fv-row" }, [
                    vueExports$1.createVNode(_component_Field, {
                      as: "select",
                      name: "language",
                      class: "form-select form-select-solid form-select-lg",
                      modelValue: _ctx.profileDetails.language,
                      "onUpdate:modelValue": ($event) => _ctx.profileDetails.language = $event
                    }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode("option", { value: "id" }, "Bahasa Indonesia - Indonesian"),
                        vueExports$1.createVNode("option", { value: "msa" }, "Bahasa Melayu - Malay"),
                        vueExports$1.createVNode("option", { value: "ca" }, "Català - Catalan"),
                        vueExports$1.createVNode("option", { value: "cs" }, "Čeština - Czech"),
                        vueExports$1.createVNode("option", { value: "da" }, "Dansk - Danish"),
                        vueExports$1.createVNode("option", { value: "de" }, "Deutsch - German"),
                        vueExports$1.createVNode("option", { value: "en" }, "English"),
                        vueExports$1.createVNode("option", { value: "en-gb" }, "English UK - British English"),
                        vueExports$1.createVNode("option", { value: "es" }, "Español - Spanish"),
                        vueExports$1.createVNode("option", { value: "fil" }, "Filipino"),
                        vueExports$1.createVNode("option", { value: "fr" }, "Français - French"),
                        vueExports$1.createVNode("option", { value: "ga" }, "Gaeilge - Irish (beta)"),
                        vueExports$1.createVNode("option", { value: "gl" }, "Galego - Galician (beta)"),
                        vueExports$1.createVNode("option", { value: "hr" }, "Hrvatski - Croatian"),
                        vueExports$1.createVNode("option", { value: "it" }, "Italiano - Italian"),
                        vueExports$1.createVNode("option", { value: "hu" }, "Magyar - Hungarian"),
                        vueExports$1.createVNode("option", { value: "nl" }, "Nederlands - Dutch"),
                        vueExports$1.createVNode("option", { value: "no" }, "Norsk - Norwegian"),
                        vueExports$1.createVNode("option", { value: "pl" }, "Polski - Polish"),
                        vueExports$1.createVNode("option", { value: "pt" }, "Português - Portuguese"),
                        vueExports$1.createVNode("option", { value: "ro" }, "Română - Romanian"),
                        vueExports$1.createVNode("option", { value: "sk" }, "Slovenčina - Slovak"),
                        vueExports$1.createVNode("option", { value: "fi" }, "Suomi - Finnish"),
                        vueExports$1.createVNode("option", { value: "sv" }, "Svenska - Swedish"),
                        vueExports$1.createVNode("option", { value: "vi" }, "Tiếng Việt - Vietnamese"),
                        vueExports$1.createVNode("option", { value: "tr" }, "Türkçe - Turkish"),
                        vueExports$1.createVNode("option", { value: "el" }, "Ελληνικά - Greek"),
                        vueExports$1.createVNode("option", { value: "bg" }, "Български език - Bulgarian"),
                        vueExports$1.createVNode("option", { value: "ru" }, "Русский - Russian"),
                        vueExports$1.createVNode("option", { value: "sr" }, "Српски - Serbian"),
                        vueExports$1.createVNode("option", { value: "uk" }, "Українська мова - Ukrainian"),
                        vueExports$1.createVNode("option", { value: "he" }, "עִבְרִית - Hebrew"),
                        vueExports$1.createVNode("option", { value: "ur" }, "اردو - Urdu (beta)"),
                        vueExports$1.createVNode("option", { value: "ar" }, "العربية - Arabic"),
                        vueExports$1.createVNode("option", { value: "fa" }, "فارسی - Persian"),
                        vueExports$1.createVNode("option", { value: "mr" }, "मराठी - Marathi"),
                        vueExports$1.createVNode("option", { value: "hi" }, "हिन्दी - Hindi"),
                        vueExports$1.createVNode("option", { value: "bn" }, "বাংলা - Bangla"),
                        vueExports$1.createVNode("option", { value: "gu" }, "ગુજરાતી - Gujarati"),
                        vueExports$1.createVNode("option", { value: "ta" }, "தமிழ் - Tamil"),
                        vueExports$1.createVNode("option", { value: "kn" }, "ಕನ್ನಡ - Kannada"),
                        vueExports$1.createVNode("option", { value: "th" }, "ภาษาไทย - Thai"),
                        vueExports$1.createVNode("option", { value: "ko" }, "한국어 - Korean"),
                        vueExports$1.createVNode("option", { value: "ja" }, "日本語 - Japanese"),
                        vueExports$1.createVNode("option", { value: "zh-cn" }, "简体中文 - Simplified Chinese"),
                        vueExports$1.createVNode("option", { value: "zh-tw" }, "繁體中文 - Traditional Chinese")
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "language" })
                      ])
                    ]),
                    vueExports$1.createVNode("div", { class: "form-text" }, " Please select a preferred language, including date, time, and number formatting. ")
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label required fw-semibold fs-6" }, "Time Zone"),
                  vueExports$1.createVNode("div", { class: "col-lg-8 fv-row" }, [
                    vueExports$1.createVNode(_component_Field, {
                      as: "select",
                      name: "timezone",
                      class: "form-select form-select-solid form-select-lg",
                      modelValue: _ctx.profileDetails.timezone,
                      "onUpdate:modelValue": ($event) => _ctx.profileDetails.timezone = $event
                    }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-39600",
                          value: "International Date Line West"
                        }, " (GMT-11:00) International Date Line West "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-39600",
                          value: "Midway Island"
                        }, " (GMT-11:00) Midway Island "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-39600",
                          value: "Samoa"
                        }, " (GMT-11:00) Samoa "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-36000",
                          value: "Hawaii"
                        }, " (GMT-10:00) Hawaii "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-28800",
                          value: "Alaska"
                        }, " (GMT-08:00) Alaska "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-25200",
                          value: "Pacific Time (US & Canada)"
                        }, " (GMT-07:00) Pacific Time (US & Canada) "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-25200",
                          value: "Tijuana"
                        }, " (GMT-07:00) Tijuana "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-25200",
                          value: "Arizona"
                        }, " (GMT-07:00) Arizona "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-21600",
                          value: "Mountain Time (US & Canada)"
                        }, " (GMT-06:00) Mountain Time (US & Canada) "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-21600",
                          value: "Chihuahua"
                        }, " (GMT-06:00) Chihuahua "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-21600",
                          value: "Mazatlan"
                        }, " (GMT-06:00) Mazatlan "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-21600",
                          value: "Saskatchewan"
                        }, " (GMT-06:00) Saskatchewan "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-21600",
                          value: "Central America"
                        }, " (GMT-06:00) Central America "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-18000",
                          value: "Central Time (US & Canada)"
                        }, " (GMT-05:00) Central Time (US & Canada) "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-18000",
                          value: "Guadalajara"
                        }, " (GMT-05:00) Guadalajara "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-18000",
                          value: "Mexico City"
                        }, " (GMT-05:00) Mexico City "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-18000",
                          value: "Monterrey"
                        }, " (GMT-05:00) Monterrey "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-18000",
                          value: "Bogota"
                        }, " (GMT-05:00) Bogota "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-18000",
                          value: "Lima"
                        }, " (GMT-05:00) Lima "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-18000",
                          value: "Quito"
                        }, " (GMT-05:00) Quito "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-14400",
                          value: "Eastern Time (US & Canada)"
                        }, " (GMT-04:00) Eastern Time (US & Canada) "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-14400",
                          value: "Indiana (East)"
                        }, " (GMT-04:00) Indiana (East) "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-14400",
                          value: "Caracas"
                        }, " (GMT-04:00) Caracas "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-14400",
                          value: "La Paz"
                        }, " (GMT-04:00) La Paz "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-14400",
                          value: "Georgetown"
                        }, " (GMT-04:00) Georgetown "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-10800",
                          value: "Atlantic Time (Canada)"
                        }, " (GMT-03:00) Atlantic Time (Canada) "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-10800",
                          value: "Santiago"
                        }, " (GMT-03:00) Santiago "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-10800",
                          value: "Brasilia"
                        }, " (GMT-03:00) Brasilia "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-10800",
                          value: "Buenos Aires"
                        }, " (GMT-03:00) Buenos Aires "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-9000",
                          value: "Newfoundland"
                        }, " (GMT-02:30) Newfoundland "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-7200",
                          value: "Greenland"
                        }, " (GMT-02:00) Greenland "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-7200",
                          value: "Mid-Atlantic"
                        }, " (GMT-02:00) Mid-Atlantic "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "-3600",
                          value: "Cape Verde Is."
                        }, " (GMT-01:00) Cape Verde Is. "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "0",
                          value: "Azores"
                        }, "(GMT) Azores"),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "0",
                          value: "Monrovia"
                        }, " (GMT) Monrovia "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "0",
                          value: "UTC"
                        }, "(GMT) UTC"),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "3600",
                          value: "Dublin"
                        }, " (GMT+01:00) Dublin "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "3600",
                          value: "Edinburgh"
                        }, " (GMT+01:00) Edinburgh "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "3600",
                          value: "Lisbon"
                        }, " (GMT+01:00) Lisbon "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "3600",
                          value: "London"
                        }, " (GMT+01:00) London "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "3600",
                          value: "Casablanca"
                        }, " (GMT+01:00) Casablanca "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "3600",
                          value: "West Central Africa"
                        }, " (GMT+01:00) West Central Africa "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Belgrade"
                        }, " (GMT+02:00) Belgrade "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Bratislava"
                        }, " (GMT+02:00) Bratislava "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Budapest"
                        }, " (GMT+02:00) Budapest "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Ljubljana"
                        }, " (GMT+02:00) Ljubljana "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Prague"
                        }, " (GMT+02:00) Prague "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Sarajevo"
                        }, " (GMT+02:00) Sarajevo "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Skopje"
                        }, " (GMT+02:00) Skopje "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Warsaw"
                        }, " (GMT+02:00) Warsaw "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Zagreb"
                        }, " (GMT+02:00) Zagreb "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Brussels"
                        }, " (GMT+02:00) Brussels "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Copenhagen"
                        }, " (GMT+02:00) Copenhagen "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Madrid"
                        }, " (GMT+02:00) Madrid "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Paris"
                        }, " (GMT+02:00) Paris "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Amsterdam"
                        }, " (GMT+02:00) Amsterdam "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Berlin"
                        }, " (GMT+02:00) Berlin "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Bern"
                        }, " (GMT+02:00) Bern "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Rome"
                        }, " (GMT+02:00) Rome "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Stockholm"
                        }, " (GMT+02:00) Stockholm "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Vienna"
                        }, " (GMT+02:00) Vienna "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Cairo"
                        }, " (GMT+02:00) Cairo "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Harare"
                        }, " (GMT+02:00) Harare "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "7200",
                          value: "Pretoria"
                        }, " (GMT+02:00) Pretoria "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Bucharest"
                        }, " (GMT+03:00) Bucharest "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Helsinki"
                        }, " (GMT+03:00) Helsinki "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Kiev"
                        }, " (GMT+03:00) Kiev "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Kyiv"
                        }, " (GMT+03:00) Kyiv "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Riga"
                        }, " (GMT+03:00) Riga "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Sofia"
                        }, " (GMT+03:00) Sofia "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Tallinn"
                        }, " (GMT+03:00) Tallinn "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Vilnius"
                        }, " (GMT+03:00) Vilnius "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Athens"
                        }, " (GMT+03:00) Athens "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Istanbul"
                        }, " (GMT+03:00) Istanbul "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Minsk"
                        }, " (GMT+03:00) Minsk "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Jerusalem"
                        }, " (GMT+03:00) Jerusalem "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Moscow"
                        }, " (GMT+03:00) Moscow "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "St. Petersburg"
                        }, " (GMT+03:00) St. Petersburg "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Volgograd"
                        }, " (GMT+03:00) Volgograd "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Kuwait"
                        }, " (GMT+03:00) Kuwait "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Riyadh"
                        }, " (GMT+03:00) Riyadh "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Nairobi"
                        }, " (GMT+03:00) Nairobi "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "10800",
                          value: "Baghdad"
                        }, " (GMT+03:00) Baghdad "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "14400",
                          value: "Abu Dhabi"
                        }, " (GMT+04:00) Abu Dhabi "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "14400",
                          value: "Muscat"
                        }, " (GMT+04:00) Muscat "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "14400",
                          value: "Baku"
                        }, " (GMT+04:00) Baku "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "14400",
                          value: "Tbilisi"
                        }, " (GMT+04:00) Tbilisi "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "14400",
                          value: "Yerevan"
                        }, " (GMT+04:00) Yerevan "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "16200",
                          value: "Tehran"
                        }, " (GMT+04:30) Tehran "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "16200",
                          value: "Kabul"
                        }, " (GMT+04:30) Kabul "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "18000",
                          value: "Ekaterinburg"
                        }, " (GMT+05:00) Ekaterinburg "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "18000",
                          value: "Islamabad"
                        }, " (GMT+05:00) Islamabad "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "18000",
                          value: "Karachi"
                        }, " (GMT+05:00) Karachi "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "18000",
                          value: "Tashkent"
                        }, " (GMT+05:00) Tashkent "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "19800",
                          value: "Chennai"
                        }, " (GMT+05:30) Chennai "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "19800",
                          value: "Kolkata"
                        }, " (GMT+05:30) Kolkata "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "19800",
                          value: "Mumbai"
                        }, " (GMT+05:30) Mumbai "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "19800",
                          value: "New Delhi"
                        }, " (GMT+05:30) New Delhi "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "19800",
                          value: "Sri Jayawardenepura"
                        }, " (GMT+05:30) Sri Jayawardenepura "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "20700",
                          value: "Kathmandu"
                        }, " (GMT+05:45) Kathmandu "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "21600",
                          value: "Astana"
                        }, " (GMT+06:00) Astana "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "21600",
                          value: "Dhaka"
                        }, " (GMT+06:00) Dhaka "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "21600",
                          value: "Almaty"
                        }, " (GMT+06:00) Almaty "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "21600",
                          value: "Urumqi"
                        }, " (GMT+06:00) Urumqi "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "23400",
                          value: "Rangoon"
                        }, " (GMT+06:30) Rangoon "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "25200",
                          value: "Novosibirsk"
                        }, " (GMT+07:00) Novosibirsk "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "25200",
                          value: "Bangkok"
                        }, " (GMT+07:00) Bangkok "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "25200",
                          value: "Hanoi"
                        }, " (GMT+07:00) Hanoi "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "25200",
                          value: "Jakarta"
                        }, " (GMT+07:00) Jakarta "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "25200",
                          value: "Krasnoyarsk"
                        }, " (GMT+07:00) Krasnoyarsk "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "28800",
                          value: "Beijing"
                        }, " (GMT+08:00) Beijing "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "28800",
                          value: "Chongqing"
                        }, " (GMT+08:00) Chongqing "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "28800",
                          value: "Hong Kong"
                        }, " (GMT+08:00) Hong Kong "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "28800",
                          value: "Kuala Lumpur"
                        }, " (GMT+08:00) Kuala Lumpur "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "28800",
                          value: "Singapore"
                        }, " (GMT+08:00) Singapore "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "28800",
                          value: "Taipei"
                        }, " (GMT+08:00) Taipei "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "28800",
                          value: "Perth"
                        }, " (GMT+08:00) Perth "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "28800",
                          value: "Irkutsk"
                        }, " (GMT+08:00) Irkutsk "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "28800",
                          value: "Ulaan Bataar"
                        }, " (GMT+08:00) Ulaan Bataar "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "32400",
                          value: "Seoul"
                        }, " (GMT+09:00) Seoul "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "32400",
                          value: "Osaka"
                        }, " (GMT+09:00) Osaka "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "32400",
                          value: "Sapporo"
                        }, " (GMT+09:00) Sapporo "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "32400",
                          value: "Tokyo"
                        }, " (GMT+09:00) Tokyo "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "32400",
                          value: "Yakutsk"
                        }, " (GMT+09:00) Yakutsk "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "34200",
                          value: "Darwin"
                        }, " (GMT+09:30) Darwin "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "34200",
                          value: "Adelaide"
                        }, " (GMT+09:30) Adelaide "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "36000",
                          value: "Canberra"
                        }, " (GMT+10:00) Canberra "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "36000",
                          value: "Melbourne"
                        }, " (GMT+10:00) Melbourne "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "36000",
                          value: "Sydney"
                        }, " (GMT+10:00) Sydney "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "36000",
                          value: "Brisbane"
                        }, " (GMT+10:00) Brisbane "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "36000",
                          value: "Hobart"
                        }, " (GMT+10:00) Hobart "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "36000",
                          value: "Vladivostok"
                        }, " (GMT+10:00) Vladivostok "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "36000",
                          value: "Guam"
                        }, " (GMT+10:00) Guam "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "36000",
                          value: "Port Moresby"
                        }, " (GMT+10:00) Port Moresby "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "36000",
                          value: "Solomon Is."
                        }, " (GMT+10:00) Solomon Is. "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "39600",
                          value: "Magadan"
                        }, " (GMT+11:00) Magadan "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "39600",
                          value: "New Caledonia"
                        }, " (GMT+11:00) New Caledonia "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "43200",
                          value: "Fiji"
                        }, " (GMT+12:00) Fiji "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "43200",
                          value: "Kamchatka"
                        }, " (GMT+12:00) Kamchatka "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "43200",
                          value: "Marshall Is."
                        }, " (GMT+12:00) Marshall Is. "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "43200",
                          value: "Auckland"
                        }, " (GMT+12:00) Auckland "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "43200",
                          value: "Wellington"
                        }, " (GMT+12:00) Wellington "),
                        vueExports$1.createVNode("option", {
                          "data-bs-offset": "46800",
                          value: "Nuku'alofa"
                        }, " (GMT+13:00) Nuku'alofa ")
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "timezone" })
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label required fw-semibold fs-6" }, "Currency"),
                  vueExports$1.createVNode("div", { class: "col-lg-8 fv-row" }, [
                    vueExports$1.createVNode(_component_Field, {
                      as: "select",
                      name: "currency",
                      class: "form-select form-select-solid form-select-lg",
                      modelValue: _ctx.profileDetails.currency,
                      "onUpdate:modelValue": ($event) => _ctx.profileDetails.currency = $event
                    }, {
                      default: vueExports$1.withCtx(() => [
                        vueExports$1.createVNode("option", { value: "USD" }, [
                          vueExports$1.createVNode("b", null, "USD"),
                          vueExports$1.createTextVNode(" - USA dollar")
                        ]),
                        vueExports$1.createVNode("option", { value: "GBP" }, [
                          vueExports$1.createVNode("b", null, "GBP"),
                          vueExports$1.createTextVNode(" - British pound ")
                        ]),
                        vueExports$1.createVNode("option", { value: "AUD" }, [
                          vueExports$1.createVNode("b", null, "AUD"),
                          vueExports$1.createTextVNode(" - Australian dollar ")
                        ]),
                        vueExports$1.createVNode("option", { value: "JPY" }, [
                          vueExports$1.createVNode("b", null, "JPY"),
                          vueExports$1.createTextVNode(" - Japanese yen")
                        ]),
                        vueExports$1.createVNode("option", { value: "SEK" }, [
                          vueExports$1.createVNode("b", null, "SEK"),
                          vueExports$1.createTextVNode(" - Swedish krona ")
                        ]),
                        vueExports$1.createVNode("option", { value: "CAD" }, [
                          vueExports$1.createVNode("b", null, "CAD"),
                          vueExports$1.createTextVNode(" - Canadian dollar ")
                        ]),
                        vueExports$1.createVNode("option", { value: "CHF" }, [
                          vueExports$1.createVNode("b", null, "CHF"),
                          vueExports$1.createTextVNode(" - Swiss franc")
                        ])
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue"]),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "currency" })
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-6" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label fw-semibold fs-6" }, "Communication"),
                  vueExports$1.createVNode("div", { class: "col-lg-8 fv-row" }, [
                    vueExports$1.createVNode("div", { class: "d-flex align-items-center mt-3" }, [
                      vueExports$1.createVNode("label", { class: "form-check form-check-inline form-check-solid me-5" }, [
                        vueExports$1.createVNode("input", {
                          class: "form-check-input",
                          name: "communication[]",
                          type: "checkbox"
                        }),
                        vueExports$1.createVNode("span", { class: "fw-semibold ps-2 fs-6" }, " Email ")
                      ]),
                      vueExports$1.createVNode("label", { class: "form-check form-check-inline form-check-solid" }, [
                        vueExports$1.createVNode("input", {
                          class: "form-check-input",
                          name: "communication[]",
                          type: "checkbox"
                        }),
                        vueExports$1.createVNode("span", { class: "fw-semibold ps-2 fs-6" }, " Phone ")
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "row mb-0" }, [
                  vueExports$1.createVNode("label", { class: "col-lg-4 col-form-label fw-semibold fs-6" }, "Allow Marketing"),
                  vueExports$1.createVNode("div", { class: "col-lg-8 d-flex align-items-center" }, [
                    vueExports$1.createVNode("div", { class: "form-check form-check-solid form-switch fv-row" }, [
                      vueExports$1.createVNode("input", {
                        class: "form-check-input w-45px h-30px",
                        type: "checkbox",
                        id: "allowmarketing"
                      }),
                      vueExports$1.createVNode("label", {
                        class: "form-check-label",
                        for: "allowmarketing"
                      })
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "card-footer d-flex justify-content-end py-6 px-9" }, [
                vueExports$1.createVNode("button", {
                  type: "reset",
                  class: "btn btn-light btn-active-light-primary me-2"
                }, " Discard "),
                vueExports$1.createVNode("button", {
                  type: "submit",
                  id: "kt_account_profile_details_submit",
                  ref: "submitButton1",
                  class: "btn btn-primary"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Save Changes "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div><div class="card mb-5 mb-xl-10"><div class="card-header border-0 cursor-pointer" role="button" data-bs-toggle="collapse" data-bs-target="#kt_account_signin_method"><div class="card-title m-0"><h3 class="fw-bolder m-0">Sign-in Method</h3></div></div><div id="kt_account_signin_method" class="collapse show"><div class="card-body border-top p-9"><div class="d-flex flex-wrap align-items-center mb-8"><div id="kt_signin_email" class="${ssrRenderClass({ "d-none": _ctx.emailFormDisplay })}"><div class="fs-4 fw-bolder mb-1">Email Address</div><div class="fs-6 fw-semibold text-gray-600"> support@keenthemes.com </div></div><div id="kt_signin_email_edit" class="${ssrRenderClass([{ "d-none": !_ctx.emailFormDisplay }, "flex-row-fluid"])}">`);
      _push(ssrRenderComponent(_component_VForm, {
        id: "kt_signin_change_email",
        class: "form",
        novalidate: "",
        onSubmit: ($event) => _ctx.updateEmail(),
        "validation-schema": _ctx.changeEmail
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="row mb-6"${_scopeId}><div class="col-lg-6 mb-4 mb-lg-0"${_scopeId}><div class="fv-row mb-0"${_scopeId}><label for="emailaddress" class="form-label fs-6 fw-bold mb-3"${_scopeId}>Enter New Email Address</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "email",
              class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
              id: "emailaddress",
              placeholder: "Email Address",
              name: "emailaddress",
              value: "support@keenthemes.com"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "emailaddress" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="col-lg-6"${_scopeId}><div class="fv-row mb-0"${_scopeId}><label for="confirmemailpassword" class="form-label fs-6 fw-bold mb-3"${_scopeId}>Confirm Password</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "password",
              class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
              name: "confirmemailpassword",
              id: "confirmemailpassword"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "confirmemailpassword" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div></div><div class="d-flex"${_scopeId}><button id="kt_signin_submit" type="submit" class="btn btn-primary me-2 px-6"${_scopeId}><span class="indicator-label"${_scopeId}> Update Email </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button><button id="kt_signin_cancel" type="button" class="btn btn-color-gray-500 btn-active-light-primary px-6"${_scopeId}> Cancel </button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "row mb-6" }, [
                vueExports$1.createVNode("div", { class: "col-lg-6 mb-4 mb-lg-0" }, [
                  vueExports$1.createVNode("div", { class: "fv-row mb-0" }, [
                    vueExports$1.createVNode("label", {
                      for: "emailaddress",
                      class: "form-label fs-6 fw-bold mb-3"
                    }, "Enter New Email Address"),
                    vueExports$1.createVNode(_component_Field, {
                      type: "email",
                      class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
                      id: "emailaddress",
                      placeholder: "Email Address",
                      name: "emailaddress",
                      value: "support@keenthemes.com"
                    }),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "emailaddress" })
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "col-lg-6" }, [
                  vueExports$1.createVNode("div", { class: "fv-row mb-0" }, [
                    vueExports$1.createVNode("label", {
                      for: "confirmemailpassword",
                      class: "form-label fs-6 fw-bold mb-3"
                    }, "Confirm Password"),
                    vueExports$1.createVNode(_component_Field, {
                      type: "password",
                      class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
                      name: "confirmemailpassword",
                      id: "confirmemailpassword"
                    }),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "confirmemailpassword" })
                      ])
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "d-flex" }, [
                vueExports$1.createVNode("button", {
                  id: "kt_signin_submit",
                  type: "submit",
                  ref: "updateEmailButton",
                  class: "btn btn-primary me-2 px-6"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Update Email "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512),
                vueExports$1.createVNode("button", {
                  id: "kt_signin_cancel",
                  type: "button",
                  class: "btn btn-color-gray-500 btn-active-light-primary px-6",
                  onClick: ($event) => _ctx.emailFormDisplay = !_ctx.emailFormDisplay
                }, " Cancel ", 8, ["onClick"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_signin_email_button" class="${ssrRenderClass([{ "d-none": _ctx.emailFormDisplay }, "ms-auto"])}"><button class="btn btn-light fw-bolder px-6"> Change Email </button></div></div><div class="d-flex flex-wrap align-items-center mb-8"><div id="kt_signin_password" class="${ssrRenderClass({ "d-none": _ctx.passwordFormDisplay })}"><div class="fs-4 fw-bolder mb-1">Password</div><div class="fs-6 fw-semibold text-gray-600">************</div></div><div id="kt_signin_password_edit" class="${ssrRenderClass([{ "d-none": !_ctx.passwordFormDisplay }, "flex-row-fluid"])}"><div class="fs-6 fw-semibold text-gray-600 mb-4"> Password must be at least 8 character and contain symbols </div>`);
      _push(ssrRenderComponent(_component_VForm, {
        id: "kt_signin_change_password",
        class: "form",
        novalidate: "",
        onSubmit: ($event) => _ctx.updatePassword(),
        "validation-schema": _ctx.changePassword
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="row mb-6"${_scopeId}><div class="col-lg-4"${_scopeId}><div class="fv-row mb-0"${_scopeId}><label for="currentpassword" class="form-label fs-6 fw-bold mb-3"${_scopeId}>Current Password</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "password",
              class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
              name: "currentpassword",
              id: "currentpassword"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "currentpassword" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="col-lg-4"${_scopeId}><div class="fv-row mb-0"${_scopeId}><label for="newpassword" class="form-label fs-6 fw-bold mb-3"${_scopeId}>New Password</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "password",
              class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
              name: "newpassword",
              id: "newpassword"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "newpassword" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="col-lg-4"${_scopeId}><div class="fv-row mb-0"${_scopeId}><label for="confirmpassword" class="form-label fs-6 fw-bold mb-3"${_scopeId}>Confirm New Password</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              type: "password",
              class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
              name: "confirmpassword",
              id: "confirmpassword"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "confirmpassword" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div></div><div class="d-flex"${_scopeId}><button id="kt_password_submit" type="submit" class="btn btn-primary me-2 px-6"${_scopeId}><span class="indicator-label"${_scopeId}> Update Password </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button><button id="kt_password_cancel" type="button" class="btn btn-color-gray-500 btn-active-light-primary px-6"${_scopeId}> Cancel </button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "row mb-6" }, [
                vueExports$1.createVNode("div", { class: "col-lg-4" }, [
                  vueExports$1.createVNode("div", { class: "fv-row mb-0" }, [
                    vueExports$1.createVNode("label", {
                      for: "currentpassword",
                      class: "form-label fs-6 fw-bold mb-3"
                    }, "Current Password"),
                    vueExports$1.createVNode(_component_Field, {
                      type: "password",
                      class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
                      name: "currentpassword",
                      id: "currentpassword"
                    }),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "currentpassword" })
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "col-lg-4" }, [
                  vueExports$1.createVNode("div", { class: "fv-row mb-0" }, [
                    vueExports$1.createVNode("label", {
                      for: "newpassword",
                      class: "form-label fs-6 fw-bold mb-3"
                    }, "New Password"),
                    vueExports$1.createVNode(_component_Field, {
                      type: "password",
                      class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
                      name: "newpassword",
                      id: "newpassword"
                    }),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "newpassword" })
                      ])
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "col-lg-4" }, [
                  vueExports$1.createVNode("div", { class: "fv-row mb-0" }, [
                    vueExports$1.createVNode("label", {
                      for: "confirmpassword",
                      class: "form-label fs-6 fw-bold mb-3"
                    }, "Confirm New Password"),
                    vueExports$1.createVNode(_component_Field, {
                      type: "password",
                      class: "form-control form-control-lg form-control-solid fw-semibold fs-6",
                      name: "confirmpassword",
                      id: "confirmpassword"
                    }),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "confirmpassword" })
                      ])
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "d-flex" }, [
                vueExports$1.createVNode("button", {
                  id: "kt_password_submit",
                  type: "submit",
                  ref: "updatePasswordButton",
                  class: "btn btn-primary me-2 px-6"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Update Password "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512),
                vueExports$1.createVNode("button", {
                  id: "kt_password_cancel",
                  type: "button",
                  onClick: ($event) => _ctx.passwordFormDisplay = !_ctx.passwordFormDisplay,
                  class: "btn btn-color-gray-500 btn-active-light-primary px-6"
                }, " Cancel ", 8, ["onClick"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div><div id="kt_signin_password_button" class="${ssrRenderClass([{ "d-none": _ctx.passwordFormDisplay }, "ms-auto"])}"><button class="btn btn-light fw-bolder"> Reset Password </button></div></div></div></div></div><div class="card mb-5 mb-xl-10"><div class="card-header border-0 cursor-pointer" role="button" data-bs-toggle="collapse" data-bs-target="#kt_account_connected_accounts" aria-expanded="true" aria-controls="kt_account_connected_accounts"><div class="card-title m-0"><h3 class="fw-bold m-0">Connected Accounts</h3></div></div><div id="kt_account_connected_accounts" class="collapse show"><div class="card-body border-top p-9"><div class="notice d-flex bg-light-primary rounded border-primary border border-dashed mb-9 p-6">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "design-frame",
        "icon-class": "fs-2tx text-primary me-4"
      }, null, _parent));
      _push(`<div class="d-flex flex-stack flex-grow-1"><div class="fw-semibold"><div class="fs-6 text-gray-600"> Two-factor authentication adds an extra layer of security to your account. To log in, in you&#39;ll need to provide a 4 digit amazing code. <a href="#" class="fw-bold">Learn More</a></div></div></div></div><div class="py-2"><div class="d-flex flex-stack"><div class="d-flex"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/google-icon.svg"))} class="w-30px me-6" alt=""><div class="d-flex flex-column"><a href="#" class="fs-5 text-gray-900 text-hover-primary fw-bold">Google</a><div class="fs-6 fw-semibold text-gray-500"> Plan properly your workflow </div></div></div><div class="d-flex justify-content-end"><div class="form-check form-check-solid form-switch"><input class="form-check-input w-45px h-30px" type="checkbox" id="googleswitch" checked><label class="form-check-label" for="googleswitch"></label></div></div></div><div class="separator separator-dashed my-5"></div><div class="d-flex flex-stack"><div class="d-flex"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/github.svg"))} class="w-30px me-6" alt=""><div class="d-flex flex-column"><a href="#" class="fs-5 text-gray-900 text-hover-primary fw-bold">Github</a><div class="fs-6 fw-semibold text-gray-500"> Keep eye on on your Repositories </div></div></div><div class="d-flex justify-content-end"><div class="form-check form-check-solid form-switch"><input class="form-check-input w-45px h-30px" type="checkbox" id="githubswitch" checked><label class="form-check-label" for="githubswitch"></label></div></div></div><div class="separator separator-dashed my-5"></div><div class="d-flex flex-stack"><div class="d-flex"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/slack-icon.svg"))} class="w-30px me-6" alt=""><div class="d-flex flex-column"><a href="#" class="fs-5 text-gray-900 text-hover-primary fw-bold">Slack</a><div class="fs-6 fw-semibold text-gray-500"> Integrate Projects Discussions </div></div></div><div class="d-flex justify-content-end"><div class="form-check form-check-solid form-switch"><input class="form-check-input w-45px h-30px" type="checkbox" id="slackswitch"><label class="form-check-label" for="slackswitch"></label></div></div></div></div></div><div class="card-footer d-flex justify-content-end py-6 px-9"><button class="btn btn-light btn-active-light-primary me-2"> Discard </button><button class="btn btn-primary"><span class="indicator-label"> Save Changes </span><span class="indicator-progress"> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span></button></div></div></div><div class="card mb-5 mb-xl-10"><div class="card-header border-0 cursor-pointer" role="button" data-bs-toggle="collapse" data-bs-target="#kt_account_email_preferences" aria-expanded="true" aria-controls="kt_account_email_preferences"><div class="card-title m-0"><h3 class="fw-bold m-0">Email Preferences</h3></div></div><div id="kt_account_email_preferences" class="collapse show"><form class="form"><div class="card-body border-top px-9 py-9"><label class="form-check form-check-custom form-check-solid align-items-start"><input class="form-check-input me-3" type="checkbox" name="email-preferences1" value="1"><span class="form-check-label d-flex flex-column align-items-start"><span class="fw-bold fs-5 mb-0">Successful Payments</span><span class="text-muted fs-6">Receive a notification for every successful payment.</span></span></label><div class="separator separator-dashed my-6"></div><label class="form-check form-check-custom form-check-solid align-items-start"><input class="form-check-input me-3" type="checkbox" name="email-preferences1" checked value="1"><span class="form-check-label d-flex flex-column align-items-start"><span class="fw-bold fs-5 mb-0">Payouts</span><span class="text-muted fs-6">Receive a notification for every initiated payout.</span></span></label><div class="separator separator-dashed my-6"></div><label class="form-check form-check-custom form-check-solid align-items-start"><input class="form-check-input me-3" type="checkbox" name="email-preferences1" value="1"><span class="form-check-label d-flex flex-column align-items-start"><span class="fw-bold fs-5 mb-0">Fee Collection</span><span class="text-muted fs-6">Receive a notification each time you collect a fee from sales</span></span></label><div class="separator separator-dashed my-6"></div><label class="form-check form-check-custom form-check-solid align-items-start"><input class="form-check-input me-3" type="checkbox" name="email-preferences1" checked value="1"><span class="form-check-label d-flex flex-column align-items-start"><span class="fw-bold fs-5 mb-0">Customer Payment Dispute</span><span class="text-muted fs-6">Receive a notification if a payment is disputed by a customer and for dispute purposes.</span></span></label><div class="separator separator-dashed my-6"></div><label class="form-check form-check-custom form-check-solid align-items-start"><input class="form-check-input me-3" type="checkbox" name="email-preferences1" value="1"><span class="form-check-label d-flex flex-column align-items-start"><span class="fw-bold fs-5 mb-0">Refund Alerts</span><span class="text-muted fs-6">Receive a notification if a payment is stated as risk by the Finance Department.</span></span></label><div class="separator separator-dashed my-6"></div><label class="form-check form-check-custom form-check-solid align-items-start"><input class="form-check-input me-3" type="checkbox" name="email-preferences1" checked value="1"><span class="form-check-label d-flex flex-column align-items-start"><span class="fw-bold fs-5 mb-0">Invoice Payments</span><span class="text-muted fs-6">Receive a notification if a customer sends an incorrect amount to pay their invoice.</span></span></label><div class="separator separator-dashed my-6"></div><label class="form-check form-check-custom form-check-solid align-items-start"><input class="form-check-input me-3" type="checkbox" name="email-preferences1" value="1"><span class="form-check-label d-flex flex-column align-items-start"><span class="fw-bold fs-5 mb-0">Webhook API Endpoints</span><span class="text-muted fs-6">Receive notifications for consistently failing webhook API endpoints.</span></span></label><div class="separator separator-dashed my-6"></div></div><div class="card-footer d-flex justify-content-end py-6 px-9"><button class="btn btn-light btn-active-light-primary me-2"> Discard </button><button type="submit" class="btn btn-primary px-6"><span class="indicator-label"> Save Changes </span><span class="indicator-progress"> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span></button></div></form></div></div><div class="card mb-5 mb-xl-10"><div class="card-header border-0 cursor-pointer" role="button" data-bs-toggle="collapse" data-bs-target="#kt_account_notifications" aria-expanded="true" aria-controls="kt_account_notifications"><div class="card-title m-0"><h3 class="fw-bold m-0">Notifications</h3></div></div><div id="kt_account_notifications" class="collapse show"><form class="form"><div class="card-body border-top px-9 pt-3 pb-4"><div class="table-responsive"><table class="table table-row-dashed border-gray-300 align-middle gy-6"><tbody class="fs-6 fw-semibold"><tr><td class="min-w-250px fs-4 fw-bold">Notifications</td><td class="w-125px"><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="" id="kt_settings_notification_email" checked data-kt-check="true" data-kt-check-target="[data-kt-settings-notification=email]"><label class="form-check-label ps-2" for="kt_settings_notification_email"> Email </label></div></td><td class="w-125px"><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="" id="kt_settings_notification_phone" checked data-kt-check="true" data-kt-check-target="[data-kt-settings-notification=phone]"><label class="form-check-label ps-2" for="kt_settings_notification_phone"> Phone </label></div></td></tr><tr><td>Billing Updates</td><td><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="1" id="billing1" checked data-kt-settings-notification="email"><label class="form-check-label ps-2" for="billing1"></label></div></td><td><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="" id="billing2" checked data-kt-settings-notification="phone"><label class="form-check-label ps-2" for="billing2"></label></div></td></tr><tr><td>New Team Members</td><td><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="" id="team1" checked data-kt-settings-notification="email"><label class="form-check-label ps-2" for="team1"></label></div></td><td><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="" id="team2" data-kt-settings-notification="phone"><label class="form-check-label ps-2" for="team2"></label></div></td></tr><tr><td>Completed Projects</td><td><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="" id="project1" data-kt-settings-notification="email"><label class="form-check-label ps-2" for="project1"></label></div></td><td><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="" id="project2" checked data-kt-settings-notification="phone"><label class="form-check-label ps-2" for="project2"></label></div></td></tr><tr><td class="border-bottom-0">Newsletters</td><td class="border-bottom-0"><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="" id="newsletter1" data-kt-settings-notification="email"><label class="form-check-label ps-2" for="newsletter1"></label></div></td><td class="border-bottom-0"><div class="form-check form-check-solid"><input class="form-check-input" type="checkbox" value="" id="newsletter2" data-kt-settings-notification="phone"><label class="form-check-label ps-2" for="newsletter2"></label></div></td></tr></tbody></table></div></div><div class="card-footer d-flex justify-content-end py-6 px-9"><button class="btn btn-light btn-active-light-primary me-2"> Discard </button><button type="submit" class="btn btn-primary px-6"><span class="indicator-label"> Save Changes </span><span class="indicator-progress"> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span></button></div></form></div></div><div class="card mb-5 mb-xl-10"><div class="card-header border-0 cursor-pointer" role="button" data-bs-toggle="collapse" data-bs-target="#kt_account_deactivate" aria-expanded="true" aria-controls="kt_account_deactivate"><div class="card-title m-0"><h3 class="fw-bolder m-0">Deactivate Account</h3></div></div><div id="kt_account_deactivate" class="collapse show"><form id="kt_account_deactivate_form" class="form"><div class="card-body border-top p-9"><div class="notice d-flex bg-light-warning rounded border-warning border border-dashed mb-9 p-6">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "information-5",
        "icon-class": "fs-2tx text-warning me-4"
      }, null, _parent));
      _push(`<div class="d-flex flex-stack flex-grow-1"><div class="fw-semibold"><h4 class="text-gray-800 fw-bold"> You Are Deactivating Your Account </h4><div class="fs-6 text-gray-600"> For extra security, this requires you to confirm your email or phone number when you reset yousignr password. <br><a class="fw-bold" href="#">Learn more</a></div></div></div></div><div class="form-check form-check-solid fv-row"><input name="deactivate" class="form-check-input" type="checkbox" value="" id="deactivate"><label class="form-check-label fw-semibold ps-2 fs-6" for="deactivate">Confirm Account Deactivation</label></div></div><div class="card-footer d-flex justify-content-end py-6 px-9"><button id="kt_account_deactivate_account_submit" type="submit" class="btn btn-danger fw-semibold"><span class="indicator-label"> Deactivate Account </span><span class="indicator-progress"> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span></span></button></div></form></div></div><!--]-->`);
    }
    const _sfc_setup$u = _sfc_main$u.setup;
    _sfc_main$u.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/account/Settings.vue");
      return _sfc_setup$u ? _sfc_setup$u(props, ctx) : void 0;
    };
    const Settings = /* @__PURE__ */ _export_sfc(_sfc_main$u, [["ssrRender", _sfc_ssrRender$s]]);
    const __vite_glob_0_198 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Settings
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$t = vueExports$1.defineComponent({
      name: "error-404",
      components: {},
      setup() {
        const storeBody = useBodyStore();
        const bgImage = themeMode.value !== "dark" ? getAssetPath("media/auth/bg1.jpg") : getAssetPath("media/auth/bg1-dark.jpg");
        vueExports$1.onMounted(() => {
          LayoutService.emptyElementClassesAndAttributes(document.body);
          storeBody.addBodyClassname("bg-body");
          storeBody.addBodyAttribute({
            qualifiedName: "style",
            value: `background-image: url("${bgImage}")`
          });
        });
        return {
          getIllustrationsPath,
          bgImage,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "d-flex flex-column flex-center flex-column-fluid" }, _attrs))}><div class="d-flex flex-column flex-center text-center p-10"><div class="card card-flush w-lg-650px py-5"><div class="card-body py-15 py-lg-20"><h1 class="fw-bolder fs-2hx text-gray-900 mb-4">Oops!</h1><div class="fw-semibold fs-6 text-gray-500 mb-7"> We can&#39;t find that page. </div><div class="mb-3"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/auth/404-error.png"))} class="mw-100 mh-300px theme-light-show" alt=""><img${ssrRenderAttr("src", _ctx.getAssetPath("media/auth/404-error-dark.png"))} class="mw-100 mh-300px theme-dark-show" alt=""></div><div class="mb-0">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/",
        class: "btn btn-sm btn-primary"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Return Home`);
          } else {
            return [
              vueExports$1.createTextVNode("Return Home")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div></div>`);
    }
    const _sfc_setup$t = _sfc_main$t.setup;
    _sfc_main$t.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/authentication/Error404.vue");
      return _sfc_setup$t ? _sfc_setup$t(props, ctx) : void 0;
    };
    const Error404 = /* @__PURE__ */ _export_sfc(_sfc_main$t, [["ssrRender", _sfc_ssrRender$r]]);
    const __vite_glob_0_199 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Error404
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$s = vueExports$1.defineComponent({
      name: "error-500",
      components: {},
      setup() {
        const bodyStore = useBodyStore();
        const bgImage = themeMode.value !== "dark" ? getAssetPath("media/auth/bg1.jpg") : getAssetPath("media/auth/bg1-dark.jpg");
        vueExports$1.onMounted(() => {
          LayoutService.emptyElementClassesAndAttributes(document.body);
          bodyStore.addBodyClassname("bg-body");
          bodyStore.addBodyAttribute({
            qualifiedName: "style",
            value: `background-image: url("${bgImage}")`
          });
        });
        return {
          getIllustrationsPath,
          bgImage,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "d-flex flex-column flex-center flex-column-fluid" }, _attrs))}><div class="d-flex flex-column flex-center text-center p-10"><div class="card card-flush w-lg-650px py-5"><div class="card-body py-15 py-lg-20"><h1 class="fw-bolder fs-2qx text-gray-900 mb-4">System Error</h1><div class="fw-semibold fs-6 text-gray-500 mb-7"> Something went wrong! Please try again later. </div><div class="mb-11"><img${ssrRenderAttr("src", _ctx.getAssetPath("media/auth/500-error.png"))} class="mw-100 mh-300px theme-light-show" alt=""><img${ssrRenderAttr("src", _ctx.getAssetPath("media/auth/500-error-dark.png"))} class="mw-100 mh-300px theme-dark-show" alt=""></div><div class="mb-0">`);
      _push(ssrRenderComponent(_component_router_link, {
        to: "/",
        class: "btn btn-sm btn-primary"
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`Return Home`);
          } else {
            return [
              vueExports$1.createTextVNode("Return Home")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div></div></div></div>`);
    }
    const _sfc_setup$s = _sfc_main$s.setup;
    _sfc_main$s.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/authentication/Error500.vue");
      return _sfc_setup$s ? _sfc_setup$s(props, ctx) : void 0;
    };
    const Error500 = /* @__PURE__ */ _export_sfc(_sfc_main$s, [["ssrRender", _sfc_ssrRender$q]]);
    const __vite_glob_0_200 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Error500
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$r = vueExports$1.defineComponent({
      name: "password-reset",
      components: {
        Field,
        VForm: Form,
        ErrorMessage
      },
      setup() {
        const store = useAuthStore();
        const submitButton = vueExports$1.ref(null);
        const forgotPassword = Yup.object().shape({
          email: Yup.string().email().required().label("Email")
        });
        const onSubmitForgotPassword = async (values) => {
          var _a2, _b;
          values = values;
          submitButton.value.disabled = true;
          (_a2 = submitButton.value) == null ? void 0 : _a2.setAttribute("data-kt-indicator", "on");
          await store.forgotPassword(values);
          const error = Object.values(store.errors);
          if (!error) {
            Swal.fire({
              text: "You have successfully logged in!",
              icon: "success",
              buttonsStyling: false,
              confirmButtonText: "Ok, got it!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn fw-semibold btn-light-primary"
              }
            });
          } else {
            Swal.fire({
              text: error[0],
              icon: "error",
              buttonsStyling: false,
              confirmButtonText: "Try again!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn fw-semibold btn-light-danger"
              }
            });
          }
          (_b = submitButton.value) == null ? void 0 : _b.removeAttribute("data-kt-indicator");
          submitButton.value.disabled = false;
        };
        return {
          onSubmitForgotPassword,
          forgotPassword,
          submitButton
        };
      }
    });
    function _sfc_ssrRender$p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_VForm = vueExports$1.resolveComponent("VForm");
      const _component_Field = vueExports$1.resolveComponent("Field");
      const _component_ErrorMessage = vueExports$1.resolveComponent("ErrorMessage");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "w-lg-500px p-10" }, _attrs))}>`);
      _push(ssrRenderComponent(_component_VForm, {
        class: "form w-100 fv-plugins-bootstrap5 fv-plugins-framework",
        onSubmit: _ctx.onSubmitForgotPassword,
        id: "kt_login_password_reset_form",
        "validation-schema": _ctx.forgotPassword
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="text-center mb-10"${_scopeId}><h1 class="text-gray-900 mb-3"${_scopeId}>Forgot Password ?</h1><div class="text-gray-500 fw-semibold fs-4"${_scopeId}> Enter your email to reset your password. </div></div><div class="fv-row mb-10"${_scopeId}><label class="form-label fw-bold text-gray-900 fs-6"${_scopeId}>Email</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: "form-control form-control-solid",
              type: "email",
              placeholder: "",
              name: "email",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "email" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="d-flex flex-wrap justify-content-center pb-lg-0"${_scopeId}><button type="submit" id="kt_password_reset_submit" class="btn btn-lg btn-primary fw-bold me-4"${_scopeId}><span class="indicator-label"${_scopeId}> Submit </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button>`);
            _push2(ssrRenderComponent(_component_router_link, {
              to: "/sign-up",
              class: "btn btn-lg btn-light-primary fw-bold"
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Cancel`);
                } else {
                  return [
                    vueExports$1.createTextVNode("Cancel")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "text-center mb-10" }, [
                vueExports$1.createVNode("h1", { class: "text-gray-900 mb-3" }, "Forgot Password ?"),
                vueExports$1.createVNode("div", { class: "text-gray-500 fw-semibold fs-4" }, " Enter your email to reset your password. ")
              ]),
              vueExports$1.createVNode("div", { class: "fv-row mb-10" }, [
                vueExports$1.createVNode("label", { class: "form-label fw-bold text-gray-900 fs-6" }, "Email"),
                vueExports$1.createVNode(_component_Field, {
                  class: "form-control form-control-solid",
                  type: "email",
                  placeholder: "",
                  name: "email",
                  autocomplete: "off"
                }),
                vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                  vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                    vueExports$1.createVNode(_component_ErrorMessage, { name: "email" })
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "d-flex flex-wrap justify-content-center pb-lg-0" }, [
                vueExports$1.createVNode("button", {
                  type: "submit",
                  ref: "submitButton",
                  id: "kt_password_reset_submit",
                  class: "btn btn-lg btn-primary fw-bold me-4"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Submit "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512),
                vueExports$1.createVNode(_component_router_link, {
                  to: "/sign-up",
                  class: "btn btn-lg btn-light-primary fw-bold"
                }, {
                  default: vueExports$1.withCtx(() => [
                    vueExports$1.createTextVNode("Cancel")
                  ]),
                  _: 1
                })
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    }
    const _sfc_setup$r = _sfc_main$r.setup;
    _sfc_main$r.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/authentication/basic-flow/PasswordReset.vue");
      return _sfc_setup$r ? _sfc_setup$r(props, ctx) : void 0;
    };
    const PasswordReset = /* @__PURE__ */ _export_sfc(_sfc_main$r, [["ssrRender", _sfc_ssrRender$p]]);
    const __vite_glob_0_201 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: PasswordReset
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$q = vueExports$1.defineComponent({
      name: "sign-in",
      components: {
        Field,
        VForm: Form,
        ErrorMessage
      },
      setup() {
        const store = useAuthStore();
        const router2 = useRouter();
        const submitButton = vueExports$1.ref(null);
        const login = Yup.object().shape({
          email: Yup.string().email().required().label("Email"),
          password: Yup.string().min(4).required().label("Password")
        });
        const onSubmitLogin = async (values) => {
          var _a2;
          values = values;
          store.logout();
          if (submitButton.value) {
            submitButton.value.disabled = true;
            submitButton.value.setAttribute("data-kt-indicator", "on");
          }
          await store.login(values);
          const error = Object.values(store.errors);
          if (error.length === 0) {
            Swal.fire({
              text: "You have successfully logged in!",
              icon: "success",
              buttonsStyling: false,
              confirmButtonText: "Ok, got it!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn fw-semibold btn-light-primary"
              }
            }).then(() => {
              router2.push({ name: "dashboard" });
            });
          } else {
            Swal.fire({
              text: error[0],
              icon: "error",
              buttonsStyling: false,
              confirmButtonText: "Try again!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn fw-semibold btn-light-danger"
              }
            }).then(() => {
              store.errors = {};
            });
          }
          (_a2 = submitButton.value) == null ? void 0 : _a2.removeAttribute("data-kt-indicator");
          submitButton.value.disabled = false;
        };
        return {
          onSubmitLogin,
          login,
          submitButton,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_VForm = vueExports$1.resolveComponent("VForm");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_Field = vueExports$1.resolveComponent("Field");
      const _component_ErrorMessage = vueExports$1.resolveComponent("ErrorMessage");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "w-lg-500px p-10" }, _attrs))}>`);
      _push(ssrRenderComponent(_component_VForm, {
        class: "form w-100",
        id: "kt_login_signin_form",
        onSubmit: _ctx.onSubmitLogin,
        "validation-schema": _ctx.login,
        "initial-values": { email: "admin@demo.com", password: "demo" }
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="text-center mb-10"${_scopeId}><h1 class="text-gray-900 mb-3"${_scopeId}>Sign In</h1><div class="text-gray-500 fw-semibold fs-4"${_scopeId}> New Here? `);
            _push2(ssrRenderComponent(_component_router_link, {
              to: "/sign-up",
              class: "link-primary fw-bold"
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Create an Account `);
                } else {
                  return [
                    vueExports$1.createTextVNode(" Create an Account ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div><div class="mb-10 bg-light-info p-8 rounded"${_scopeId}><div class="text-info"${_scopeId}> Use account <strong${_scopeId}>admin@demo.com</strong> and password <strong${_scopeId}>demo</strong> to continue. </div></div><div class="fv-row mb-10"${_scopeId}><label class="form-label fs-6 fw-bold text-gray-900"${_scopeId}>Email</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              tabindex: "1",
              class: "form-control form-control-lg form-control-solid",
              type: "text",
              name: "email",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "email" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="fv-row mb-10"${_scopeId}><div class="d-flex flex-stack mb-2"${_scopeId}><label class="form-label fw-bold text-gray-900 fs-6 mb-0"${_scopeId}>Password</label>`);
            _push2(ssrRenderComponent(_component_router_link, {
              to: "/password-reset",
              class: "link-primary fs-6 fw-bold"
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Forgot Password ? `);
                } else {
                  return [
                    vueExports$1.createTextVNode(" Forgot Password ? ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
            _push2(ssrRenderComponent(_component_Field, {
              tabindex: "2",
              class: "form-control form-control-lg form-control-solid",
              type: "password",
              name: "password",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "password" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="text-center"${_scopeId}><button tabindex="3" type="submit" id="kt_sign_in_submit" class="btn btn-lg btn-primary w-100 mb-5"${_scopeId}><span class="indicator-label"${_scopeId}> Continue </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button><div class="text-center text-muted text-uppercase fw-bold mb-5"${_scopeId}>or</div><a href="#" class="btn btn-flex flex-center btn-light btn-lg w-100 mb-5"${_scopeId}><img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/google-icon.svg"))} class="h-20px me-3"${_scopeId}> Continue with Google </a><a href="#" class="btn btn-flex flex-center btn-light btn-lg w-100 mb-5"${_scopeId}><img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/facebook-4.svg"))} class="h-20px me-3"${_scopeId}> Continue with Facebook </a><a href="#" class="btn btn-flex flex-center btn-light btn-lg w-100"${_scopeId}><img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/apple-black.svg"))} class="h-20px me-3"${_scopeId}> Continue with Apple </a></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "text-center mb-10" }, [
                vueExports$1.createVNode("h1", { class: "text-gray-900 mb-3" }, "Sign In"),
                vueExports$1.createVNode("div", { class: "text-gray-500 fw-semibold fs-4" }, [
                  vueExports$1.createTextVNode(" New Here? "),
                  vueExports$1.createVNode(_component_router_link, {
                    to: "/sign-up",
                    class: "link-primary fw-bold"
                  }, {
                    default: vueExports$1.withCtx(() => [
                      vueExports$1.createTextVNode(" Create an Account ")
                    ]),
                    _: 1
                  })
                ])
              ]),
              vueExports$1.createVNode("div", { class: "mb-10 bg-light-info p-8 rounded" }, [
                vueExports$1.createVNode("div", { class: "text-info" }, [
                  vueExports$1.createTextVNode(" Use account "),
                  vueExports$1.createVNode("strong", null, "admin@demo.com"),
                  vueExports$1.createTextVNode(" and password "),
                  vueExports$1.createVNode("strong", null, "demo"),
                  vueExports$1.createTextVNode(" to continue. ")
                ])
              ]),
              vueExports$1.createVNode("div", { class: "fv-row mb-10" }, [
                vueExports$1.createVNode("label", { class: "form-label fs-6 fw-bold text-gray-900" }, "Email"),
                vueExports$1.createVNode(_component_Field, {
                  tabindex: "1",
                  class: "form-control form-control-lg form-control-solid",
                  type: "text",
                  name: "email",
                  autocomplete: "off"
                }),
                vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                  vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                    vueExports$1.createVNode(_component_ErrorMessage, { name: "email" })
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "fv-row mb-10" }, [
                vueExports$1.createVNode("div", { class: "d-flex flex-stack mb-2" }, [
                  vueExports$1.createVNode("label", { class: "form-label fw-bold text-gray-900 fs-6 mb-0" }, "Password"),
                  vueExports$1.createVNode(_component_router_link, {
                    to: "/password-reset",
                    class: "link-primary fs-6 fw-bold"
                  }, {
                    default: vueExports$1.withCtx(() => [
                      vueExports$1.createTextVNode(" Forgot Password ? ")
                    ]),
                    _: 1
                  })
                ]),
                vueExports$1.createVNode(_component_Field, {
                  tabindex: "2",
                  class: "form-control form-control-lg form-control-solid",
                  type: "password",
                  name: "password",
                  autocomplete: "off"
                }),
                vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                  vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                    vueExports$1.createVNode(_component_ErrorMessage, { name: "password" })
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "text-center" }, [
                vueExports$1.createVNode("button", {
                  tabindex: "3",
                  type: "submit",
                  ref: "submitButton",
                  id: "kt_sign_in_submit",
                  class: "btn btn-lg btn-primary w-100 mb-5"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Continue "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512),
                vueExports$1.createVNode("div", { class: "text-center text-muted text-uppercase fw-bold mb-5" }, "or"),
                vueExports$1.createVNode("a", {
                  href: "#",
                  class: "btn btn-flex flex-center btn-light btn-lg w-100 mb-5"
                }, [
                  vueExports$1.createVNode("img", {
                    alt: "Logo",
                    src: _ctx.getAssetPath("media/svg/brand-logos/google-icon.svg"),
                    class: "h-20px me-3"
                  }, null, 8, ["src"]),
                  vueExports$1.createTextVNode(" Continue with Google ")
                ]),
                vueExports$1.createVNode("a", {
                  href: "#",
                  class: "btn btn-flex flex-center btn-light btn-lg w-100 mb-5"
                }, [
                  vueExports$1.createVNode("img", {
                    alt: "Logo",
                    src: _ctx.getAssetPath("media/svg/brand-logos/facebook-4.svg"),
                    class: "h-20px me-3"
                  }, null, 8, ["src"]),
                  vueExports$1.createTextVNode(" Continue with Facebook ")
                ]),
                vueExports$1.createVNode("a", {
                  href: "#",
                  class: "btn btn-flex flex-center btn-light btn-lg w-100"
                }, [
                  vueExports$1.createVNode("img", {
                    alt: "Logo",
                    src: _ctx.getAssetPath("media/svg/brand-logos/apple-black.svg"),
                    class: "h-20px me-3"
                  }, null, 8, ["src"]),
                  vueExports$1.createTextVNode(" Continue with Apple ")
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    }
    const _sfc_setup$q = _sfc_main$q.setup;
    _sfc_main$q.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/authentication/basic-flow/SignIn.vue");
      return _sfc_setup$q ? _sfc_setup$q(props, ctx) : void 0;
    };
    const SignIn = /* @__PURE__ */ _export_sfc(_sfc_main$q, [["ssrRender", _sfc_ssrRender$o]]);
    const __vite_glob_0_202 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: SignIn
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$p = vueExports$1.defineComponent({
      name: "sign-up",
      components: {
        Field,
        VForm: Form,
        ErrorMessage
      },
      setup() {
        const store = useAuthStore();
        const router2 = useRouter();
        const submitButton = vueExports$1.ref(null);
        const registration = Yup.object().shape({
          first_name: Yup.string().required().label("Name"),
          last_name: Yup.string().required().label("Surname"),
          email: Yup.string().min(4).required().email().label("Email"),
          password: Yup.string().required().label("Password"),
          password_confirmation: Yup.string().required().oneOf([Yup.ref("password")], "Passwords must match").label("Password Confirmation")
        });
        vueExports$1.onMounted(() => {
          vueExports$1.nextTick(() => {
            PasswordMeterComponent.bootstrap();
          });
        });
        const onSubmitRegister = async (values) => {
          var _a2, _b;
          values = values;
          store.logout();
          submitButton.value.disabled = true;
          (_a2 = submitButton.value) == null ? void 0 : _a2.setAttribute("data-kt-indicator", "on");
          await store.register(values);
          const error = Object.values(store.errors);
          if (!error) {
            Swal.fire({
              text: "You have successfully logged in!",
              icon: "success",
              buttonsStyling: false,
              confirmButtonText: "Ok, got it!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn fw-semibold btn-light-primary"
              }
            }).then(function() {
              router2.push({ name: "dashboard" });
            });
          } else {
            Swal.fire({
              text: error[0],
              icon: "error",
              buttonsStyling: false,
              confirmButtonText: "Try again!",
              heightAuto: false,
              customClass: {
                confirmButton: "btn fw-semibold btn-light-danger"
              }
            });
          }
          (_b = submitButton.value) == null ? void 0 : _b.removeAttribute("data-kt-indicator");
          submitButton.value.disabled = false;
        };
        return {
          registration,
          onSubmitRegister,
          submitButton,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_VForm = vueExports$1.resolveComponent("VForm");
      const _component_router_link = vueExports$1.resolveComponent("router-link");
      const _component_Field = vueExports$1.resolveComponent("Field");
      const _component_ErrorMessage = vueExports$1.resolveComponent("ErrorMessage");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "w-lg-500px p-10" }, _attrs))}>`);
      _push(ssrRenderComponent(_component_VForm, {
        class: "form w-100 fv-plugins-bootstrap5 fv-plugins-framework",
        novalidate: "",
        onSubmit: _ctx.onSubmitRegister,
        id: "kt_login_signup_form",
        "validation-schema": _ctx.registration
      }, {
        default: vueExports$1.withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="mb-10 text-center"${_scopeId}><h1 class="text-gray-900 mb-3"${_scopeId}>Create an Account</h1><div class="text-gray-500 fw-semibold fs-4"${_scopeId}> Already have an account? `);
            _push2(ssrRenderComponent(_component_router_link, {
              to: "/sign-in",
              class: "link-primary fw-bold"
            }, {
              default: vueExports$1.withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Sign in here `);
                } else {
                  return [
                    vueExports$1.createTextVNode(" Sign in here ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div><button type="button" class="btn btn-light-primary fw-bold w-100 mb-10"${_scopeId}><img alt="Logo"${ssrRenderAttr("src", _ctx.getAssetPath("media/svg/brand-logos/google-icon.svg"))} class="h-20px me-3"${_scopeId}> Sign in with Google </button><div class="d-flex align-items-center mb-10"${_scopeId}><div class="border-bottom border-gray-300 mw-50 w-100"${_scopeId}></div><span class="fw-semibold text-gray-400 fs-7 mx-2"${_scopeId}>OR</span><div class="border-bottom border-gray-300 mw-50 w-100"${_scopeId}></div></div><div class="row fv-row mb-7"${_scopeId}><div class="col-xl-6"${_scopeId}><label class="form-label fw-bold text-gray-900 fs-6"${_scopeId}>First Name</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: "form-control form-control-lg form-control-solid",
              type: "text",
              placeholder: "",
              name: "first_name",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "first_name" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="col-xl-6"${_scopeId}><label class="form-label fw-bold text-gray-900 fs-6"${_scopeId}>Last Name</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: "form-control form-control-lg form-control-solid",
              type: "text",
              placeholder: "",
              name: "last_name",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "last_name" }, null, _parent2, _scopeId));
            _push2(`</div></div></div></div><div class="fv-row mb-7"${_scopeId}><label class="form-label fw-bold text-gray-900 fs-6"${_scopeId}>Email</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: "form-control form-control-lg form-control-solid",
              type: "email",
              placeholder: "",
              name: "email",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "email" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="mb-10 fv-row" data-kt-password-meter="true"${_scopeId}><div class="mb-1"${_scopeId}><label class="form-label fw-bold text-gray-900 fs-6"${_scopeId}> Password </label><div class="position-relative mb-3"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: "form-control form-control-lg form-control-solid",
              type: "password",
              placeholder: "",
              name: "password",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "password" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="d-flex align-items-center mb-3" data-kt-password-meter-control="highlight"${_scopeId}><div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"${_scopeId}></div><div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"${_scopeId}></div><div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"${_scopeId}></div><div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px"${_scopeId}></div></div></div><div class="text-muted"${_scopeId}> Use 8 or more characters with a mix of letters, numbers &amp; symbols. </div></div><div class="fv-row mb-5"${_scopeId}><label class="form-label fw-bold text-gray-900 fs-6"${_scopeId}>Confirm Password</label>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: "form-control form-control-lg form-control-solid",
              type: "password",
              placeholder: "",
              name: "password_confirmation",
              autocomplete: "off"
            }, null, _parent2, _scopeId));
            _push2(`<div class="fv-plugins-message-container"${_scopeId}><div class="fv-help-block"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ErrorMessage, { name: "password_confirmation" }, null, _parent2, _scopeId));
            _push2(`</div></div></div><div class="fv-row mb-10"${_scopeId}><label class="form-check form-check-custom form-check-solid"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Field, {
              class: "form-check-input",
              type: "checkbox",
              name: "toc",
              value: "1"
            }, null, _parent2, _scopeId));
            _push2(`<span class="form-check-label fw-semibold text-gray-700 fs-6"${_scopeId}> I Agree &amp; <a href="#" class="ms-1 link-primary"${_scopeId}>Terms and conditions</a>. </span></label></div><div class="text-center"${_scopeId}><button id="kt_sign_up_submit" type="submit" class="btn btn-lg btn-primary"${_scopeId}><span class="indicator-label"${_scopeId}> Submit </span><span class="indicator-progress"${_scopeId}> Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"${_scopeId}></span></span></button></div>`);
          } else {
            return [
              vueExports$1.createVNode("div", { class: "mb-10 text-center" }, [
                vueExports$1.createVNode("h1", { class: "text-gray-900 mb-3" }, "Create an Account"),
                vueExports$1.createVNode("div", { class: "text-gray-500 fw-semibold fs-4" }, [
                  vueExports$1.createTextVNode(" Already have an account? "),
                  vueExports$1.createVNode(_component_router_link, {
                    to: "/sign-in",
                    class: "link-primary fw-bold"
                  }, {
                    default: vueExports$1.withCtx(() => [
                      vueExports$1.createTextVNode(" Sign in here ")
                    ]),
                    _: 1
                  })
                ])
              ]),
              vueExports$1.createVNode("button", {
                type: "button",
                class: "btn btn-light-primary fw-bold w-100 mb-10"
              }, [
                vueExports$1.createVNode("img", {
                  alt: "Logo",
                  src: _ctx.getAssetPath("media/svg/brand-logos/google-icon.svg"),
                  class: "h-20px me-3"
                }, null, 8, ["src"]),
                vueExports$1.createTextVNode(" Sign in with Google ")
              ]),
              vueExports$1.createVNode("div", { class: "d-flex align-items-center mb-10" }, [
                vueExports$1.createVNode("div", { class: "border-bottom border-gray-300 mw-50 w-100" }),
                vueExports$1.createVNode("span", { class: "fw-semibold text-gray-400 fs-7 mx-2" }, "OR"),
                vueExports$1.createVNode("div", { class: "border-bottom border-gray-300 mw-50 w-100" })
              ]),
              vueExports$1.createVNode("div", { class: "row fv-row mb-7" }, [
                vueExports$1.createVNode("div", { class: "col-xl-6" }, [
                  vueExports$1.createVNode("label", { class: "form-label fw-bold text-gray-900 fs-6" }, "First Name"),
                  vueExports$1.createVNode(_component_Field, {
                    class: "form-control form-control-lg form-control-solid",
                    type: "text",
                    placeholder: "",
                    name: "first_name",
                    autocomplete: "off"
                  }),
                  vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                    vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                      vueExports$1.createVNode(_component_ErrorMessage, { name: "first_name" })
                    ])
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "col-xl-6" }, [
                  vueExports$1.createVNode("label", { class: "form-label fw-bold text-gray-900 fs-6" }, "Last Name"),
                  vueExports$1.createVNode(_component_Field, {
                    class: "form-control form-control-lg form-control-solid",
                    type: "text",
                    placeholder: "",
                    name: "last_name",
                    autocomplete: "off"
                  }),
                  vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                    vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                      vueExports$1.createVNode(_component_ErrorMessage, { name: "last_name" })
                    ])
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "fv-row mb-7" }, [
                vueExports$1.createVNode("label", { class: "form-label fw-bold text-gray-900 fs-6" }, "Email"),
                vueExports$1.createVNode(_component_Field, {
                  class: "form-control form-control-lg form-control-solid",
                  type: "email",
                  placeholder: "",
                  name: "email",
                  autocomplete: "off"
                }),
                vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                  vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                    vueExports$1.createVNode(_component_ErrorMessage, { name: "email" })
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", {
                class: "mb-10 fv-row",
                "data-kt-password-meter": "true"
              }, [
                vueExports$1.createVNode("div", { class: "mb-1" }, [
                  vueExports$1.createVNode("label", { class: "form-label fw-bold text-gray-900 fs-6" }, " Password "),
                  vueExports$1.createVNode("div", { class: "position-relative mb-3" }, [
                    vueExports$1.createVNode(_component_Field, {
                      class: "form-control form-control-lg form-control-solid",
                      type: "password",
                      placeholder: "",
                      name: "password",
                      autocomplete: "off"
                    }),
                    vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                      vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                        vueExports$1.createVNode(_component_ErrorMessage, { name: "password" })
                      ])
                    ])
                  ]),
                  vueExports$1.createVNode("div", {
                    class: "d-flex align-items-center mb-3",
                    "data-kt-password-meter-control": "highlight"
                  }, [
                    vueExports$1.createVNode("div", { class: "flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2" }),
                    vueExports$1.createVNode("div", { class: "flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2" }),
                    vueExports$1.createVNode("div", { class: "flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2" }),
                    vueExports$1.createVNode("div", { class: "flex-grow-1 bg-secondary bg-active-success rounded h-5px" })
                  ])
                ]),
                vueExports$1.createVNode("div", { class: "text-muted" }, " Use 8 or more characters with a mix of letters, numbers & symbols. ")
              ]),
              vueExports$1.createVNode("div", { class: "fv-row mb-5" }, [
                vueExports$1.createVNode("label", { class: "form-label fw-bold text-gray-900 fs-6" }, "Confirm Password"),
                vueExports$1.createVNode(_component_Field, {
                  class: "form-control form-control-lg form-control-solid",
                  type: "password",
                  placeholder: "",
                  name: "password_confirmation",
                  autocomplete: "off"
                }),
                vueExports$1.createVNode("div", { class: "fv-plugins-message-container" }, [
                  vueExports$1.createVNode("div", { class: "fv-help-block" }, [
                    vueExports$1.createVNode(_component_ErrorMessage, { name: "password_confirmation" })
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "fv-row mb-10" }, [
                vueExports$1.createVNode("label", { class: "form-check form-check-custom form-check-solid" }, [
                  vueExports$1.createVNode(_component_Field, {
                    class: "form-check-input",
                    type: "checkbox",
                    name: "toc",
                    value: "1"
                  }),
                  vueExports$1.createVNode("span", { class: "form-check-label fw-semibold text-gray-700 fs-6" }, [
                    vueExports$1.createTextVNode(" I Agree & "),
                    vueExports$1.createVNode("a", {
                      href: "#",
                      class: "ms-1 link-primary"
                    }, "Terms and conditions"),
                    vueExports$1.createTextVNode(". ")
                  ])
                ])
              ]),
              vueExports$1.createVNode("div", { class: "text-center" }, [
                vueExports$1.createVNode("button", {
                  id: "kt_sign_up_submit",
                  ref: "submitButton",
                  type: "submit",
                  class: "btn btn-lg btn-primary"
                }, [
                  vueExports$1.createVNode("span", { class: "indicator-label" }, " Submit "),
                  vueExports$1.createVNode("span", { class: "indicator-progress" }, [
                    vueExports$1.createTextVNode(" Please wait... "),
                    vueExports$1.createVNode("span", { class: "spinner-border spinner-border-sm align-middle ms-2" })
                  ])
                ], 512)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    }
    const _sfc_setup$p = _sfc_main$p.setup;
    _sfc_main$p.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/authentication/basic-flow/SignUp.vue");
      return _sfc_setup$p ? _sfc_setup$p(props, ctx) : void 0;
    };
    const SignUp = /* @__PURE__ */ _export_sfc(_sfc_main$p, [["ssrRender", _sfc_ssrRender$n]]);
    const __vite_glob_0_203 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: SignUp
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$o = vueExports$1.defineComponent({
      name: "create-api-key",
      components: {
        KTModalCard,
        KTCreateAPIKeyModal
      },
      setup() {
        return {
          getIllustrationsPath,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_KTCreateAPIKeyModal = vueExports$1.resolveComponent("KTCreateAPIKeyModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "Create API Key Modal Example",
        description: "Click on the below buttons to launch <br/>a new API Key creation example.",
        image: _ctx.getIllustrationsPath("16.png"),
        "button-text": "Create API Key",
        "modal-id": "kt_modal_create_api_key"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTCreateAPIKeyModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$o = _sfc_main$o.setup;
    _sfc_main$o.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/forms/CreateApiKey.vue");
      return _sfc_setup$o ? _sfc_setup$o(props, ctx) : void 0;
    };
    const CreateApiKey = /* @__PURE__ */ _export_sfc(_sfc_main$o, [["ssrRender", _sfc_ssrRender$m]]);
    const __vite_glob_0_204 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CreateApiKey
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$n = vueExports$1.defineComponent({
      name: "new-address",
      components: {
        KTModalCard,
        KTNewAddressModal
      },
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_KTNewAddressModal = vueExports$1.resolveComponent("KTNewAddressModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "New Address Modal Example",
        description: "Click on the below buttons to launch <br/>a new address example.",
        image: _ctx.getIllustrationsPath("19.png"),
        "button-text": "Add New Address",
        "modal-id": "kt_modal_new_address"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTNewAddressModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$n = _sfc_main$n.setup;
    _sfc_main$n.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/forms/NewAddress.vue");
      return _sfc_setup$n ? _sfc_setup$n(props, ctx) : void 0;
    };
    const NewAddress = /* @__PURE__ */ _export_sfc(_sfc_main$n, [["ssrRender", _sfc_ssrRender$l]]);
    const __vite_glob_0_205 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: NewAddress
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$m = vueExports$1.defineComponent({
      name: "new-card",
      components: {
        KTModalCard,
        KTNewCardModal
      },
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_KTNewCardModal = vueExports$1.resolveComponent("KTNewCardModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "New Card Modal Example",
        description: "Click on the below buttons to launch <br/>a new card example.",
        image: _ctx.getIllustrationsPath("6.png"),
        "button-text": "Add New Card",
        "modal-id": "kt_modal_new_card"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTNewCardModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$m = _sfc_main$m.setup;
    _sfc_main$m.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/forms/NewCard.vue");
      return _sfc_setup$m ? _sfc_setup$m(props, ctx) : void 0;
    };
    const NewCard = /* @__PURE__ */ _export_sfc(_sfc_main$m, [["ssrRender", _sfc_ssrRender$k]]);
    const __vite_glob_0_206 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: NewCard
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$l = vueExports$1.defineComponent({
      name: "new-target",
      components: {
        KTModalCard,
        KTNewTargetModal
      },
      setup() {
        return {
          getIllustrationsPath,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_KTNewTargetModal = vueExports$1.resolveComponent("KTNewTargetModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "New Target Modal Example",
        description: "Click on the below buttons to launch <br/>a new target example.",
        image: _ctx.getIllustrationsPath("17.png"),
        "button-text": "Add New Target",
        "modal-id": "kt_modal_new_target"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTNewTargetModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$l = _sfc_main$l.setup;
    _sfc_main$l.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/forms/NewTarget.vue");
      return _sfc_setup$l ? _sfc_setup$l(props, ctx) : void 0;
    };
    const NewTarget = /* @__PURE__ */ _export_sfc(_sfc_main$l, [["ssrRender", _sfc_ssrRender$j]]);
    const __vite_glob_0_207 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: NewTarget
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$k = vueExports$1.defineComponent({
      name: "invite-friends",
      components: {
        KTModalCard,
        KTInviteFriendsModal
      },
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_KTInviteFriendsModal = vueExports$1.resolveComponent("KTInviteFriendsModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "Invite Friends Modal Example",
        description: "Click on the below buttons\n  to launch <br />\n  a friend invitation example.",
        image: _ctx.getIllustrationsPath("1.png"),
        "button-text": "Invite Friends",
        "modal-id": "kt_modal_invite_friends"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTInviteFriendsModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$k = _sfc_main$k.setup;
    _sfc_main$k.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/general/InviteFriends.vue");
      return _sfc_setup$k ? _sfc_setup$k(props, ctx) : void 0;
    };
    const InviteFriends = /* @__PURE__ */ _export_sfc(_sfc_main$k, [["ssrRender", _sfc_ssrRender$i]]);
    const __vite_glob_0_208 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: InviteFriends
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$j = vueExports$1.defineComponent({
      name: "share-and-earn",
      components: {
        KTModalsCard: KTModalCard,
        KTShareAndEarnModal
      },
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalsCard = vueExports$1.resolveComponent("KTModalsCard");
      const _component_KTShareAndEarnModal = vueExports$1.resolveComponent("KTShareAndEarnModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalsCard, {
        title: "Share & Earn Modal Example",
        description: "Click on the below buttons to launch <br/>a share & earn example.",
        image: _ctx.getIllustrationsPath("9.png"),
        "button-text": "Share & Earn",
        "modal-id": "kt_modal_share_earn"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTShareAndEarnModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$j = _sfc_main$j.setup;
    _sfc_main$j.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/general/ShareAndEarn.vue");
      return _sfc_setup$j ? _sfc_setup$j(props, ctx) : void 0;
    };
    const ShareAndEarn = /* @__PURE__ */ _export_sfc(_sfc_main$j, [["ssrRender", _sfc_ssrRender$h]]);
    const __vite_glob_0_209 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ShareAndEarn
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$i = vueExports$1.defineComponent({
      name: "upgrade-plan",
      components: {
        KTModalCard,
        KTUpgradePlanModal
      },
      setup() {
        return {
          getIllustrationsPath,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_KTUpgradePlanModal = vueExports$1.resolveComponent("KTUpgradePlanModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "Upgrade Plan Modal Example",
        description: "Click on the below buttons to launch <br/>a upgrade plan example.",
        image: _ctx.getIllustrationsPath("8.png"),
        "button-text": "Upgrade Plan",
        "modal-id": "kt_modal_upgrade_plan"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTUpgradePlanModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$i = _sfc_main$i.setup;
    _sfc_main$i.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/general/UpgradePlan.vue");
      return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
    };
    const UpgradePlan = /* @__PURE__ */ _export_sfc(_sfc_main$i, [["ssrRender", _sfc_ssrRender$g]]);
    const __vite_glob_0_210 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: UpgradePlan
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$h = vueExports$1.defineComponent({
      name: "view-users",
      components: {
        KTModalCard,
        KTViewUsersModal
      },
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_KTViewUsersModal = vueExports$1.resolveComponent("KTViewUsersModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "View Users Modal Example",
        description: "Click on the below buttons to launch <br/>user lists example.",
        image: _ctx.getIllustrationsPath("10.png"),
        "button-text": "View Users",
        "modal-id": "kt_modal_view_users"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTViewUsersModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$h = _sfc_main$h.setup;
    _sfc_main$h.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/general/ViewUsers.vue");
      return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
    };
    const ViewUsers = /* @__PURE__ */ _export_sfc(_sfc_main$h, [["ssrRender", _sfc_ssrRender$f]]);
    const __vite_glob_0_211 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: ViewUsers
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$g = vueExports$1.defineComponent({
      name: "create-account",
      components: {
        KTModalCard,
        KTCreateAccountModal: _sfc_main$2n
      },
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_KTCreateAccountModal = vueExports$1.resolveComponent("KTCreateAccountModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "Create Account Modal Example",
        description: "Click on the below buttons to launch <br/>create account modal example.",
        image: _ctx.getIllustrationsPath("3.png"),
        "button-text": "Create Account",
        "modal-id": "kt_modal_create_account"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTCreateAccountModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$g = _sfc_main$g.setup;
    _sfc_main$g.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/wizards/CreateAccount.vue");
      return _sfc_setup$g ? _sfc_setup$g(props, ctx) : void 0;
    };
    const CreateAccount = /* @__PURE__ */ _export_sfc(_sfc_main$g, [["ssrRender", _sfc_ssrRender$e]]);
    const __vite_glob_0_212 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CreateAccount
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$f = vueExports$1.defineComponent({
      name: "create-app",
      components: {
        KTModalCard
      },
      setup() {
        return {
          getIllustrationsPath
        };
      }
    });
    function _sfc_ssrRender$d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      _push(ssrRenderComponent(_component_KTModalCard, vueExports$1.mergeProps({
        title: "Create App Modal Example",
        description: "Click on the below buttons to launch <br/>create app modal example.",
        image: _ctx.getIllustrationsPath("15.png"),
        "button-text": "Create App",
        "modal-id": "kt_modal_create_app"
      }, _attrs), null, _parent));
    }
    const _sfc_setup$f = _sfc_main$f.setup;
    _sfc_main$f.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/wizards/CreateApp.vue");
      return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
    };
    const CreateApp = /* @__PURE__ */ _export_sfc(_sfc_main$f, [["ssrRender", _sfc_ssrRender$d]]);
    const __vite_glob_0_213 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: CreateApp
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$e = vueExports$1.defineComponent({
      name: "two-factor-auth",
      components: {
        KTModalCard,
        KTTwoFactorAuthModal
      },
      setup() {
        return {
          getIllustrationsPath,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTModalCard = vueExports$1.resolveComponent("KTModalCard");
      const _component_KTTwoFactorAuthModal = vueExports$1.resolveComponent("KTTwoFactorAuthModal");
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_KTModalCard, {
        title: "Two-factor Authentication",
        description: "Click on the below buttons to launch <br/>two-factor authentication setup example.",
        image: _ctx.getIllustrationsPath("4.png"),
        "button-text": "Enable Two-factor Authentication",
        "modal-id": "kt_modal_two_factor_authentication"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTTwoFactorAuthModal, null, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup$e = _sfc_main$e.setup;
    _sfc_main$e.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/modals/wizards/TwoFactorAuth.vue");
      return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
    };
    const TwoFactorAuth = /* @__PURE__ */ _export_sfc(_sfc_main$e, [["ssrRender", _sfc_ssrRender$c]]);
    const __vite_glob_0_214 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: TwoFactorAuth
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$d = vueExports$1.defineComponent({
      name: "profile-activity",
      components: {
        KTActivityItem1,
        KTActivityItem2,
        KTActivityItem3,
        KTActivityItem4,
        KTActivityItem5,
        KTActivityItem6,
        KTActivityItem7,
        KTActivityItem8
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_KTActivityItem1 = vueExports$1.resolveComponent("KTActivityItem1");
      const _component_KTActivityItem2 = vueExports$1.resolveComponent("KTActivityItem2");
      const _component_KTActivityItem3 = vueExports$1.resolveComponent("KTActivityItem3");
      const _component_KTActivityItem4 = vueExports$1.resolveComponent("KTActivityItem4");
      const _component_KTActivityItem5 = vueExports$1.resolveComponent("KTActivityItem5");
      const _component_KTActivityItem6 = vueExports$1.resolveComponent("KTActivityItem6");
      const _component_KTActivityItem7 = vueExports$1.resolveComponent("KTActivityItem7");
      const _component_KTActivityItem8 = vueExports$1.resolveComponent("KTActivityItem8");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card" }, _attrs))}><div class="card-header card-header-stretch"><div class="card-title d-flex align-items-center">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "calendar-8",
        "icon-class": "fs-1 text-primary me-3 lh-0"
      }, null, _parent));
      _push(`<h3 class="fw-bold m-0 text-gray-800">Jan 23, 2021</h3></div><div class="card-toolbar m-0"><ul class="nav nav-tabs nav-line-tabs nav-stretch fs-6 border-0 fw-bold" role="tablist"><li class="nav-item" role="presentation"><a id="kt_activity_today_tab" class="nav-link justify-content-center text-active-gray-800 active" data-bs-toggle="tab" role="tab" href="#kt_activity_today"> Today </a></li><li class="nav-item" role="presentation"><a id="kt_activity_week_tab" class="nav-link justify-content-center text-active-gray-800" data-bs-toggle="tab" role="tab" href="#kt_activity_week"> Week </a></li><li class="nav-item" role="presentation"><a id="kt_activity_month_tab" class="nav-link justify-content-center text-active-gray-800" data-bs-toggle="tab" role="tab" href="#kt_activity_month"> Month </a></li><li class="nav-item" role="presentation"><a id="kt_activity_year_tab" class="nav-link justify-content-center text-active-gray-800 text-hover-gray-800" data-bs-toggle="tab" role="tab" href="#kt_activity_year"> 2021 </a></li></ul></div></div><div class="card-body"><div class="tab-content"><div id="kt_activity_today" class="card-body p-0 tab-pane fade show active" role="tabpanel" aria-labelledby="kt_activity_today_tab"><div class="timeline">`);
      _push(ssrRenderComponent(_component_KTActivityItem1, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem2, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem3, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem4, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem5, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem6, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem7, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem8, null, null, _parent));
      _push(`</div></div><div id="kt_activity_week" class="card-body p-0 tab-pane fade show" role="tabpanel" aria-labelledby="kt_activity_week_tab"><div class="timeline">`);
      _push(ssrRenderComponent(_component_KTActivityItem2, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem3, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem4, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem5, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem6, null, null, _parent));
      _push(`</div></div><div id="kt_activity_month" class="card-body p-0 tab-pane fade show" role="tabpanel" aria-labelledby="kt_activity_month_tab"><div class="timeline">`);
      _push(ssrRenderComponent(_component_KTActivityItem5, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem6, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem8, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem2, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem3, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem4, null, null, _parent));
      _push(`</div></div><div id="kt_activity_year" class="card-body p-0 tab-pane fade show" role="tabpanel" aria-labelledby="kt_activity_year_tab"><div class="timeline">`);
      _push(ssrRenderComponent(_component_KTActivityItem3, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem4, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem5, null, null, _parent));
      _push(ssrRenderComponent(_component_KTActivityItem6, null, null, _parent));
      _push(`</div></div></div></div></div>`);
    }
    const _sfc_setup$d = _sfc_main$d.setup;
    _sfc_main$d.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/pages/profile/Activity.vue");
      return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
    };
    const Activity = /* @__PURE__ */ _export_sfc(_sfc_main$d, [["ssrRender", _sfc_ssrRender$b]]);
    const __vite_glob_0_215 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Activity
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$c = vueExports$1.defineComponent({
      name: "profile-campaigns",
      components: {
        Card2
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_Card2 = vueExports$1.resolveComponent("Card2");
      _push(`<!--[--><div class="d-flex flex-wrap flex-stack my-5"><h2 class="fw-semibold my-2"> Campaigns <span class="fs-4 text-gray-500 ms-1">30 Days</span></h2><div class="d-flex align-items-center my-2"><div class="w-100px me-5"><select name="status" data-control="select2" data-hide-search="true" class="form-select form-select-white form-select-sm"><option value="1" selected>30 Days</option><option value="2">90 Days</option><option value="3">6 Months</option><option value="4">1 Year</option></select></div><button class="btn btn-primary btn-sm" data-bs-toggle="tooltip" title="Coming soon"> Plan Campaigns </button></div></div><div class="row g-6 g-xl-9"><div class="col-sm-6 col-xl-4"><div class="card h-100">`);
      _push(ssrRenderComponent(_component_Card2, {
        "card-classes": "h-100",
        title: "Twitch Posts",
        icon: _ctx.getAssetPath("media/svg/brand-logos/twitch.svg"),
        content: "$500.00",
        color: "success",
        arrow: "arrow-up-right",
        "footer-data": "+40.5%",
        "footer-text": "more impressions",
        "indicator-value": "0.5%",
        "indicator-label": "MRR"
      }, null, _parent));
      _push(`</div></div><div class="col-sm-6 col-xl-4"><div class="card h-100">`);
      _push(ssrRenderComponent(_component_Card2, {
        "card-classes": "h-100",
        title: "Twitter Followers",
        icon: _ctx.getAssetPath("media/svg/brand-logos/twitter.svg"),
        content: "807k",
        color: "success",
        arrow: "arrow-up-right",
        "footer-data": "+17.62%",
        "footer-text": "Followers growth",
        "indicator-label": "New trials",
        "indicator-value": "5%"
      }, null, _parent));
      _push(`</div></div><div class="col-sm-6 col-xl-4"><div class="card h-100">`);
      _push(ssrRenderComponent(_component_Card2, {
        "card-classes": "h-100",
        title: "Spotify Listeners",
        icon: _ctx.getAssetPath("media/svg/brand-logos/spotify.svg"),
        content: "1,073",
        color: "danger",
        arrow: "arrow-down-right",
        "footer-data": "+10.45%",
        "footer-text": "Less comments than usual",
        "indicator-label": "Impressions",
        "indicator-value": "40%"
      }, null, _parent));
      _push(`</div></div><div class="col-sm-6 col-xl-4"><div class="card h-100">`);
      _push(ssrRenderComponent(_component_Card2, {
        "card-classes": "h-100",
        title: "Pinterest Posts",
        icon: _ctx.getAssetPath("media/svg/brand-logos/pinterest-p.svg"),
        content: "97",
        color: "success",
        arrow: "arrow-up-right",
        "footer-data": "+26.1%",
        "footer-text": "More posts",
        "indicator-label": "Spend",
        "indicator-value": "10%"
      }, null, _parent));
      _push(`</div></div><div class="col-sm-6 col-xl-4"><div class="card h-100">`);
      _push(ssrRenderComponent(_component_Card2, {
        "card-classes": "h-100",
        title: "Github Contributes",
        icon: _ctx.getAssetPath("media/svg/brand-logos/github.svg"),
        content: "4,109",
        color: "danger",
        arrow: "arrow-down-right",
        "footer-data": "+32.8%",
        "footer-text": "Less contributions",
        "indicator-label": "Dispute",
        "indicator-value": "40%"
      }, null, _parent));
      _push(`</div></div><div class="col-sm-6 col-xl-4"><div class="card h-100">`);
      _push(ssrRenderComponent(_component_Card2, {
        "card-classes": "h-100",
        title: "Youtube Subscribers",
        icon: _ctx.getAssetPath("media/svg/brand-logos/youtube-3.svg"),
        content: "354",
        color: "success",
        arrow: "arrow-up-right",
        "footer-data": "+29.45%",
        "footer-text": "Subscribers growth",
        "indicator-label": "Subscribers",
        "indicator-value": "40%"
      }, null, _parent));
      _push(`</div></div><div class="col-sm-6 col-xl-4"><div class="card h-100">`);
      _push(ssrRenderComponent(_component_Card2, {
        "card-classes": "h-100",
        title: "Telegram Posts",
        icon: _ctx.getAssetPath("media/svg/brand-logos/telegram.svg"),
        content: "566",
        color: "success",
        arrow: "arrow-up-right",
        "footer-data": "+11.4%",
        "footer-text": "more clicks",
        "indicator-label": "Profit",
        "indicator-value": "40%"
      }, null, _parent));
      _push(`</div></div><div class="col-sm-6 col-xl-4"><div class="card h-100">`);
      _push(ssrRenderComponent(_component_Card2, {
        "card-classes": "h-100",
        title: "Reddit Awards",
        icon: _ctx.getAssetPath("media/svg/brand-logos/reddit.svg"),
        content: "2.1M",
        color: "success",
        arrow: "arrow-down-right",
        "footer-data": "-46.7%",
        "footer-text": "more adds",
        "indicator-label": "Retention",
        "indicator-value": "0.0%"
      }, null, _parent));
      _push(`</div></div></div><div class="d-flex flex-stack flex-wrap pt-10"><div class="fs-6 fw-semibold text-gray-700"> Showing 1 to 10 of 50 entries </div><ul class="pagination"><li class="page-item previous"><a href="#" class="page-link"><i class="previous"></i></a></li><li class="page-item active"><a href="#" class="page-link">1</a></li><li class="page-item"><a href="#" class="page-link">2</a></li><li class="page-item"><a href="#" class="page-link">3</a></li><li class="page-item"><a href="#" class="page-link">4</a></li><li class="page-item"><a href="#" class="page-link">5</a></li><li class="page-item"><a href="#" class="page-link">6</a></li><li class="page-item next"><a href="#" class="page-link"><i class="next"></i></a></li></ul></div><!--]-->`);
    }
    const _sfc_setup$c = _sfc_main$c.setup;
    _sfc_main$c.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/pages/profile/Campaigns.vue");
      return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
    };
    const Campaigns = /* @__PURE__ */ _export_sfc(_sfc_main$c, [["ssrRender", _sfc_ssrRender$a]]);
    const __vite_glob_0_216 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Campaigns
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$b = vueExports$1.defineComponent({
      name: "profile-connections",
      components: {
        Card3
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$9(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_Card3 = vueExports$1.resolveComponent("Card3");
      _push(`<!--[--><div class="d-flex flex-wrap flex-stack mb-6"><h3 class="fw-bold my-2"> My Connections <span class="fs-6 text-gray-400 fw-semibold ms-1">(29)</span></h3><div class="d-flex my-2"><select name="status" data-control="select2" data-hide-search="true" class="form-select form-select-white form-select-sm w-125px"><option value="Active" selected>Active</option><option value="Approved">In Progress</option><option value="Declined">To Do</option><option value="In Progress">Completed</option></select></div></div><div class="row g-6 mb-6 g-xl-9 mb-xl-9">`);
      _push(ssrRenderComponent(_component_Card3, {
        name: "Patric Watson",
        position: "Art Director at Novica Co.",
        online: true,
        avatar: _ctx.getAssetPath("media/avatars/300-11.jpg"),
        connected: true,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Olivia Larson",
        position: "Art Director at Seal Inc.",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-6.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Adam Williams",
        position: "System Arcitect at Wolto Co.",
        online: true,
        initials: "A",
        color: "warning",
        connected: true,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Paul Marcus",
        position: "Art Director at Novica Co.",
        online: true,
        initials: "P",
        color: "primary",
        connected: true,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Neil Owen",
        position: "Accountant at Numbers Co.",
        online: false,
        initials: "N",
        color: "success",
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Sean Paul",
        position: "Developer at Loop Inc",
        online: true,
        initials: "S",
        color: "info",
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Kitona Johnson",
        position: "Web Designer at Nextop Ltd.",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-1.jpg"),
        connected: true,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Robert Doe",
        position: "Marketing Analytic at Avito Ltd.",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-14.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Soul Jacob",
        position: "Art Director at Novica Co.",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-12.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Nina Strong",
        position: "CTO at Kilp Ltd.",
        online: true,
        avatar: _ctx.getAssetPath("media/avatars/300-7.jpg"),
        connected: true,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Patric Watson",
        position: "Art Director at Novica Co.",
        online: true,
        avatar: _ctx.getAssetPath("media/avatars/300-11.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(ssrRenderComponent(_component_Card3, {
        name: "Olivia Larson",
        position: "Art Director at Seal Inc.",
        online: false,
        avatar: _ctx.getAssetPath("media/avatars/300-6.jpg"),
        connected: false,
        "avg-earnings": "$14,560",
        "total-sales": "$236,400"
      }, null, _parent));
      _push(`</div><!--]-->`);
    }
    const _sfc_setup$b = _sfc_main$b.setup;
    _sfc_main$b.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/pages/profile/Connections.vue");
      return _sfc_setup$b ? _sfc_setup$b(props, ctx) : void 0;
    };
    const Connections = /* @__PURE__ */ _export_sfc(_sfc_main$b, [["ssrRender", _sfc_ssrRender$9]]);
    const __vite_glob_0_217 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Connections
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$a = vueExports$1.defineComponent({
      name: "profile-documents",
      components: {
        KTFolder,
        KTFile
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$8(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTIcon = vueExports$1.resolveComponent("KTIcon");
      const _component_KTFolder = vueExports$1.resolveComponent("KTFolder");
      const _component_KTFile = vueExports$1.resolveComponent("KTFile");
      _push(`<!--[--><div class="d-flex flex-wrap flex-stack mb-6"><h3 class="fw-bold my-2"> My Documents <span class="fs-6 text-gray-400 fw-semibold ms-1">100+ resources</span></h3><div class="d-flex my-2"><div class="d-flex align-items-center position-relative me-4">`);
      _push(ssrRenderComponent(_component_KTIcon, {
        "icon-name": "magnifier",
        "icon-class": "fs-3 position-absolute ms-3"
      }, null, _parent));
      _push(`<input type="text" id="kt_filter_search" class="form-control form-control-white form-control-sm w-150px ps-9" placeholder="Search"></div><a href="#" class="btn btn-primary btn-sm" data-bs-toggle="tooltip" title="Coming soon"> File Manager </a></div></div><div class="row g-6 g-xl-9 mb-6 mb-xl-9">`);
      _push(ssrRenderComponent(_component_KTFolder, {
        "folder-name": "Finance",
        files: "7"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTFolder, {
        "folder-name": "Customers",
        files: "3"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTFolder, {
        "folder-name": "CRM Project",
        files: "25"
      }, null, _parent));
      _push(`<div class="col d-none d-xl-block"></div><div class="col d-none d-xl-block"></div></div><div class="row g-6 g-xl-9 mb-6 mb-xl-9">`);
      _push(ssrRenderComponent(_component_KTFile, {
        "file-title": "Project Reqs..",
        "file-type": "pdf",
        "created-at": "3 days ago"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTFile, {
        "file-title": "CRM App Docs..",
        "file-type": "doc",
        "created-at": "3 days ago"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTFile, {
        "file-title": "User CRUD Styles",
        "file-type": "css",
        "created-at": "4 days ago"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTFile, {
        "file-title": "Metronic Logo",
        "file-type": "ai",
        "created-at": "5 days ago"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTFile, {
        "file-title": "Orders backup",
        "file-type": "sql",
        "created-at": "1 week ago"
      }, null, _parent));
      _push(`</div><div class="row g-6 g-xl-9 mb-6 mb-xl-9">`);
      _push(ssrRenderComponent(_component_KTFile, {
        "file-title": "UTAIR CRM API Co..",
        "file-type": "xml",
        "created-at": "2 weeks ago"
      }, null, _parent));
      _push(ssrRenderComponent(_component_KTFile, {
        "file-title": "Tower Hill App..",
        "file-type": "tif",
        "created-at": "3 weeks ago"
      }, null, _parent));
      _push(`<div class="col d-none d-xl-block"></div><div class="col d-none d-xl-block"></div><div class="col d-none d-xl-block"></div></div><!--]-->`);
    }
    const _sfc_setup$a = _sfc_main$a.setup;
    _sfc_main$a.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/pages/profile/Documents.vue");
      return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
    };
    const Documents = /* @__PURE__ */ _export_sfc(_sfc_main$a, [["ssrRender", _sfc_ssrRender$8]]);
    const __vite_glob_0_218 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Documents
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$9 = vueExports$1.defineComponent({
      name: "profile-overview",
      components: {
        KTWidget1: FeedsWidget1,
        KTWidget2: FeedsWidget2,
        KTWidget3: FeedsWidget3,
        KTWidget4: FeedsWidget4,
        KTWidget5: FeedsWidget5,
        KTWidget6: FeedsWidget6,
        KTChartWidget1: ChartsWidget1,
        KTListWidget5: ListsWidget5,
        KTEngageWidget1
      }
    });
    function _sfc_ssrRender$7(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTWidget1 = vueExports$1.resolveComponent("KTWidget1");
      const _component_KTWidget2 = vueExports$1.resolveComponent("KTWidget2");
      const _component_KTWidget3 = vueExports$1.resolveComponent("KTWidget3");
      const _component_KTWidget4 = vueExports$1.resolveComponent("KTWidget4");
      const _component_KTWidget5 = vueExports$1.resolveComponent("KTWidget5");
      const _component_KTWidget6 = vueExports$1.resolveComponent("KTWidget6");
      const _component_KTChartWidget1 = vueExports$1.resolveComponent("KTChartWidget1");
      const _component_KTListWidget5 = vueExports$1.resolveComponent("KTListWidget5");
      const _component_KTEngageWidget1 = vueExports$1.resolveComponent("KTEngageWidget1");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "row g-5 g-xxl-8" }, _attrs))}><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_KTWidget1, { "widget-classes": "mb-5 mb-xxl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_KTWidget2, { "widget-classes": "mb-5 mb-xxl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_KTWidget3, { "widget-classes": "mb-5 mb-xxl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_KTWidget4, { "widget-classes": "mb-5 mb-xxl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_KTWidget5, { "widget-classes": "mb-5 mb-xxl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_KTWidget6, { "widget-classes": "mb-5 mb-xxl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_KTChartWidget1, { "widget-classes": "mb-5 mb-xxl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_KTListWidget5, { "widget-classes": "mb-5 mb-xxl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_KTEngageWidget1, { "widget-classes": "mb-5 mb-xxl-8" }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$9 = _sfc_main$9.setup;
    _sfc_main$9.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/pages/profile/Overview.vue");
      return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
    };
    const Overview = /* @__PURE__ */ _export_sfc(_sfc_main$9, [["ssrRender", _sfc_ssrRender$7]]);
    const __vite_glob_0_219 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Overview
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$8 = vueExports$1.defineComponent({
      name: "profile-projects",
      components: {
        KTCard
      },
      setup() {
        const users1 = [
          { name: "Emma Smith", src: getAssetPath("media/avatars/300-6.jpg") },
          { name: "Rudy Stone", src: getAssetPath("media/avatars/300-1.jpg") },
          { name: "Susan Redwood", initials: "S", state: "primary" }
        ];
        const users2 = [
          { name: "Alan Warden", initials: "A", state: "warning" },
          { name: "Brian Cox", src: getAssetPath("media/avatars/300-5.jpg") }
        ];
        const users3 = [
          { name: "Mad Masy", src: getAssetPath("media/avatars/300-6.jpg") },
          { name: "Cris Willson", src: getAssetPath("media/avatars/300-1.jpg") },
          { name: "Mike Garcie", initials: "M", state: "info" }
        ];
        const users4 = [
          { name: "Nich Warden", initials: "N", state: "warning" },
          { name: "Rob Otto", initials: "R", state: "success" }
        ];
        const users5 = [
          {
            name: "Francis Mitcham",
            src: getAssetPath("media/avatars/300-20.jpg")
          },
          {
            name: "Michelle Swanston",
            src: getAssetPath("media/avatars/300-7.jpg")
          },
          { name: "Susan Redwood", initials: "S", state: "primary" }
        ];
        const users6 = [
          { name: "Emma Smith", src: getAssetPath("media/avatars/300-6.jpg") },
          { name: "Rudy Stone", src: getAssetPath("media/avatars/300-1.jpg") },
          { name: "Susan Redwood", initials: "S", state: "primary" }
        ];
        const users7 = [
          { name: "Meloday Macy", src: getAssetPath("media/avatars/300-2.jpg") },
          { name: "Rabbin Watterman", initials: "S", state: "success" }
        ];
        const users8 = [
          { name: "Emma Smith", src: getAssetPath("media/avatars/300-6.jpg") },
          { name: "Rudy Stone", src: getAssetPath("media/avatars/300-1.jpg") },
          { name: "Susan Redwood", initials: "S", state: "primary" }
        ];
        const users9 = [
          { name: "Meloday Macy", src: getAssetPath("media/avatars/300-2.jpg") },
          { name: "Rabbin Watterman", initials: "S", state: "danger" }
        ];
        return {
          users1,
          users2,
          users3,
          users4,
          users5,
          users6,
          users7,
          users8,
          users9,
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$6(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_KTCard = vueExports$1.resolveComponent("KTCard");
      _push(`<!--[--><div class="d-flex flex-wrap flex-stack my-5"><h2 class="fs-2 fw-semibold my-2"> Projects <span class="fs-6 text-gray-500 ms-1">by Status</span></h2><div class="d-flex flex-wrap my-1"><div class="m-0"><select name="status" data-control="select2" data-hide-search="true" class="form-select form-select-white form-select-sm fw-bold w-125px"><option value="Active" selected>Active</option><option value="Approved">In Progress</option><option value="Declined">To Do</option><option value="In Progress">Completed</option></select></div></div></div><div class="row g-6 g-xl-9"><div class="col-md-6 col-xl-4">`);
      _push(ssrRenderComponent(_component_KTCard, {
        progress: 50,
        title: "Fitnes App",
        icon: _ctx.getAssetPath("media/svg/brand-logos/plurk.svg"),
        users: _ctx.users1
      }, null, _parent));
      _push(`</div><div class="col-md-6 col-xl-4">`);
      _push(ssrRenderComponent(_component_KTCard, {
        status: "Pending",
        "status-data-badge-color": "badge-light",
        progress: 30,
        icon: _ctx.getAssetPath("media/svg/brand-logos/disqus.svg"),
        title: "Leaf CRM",
        date: "May 10, 2021",
        budget: "$36,400.00",
        users: _ctx.users2
      }, null, _parent));
      _push(`</div><div class="col-md-6 col-xl-4">`);
      _push(ssrRenderComponent(_component_KTCard, {
        status: "Completed",
        "status-data-badge-color": "badge-light-success",
        progress: 100,
        icon: _ctx.getAssetPath("media/svg/brand-logos/figma-1.svg"),
        title: "Atica Banking",
        date: "Mar 14, 2021",
        budget: "$605,100.00",
        users: _ctx.users3
      }, null, _parent));
      _push(`</div><div class="col-md-6 col-xl-4">`);
      _push(ssrRenderComponent(_component_KTCard, {
        status: "Pending",
        progress: 60,
        "status-data-badge-color": "badge-light",
        icon: _ctx.getAssetPath("media/svg/brand-logos/sentry-3.svg"),
        title: "Finance Dispatch",
        budget: "$36,400.00",
        users: _ctx.users4
      }, null, _parent));
      _push(`</div><div class="col-md-6 col-xl-4">`);
      _push(ssrRenderComponent(_component_KTCard, {
        status: "In Progress",
        progress: 40,
        icon: _ctx.getAssetPath("media/svg/brand-logos/xing-icon.svg"),
        title: "9 Degree",
        date: "May 10, 2021",
        budget: "$36,400.00",
        users: _ctx.users5
      }, null, _parent));
      _push(`</div><div class="col-md-6 col-xl-4">`);
      _push(ssrRenderComponent(_component_KTCard, {
        status: "In Progress",
        progress: 70,
        icon: _ctx.getAssetPath("media/svg/brand-logos/tvit.svg"),
        title: "GoPro App",
        date: "May 10, 2021",
        budget: "$36,400.00",
        users: _ctx.users6
      }, null, _parent));
      _push(`</div><div class="col-md-6 col-xl-4">`);
      _push(ssrRenderComponent(_component_KTCard, {
        status: "In Progress",
        progress: 30,
        icon: _ctx.getAssetPath("media/svg/brand-logos/aven.svg"),
        title: "Buldozer CRM",
        date: "May 10, 2021",
        budget: "$36,400.00",
        users: _ctx.users7
      }, null, _parent));
      _push(`</div><div class="col-md-6 col-xl-4">`);
      _push(ssrRenderComponent(_component_KTCard, {
        status: "Overdue",
        progress: 10,
        "status-data-badge-color": "badge-light-danger",
        icon: _ctx.getAssetPath("media/svg/brand-logos/treva.svg"),
        title: "Aviasales App",
        date: "May 10, 2021",
        budget: "$36,400.00",
        users: _ctx.users8
      }, null, _parent));
      _push(`</div><div class="col-md-6 col-xl-4">`);
      _push(ssrRenderComponent(_component_KTCard, {
        status: "Completed",
        progress: 100,
        "status-data-badge-color": "badge-light-success",
        icon: _ctx.getAssetPath("media/svg/brand-logos/kanba.svg"),
        title: "Oppo CRM",
        date: "May 10, 2021",
        budget: "$36,400.00",
        users: _ctx.users9
      }, null, _parent));
      _push(`</div><div class="d-flex flex-stack flex-wrap pt-10"><div class="fs-6 fw-semibold text-gray-700"> Showing 1 to 10 of 50 entries </div><ul class="pagination"><li class="page-item previous"><a href="#" class="page-link"><i class="previous"></i></a></li><li class="page-item active"><a href="#" class="page-link">1</a></li><li class="page-item"><a href="#" class="page-link">2</a></li><li class="page-item"><a href="#" class="page-link">3</a></li><li class="page-item"><a href="#" class="page-link">4</a></li><li class="page-item"><a href="#" class="page-link">5</a></li><li class="page-item"><a href="#" class="page-link">6</a></li><li class="page-item next"><a href="#" class="page-link"><i class="next"></i></a></li></ul></div></div><!--]-->`);
    }
    const _sfc_setup$8 = _sfc_main$8.setup;
    _sfc_main$8.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/pages/profile/Projects.vue");
      return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
    };
    const Projects = /* @__PURE__ */ _export_sfc(_sfc_main$8, [["ssrRender", _sfc_ssrRender$6]]);
    const __vite_glob_0_220 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Projects
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$7 = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "HorizontalWizardPage",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "card" }, _attrs))}><div class="card-body">`);
          _push(ssrRenderComponent(_sfc_main$2o, null, null, _parent));
          _push(`</div></div>`);
        };
      }
    });
    const _sfc_setup$7 = _sfc_main$7.setup;
    _sfc_main$7.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/pages/wizards/HorizontalWizardPage.vue");
      return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
    };
    const __vite_glob_0_221 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$7
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$6 = /* @__PURE__ */ vueExports$1.defineComponent({
      __name: "VerticalWizardPage",
      __ssrInlineRender: true,
      setup(__props) {
        return (_ctx, _push, _parent, _attrs) => {
          _push(ssrRenderComponent(_sfc_main$1a, _attrs, null, _parent));
        };
      }
    });
    const _sfc_setup$6 = _sfc_main$6.setup;
    _sfc_main$6.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/pages/wizards/VerticalWizardPage.vue");
      return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
    };
    const __vite_glob_0_222 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: _sfc_main$6
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$5 = vueExports$1.defineComponent({
      name: "widgets-chart",
      components: {
        ChartsWidget1,
        ChartsWidget2,
        ChartsWidget3,
        ChartsWidget4,
        ChartsWidget5,
        ChartsWidget6,
        ChartsWidget7,
        ChartsWidget8
      }
    });
    function _sfc_ssrRender$5(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_ChartsWidget1 = vueExports$1.resolveComponent("ChartsWidget1");
      const _component_ChartsWidget2 = vueExports$1.resolveComponent("ChartsWidget2");
      const _component_ChartsWidget3 = vueExports$1.resolveComponent("ChartsWidget3");
      const _component_ChartsWidget4 = vueExports$1.resolveComponent("ChartsWidget4");
      const _component_ChartsWidget5 = vueExports$1.resolveComponent("ChartsWidget5");
      const _component_ChartsWidget6 = vueExports$1.resolveComponent("ChartsWidget6");
      const _component_ChartsWidget7 = vueExports$1.resolveComponent("ChartsWidget7");
      const _component_ChartsWidget8 = vueExports$1.resolveComponent("ChartsWidget8");
      _push(`<!--[--><div class="row g-5 g-xl-8"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ChartsWidget1, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        height: 400
      }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ChartsWidget2, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        height: 400
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ChartsWidget3, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ChartsWidget4, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ChartsWidget5, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ChartsWidget6, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ChartsWidget7, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ChartsWidget8, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div></div><!--]-->`);
    }
    const _sfc_setup$5 = _sfc_main$5.setup;
    _sfc_main$5.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/widgets/Charts.vue");
      return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
    };
    const Charts = /* @__PURE__ */ _export_sfc(_sfc_main$5, [["ssrRender", _sfc_ssrRender$5]]);
    const __vite_glob_0_223 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Charts
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$4 = vueExports$1.defineComponent({
      name: "widgets-feeds",
      components: {
        FeedsWidget1,
        FeedsWidget2,
        FeedsWidget3,
        FeedsWidget4,
        FeedsWidget5,
        FeedsWidget6
      }
    });
    function _sfc_ssrRender$4(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_FeedsWidget1 = vueExports$1.resolveComponent("FeedsWidget1");
      const _component_FeedsWidget2 = vueExports$1.resolveComponent("FeedsWidget2");
      const _component_FeedsWidget3 = vueExports$1.resolveComponent("FeedsWidget3");
      const _component_FeedsWidget4 = vueExports$1.resolveComponent("FeedsWidget4");
      const _component_FeedsWidget5 = vueExports$1.resolveComponent("FeedsWidget5");
      const _component_FeedsWidget6 = vueExports$1.resolveComponent("FeedsWidget6");
      _push(`<div${ssrRenderAttrs(vueExports$1.mergeProps({ class: "row g-5 g-xl-8" }, _attrs))}><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_FeedsWidget1, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_FeedsWidget2, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_FeedsWidget3, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_FeedsWidget4, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_FeedsWidget5, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_FeedsWidget6, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(`</div></div>`);
    }
    const _sfc_setup$4 = _sfc_main$4.setup;
    _sfc_main$4.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/widgets/Feeds.vue");
      return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
    };
    const Feeds = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["ssrRender", _sfc_ssrRender$4]]);
    const __vite_glob_0_224 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Feeds
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$3 = vueExports$1.defineComponent({
      name: "widgets-lists",
      components: {
        ListsWidget1,
        ListsWidget2,
        ListsWidget3,
        ListsWidget4,
        ListsWidget5,
        ListsWidget6,
        ListsWidget7,
        ListsWidget8
      }
    });
    function _sfc_ssrRender$3(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_ListsWidget1 = vueExports$1.resolveComponent("ListsWidget1");
      const _component_ListsWidget2 = vueExports$1.resolveComponent("ListsWidget2");
      const _component_ListsWidget3 = vueExports$1.resolveComponent("ListsWidget3");
      const _component_ListsWidget4 = vueExports$1.resolveComponent("ListsWidget4");
      const _component_ListsWidget5 = vueExports$1.resolveComponent("ListsWidget5");
      const _component_ListsWidget6 = vueExports$1.resolveComponent("ListsWidget6");
      const _component_ListsWidget7 = vueExports$1.resolveComponent("ListsWidget7");
      const _component_ListsWidget8 = vueExports$1.resolveComponent("ListsWidget8");
      _push(`<!--[--><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_ListsWidget1, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_ListsWidget2, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_ListsWidget3, { "widget-classes": "card-xl-stretch mb-5 mb-xl-8" }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_ListsWidget4, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_ListsWidget5, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_ListsWidget6, { "widget-classes": "card-xl-stretch mb-5 mb-xl-8" }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ListsWidget7, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_ListsWidget8, { "widget-classes": "card-xl-stretch mb-5 mb-xl-8" }, null, _parent));
      _push(`</div></div><!--]-->`);
    }
    const _sfc_setup$3 = _sfc_main$3.setup;
    _sfc_main$3.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/widgets/Lists.vue");
      return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
    };
    const Lists = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["ssrRender", _sfc_ssrRender$3]]);
    const __vite_glob_0_225 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Lists
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$2 = vueExports$1.defineComponent({
      name: "widgets-mixed",
      components: {
        MixedWidget1,
        MixedWidget2,
        MixedWidget3,
        MixedWidget4,
        MixedWidget5,
        MixedWidget6,
        MixedWidget7,
        MixedWidget8,
        MixedWidget9,
        MixedWidget10,
        MixedWidget11,
        MixedWidget12,
        MixedWidget13,
        MixedWidget14
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$2(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_MixedWidget1 = vueExports$1.resolveComponent("MixedWidget1");
      const _component_MixedWidget2 = vueExports$1.resolveComponent("MixedWidget2");
      const _component_MixedWidget11 = vueExports$1.resolveComponent("MixedWidget11");
      const _component_MixedWidget8 = vueExports$1.resolveComponent("MixedWidget8");
      const _component_MixedWidget9 = vueExports$1.resolveComponent("MixedWidget9");
      const _component_MixedWidget3 = vueExports$1.resolveComponent("MixedWidget3");
      const _component_MixedWidget4 = vueExports$1.resolveComponent("MixedWidget4");
      const _component_MixedWidget5 = vueExports$1.resolveComponent("MixedWidget5");
      const _component_MixedWidget6 = vueExports$1.resolveComponent("MixedWidget6");
      const _component_MixedWidget7 = vueExports$1.resolveComponent("MixedWidget7");
      const _component_MixedWidget10 = vueExports$1.resolveComponent("MixedWidget10");
      const _component_MixedWidget12 = vueExports$1.resolveComponent("MixedWidget12");
      const _component_MixedWidget13 = vueExports$1.resolveComponent("MixedWidget13");
      const _component_MixedWidget14 = vueExports$1.resolveComponent("MixedWidget14");
      _push(`<!--[--><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget1, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "primary"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget1, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "danger"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget1, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        "widget-color": "success"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget2, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "info",
        "chart-height": "200",
        "stroke-color": "#4e12c4"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget2, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "danger",
        "chart-height": "200",
        "stroke-color": "#cb1e46"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget2, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "primary",
        "chart-height": "200",
        "stroke-color": "#0078d0"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget11, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "info",
        "chart-height": "200"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget11, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "danger",
        "chart-height": "200"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget11, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "primary",
        "chart-height": "200"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget8, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        image: _ctx.getAssetPath("media/svg/brand-logos/plurk.svg"),
        color: "danger",
        title: "Monthly Subscription",
        date: "Due: 27 Apr 2020",
        progress: "75"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget8, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        image: _ctx.getAssetPath("media/svg/brand-logos/vimeo.svg"),
        color: "primary",
        title: "Monthly Subscription",
        date: "Due: 27 Apr 2020",
        progress: "75"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget8, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        image: _ctx.getAssetPath("media/svg/brand-logos/kickstarter.svg"),
        color: "success",
        title: "Monthly Subscription",
        date: "Due: 27 Apr 2020",
        progress: "75"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget9, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        image: _ctx.getAssetPath("media/svg/brand-logos/plurk.svg"),
        time: "7 hours ago",
        title: "PitStop - Multiple Email Generator",
        description: "Pitstop creates quick email campaigns.<br/>\n            We help to strengthen your brand<br/>\n            for your every purpose."
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget9, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        image: _ctx.getAssetPath("media/svg/brand-logos/telegram.svg"),
        time: "10 days ago",
        title: "ReactJS Admin Theme",
        description: "Pitstop creates quick email campaigns.<br/>\n            We help to strengthen your brand<br/>\n            for your every purpose."
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget9, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        image: _ctx.getAssetPath("media/svg/brand-logos/vimeo.svg"),
        time: "2 weeks ago",
        title: "KT.com - High Quality Templates",
        description: "Easy to use, incredibly flexible and secure<br/>\n            with in-depth documentation that outlines<br/>\n            everything for you"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget3, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-height": "150",
        "chart-color": "primary"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget3, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-height": "150",
        "chart-color": "danger"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget3, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        "chart-height": "150",
        "chart-color": "success"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget4, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "primary",
        "chart-height": "200",
        "btn-color": "primary"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget4, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "success",
        "chart-height": "200",
        "btn-color": "success"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget4, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        "chart-color": "danger",
        "chart-height": "200",
        "btn-color": "danger"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget5, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "primary",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget5, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "success",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget5, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        "chart-color": "danger",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget6, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "primary",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget6, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "success",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget6, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        "chart-color": "danger",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget7, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "info",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget7, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "warning",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget7, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "primary",
        "chart-height": "150"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget10, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "info",
        "chart-height": "200"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget10, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "chart-color": "warning",
        "chart-height": "200"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget10, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        "chart-color": "primary",
        "chart-height": "200"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget12, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "#F7D9E3",
        "chart-height": "100"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget12, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "#CBF0F4",
        "chart-height": "100"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget12, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "widget-color": "#CBD4F4",
        "chart-height": "100"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget13, {
        "widget-classes": "card-xxl-stretch mb-5 mb-xl-8",
        "widget-color": "#F7D9E3",
        "chart-height": "125"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget13, {
        "widget-classes": "card-xxl-stretch mb-5 mb-xl-8",
        "widget-color": "#CBF0F4",
        "chart-height": "125"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget13, {
        "widget-classes": "card-xxl-stretch mb-5 mb-xl-8",
        "widget-color": "#CBD4F4",
        "chart-height": "125"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget14, {
        "widget-classes": "card-xxl-stretch mb-5 mb-xl-8",
        "widget-color": "#F7D9E3"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget14, {
        "widget-classes": "card-xxl-stretch mb-5 mb-xl-8",
        "widget-color": "#CBF0F4"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_MixedWidget14, {
        "widget-classes": "card-xxl-stretch mb-5 mb-xl-8",
        "widget-color": "#CBD4F4"
      }, null, _parent));
      _push(`</div></div><!--]-->`);
    }
    const _sfc_setup$2 = _sfc_main$2.setup;
    _sfc_main$2.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/widgets/Mixed.vue");
      return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
    };
    const Mixed = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["ssrRender", _sfc_ssrRender$2]]);
    const __vite_glob_0_226 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Mixed
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main$1 = vueExports$1.defineComponent({
      name: "widgets-statistics",
      components: {
        StatisticsWidget1,
        StatisticsWidget2,
        StatisticsWidget3,
        StatisticsWidget4,
        StatisticsWidget5,
        StatisticsWidget6
      },
      setup() {
        return {
          getAssetPath
        };
      }
    });
    function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_StatisticsWidget1 = vueExports$1.resolveComponent("StatisticsWidget1");
      const _component_StatisticsWidget2 = vueExports$1.resolveComponent("StatisticsWidget2");
      const _component_StatisticsWidget3 = vueExports$1.resolveComponent("StatisticsWidget3");
      const _component_StatisticsWidget4 = vueExports$1.resolveComponent("StatisticsWidget4");
      const _component_StatisticsWidget5 = vueExports$1.resolveComponent("StatisticsWidget5");
      const _component_StatisticsWidget6 = vueExports$1.resolveComponent("StatisticsWidget6");
      _push(`<!--[--><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget1, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        background: "abstract-4.svg",
        title: "Meeting Schedule",
        time: "3:30PM - 4:20PM",
        description: "Create a headline that is informative<br/>\n      and will capture readers"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget1, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        background: "abstract-2.svg",
        title: "Meeting Schedule",
        time: "03 May 2020",
        description: "Great blog posts don’t just happen Even the best bloggers need it"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget1, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        background: "abstract-1.svg",
        title: "UI Conference",
        time: "10AM Jan, 2021",
        description: "AirWays A Front-end solution for airlines build with ReactJS"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget2, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        avatar: _ctx.getAssetPath("media/svg/avatars/029-boy-11.svg"),
        title: "Arthur Goldstain",
        description: "System & Software Architect"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget2, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        avatar: _ctx.getAssetPath("media/svg/avatars/014-girl-7.svg"),
        title: "Lisa Bold",
        description: "Marketing & Fanance Manager"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget2, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        avatar: _ctx.getAssetPath("media/svg/avatars/004-boy-1.svg"),
        title: "Nick Stone",
        description: "Customer Support Team"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget3, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        height: "150px",
        color: "success",
        title: "Weekly Sales",
        description: "Your Weekly Sales Chart",
        change: "+100"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget3, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        height: "150px",
        color: "danger",
        title: "Authors Progress",
        description: "Marketplace Authors Chart",
        change: "-260"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget3, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        height: "150px",
        color: "primary",
        title: "Sales Progress",
        description: "Marketplace Sales Chart",
        change: "+180"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget4, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        height: "150px",
        "icon-name": "basket",
        color: "info",
        description: "Sales Change",
        change: "+256"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget4, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        height: "150px",
        "icon-name": "bank",
        color: "success",
        description: "Weekly Income",
        change: "750$"
      }, null, _parent));
      _push(`-&gt; </div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget4, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        height: "150px",
        "icon-name": "briefcase",
        color: "primary",
        description: "New Users",
        change: "+6.6K"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget5, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "icon-name": "basket",
        color: "danger",
        "icon-color": "white",
        title: "Shopping Chart",
        description: "Lands, Houses"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget5, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "icon-name": "cheque",
        color: "primary",
        "icon-color": "white",
        title: "Appartments",
        description: "Flats, Shared Rooms, Duplex"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget5, {
        "widget-classes": "card-xl-stretch mb-5 mb-xl-8",
        "icon-name": "chart-simple-3",
        color: "success",
        "icon-color": "white",
        title: "Sales Stats",
        description: "50% Increased for FY20"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-3">`);
      _push(ssrRenderComponent(_component_StatisticsWidget5, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "icon-name": "chart-simple",
        color: "priamry",
        "icon-color": "primary",
        title: "500M$",
        description: "SAP UI Progress"
      }, null, _parent));
      _push(`</div><div class="col-xl-3">`);
      _push(ssrRenderComponent(_component_StatisticsWidget5, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "icon-name": "cheque",
        color: "dark",
        "icon-color": "primary",
        title: "+3000",
        description: "New Customers"
      }, null, _parent));
      _push(`</div><div class="col-xl-3">`);
      _push(ssrRenderComponent(_component_StatisticsWidget5, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "icon-name": "briefcase",
        color: "warning",
        "icon-color": "white",
        title: "$50,000",
        description: "Milestone Reached"
      }, null, _parent));
      _push(`</div><div class="col-xl-3">`);
      _push(ssrRenderComponent(_component_StatisticsWidget5, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        "icon-name": "chart-pie-simple",
        color: "info",
        "icon-color": "white",
        title: "$50,000",
        description: "Milestone Reached"
      }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget6, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        color: "success",
        title: "Avarage",
        description: "Project Progress",
        progress: "50%"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget6, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        color: "warning",
        title: "48k Goal",
        description: "Company Finance",
        progress: "15%"
      }, null, _parent));
      _push(`</div><div class="col-xl-4">`);
      _push(ssrRenderComponent(_component_StatisticsWidget6, {
        "widget-classes": "card-xl-stretch mb-xl-8",
        color: "primary",
        title: "400k Impressions",
        description: "Marketing Analysis",
        progress: "76%"
      }, null, _parent));
      _push(`</div></div><!--]-->`);
    }
    const _sfc_setup$1 = _sfc_main$1.setup;
    _sfc_main$1.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/widgets/Statistics.vue");
      return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
    };
    const Statistics = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["ssrRender", _sfc_ssrRender$1]]);
    const __vite_glob_0_227 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Statistics
    }, Symbol.toStringTag, { value: "Module" }));
    const _sfc_main = vueExports$1.defineComponent({
      name: "widgets-tables",
      components: {
        TablesWidget1,
        TablesWidget2,
        TablesWidget3,
        TablesWidget4,
        TablesWidget5,
        TablesWidget6,
        TablesWidget7,
        TablesWidget8,
        TablesWidget9,
        TablesWidget10,
        TablesWidget11,
        TablesWidget12,
        TablesWidget13
      }
    });
    function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
      const _component_TablesWidget1 = vueExports$1.resolveComponent("TablesWidget1");
      const _component_TablesWidget2 = vueExports$1.resolveComponent("TablesWidget2");
      const _component_TablesWidget3 = vueExports$1.resolveComponent("TablesWidget3");
      const _component_TablesWidget4 = vueExports$1.resolveComponent("TablesWidget4");
      const _component_TablesWidget5 = vueExports$1.resolveComponent("TablesWidget5");
      const _component_TablesWidget6 = vueExports$1.resolveComponent("TablesWidget6");
      const _component_TablesWidget7 = vueExports$1.resolveComponent("TablesWidget7");
      const _component_TablesWidget8 = vueExports$1.resolveComponent("TablesWidget8");
      const _component_TablesWidget9 = vueExports$1.resolveComponent("TablesWidget9");
      const _component_TablesWidget10 = vueExports$1.resolveComponent("TablesWidget10");
      const _component_TablesWidget11 = vueExports$1.resolveComponent("TablesWidget11");
      const _component_TablesWidget12 = vueExports$1.resolveComponent("TablesWidget12");
      const _component_TablesWidget13 = vueExports$1.resolveComponent("TablesWidget13");
      _push(`<!--[--><div class="row g-5 g-xl-8"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_TablesWidget1, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_TablesWidget2, { "widget-classes": "card-xl-stretch mb-5 mb-xl-8" }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_TablesWidget3, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_TablesWidget4, { "widget-classes": "card-xl-stretch mb-5 mb-xl-8" }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_TablesWidget5, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_TablesWidget6, { "widget-classes": "card-xl-stretch mb-5 mb-xl-8" }, null, _parent));
      _push(`</div></div><div class="row g-5 g-xl-8"><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_TablesWidget7, { "widget-classes": "card-xl-stretch mb-xl-8" }, null, _parent));
      _push(`</div><div class="col-xl-6">`);
      _push(ssrRenderComponent(_component_TablesWidget8, { "widget-classes": "card-xl-stretch mb-5 mb-xl-8" }, null, _parent));
      _push(`</div></div>`);
      _push(ssrRenderComponent(_component_TablesWidget9, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_TablesWidget10, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_TablesWidget11, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_TablesWidget12, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(ssrRenderComponent(_component_TablesWidget13, { "widget-classes": "mb-5 mb-xl-8" }, null, _parent));
      _push(`<!--]-->`);
    }
    const _sfc_setup = _sfc_main.setup;
    _sfc_main.setup = (props, ctx) => {
      const ssrContext = vueExports$1.useSSRContext();
      (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/metronic8/src/views/crafted/widgets/Tables.vue");
      return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
    };
    const Tables = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
    const __vite_glob_0_228 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: Tables
    }, Symbol.toStringTag, { value: "Module" }));
    var vue = { exports: {} };
    var vue_cjs_prod = {};
    /**
    * vue v3.4.38
    * (c) 2018-present Yuxi (Evan) You and Vue contributors
    * @license MIT
    **/
    var hasRequiredVue_cjs_prod;
    function requireVue_cjs_prod() {
      if (hasRequiredVue_cjs_prod)
        return vue_cjs_prod;
      hasRequiredVue_cjs_prod = 1;
      (function(exports2) {
        Object.defineProperty(exports2, "__esModule", { value: true });
        var compilerDom = require$$0$1;
        var runtimeDom = require$$1;
        var shared = require$$2;
        function _interopNamespaceDefault(e) {
          var n = /* @__PURE__ */ Object.create(null);
          if (e) {
            for (var k in e) {
              n[k] = e[k];
            }
          }
          n.default = e;
          return Object.freeze(n);
        }
        var runtimeDom__namespace = /* @__PURE__ */ _interopNamespaceDefault(runtimeDom);
        const compileCache = /* @__PURE__ */ new WeakMap();
        function getCache(options) {
          let c = compileCache.get(options != null ? options : shared.EMPTY_OBJ);
          if (!c) {
            c = /* @__PURE__ */ Object.create(null);
            compileCache.set(options != null ? options : shared.EMPTY_OBJ, c);
          }
          return c;
        }
        function compileToFunction(template, options) {
          if (!shared.isString(template)) {
            if (template.nodeType) {
              template = template.innerHTML;
            } else {
              return shared.NOOP;
            }
          }
          const key2 = template;
          const cache = getCache(options);
          const cached = cache[key2];
          if (cached) {
            return cached;
          }
          if (template[0] === "#") {
            const el = document.querySelector(template);
            template = el ? el.innerHTML : ``;
          }
          const opts = shared.extend(
            {
              hoistStatic: true,
              onError: void 0,
              onWarn: shared.NOOP
            },
            options
          );
          if (!opts.isCustomElement && typeof customElements !== "undefined") {
            opts.isCustomElement = (tag2) => !!customElements.get(tag2);
          }
          const { code: code2 } = compilerDom.compile(template, opts);
          const render = new Function("Vue", code2)(runtimeDom__namespace);
          render._rc = true;
          return cache[key2] = render;
        }
        runtimeDom.registerRuntimeCompiler(compileToFunction);
        exports2.compile = compileToFunction;
        Object.keys(runtimeDom).forEach(function(k) {
          if (k !== "default" && !Object.prototype.hasOwnProperty.call(exports2, k))
            exports2[k] = runtimeDom[k];
        });
      })(vue_cjs_prod);
      return vue_cjs_prod;
    }
    var vue_cjs = {};
    /**
    * vue v3.4.38
    * (c) 2018-present Yuxi (Evan) You and Vue contributors
    * @license MIT
    **/
    var hasRequiredVue_cjs;
    function requireVue_cjs() {
      if (hasRequiredVue_cjs)
        return vue_cjs;
      hasRequiredVue_cjs = 1;
      (function(exports2) {
        Object.defineProperty(exports2, "__esModule", { value: true });
        var compilerDom = require$$0$1;
        var runtimeDom = require$$1;
        var shared = require$$2;
        function _interopNamespaceDefault(e) {
          var n = /* @__PURE__ */ Object.create(null);
          if (e) {
            for (var k in e) {
              n[k] = e[k];
            }
          }
          n.default = e;
          return Object.freeze(n);
        }
        var runtimeDom__namespace = /* @__PURE__ */ _interopNamespaceDefault(runtimeDom);
        const compileCache = /* @__PURE__ */ new WeakMap();
        function getCache(options) {
          let c = compileCache.get(options != null ? options : shared.EMPTY_OBJ);
          if (!c) {
            c = /* @__PURE__ */ Object.create(null);
            compileCache.set(options != null ? options : shared.EMPTY_OBJ, c);
          }
          return c;
        }
        function compileToFunction(template, options) {
          if (!shared.isString(template)) {
            if (template.nodeType) {
              template = template.innerHTML;
            } else {
              runtimeDom.warn(`invalid template option: `, template);
              return shared.NOOP;
            }
          }
          const key2 = template;
          const cache = getCache(options);
          const cached = cache[key2];
          if (cached) {
            return cached;
          }
          if (template[0] === "#") {
            const el = document.querySelector(template);
            if (!el) {
              runtimeDom.warn(`Template element not found or is empty: ${template}`);
            }
            template = el ? el.innerHTML : ``;
          }
          const opts = shared.extend(
            {
              hoistStatic: true,
              onError,
              onWarn: (e) => onError(e, true)
            },
            options
          );
          if (!opts.isCustomElement && typeof customElements !== "undefined") {
            opts.isCustomElement = (tag2) => !!customElements.get(tag2);
          }
          const { code: code2 } = compilerDom.compile(template, opts);
          function onError(err, asWarning = false) {
            const message = asWarning ? err.message : `Template compilation error: ${err.message}`;
            const codeFrame = err.loc && shared.generateCodeFrame(
              template,
              err.loc.start.offset,
              err.loc.end.offset
            );
            runtimeDom.warn(codeFrame ? `${message}
${codeFrame}` : message);
          }
          const render = new Function("Vue", code2)(runtimeDom__namespace);
          render._rc = true;
          return cache[key2] = render;
        }
        runtimeDom.registerRuntimeCompiler(compileToFunction);
        exports2.compile = compileToFunction;
        Object.keys(runtimeDom).forEach(function(k) {
          if (k !== "default" && !Object.prototype.hasOwnProperty.call(exports2, k))
            exports2[k] = runtimeDom[k];
        });
      })(vue_cjs);
      return vue_cjs;
    }
    if (process.env.NODE_ENV === "production") {
      vue.exports = requireVue_cjs_prod();
    } else {
      vue.exports = requireVue_cjs();
    }
    var vueExports = vue.exports;
    createServer(
      (page) => createInertiaApp({
        page,
        render: renderToString,
        resolve: (name) => {
          const pages = /* @__PURE__ */ Object.assign({ "../metronic8/src/App.vue": __vite_glob_0_0, "../metronic8/src/TableWrapper.vue": __vite_glob_0_1, "../metronic8/src/components/Notice.vue": __vite_glob_0_2, "../metronic8/src/components/activity-timeline-items/Item1.vue": __vite_glob_0_3, "../metronic8/src/components/activity-timeline-items/Item2.vue": __vite_glob_0_4, "../metronic8/src/components/activity-timeline-items/Item3.vue": __vite_glob_0_5, "../metronic8/src/components/activity-timeline-items/Item4.vue": __vite_glob_0_6, "../metronic8/src/components/activity-timeline-items/Item5.vue": __vite_glob_0_7, "../metronic8/src/components/activity-timeline-items/Item6.vue": __vite_glob_0_8, "../metronic8/src/components/activity-timeline-items/Item7.vue": __vite_glob_0_9, "../metronic8/src/components/activity-timeline-items/Item8.vue": __vite_glob_0_10, "../metronic8/src/components/calendar/CalendarApp1.vue": __vite_glob_0_11, "../metronic8/src/components/cards/Card.vue": __vite_glob_0_12, "../metronic8/src/components/cards/Card1.vue": __vite_glob_0_13, "../metronic8/src/components/cards/Card2.vue": __vite_glob_0_14, "../metronic8/src/components/cards/Card3.vue": __vite_glob_0_15, "../metronic8/src/components/cards/Card4.vue": __vite_glob_0_16, "../metronic8/src/components/customers/cards/events-and-logs/Events.vue": __vite_glob_0_17, "../metronic8/src/components/customers/cards/events-and-logs/Logs.vue": __vite_glob_0_18, "../metronic8/src/components/customers/cards/overview/CreditBalance.vue": __vite_glob_0_19, "../metronic8/src/components/customers/cards/overview/Invoices.vue": __vite_glob_0_20, "../metronic8/src/components/customers/cards/overview/PaymentMethods.vue": __vite_glob_0_21, "../metronic8/src/components/customers/cards/overview/PaymentRecords.vue": __vite_glob_0_22, "../metronic8/src/components/customers/cards/statments/Earnings.vue": __vite_glob_0_23, "../metronic8/src/components/customers/cards/statments/Statement.vue": __vite_glob_0_24, "../metronic8/src/components/dashboard-default-widgets/Widget1.vue": __vite_glob_0_25, "../metronic8/src/components/dashboard-default-widgets/Widget10.vue": __vite_glob_0_26, "../metronic8/src/components/dashboard-default-widgets/Widget2.vue": __vite_glob_0_27, "../metronic8/src/components/dashboard-default-widgets/Widget3.vue": __vite_glob_0_28, "../metronic8/src/components/dashboard-default-widgets/Widget4.vue": __vite_glob_0_29, "../metronic8/src/components/dashboard-default-widgets/Widget5.vue": __vite_glob_0_30, "../metronic8/src/components/dashboard-default-widgets/Widget6.vue": __vite_glob_0_31, "../metronic8/src/components/dashboard-default-widgets/Widget7.vue": __vite_glob_0_32, "../metronic8/src/components/dashboard-default-widgets/Widget8.vue": __vite_glob_0_33, "../metronic8/src/components/dashboard-default-widgets/Widget9.vue": __vite_glob_0_34, "../metronic8/src/components/devs/Questions.vue": __vite_glob_0_35, "../metronic8/src/components/devs/Replies.vue": __vite_glob_0_36, "../metronic8/src/components/devs/TextFormatting.vue": __vite_glob_0_37, "../metronic8/src/components/dropdown/Dropdown1.vue": __vite_glob_0_38, "../metronic8/src/components/dropdown/Dropdown2.vue": __vite_glob_0_39, "../metronic8/src/components/dropdown/Dropdown3.vue": __vite_glob_0_40, "../metronic8/src/components/dropdown/Dropdown4.vue": __vite_glob_0_41, "../metronic8/src/components/files/File.vue": __vite_glob_0_42, "../metronic8/src/components/files/Folder.vue": __vite_glob_0_43, "../metronic8/src/components/highlighters/CodeHighlighter.vue": __vite_glob_0_44, "../metronic8/src/components/highlighters/CodeHighlighter2.vue": __vite_glob_0_45, "../metronic8/src/components/kt-datatable/KTDataTable.vue": __vite_glob_0_46, "../metronic8/src/components/kt-datatable/table-partials/Loading.vue": __vite_glob_0_47, "../metronic8/src/components/kt-datatable/table-partials/TableFooter.vue": __vite_glob_0_48, "../metronic8/src/components/kt-datatable/table-partials/table-content/TableContent.vue": __vite_glob_0_49, "../metronic8/src/components/kt-datatable/table-partials/table-content/table-body/TableBodyRow.vue": __vite_glob_0_50, "../metronic8/src/components/kt-datatable/table-partials/table-content/table-footer/TableItemsPerPageSelect.vue": __vite_glob_0_51, "../metronic8/src/components/kt-datatable/table-partials/table-content/table-footer/TablePagination.vue": __vite_glob_0_52, "../metronic8/src/components/kt-datatable/table-partials/table-content/table-head/TableHeadRow.vue": __vite_glob_0_53, "../metronic8/src/components/menu/MenuComponent.vue": __vite_glob_0_54, "../metronic8/src/components/messenger-parts/MessageIn.vue": __vite_glob_0_55, "../metronic8/src/components/messenger-parts/MessageOut.vue": __vite_glob_0_56, "../metronic8/src/components/modals/forms/AddCustomerModal.vue": __vite_glob_0_57, "../metronic8/src/components/modals/forms/CreateAPIKeyModal.vue": __vite_glob_0_58, "../metronic8/src/components/modals/forms/ExportCustomerModal.vue": __vite_glob_0_59, "../metronic8/src/components/modals/forms/NewAddressModal.vue": __vite_glob_0_60, "../metronic8/src/components/modals/forms/NewCardModal.vue": __vite_glob_0_61, "../metronic8/src/components/modals/forms/NewEventModal.vue": __vite_glob_0_62, "../metronic8/src/components/modals/forms/NewTargetModal.vue": __vite_glob_0_63, "../metronic8/src/components/modals/general/InviteFriendsModal.vue": __vite_glob_0_64, "../metronic8/src/components/modals/general/ShareAndEarnModal.vue": __vite_glob_0_65, "../metronic8/src/components/modals/general/UpgradePlanModal.vue": __vite_glob_0_66, "../metronic8/src/components/modals/general/ViewUsersModal.vue": __vite_glob_0_67, "../metronic8/src/components/modals/wizards/CreateAccountModal.vue": __vite_glob_0_68, "../metronic8/src/components/modals/wizards/CreateAppModal.vue": __vite_glob_0_69, "../metronic8/src/components/modals/wizards/TwoFactorAuthModal.vue": __vite_glob_0_70, "../metronic8/src/components/page-layouts/Profile.vue": __vite_glob_0_71, "../metronic8/src/components/subscriptions/add/Advanced.vue": __vite_glob_0_72, "../metronic8/src/components/subscriptions/add/Customer.vue": __vite_glob_0_73, "../metronic8/src/components/subscriptions/add/PaymentMethod.vue": __vite_glob_0_74, "../metronic8/src/components/subscriptions/add/Products.vue": __vite_glob_0_75, "../metronic8/src/components/subscriptions/add/Summary.vue": __vite_glob_0_76, "../metronic8/src/components/subscriptions/view/Details.vue": __vite_glob_0_77, "../metronic8/src/components/subscriptions/view/Events.vue": __vite_glob_0_78, "../metronic8/src/components/subscriptions/view/Invoices.vue": __vite_glob_0_79, "../metronic8/src/components/subscriptions/view/Summary.vue": __vite_glob_0_80, "../metronic8/src/components/widgets/charts/Widget1.vue": __vite_glob_0_81, "../metronic8/src/components/widgets/charts/Widget2.vue": __vite_glob_0_82, "../metronic8/src/components/widgets/charts/Widget3.vue": __vite_glob_0_83, "../metronic8/src/components/widgets/charts/Widget4.vue": __vite_glob_0_84, "../metronic8/src/components/widgets/charts/Widget5.vue": __vite_glob_0_85, "../metronic8/src/components/widgets/charts/Widget6.vue": __vite_glob_0_86, "../metronic8/src/components/widgets/charts/Widget7.vue": __vite_glob_0_87, "../metronic8/src/components/widgets/charts/Widget8.vue": __vite_glob_0_88, "../metronic8/src/components/widgets/engage/Widget1.vue": __vite_glob_0_89, "../metronic8/src/components/widgets/feeds/Widget1.vue": __vite_glob_0_90, "../metronic8/src/components/widgets/feeds/Widget2.vue": __vite_glob_0_91, "../metronic8/src/components/widgets/feeds/Widget3.vue": __vite_glob_0_92, "../metronic8/src/components/widgets/feeds/Widget4.vue": __vite_glob_0_93, "../metronic8/src/components/widgets/feeds/Widget5.vue": __vite_glob_0_94, "../metronic8/src/components/widgets/feeds/Widget6.vue": __vite_glob_0_95, "../metronic8/src/components/widgets/lists/Widget1.vue": __vite_glob_0_96, "../metronic8/src/components/widgets/lists/Widget2.vue": __vite_glob_0_97, "../metronic8/src/components/widgets/lists/Widget3.vue": __vite_glob_0_98, "../metronic8/src/components/widgets/lists/Widget4.vue": __vite_glob_0_99, "../metronic8/src/components/widgets/lists/Widget5.vue": __vite_glob_0_100, "../metronic8/src/components/widgets/lists/Widget6.vue": __vite_glob_0_101, "../metronic8/src/components/widgets/lists/Widget7.vue": __vite_glob_0_102, "../metronic8/src/components/widgets/lists/Widget8.vue": __vite_glob_0_103, "../metronic8/src/components/widgets/mixed/Widget1.vue": __vite_glob_0_104, "../metronic8/src/components/widgets/mixed/Widget10.vue": __vite_glob_0_105, "../metronic8/src/components/widgets/mixed/Widget11.vue": __vite_glob_0_106, "../metronic8/src/components/widgets/mixed/Widget12.vue": __vite_glob_0_107, "../metronic8/src/components/widgets/mixed/Widget13.vue": __vite_glob_0_108, "../metronic8/src/components/widgets/mixed/Widget14.vue": __vite_glob_0_109, "../metronic8/src/components/widgets/mixed/Widget2.vue": __vite_glob_0_110, "../metronic8/src/components/widgets/mixed/Widget3.vue": __vite_glob_0_111, "../metronic8/src/components/widgets/mixed/Widget4.vue": __vite_glob_0_112, "../metronic8/src/components/widgets/mixed/Widget5.vue": __vite_glob_0_113, "../metronic8/src/components/widgets/mixed/Widget6.vue": __vite_glob_0_114, "../metronic8/src/components/widgets/mixed/Widget7.vue": __vite_glob_0_115, "../metronic8/src/components/widgets/mixed/Widget8.vue": __vite_glob_0_116, "../metronic8/src/components/widgets/mixed/Widget9.vue": __vite_glob_0_117, "../metronic8/src/components/widgets/statsistics/Widget1.vue": __vite_glob_0_118, "../metronic8/src/components/widgets/statsistics/Widget2.vue": __vite_glob_0_119, "../metronic8/src/components/widgets/statsistics/Widget3.vue": __vite_glob_0_120, "../metronic8/src/components/widgets/statsistics/Widget4.vue": __vite_glob_0_121, "../metronic8/src/components/widgets/statsistics/Widget5.vue": __vite_glob_0_122, "../metronic8/src/components/widgets/statsistics/Widget6.vue": __vite_glob_0_123, "../metronic8/src/components/widgets/tables/Widget1.vue": __vite_glob_0_124, "../metronic8/src/components/widgets/tables/Widget10.vue": __vite_glob_0_125, "../metronic8/src/components/widgets/tables/Widget11.vue": __vite_glob_0_126, "../metronic8/src/components/widgets/tables/Widget12.vue": __vite_glob_0_127, "../metronic8/src/components/widgets/tables/Widget13.vue": __vite_glob_0_128, "../metronic8/src/components/widgets/tables/Widget2.vue": __vite_glob_0_129, "../metronic8/src/components/widgets/tables/Widget3.vue": __vite_glob_0_130, "../metronic8/src/components/widgets/tables/Widget4.vue": __vite_glob_0_131, "../metronic8/src/components/widgets/tables/Widget5.vue": __vite_glob_0_132, "../metronic8/src/components/widgets/tables/Widget6.vue": __vite_glob_0_133, "../metronic8/src/components/widgets/tables/Widget7.vue": __vite_glob_0_134, "../metronic8/src/components/widgets/tables/Widget8.vue": __vite_glob_0_135, "../metronic8/src/components/widgets/tables/Widget9.vue": __vite_glob_0_136, "../metronic8/src/components/wizards/create-account-wizard/CreateAccountHorizontalWizardStepper.vue": __vite_glob_0_137, "../metronic8/src/components/wizards/create-account-wizard/CreateAccountVerticalWizardStepper.vue": __vite_glob_0_138, "../metronic8/src/components/wizards/create-account-wizard/CreateAccountWizardForm.vue": __vite_glob_0_139, "../metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep1.vue": __vite_glob_0_140, "../metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep2.vue": __vite_glob_0_141, "../metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep3.vue": __vite_glob_0_142, "../metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep4.vue": __vite_glob_0_143, "../metronic8/src/components/wizards/create-account-wizard/steps/CreateAccountStep5.vue": __vite_glob_0_144, "../metronic8/src/components/wizards/create-app-wizard/CreateAppWizardForm.vue": __vite_glob_0_145, "../metronic8/src/components/wizards/create-app-wizard/CreateAppWizardStepper.vue": __vite_glob_0_146, "../metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep1.vue": __vite_glob_0_147, "../metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep2.vue": __vite_glob_0_148, "../metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep3.vue": __vite_glob_0_149, "../metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep4.vue": __vite_glob_0_150, "../metronic8/src/components/wizards/create-app-wizard/steps/CreateAppStep5.vue": __vite_glob_0_151, "../metronic8/src/core/helpers/kt-icon/KTIcon.vue": __vite_glob_0_152, "../metronic8/src/layouts/AuthLayout.vue": __vite_glob_0_153, "../metronic8/src/layouts/SystemLayout.vue": __vite_glob_0_154, "../metronic8/src/layouts/default-layout/DefaultLayout.vue": __vite_glob_0_155, "../metronic8/src/layouts/default-layout/components/content/Content.vue": __vite_glob_0_156, "../metronic8/src/layouts/default-layout/components/drawers/ActivityDrawer.vue": __vite_glob_0_157, "../metronic8/src/layouts/default-layout/components/drawers/Drawers.vue": __vite_glob_0_158, "../metronic8/src/layouts/default-layout/components/extras/Customize.vue": __vite_glob_0_159, "../metronic8/src/layouts/default-layout/components/extras/HelpDrawer.vue": __vite_glob_0_160, "../metronic8/src/layouts/default-layout/components/extras/MessengerDrawer.vue": __vite_glob_0_161, "../metronic8/src/layouts/default-layout/components/extras/ScrollTop.vue": __vite_glob_0_162, "../metronic8/src/layouts/default-layout/components/extras/ToolButtons.vue": __vite_glob_0_163, "../metronic8/src/layouts/default-layout/components/footer/Footer.vue": __vite_glob_0_164, "../metronic8/src/layouts/default-layout/components/header/Header.vue": __vite_glob_0_165, "../metronic8/src/layouts/default-layout/components/header/Navbar.vue": __vite_glob_0_166, "../metronic8/src/layouts/default-layout/components/header/menu/Menu.vue": __vite_glob_0_167, "../metronic8/src/layouts/default-layout/components/header/menu/MenuPages.vue": __vite_glob_0_168, "../metronic8/src/layouts/default-layout/components/menus/NotificationsMenu.vue": __vite_glob_0_169, "../metronic8/src/layouts/default-layout/components/menus/QuickLinksMenu.vue": __vite_glob_0_170, "../metronic8/src/layouts/default-layout/components/menus/UserAccountMenu.vue": __vite_glob_0_171, "../metronic8/src/layouts/default-layout/components/modals/Modals.vue": __vite_glob_0_172, "../metronic8/src/layouts/default-layout/components/search/Search.vue": __vite_glob_0_173, "../metronic8/src/layouts/default-layout/components/search/partials/Empty.vue": __vite_glob_0_174, "../metronic8/src/layouts/default-layout/components/search/partials/Main.vue": __vite_glob_0_175, "../metronic8/src/layouts/default-layout/components/search/partials/Results.vue": __vite_glob_0_176, "../metronic8/src/layouts/default-layout/components/sidebar/Sidebar.vue": __vite_glob_0_177, "../metronic8/src/layouts/default-layout/components/sidebar/SidebarFooter.vue": __vite_glob_0_178, "../metronic8/src/layouts/default-layout/components/sidebar/SidebarLogo.vue": __vite_glob_0_179, "../metronic8/src/layouts/default-layout/components/sidebar/SidebarMenu.vue": __vite_glob_0_180, "../metronic8/src/layouts/default-layout/components/theme-mode/ThemeModeSwitcher.vue": __vite_glob_0_181, "../metronic8/src/layouts/default-layout/components/toolbar/PageTitle.vue": __vite_glob_0_182, "../metronic8/src/layouts/default-layout/components/toolbar/Toolbar.vue": __vite_glob_0_183, "../metronic8/src/views/Dashboard.vue": __vite_glob_0_184, "../metronic8/src/views/LayoutBuilder.vue": __vite_glob_0_185, "../metronic8/src/views/apps/Calendar.vue": __vite_glob_0_186, "../metronic8/src/views/apps/chat/Chat.vue": __vite_glob_0_187, "../metronic8/src/views/apps/chat/DrawerChat.vue": __vite_glob_0_188, "../metronic8/src/views/apps/customers/CustomerDetails.vue": __vite_glob_0_189, "../metronic8/src/views/apps/customers/CustomersListing.vue": __vite_glob_0_190, "../metronic8/src/views/apps/customers/GettingStarted.vue": __vite_glob_0_191, "../metronic8/src/views/apps/subscriptions/AddSubscription.vue": __vite_glob_0_192, "../metronic8/src/views/apps/subscriptions/GettingStarted.vue": __vite_glob_0_193, "../metronic8/src/views/apps/subscriptions/SubscriptionList.vue": __vite_glob_0_194, "../metronic8/src/views/apps/subscriptions/ViewSubscription.vue": __vite_glob_0_195, "../metronic8/src/views/crafted/account/Account.vue": __vite_glob_0_196, "../metronic8/src/views/crafted/account/Overview.vue": __vite_glob_0_197, "../metronic8/src/views/crafted/account/Settings.vue": __vite_glob_0_198, "../metronic8/src/views/crafted/authentication/Error404.vue": __vite_glob_0_199, "../metronic8/src/views/crafted/authentication/Error500.vue": __vite_glob_0_200, "../metronic8/src/views/crafted/authentication/basic-flow/PasswordReset.vue": __vite_glob_0_201, "../metronic8/src/views/crafted/authentication/basic-flow/SignIn.vue": __vite_glob_0_202, "../metronic8/src/views/crafted/authentication/basic-flow/SignUp.vue": __vite_glob_0_203, "../metronic8/src/views/crafted/modals/forms/CreateApiKey.vue": __vite_glob_0_204, "../metronic8/src/views/crafted/modals/forms/NewAddress.vue": __vite_glob_0_205, "../metronic8/src/views/crafted/modals/forms/NewCard.vue": __vite_glob_0_206, "../metronic8/src/views/crafted/modals/forms/NewTarget.vue": __vite_glob_0_207, "../metronic8/src/views/crafted/modals/general/InviteFriends.vue": __vite_glob_0_208, "../metronic8/src/views/crafted/modals/general/ShareAndEarn.vue": __vite_glob_0_209, "../metronic8/src/views/crafted/modals/general/UpgradePlan.vue": __vite_glob_0_210, "../metronic8/src/views/crafted/modals/general/ViewUsers.vue": __vite_glob_0_211, "../metronic8/src/views/crafted/modals/wizards/CreateAccount.vue": __vite_glob_0_212, "../metronic8/src/views/crafted/modals/wizards/CreateApp.vue": __vite_glob_0_213, "../metronic8/src/views/crafted/modals/wizards/TwoFactorAuth.vue": __vite_glob_0_214, "../metronic8/src/views/crafted/pages/profile/Activity.vue": __vite_glob_0_215, "../metronic8/src/views/crafted/pages/profile/Campaigns.vue": __vite_glob_0_216, "../metronic8/src/views/crafted/pages/profile/Connections.vue": __vite_glob_0_217, "../metronic8/src/views/crafted/pages/profile/Documents.vue": __vite_glob_0_218, "../metronic8/src/views/crafted/pages/profile/Overview.vue": __vite_glob_0_219, "../metronic8/src/views/crafted/pages/profile/Projects.vue": __vite_glob_0_220, "../metronic8/src/views/crafted/pages/wizards/HorizontalWizardPage.vue": __vite_glob_0_221, "../metronic8/src/views/crafted/pages/wizards/VerticalWizardPage.vue": __vite_glob_0_222, "../metronic8/src/views/crafted/widgets/Charts.vue": __vite_glob_0_223, "../metronic8/src/views/crafted/widgets/Feeds.vue": __vite_glob_0_224, "../metronic8/src/views/crafted/widgets/Lists.vue": __vite_glob_0_225, "../metronic8/src/views/crafted/widgets/Mixed.vue": __vite_glob_0_226, "../metronic8/src/views/crafted/widgets/Statistics.vue": __vite_glob_0_227, "../metronic8/src/views/crafted/widgets/Tables.vue": __vite_glob_0_228 });
          return pages[`../metronic8/src/${name}.vue`];
        },
        setup({ App: App2, props, plugin: plugin2 }) {
          return vueExports.createSSRApp({
            render: () => vueExports.h(App2, props)
          }).use(plugin2);
        }
      })
    );
  }
});
export default require_ssr();
//# sourceMappingURL=ssr.js.map
